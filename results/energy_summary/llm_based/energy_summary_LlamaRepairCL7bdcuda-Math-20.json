{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Math-20",
    "Time": {
        "mean": 43.88889956474304,
        "median": 43.88889956474304,
        "std": 0,
        "max": 43.88889956474304,
        "min": 43.88889956474304,
        "count": 1
    },
    "Joules": {
        "mean": 6358.614187210798,
        "median": 6358.614187210798,
        "std": 0,
        "max": 6358.614187210798,
        "min": 6358.614187210798,
        "count": 1
    },
    "JoulesNormalized": {
        "mean": 2266.412860178947,
        "median": 2266.412860178947,
        "std": 0,
        "max": 2266.412860178947,
        "min": 2266.412860178947,
        "count": 1
    },
    "NrExecutions": 1,
    "ExecutionsIds": [
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "ExecutionTime_Per_PatchMedian": [
        43.88889956474304
    ],
    "Joules_Per_PatchMedian": [
        6358.614187210798
    ],
    "JoulesNormalized_Per_PatchMedian": [
        2266.412860178947
    ],
    "Inf_ExecutionTime": {
        "mean": 1.7981351852416991,
        "median": 1.9297270774841309,
        "std": 0.23269845379228332,
        "max": 2.0000221729278564,
        "min": 1.5301668643951416,
        "count": 5
    },
    "Inf_Joules": {
        "mean": 1603.2618014860154,
        "median": 1713.942282998562,
        "std": 190.30088977934344,
        "max": 1761.7525844335555,
        "min": 1384.810930454731,
        "count": 5
    },
    "Inf_JoulesNormalized": {
        "mean": 242.36837126731876,
        "median": 250.73583278655997,
        "std": 15.59569618820547,
        "max": 256.2264486670492,
        "min": 223.4142803788186,
        "count": 5
    },
    "Val_ExecutionTime": [
        41.95917248725891
    ],
    "Val_Joules": [
        4644.671904212237
    ],
    "Val_JoulesNormalized": [
        2015.6770273923871
    ],
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "uncompilable",
        "wrong",
        "wrong",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable"
    ],
    "patches": [
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n                decode(x);\n        }\n",
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n       return\n                decode(x);\n        }\n",
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n       try {\n            return\n                decode(x);\n        }\n",
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n       try {\n            return decode(x);\n        } catch (IllegalArgumentException e) {\n            return\n                decode(x);\n        }\n",
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n       try {\n            return decode(x);\n        } catch (Exception e) {\n            return repair(x);\n        }\n                decode(x);\n        }\n",
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n       try {\n            return decode(x);\n        } catch (final IllegalArgumentException e) {\n            return\n                decode(x);\n        }\n",
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n       try {\n            return decode(x);\n        } catch (final Exception e) {\n            return\n                decode(x);\n        }\n",
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n       try {\n            return decode(x);\n        } catch (Exception e) {\n            return\n                decode(x);\n        }\n",
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n       try{\n            return\n                decode(x);\n        }\n",
        "        public double[] repairAndDecode(final double[] x) {\n// buggy code\n//             return\n       try\n        {\n            return\n                decode(x);\n        }\n"
    ]
}