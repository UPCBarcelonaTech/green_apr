{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Math-53",
    "Time": {
        "mean": 182.83428192138672,
        "median": 182.83428192138672,
        "std": 0,
        "max": 182.83428192138672,
        "min": 182.83428192138672,
        "count": 1
    },
    "Joules": {
        "mean": 21089.619059973957,
        "median": 21089.619059973957,
        "std": 0,
        "max": 21089.619059973957,
        "min": 21089.619059973957,
        "count": 1
    },
    "JoulesNormalized": {
        "mean": 8816.033538693186,
        "median": 8816.033538693186,
        "std": 0,
        "max": 8816.033538693186,
        "min": 8816.033538693186,
        "count": 1
    },
    "NrExecutions": 1,
    "ExecutionsIds": [
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "ExecutionTime_Per_PatchMedian": [
        21.399381637573242,
        41.57874417304993,
        61.75810670852661,
        81.9374692440033,
        102.11683177947998,
        122.29619431495667,
        142.47555685043335,
        162.65491938591003,
        182.83428192138672
    ],
    "Joules_Per_PatchMedian": [
        3338.5171403706076,
        5557.404880321026,
        7776.292620271444,
        9995.180360221862,
        12214.06810017228,
        14432.955840122699,
        16651.843580073117,
        18870.731320023537,
        21089.619059973957
    ],
    "JoulesNormalized_Per_PatchMedian": [
        1152.2417562663554,
        2110.2157290697096,
        3068.1897018730633,
        4026.163674676417,
        4984.137647479771,
        5942.1116202831245,
        6900.085593086478,
        7858.059565889832,
        8816.033538693186
    ],
    "Inf_ExecutionTime": {
        "mean": 1.2857416152954102,
        "median": 1.2200191020965576,
        "std": 0.15505821832503566,
        "max": 1.560312032699585,
        "min": 1.1892139911651611,
        "count": 5
    },
    "Inf_Joules": {
        "mean": 1170.1575360703469,
        "median": 1119.629400420189,
        "std": 124.30248884759844,
        "max": 1390.6333300232886,
        "min": 1092.6251194477081,
        "count": 5
    },
    "Inf_JoulesNormalized": {
        "mean": 196.3790195345879,
        "median": 194.26778346300148,
        "std": 8.593089830920956,
        "max": 210.5693396925924,
        "min": 187.27650797367096,
        "count": 5
    },
    "Val_ExecutionTime": [
        20.179362535476685,
        40.35872507095337,
        60.538087606430054,
        80.71745014190674,
        100.89681267738342,
        121.07617521286011,
        141.2555377483368,
        161.43490028381348,
        181.61426281929016
    ],
    "Val_Joules": [
        2218.8877399504186,
        4437.775479900837,
        6656.663219851255,
        8875.550959801672,
        11094.438699752092,
        13313.326439702509,
        15532.214179652929,
        17751.10191960335,
        19969.98965955377
    ],
    "Val_JoulesNormalized": [
        957.973972803354,
        1915.9479456067081,
        2873.921918410062,
        3831.895891213416,
        4789.8698640167695,
        5747.843836820123,
        6705.817809623477,
        7663.791782426831,
        8621.765755230184
    ],
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "C",
        "W",
        "W",
        "W",
        "I",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "correct",
        "wrong",
        "wrong",
        "wrong"
    ],
    "patches": [
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n",
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n       MathUtils.checkNotNull(this);\n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n",
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n       MathUtils.checkNotNull(rhs);\n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n",
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n       if (isNaN() || rhs.isNaN()) {\n            return NaN;\n        }\n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n",
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n       MathUtils.checkNotNull(real);\n        MathUtils.checkNotNull(imaginary);\n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n",
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n       if (this == rhs) {\n            return createComplex(2 * real, 2 * imaginary);\n        }\n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n",
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n       if (rhs == this) {\n            return createComplex(2 * real, 2 * imaginary);\n        }\n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n",
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n       if (rhs.isNaN()) {\n            return NaN;\n        }\n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n",
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n       if (isNaN() || rhs.isNaN()) {\n            return createNaN();\n        }\n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n",
        "    public Complex add(Complex rhs)\n        throws NullArgumentException {\n        MathUtils.checkNotNull(rhs);\n// buggy code\n// \n       MathUtils.checkNotNull(real);\n        MathUtils.checkNotNull(rhs.getReal());\n        return createComplex(real + rhs.getReal(),\n            imaginary + rhs.getImaginary());\n    }\n"
    ]
}