{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Closure-56",
    "Time": {
        "mean": 411.49677896499634,
        "median": 411.49677896499634,
        "std": 0,
        "max": 411.49677896499634,
        "min": 411.49677896499634,
        "count": 1
    },
    "Joules": {
        "mean": 49270.27801462413,
        "median": 49270.27801462413,
        "std": 0,
        "max": 49270.27801462413,
        "min": 49270.27801462413,
        "count": 1
    },
    "JoulesNormalized": {
        "mean": 22662.277455699445,
        "median": 22662.277455699445,
        "std": 0,
        "max": 22662.277455699445,
        "min": 22662.277455699445,
        "count": 1
    },
    "NrExecutions": 1,
    "ExecutionsIds": [
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "ExecutionTime_Per_PatchMedian": [
        52.47773742675781,
        103.76617193222046,
        155.0546064376831,
        206.34304094314575,
        257.6314754486084,
        308.91990995407104,
        360.2083444595337,
        411.49677896499634
    ],
    "Joules_Per_PatchMedian": [
        7167.630297768116,
        13182.294257318974,
        19196.958216869833,
        25211.62217642069,
        31226.286135971546,
        37240.95009552241,
        43255.61405507327,
        49270.27801462413
    ],
    "JoulesNormalized_Per_PatchMedian": [
        3042.944466692209,
        5845.706322264671,
        8648.468177837134,
        11451.230033409596,
        14253.991888982058,
        17056.75374455452,
        19859.515600126982,
        22662.277455699445
    ],
    "Inf_ExecutionTime": {
        "mean": 1.2293333530426025,
        "median": 1.189302921295166,
        "std": 0.09607216796478117,
        "max": 1.3991918563842773,
        "min": 1.1692969799041748,
        "count": 5
    },
    "Inf_Joules": {
        "mean": 1183.7664443469048,
        "median": 1152.9663382172587,
        "std": 78.73873387803793,
        "max": 1323.0171887755396,
        "min": 1135.465493786335,
        "count": 5
    },
    "Inf_JoulesNormalized": {
        "mean": 240.11890434503562,
        "median": 240.1826111197472,
        "std": 5.002176165577642,
        "max": 246.24179102182404,
        "min": 232.71634805202495,
        "count": 5
    },
    "Val_ExecutionTime": [
        51.28843450546265,
        102.5768690109253,
        153.86530351638794,
        205.1537380218506,
        256.44217252731323,
        307.7306070327759,
        359.0190415382385,
        410.3074760437012
    ],
    "Val_Joules": [
        6014.663959550858,
        12029.327919101715,
        18043.991878652574,
        24058.65583820343,
        30073.319797754288,
        36087.98375730515,
        42102.64771685601,
        48117.31167640687
    ],
    "Val_JoulesNormalized": [
        2802.761855572462,
        5605.523711144924,
        8408.285566717386,
        11211.047422289848,
        14013.80927786231,
        16816.571133434772,
        19619.332989007235,
        22422.094844579697
    ],
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "uncompilable",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong"
    ],
    "patches": [
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n     return js.substring(pos);\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n",
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n       return js.substring(pos);\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n",
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n",
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n     return \"\";\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n",
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n     return js.substring(pos, js.length());\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n",
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n     return null;\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n",
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n       return \"\";\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n",
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n       return js.substring(pos, js.length());\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n",
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n     if (pos == 0) {\n        return null;\n      }\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n",
        "  public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = 1;\n    if (lineNumber >= lastLine) {\n      pos = lastOffset;\n      startLine = lastLine;\n    }\n    for (int n = startLine; n < lineNumber; n++) {\n      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        return null;\n      }\n      pos = nextpos + 1;\n    }\n    lastOffset = pos;\n    lastLine = lineNumber;\n    if (js.indexOf('\\n', pos) == -1) {\n// buggy code\n//         return null;\n     lastOffset = js.length();\n      return null;\n    } else {\n      return js.substring(pos, js.indexOf('\\n', pos));\n    }\n  }\n"
    ]
}