{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Closure-55",
    "Time": {
        "mean": 209.67555260658264,
        "median": 209.67555260658264,
        "std": 0,
        "max": 209.67555260658264,
        "min": 209.67555260658264,
        "count": 1
    },
    "Joules": {
        "mean": 28080.623896718025,
        "median": 28080.623896718025,
        "std": 0,
        "max": 28080.623896718025,
        "min": 28080.623896718025,
        "count": 1
    },
    "JoulesNormalized": {
        "mean": 11827.977614498139,
        "median": 11827.977614498139,
        "std": 0,
        "max": 11827.977614498139,
        "min": 11827.977614498139,
        "count": 1
    },
    "NrExecutions": 1,
    "ExecutionsIds": [
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "ExecutionTime_Per_PatchMedian": [
        55.71959614753723,
        107.03824830055237,
        158.3569004535675,
        209.67555260658264
    ],
    "Joules_Per_PatchMedian": [
        9994.840710949898,
        16023.435106205941,
        22052.029501461984,
        28080.623896718025
    ],
    "JoulesNormalized_Per_PatchMedian": [
        3408.6837167799476,
        6215.115016019345,
        9021.546315258742,
        11827.977614498139
    ],
    "Inf_ExecutionTime": {
        "mean": 4.765986585617066,
        "median": 4.400943994522095,
        "std": 0.692397553471231,
        "max": 5.590803861618042,
        "min": 4.141027927398682,
        "count": 5
    },
    "Inf_Joules": {
        "mean": 4267.4083390378955,
        "median": 3966.2463156938556,
        "std": 551.6395828383692,
        "max": 4923.160113692284,
        "min": 3769.4126328110697,
        "count": 5
    },
    "Inf_JoulesNormalized": {
        "mean": 634.4144497203827,
        "median": 602.2524175405506,
        "std": 53.62767279510215,
        "max": 704.8098632216443,
        "min": 587.2015166997917,
        "count": 5
    },
    "Val_ExecutionTime": [
        51.31865215301514,
        102.63730430603027,
        153.9559564590454,
        205.27460861206055
    ],
    "Val_Joules": [
        6028.594395256043,
        12057.188790512086,
        18085.78318576813,
        24114.37758102417
    ],
    "Val_JoulesNormalized": [
        2806.431299239397,
        5612.862598478794,
        8419.293897718191,
        11225.725196957588
    ],
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "uncompilable",
        "wrong",
        "wrong",
        "uncompilable",
        "wrong",
        "wrong",
        "uncompilable",
        "wrong",
        "wrong",
        "uncompilable"
    ],
    "patches": [
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n  }\n",
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n return NodeUtil.isFunctionExpression(n);\n  }\n",
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n return NodeUtil.isFunctionExpression(n) || NodeUtil.isArrowFunction(n);\n  }\n",
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n try {\n    return NodeUtil.isFunctionExpression(n);\n  } catch (NullPointerException e) {\n    return false;\n  }\n  }\n",
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n return NodeUtil.isFunctionExpression(n) && !NodeUtil.isArrowFunction(n);\n  }\n",
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n try {\n    return NodeUtil.isFunctionExpression(n);\n  } catch (IllegalArgumentException e) {\n    return false;\n  }\n  }\n",
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n   return NodeUtil.isFunctionExpression(n) && !NodeUtil.isArrowFunction(n);\n  }\n",
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n   return NodeUtil.isFunctionExpression(n) && !NodeUtil.isArrowFunctionExpression(n);\n  }\n",
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n return NodeUtil.isFunctionExpression(n) && !NodeUtil.isArrowFunctionExpression(n);\n  }\n",
        "  private static boolean isReduceableFunctionExpression(Node n) {\n// buggy code\n//     return NodeUtil.isFunctionExpression(n);\n try {\n    return NodeUtil.isFunctionExpression(n);\n  } catch (NullPointerException e) { \n    return false;\n  }\n  }\n"
    ]
}