{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Mockito-20",
    "Time": {
        "mean": 13.118071794509888,
        "median": 13.118071794509888,
        "std": 0,
        "max": 13.118071794509888,
        "min": 13.118071794509888,
        "count": 1
    },
    "Joules": {
        "mean": 12996.377021253109,
        "median": 12996.377021253109,
        "std": 0,
        "max": 12996.377021253109,
        "min": 12996.377021253109,
        "count": 1
    },
    "JoulesNormalized": {
        "mean": 2810.194272816181,
        "median": 2810.194272816181,
        "std": 0,
        "max": 2810.194272816181,
        "min": 2810.194272816181,
        "count": 1
    },
    "NrExecutions": 1,
    "ExecutionsIds": [
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "ExecutionTime_Per_PatchMedian": [],
    "Joules_Per_PatchMedian": [],
    "JoulesNormalized_Per_PatchMedian": [],
    "Inf_ExecutionTime": {
        "mean": 13.595272588729859,
        "median": 13.118071794509888,
        "std": 1.0662961882403637,
        "max": 15.502077102661133,
        "min": 13.089042901992798,
        "count": 5
    },
    "Inf_Joules": {
        "mean": 13320.37860054493,
        "median": 12996.377021253109,
        "std": 788.107916905103,
        "max": 14726.914151489735,
        "min": 12909.741831886768,
        "count": 5
    },
    "Inf_JoulesNormalized": {
        "mean": 2819.045177025795,
        "median": 2810.194272816181,
        "std": 131.91334503075288,
        "max": 2996.8630384087555,
        "min": 2627.7048726320263,
        "count": 5
    },
    "Val_ExecutionTime": [],
    "Val_Joules": [],
    "Val_JoulesNormalized": [],
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong"
    ],
    "patches": [
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       try {\n            T mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n",
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       try {\n            T mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(mockedProxyType),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n",
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       try {\n            T mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(settings.getTypeToMock()),\n                    \"  created class : \" + describeClass(mockedProxyType),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n",
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       try {\n            T mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n",
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       try {\n            T mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(settings.getTypeToMock()),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n",
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       try {\n            T mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(cce.getClass()),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n",
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       try {\n            T mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(mockedProxyType.getSuperclass()),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n",
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       try {\n            T mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(mockedProxyType),\n                    \"  instance creation by : \" + classInstantiator.getClass().getName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n",
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       Object mockInstance = null;\n        try {\n            mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, (T) mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(mockInstance),\n                    \"  instance creation by : \" + classInstantiator.getClass().getName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n",
        "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n// buggy code\n//         T mockInstance = null;\n//         try {\n//             mockInstance = classInstantiator.instantiate(mockedProxyType);\n//             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n//             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n//             return ensureMockIsAssignableToMockedType(settings, mockInstance);\n//         } catch (ClassCastException cce) {\n//             throw new MockitoException(join(\n//                     \"ClassCastException occurred while creating the mockito mock :\",\n//                     \"  class to mock : \" + describeClass(mockedProxyType),\n//                     \"  created class : \" + describeClass(settings.getTypeToMock()),\n//                     \"  proxy instance class : \" + describeClass(mockInstance),\n//                     \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n       Object mockInstance = null;\n        try {\n            mockInstance = classInstantiator.instantiate(mockedProxyType);\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(mockInstance),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ),cce);\n        } catch (org.mockito.internal.creation.instance.InstantiationException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n"
    ]
}