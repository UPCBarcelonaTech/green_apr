{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Mockito-12",
    "Time": {
        "mean": 1.7501890659332275,
        "median": 1.7501890659332275,
        "std": 0,
        "max": 1.7501890659332275,
        "min": 1.7501890659332275,
        "count": 1
    },
    "Joules": {
        "mean": 1598.0753894805907,
        "median": 1598.0753894805907,
        "std": 0,
        "max": 1598.0753894805907,
        "min": 1598.0753894805907,
        "count": 1
    },
    "JoulesNormalized": {
        "mean": 296.43168193101883,
        "median": 296.43168193101883,
        "std": 0,
        "max": 296.43168193101883,
        "min": 296.43168193101883,
        "count": 1
    },
    "NrExecutions": 1,
    "ExecutionsIds": [
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "ExecutionTime_Per_PatchMedian": [],
    "Joules_Per_PatchMedian": [],
    "JoulesNormalized_Per_PatchMedian": [],
    "Inf_ExecutionTime": {
        "mean": 1.8265161991119385,
        "median": 1.7501890659332275,
        "std": 0.2168217158893787,
        "max": 2.2109830379486084,
        "min": 1.6892719268798828,
        "count": 5
    },
    "Inf_Joules": {
        "mean": 1661.301572356224,
        "median": 1598.0753894805907,
        "std": 178.55012052607924,
        "max": 1978.2649659156798,
        "min": 1548.6514839053154,
        "count": 5
    },
    "Inf_JoulesNormalized": {
        "mean": 299.7912481307984,
        "median": 296.43168193101883,
        "std": 20.24761004843743,
        "max": 333.29358568191515,
        "min": 278.1500676989558,
        "count": 5
    },
    "Val_ExecutionTime": [],
    "Val_Joules": [],
    "Val_JoulesNormalized": [],
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong"
    ],
    "patches": [
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n           if (actual instanceof Class) {\n                return (Class) actual;\n            }\n        }\n        return Object.class;\n    }\n",
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n           if (actual instanceof Class)\n                return (Class) actual;\n        }\n        return Object.class;\n    }\n",
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n           return (Class) actual;\n        }\n        return Object.class;\n    }\n",
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n           return (Class<?>) actual;\n        }\n        return Object.class;\n    }\n",
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n        }\n        return Object.class;\n    }\n",
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n           if(actual instanceof Class) {\n                return (Class) actual;\n            }\n        }\n        return Object.class;\n    }\n",
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n           if (actual instanceof Class) {\n                return (Class) actual;\n            }\n            return Object.class;\n        }\n        return Object.class;\n    }\n",
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n           if(actual instanceof Class){\n                return (Class) actual;\n            }\n        }\n        return Object.class;\n    }\n",
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n           return actual instanceof Class ? (Class) actual : Object.class;\n        }\n        return Object.class;\n    }\n",
        "    public Class getGenericType(Field field) {        \n        Type generic = field.getGenericType();\n        if (generic != null && generic instanceof ParameterizedType) {\n            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n// buggy code\n//                 return (Class) actual;\n           try {\n                return (Class) actual;\n            } catch (ClassCastException e) {\n            }\n        }\n        return Object.class;\n    }\n"
    ]
}