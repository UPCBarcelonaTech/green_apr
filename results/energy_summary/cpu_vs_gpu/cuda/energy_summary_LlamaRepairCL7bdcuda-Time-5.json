{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Time-5",
    "Time": {
        "mean": 101.64412450790405,
        "median": 101.64412450790405,
        "std": 0.0,
        "max": 101.64412450790405,
        "min": 101.64412450790405,
        "count": 4
    },
    "Joules": {
        "mean": 14819.890403884652,
        "median": 14819.890403884652,
        "std": 0.0,
        "max": 14819.890403884652,
        "min": 14819.890403884652,
        "count": 4
    },
    "JoulesNormalized": {
        "mean": 5688.509942519666,
        "median": 5688.509942519666,
        "std": 0.0,
        "max": 5688.509942519666,
        "min": 5688.509942519666,
        "count": 4
    },
    "NrExecutions": 4,
    "ExecutionsIds": [
        "s1",
        "s2",
        "s3",
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong"
    ],
    "patches": [
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n",
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n",
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n",
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n",
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n",
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n",
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n",
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n",
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n",
        "diff --git a/src/main/java/org/joda/time/Period.java b/src/main/java/org/joda/time/Period.java\nindex 5ea67a7..f404793 100644\n--- a/src/main/java/org/joda/time/Period.java\n+++ b/src/main/java/org/joda/time/Period.java\n@@ -1625,19 +1625,13 @@ public final class Period\n         int years = getYears();\n         int months = getMonths();\n         if (years != 0 || months != 0) {\n-            long totalMonths = years * 12L + months;\n-            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {\n-                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);\n-                result = result.withYears(normalizedYears);\n-                totalMonths = totalMonths - (normalizedYears * 12);\n+            years = FieldUtils.safeAdd(years, months / 12);\n+            months = months % 12;\n+            if (years != 0) {\n+                result = result.withYears(years);\n             }\n-            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {\n-                int normalizedMonths = FieldUtils.safeToInt(totalMonths);\n-                result = result.withMonths(normalizedMonths);\n-                totalMonths = totalMonths - normalizedMonths;\n-            }\n-            if (totalMonths != 0) {\n-                throw new UnsupportedOperationException(\"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: \" + toString());\n+            if (months != 0) {\n+                result = result.withMonths(months);\n             }\n         }\n         return result;\n"
    ]
}