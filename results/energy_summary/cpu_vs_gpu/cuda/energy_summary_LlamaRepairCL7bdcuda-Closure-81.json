{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Closure-81",
    "Time": {
        "mean": 335.5477178096771,
        "median": 335.5477178096771,
        "std": 0.0,
        "max": 335.5477178096771,
        "min": 335.5477178096771,
        "count": 4
    },
    "Joules": {
        "mean": 39911.98320543766,
        "median": 39911.98320543766,
        "std": 0.0,
        "max": 39911.98320543766,
        "min": 39911.98320543766,
        "count": 4
    },
    "JoulesNormalized": {
        "mean": 17922.808354389665,
        "median": 17922.808354389665,
        "std": 0.0,
        "max": 17922.808354389665,
        "min": 17922.808354389665,
        "count": 4
    },
    "NrExecutions": 4,
    "ExecutionsIds": [
        "s1",
        "s2",
        "s3",
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong"
    ],
    "patches": [
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/IRFactory.java b/src/com/google/javascript/jscomp/parsing/IRFactory.java\nindex 07761aa..4a733cd 100644\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n@@ -514,13 +514,6 @@ public class IRFactory {\n       Name name = functionNode.getFunctionName();\n       Boolean isUnnamedFunction = false;\n       if (name == null) {\n-        int functionType = functionNode.getFunctionType();\n-        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n-          errorReporter.error(\n-            \"unnamed function statement\",\n-            sourceName,\n-            functionNode.getLineno(), \"\", 0);\n-        }\n         name = new Name();\n         name.setIdentifier(\"\");\n         isUnnamedFunction = true;\n"
    ]
}