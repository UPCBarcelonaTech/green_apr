{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Closure-146",
    "Time": {
        "mean": 115.08438801765442,
        "median": 115.08438801765442,
        "std": 0.0,
        "max": 115.08438801765442,
        "min": 115.08438801765442,
        "count": 4
    },
    "Joules": {
        "mean": 17345.967296850682,
        "median": 17345.967296850682,
        "std": 0.0,
        "max": 17345.967296850682,
        "min": 17345.967296850682,
        "count": 4
    },
    "JoulesNormalized": {
        "mean": 6422.762029099464,
        "median": 6422.762029099464,
        "std": 0.0,
        "max": 6422.762029099464,
        "min": 6422.762029099464,
        "count": 4
    },
    "NrExecutions": 4,
    "ExecutionsIds": [
        "s1",
        "s2",
        "s3",
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "wrong"
    ],
    "patches": [
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n",
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n",
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n",
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n",
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n",
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n",
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n",
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n",
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n",
        "diff --git a/src/com/google/javascript/rhino/jstype/JSType.java b/src/com/google/javascript/rhino/jstype/JSType.java\nindex 1a7db7b0..aa8c7bc9 100644\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n@@ -703,8 +703,7 @@ public abstract class JSType implements Serializable {\n     // other types\n     switch (this.testForEquality(that)) {\n       case TRUE:\n-        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n-        return new TypePair(noType, noType);\n+        return new TypePair(null, null);\n \n       case FALSE:\n       case UNKNOWN:\n"
    ]
}