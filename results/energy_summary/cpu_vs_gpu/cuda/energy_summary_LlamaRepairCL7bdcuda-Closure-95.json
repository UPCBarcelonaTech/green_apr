{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Closure-95",
    "Time": {
        "mean": 213.28386569023132,
        "median": 213.28386569023132,
        "std": 0.0,
        "max": 213.28386569023132,
        "min": 213.28386569023132,
        "count": 4
    },
    "Joules": {
        "mean": 28392.578341579436,
        "median": 28392.578341579436,
        "std": 0.0,
        "max": 28392.578341579436,
        "min": 28392.578341579436,
        "count": 4
    },
    "JoulesNormalized": {
        "mean": 11850.239544296262,
        "median": 11850.239544296262,
        "std": 0.0,
        "max": 11850.239544296262,
        "min": 11850.239544296262,
        "count": 4
    },
    "NrExecutions": 4,
    "ExecutionsIds": [
        "s1",
        "s2",
        "s3",
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "uncompilable",
        "wrong",
        "wrong",
        "uncompilable",
        "wrong",
        "wrong",
        "wrong",
        "wrong"
    ],
    "patches": [
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex c7005b2..4bd6bfb 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -896,16 +896,9 @@ final class TypedScopeCreator implements ScopeCreator {\n       // scope where the root object appears. This helps out people\n       // who declare \"global\" names in an anonymous namespace.\n       Scope scopeToDeclareIn = scope;\n-      if (n.getType() == Token.GETPROP && !scope.isGlobal() &&\n-          isQnameRootedInGlobalScope(n)) {\n-        Scope globalScope = scope.getGlobalScope();\n \n         // don't try to declare in the global scope if there's\n         // already a symbol there with this name.\n-        if (!globalScope.isDeclared(variableName, false)) {\n-          scopeToDeclareIn = scope.getGlobalScope();\n-        }\n-      }\n \n       // declared in closest scope?\n       if (scopeToDeclareIn.isDeclared(variableName, false)) {\n"
    ]
}