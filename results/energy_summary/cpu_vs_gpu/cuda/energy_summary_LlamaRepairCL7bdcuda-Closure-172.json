{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Closure-172",
    "Time": {
        "mean": 2.338057041168213,
        "median": 2.338057041168213,
        "std": 0.0,
        "max": 2.338057041168213,
        "min": 2.338057041168213,
        "count": 4
    },
    "Joules": {
        "mean": 2257.9200434207914,
        "median": 2257.9200434207914,
        "std": 0.0,
        "max": 2257.9200434207914,
        "min": 2257.9200434207914,
        "count": 4
    },
    "JoulesNormalized": {
        "mean": 448.99271676540343,
        "median": 448.99271676540343,
        "std": 0.0,
        "max": 448.99271676540343,
        "min": 448.99271676540343,
        "count": 4
    },
    "NrExecutions": 4,
    "ExecutionsIds": [
        "s1",
        "s2",
        "s3",
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "uncompilable",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong"
    ],
    "patches": [
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n",
        "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363a..d5a59476 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@ final class TypedScopeCreator implements ScopeCreator {\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot = scope.getSlot(className);\n-        JSType classType = slot == null ? null : slot.getType();\n-        if (classType != null\n-            && (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred = true;\n"
    ]
}