{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Closure-109",
    "Time": {
        "mean": 73.76793611049652,
        "median": 73.76793611049652,
        "std": 0.0,
        "max": 73.76793611049652,
        "min": 73.76793611049652,
        "count": 4
    },
    "Joules": {
        "mean": 10627.111651861669,
        "median": 10627.111651861669,
        "std": 0.0,
        "max": 10627.111651861669,
        "min": 10627.111651861669,
        "count": 4
    },
    "JoulesNormalized": {
        "mean": 4251.687171196937,
        "median": 4251.687171196937,
        "std": 0.0,
        "max": 4251.687171196937,
        "min": 4251.687171196937,
        "count": 4
    },
    "NrExecutions": 4,
    "ExecutionsIds": [
        "s1",
        "s2",
        "s3",
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable"
    ],
    "patches": [
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\nindex c115e10..e30c350 100644\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n@@ -1905,11 +1905,7 @@ public final class JsDocInfoParser {\n    * For expressions on the right hand side of a this: or new:\n    */\n   private Node parseContextTypeExpression(JsDocToken token) {\n-    if (token == JsDocToken.QMARK) {\n-      return newNode(Token.QMARK);\n-    } else {\n-      return parseBasicTypeExpression(token);\n-    }\n+          return parseTypeName(token);\n   }\n \n   /**\n"
    ]
}