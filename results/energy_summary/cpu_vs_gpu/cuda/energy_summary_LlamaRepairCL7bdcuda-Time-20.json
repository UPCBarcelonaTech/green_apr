{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcuda-Time-20",
    "Time": {
        "mean": 105.30480742454529,
        "median": 105.30480742454529,
        "std": 0.0,
        "max": 105.30480742454529,
        "min": 105.30480742454529,
        "count": 3
    },
    "Joules": {
        "mean": 13989.600573098656,
        "median": 13989.600573098656,
        "std": 0.0,
        "max": 13989.600573098656,
        "min": 13989.600573098656,
        "count": 3
    },
    "JoulesNormalized": {
        "mean": 5623.402672445774,
        "median": 5623.402672445774,
        "std": 0.0,
        "max": 5623.402672445774,
        "min": 5623.402672445774,
        "count": 3
    },
    "NrExecutions": 3,
    "ExecutionsIds": [
        "s1",
        "s2",
        "s3"
    ],
    "ExecutionsInferenceIds": [
        "s1_cuda",
        "s2_cuda",
        "s3_cuda",
        "s4_cuda",
        "s5_cuda"
    ],
    "NrExecutionsInference": 5,
    "ExecutionTime_Per_PatchMedian": [
        13.059329628944397,
        23.30882716178894,
        33.558324694633484,
        43.80782222747803,
        54.05731976032257,
        64.30681729316711,
        74.55631482601166,
        84.8058123588562,
        95.05530989170074,
        105.30480742454529
    ],
    "Joules_Per_PatchMedian": [
        3696.5591382622715,
        4840.230408799648,
        5983.901679337025,
        7127.572949874401,
        8271.244220411778,
        9414.915490949154,
        10558.58676148653,
        11702.258032023905,
        12845.92930256128,
        13989.600573098656
    ],
    "JoulesNormalized_Per_PatchMedian": [
        940.8870737254624,
        1461.166584694386,
        1981.4460956633097,
        2501.7256066322334,
        3022.005117601157,
        3542.2846285700807,
        4062.5641395390044,
        4582.843650507928,
        5103.123161476851,
        5623.402672445774
    ],
    "Inf_ExecutionTime": {
        "mean": 2.9696044445037844,
        "median": 2.8098320960998535,
        "std": 0.38126240143480167,
        "max": 3.648077964782715,
        "min": 2.7590019702911377,
        "count": 5
    },
    "Inf_Joules": {
        "mean": 2686.5756135463716,
        "median": 2552.8878677248954,
        "std": 303.8948665107961,
        "max": 3228.0930902004243,
        "min": 2527.6573674678802,
        "count": 5
    },
    "Inf_JoulesNormalized": {
        "mean": 428.6292792248726,
        "median": 420.60756275653875,
        "std": 23.973796329800518,
        "max": 471.2405722141266,
        "min": 414.61812390089017,
        "count": 5
    },
    "Val_ExecutionTime": [
        10.249497532844543,
        20.498995065689087,
        30.74849259853363,
        40.997990131378174,
        51.24748766422272,
        61.49698519706726,
        71.7464827299118,
        81.99598026275635,
        92.24547779560089,
        102.49497532844543
    ],
    "Val_Joules": [
        1143.6712705373761,
        2287.3425410747527,
        3431.0138116121293,
        4574.685082149506,
        5718.356352686882,
        6862.027623224258,
        8005.698893761633,
        9149.370164299009,
        10293.041434836385,
        11436.71270537376
    ],
    "Val_JoulesNormalized": [
        520.2795109689237,
        1040.5590219378473,
        1560.838532906771,
        2081.1180438756946,
        2601.3975548446183,
        3121.677065813542,
        3641.9565767824656,
        4162.236087751389,
        4682.5155987203125,
        5202.795109689236
    ],
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "wrong"
    ],
    "patches": [
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n",
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n",
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n",
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n",
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n",
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n",
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n",
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n",
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n",
        "diff --git a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\nindex ebb4b08..558a586 100644\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n@@ -2539,18 +2539,12 @@ public class DateTimeFormatterBuilder {\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n-            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                \tif (best == null || id.length() > best.length()) {\n-                \t\tbest = id;\n-                \t}\n+                    bucket.setZone(DateTimeZone.forID(id));\n+                    return position + id.length();\n                 }\n             }\n-            if (best != null) {\n-                bucket.setZone(DateTimeZone.forID(best));\n-                return position + best.length();\n-            }\n             return ~position;\n         }\n     }\n"
    ]
}