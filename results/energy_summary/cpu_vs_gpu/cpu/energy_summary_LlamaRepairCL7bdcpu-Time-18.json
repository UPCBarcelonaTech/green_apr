{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcpu-Time-18",
    "Time": {
        "mean": 137.87397968769073,
        "median": 137.87397968769073,
        "std": 0.0,
        "max": 137.87397968769073,
        "min": 137.87397968769073,
        "count": 4
    },
    "Joules": {
        "mean": 96230.23758324381,
        "median": 96230.23758324381,
        "std": 0.0,
        "max": 96230.23758324381,
        "min": 96230.23758324381,
        "count": 4
    },
    "JoulesNormalized": {
        "mean": 26935.893681263922,
        "median": 26935.893681263922,
        "std": 0.0,
        "max": 26935.893681263922,
        "min": 26935.893681263922,
        "count": 4
    },
    "NrExecutions": 4,
    "ExecutionsIds": [
        "s1",
        "s2",
        "s3",
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cpu",
        "s2_cpu",
        "s4_cpu",
        "s5_cpu"
    ],
    "NrExecutionsInference": 4,
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "wrong",
        "wrong",
        "uncompilable",
        "wrong",
        "wrong",
        "uncompilable",
        "wrong",
        "wrong"
    ],
    "patches": [
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n",
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n",
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n",
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n",
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n",
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n",
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n",
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n",
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n",
        "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@ public final class GJChronology extends AssembledChronology {\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant = iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear != 2 || dayOfMonth != 29) {\n-                throw ex;\n-            }\n-            instant = iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant >= iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant < iCutoverMillis) {\n             // Maybe it's Julian.\n             instant = iJulianChronology.getDateTimeMillis\n"
    ]
}