{
    "TOOL_BUG_ID": "LlamaRepairCL7bdcpu-Closure-55",
    "Time": {
        "mean": 104.77464818954468,
        "median": 104.77464818954468,
        "std": 0.0,
        "max": 104.77464818954468,
        "min": 104.77464818954468,
        "count": 4
    },
    "Joules": {
        "mean": 60319.57247803808,
        "median": 60319.57247803808,
        "std": 0.0,
        "max": 60319.57247803808,
        "min": 60319.57247803808,
        "count": 4
    },
    "JoulesNormalized": {
        "mean": 16695.71726750732,
        "median": 16695.71726750732,
        "std": 0.0,
        "max": 16695.71726750732,
        "min": 16695.71726750732,
        "count": 4
    },
    "NrExecutions": 4,
    "ExecutionsIds": [
        "s1",
        "s2",
        "s3",
        "s4"
    ],
    "ExecutionsInferenceIds": [
        "s1_cpu",
        "s2_cpu",
        "s4_cpu",
        "s5_cpu"
    ],
    "NrExecutionsInference": 4,
    "NrPatches": {
        "median": 0,
        "std": 0.0,
        "max": 0,
        "min": 0
    },
    "Correctness_Per_Patch": [
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W",
        "W"
    ],
    "Correctness_Per_Patch_original": [
        "wrong",
        "wrong",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable",
        "uncompilable"
    ],
    "patches": [
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n",
        "diff --git a/src/com/google/javascript/jscomp/FunctionRewriter.java b/src/com/google/javascript/jscomp/FunctionRewriter.java\nindex 9d8ebc3..dbf0006 100644\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n@@ -114,8 +114,7 @@ class FunctionRewriter implements CompilerPass {\n   }\n \n   private static boolean isReduceableFunctionExpression(Node n) {\n-    return NodeUtil.isFunctionExpression(n)\n-        && !NodeUtil.isGetOrSetKey(n.getParent());\n+    return NodeUtil.isFunctionExpression(n);\n   }\n \n   /**\n"
    ]
}