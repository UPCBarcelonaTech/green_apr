{"nbStatement":109,"executionTime":4954038,"date":"Sat Jun 04 07:50:28 EDT 2022","patch":[{"patch":"--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -192,3 +192,5 @@\n               outMatrix.setEntry(i, j, corr);\n-              outMatrix.setEntry(j, i, corr);\n+              if ((nVars) != (2)) {\n+                  outMatrix.setEntry(j, i, corr);\n+              }\n             }\n","patchType":"PRECONDITION","nb_test_that_execute_statement":11,"patchLocation":{"line":193,"class":"org.apache.commons.math.stat.correlation.PearsonsCorrelation"}},{"patch":"--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -189,6 +189,8 @@\n         for (int i = 0; i < nVars; i++) {\n-            for (int j = 0; j < i; j++) {\n-              double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));\n-              outMatrix.setEntry(i, j, corr);\n-              outMatrix.setEntry(j, i, corr);\n+            if ((nVars) != (2)) {\n+                for (int j = 0; j < i; j++) {\n+                    double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));\n+                    outMatrix.setEntry(i, j, corr);\n+                    outMatrix.setEntry(j, i, corr);\n+                }\n             }\n","patchType":"PRECONDITION","nb_test_that_execute_statement":11,"patchLocation":{"line":190,"class":"org.apache.commons.math.stat.correlation.PearsonsCorrelation"}},{"patch":"--- a/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java\n@@ -188,9 +188,11 @@\n         RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);\n-        for (int i = 0; i < nVars; i++) {\n-            for (int j = 0; j < i; j++) {\n-              double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));\n-              outMatrix.setEntry(i, j, corr);\n-              outMatrix.setEntry(j, i, corr);\n+        if ((nVars) != (2)) {\n+            for (int i = 0; i < nVars; i++) {\n+                for (int j = 0; j < i; j++) {\n+                    double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));\n+                    outMatrix.setEntry(i, j, corr);\n+                    outMatrix.setEntry(j, i, corr);\n+                }\n+                outMatrix.setEntry(i, i, 1d);\n             }\n-            outMatrix.setEntry(i, i, 1d);\n         }\n","patchType":"PRECONDITION","nb_test_that_execute_statement":11,"patchLocation":{"line":189,"class":"org.apache.commons.math.stat.correlation.PearsonsCorrelation"}},{"patch":"--- a/src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java\n@@ -1258,3 +1258,5 @@\n                                (column - jBlock * BLOCK_SIZE);\n-            blocks[iBlock * blockColumns + jBlock][k] = value;\n+            if ((org.apache.commons.math.linear.BlockRealMatrix.this.columns) != (2)) {\n+                blocks[iBlock * blockColumns + jBlock][k] = value;\n+            }\n         } catch (ArrayIndexOutOfBoundsException e) {\n","patchType":"PRECONDITION","nb_test_that_execute_statement":25,"patchLocation":{"line":1259,"class":"org.apache.commons.math.linear.BlockRealMatrix"}}],"nb_methods":3017,"nb_classes":416,"nbAngelicValue":6}