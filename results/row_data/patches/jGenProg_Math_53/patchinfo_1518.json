{
  "VARIANT_ID": "1518",
  "VALIDATION": "|true|0|2525|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.apache.commons.math.complex.Complex",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_53\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/complex\\/Complex.java",
      "INGREDIENT_SCOPE": "LOCAL",
      "SUSPICIOUNESS": "0.224",
      "INGREDIENT_PARENT": "if (isNaN || rhs.isNaN) {\\n\\treturn org.apache.commons.math.complex.Complex.NaN;\\n}",
      "PATCH_HUNK_TYPE": "CtIfImpl|CtBlockImpl",
      "ORIGINAL_CODE": "org.apache.commons.math.util.MathUtils.checkNotNull(rhs)",
      "BUGGY_CODE_TYPE": "CtInvocationImpl|CtBlockImpl",
      "OPERATOR": "InsertBeforeOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_53\\/.\\/output_astor\\/AstorMain-Math53\\/\\/src\\/\\/variant-1518\\/org\\/apache\\/commons\\/math\\/complex\\/Complex.java",
      "LINE": "152",
      "MP_RANKING": "0",
      "PATCH_HUNK_CODE": "if (isNaN || rhs.isNaN) {\\n\\treturn org.apache.commons.math.complex.Complex.NaN;\\n}"
    }
  ],
  "TIME": "249",
  "GENERATION": "759",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_53\\/.\\/output_astor\\/AstorMain-Math53\\/\\/src\\/\\/variant-1518",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_53\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/complex\\/Complexjava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_53\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/complex\\/Complexjava\\n@@ -152,4 +151,0 @@\\n-\\t\\torg.apache.commons.math.util.MathUtils.checkNotNull(rhs);\\n-\\t\\treturn createComplex(real + rhs.getReal(), \\n-\\t\\timaginary + rhs.getImaginary());\\n-\\t}\\n@@ -157 +153,66 @@\\n-\\t\\/**\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\tif (isNaN || rhs.isNaN) {\\n+\\t\\t\\treturn org.apache.commons.math.complex.Complex.NaN;\\n+\\t\\t} \\t\\torg.apache.commons.math.util.MathUtils.checkNotNull(rhs); \\t\\treturn createComplex(real + rhs.getReal(), imaginary + rhs.getImaginary());} \\t\\/**\\n@@ -170,9 +231 @@\\n-\\t *\\/\\n-\\tpublic org.apache.commons.math.complex.Complex conjugate() {\\n-\\t\\tif (isNaN) {\\n-\\t\\t\\treturn org.apache.commons.math.complex.Complex.NaN;\\n-\\t\\t}\\n-\\t\\treturn createComplex(real, -imaginary);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic org.apache.commons.math.complex.Complex conjugate() { \\t\\tif (isNaN) { \\t\\t\\treturn org.apache.commons.math.complex.Complex.NaN;} \\t\\treturn createComplex(real, -imaginary);} \\t\\/**\\n@@ -214,30 +267 @@\\n-\\t *\\/ \\tpublic org.apache.commons.math.complex.Complex divide(org.apache.commons.math.complex.Complex rhs) throws org.apache.commons.math.exception.NullArgumentException {\\n-\\t\\torg.apache.commons.math.util.MathUtils.checkNotNull(rhs);\\n-\\t\\tif (isNaN || rhs.isNaN) {\\n-\\t\\t\\treturn org.apache.commons.math.complex.Complex.NaN;\\n-\\t\\t}\\n-\\n-\\t\\tdouble c \u003d rhs.getReal();\\n-\\t\\tdouble d \u003d rhs.getImaginary();\\n-\\t\\tif ((c \u003d\u003d 0.0) \u0026\u0026 (d \u003d\u003d 0.0)) {\\n-\\t\\t\\treturn org.apache.commons.math.complex.Complex.NaN;\\n-\\t\\t}\\n-\\n-\\t\\tif (rhs.isInfinite() \u0026\u0026 (!isInfinite())) {\\n-\\t\\t\\treturn org.apache.commons.math.complex.Complex.ZERO;\\n-\\t\\t}\\n-\\n-\\t\\tif (org.apache.commons.math.util.FastMath.abs(c) \u003c org.apache.commons.math.util.FastMath.abs(d)) {\\n-\\t\\t\\tdouble q \u003d c \\/ d;\\n-\\t\\t\\tdouble denominator \u003d (c * q) + d;\\n-\\t\\t\\treturn createComplex(((real * q) + imaginary) \\/ denominator, \\n-\\t\\t\\t((imaginary * q) - real) \\/ denominator);\\n-\\t\\t} else {\\n-\\t\\t\\tdouble q \u003d d \\/ c;\\n-\\t\\t\\tdouble denominator \u003d (d * q) + c;\\n-\\t\\t\\treturn createComplex(((imaginary * q) + real) \\/ denominator, \\n-\\t\\t\\t(imaginary - (real * q)) \\/ denominator);\\n-\\t\\t}\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic org.apache.commons.math.complex.Complex divide(org.apache.commons.math.complex.Complex rhs) throws org.apache.commons.math.exception.NullArgumentException { \\t\\torg.apache.commons.math.util.MathUtils.checkNotNull(rhs); \\t\\tif (isNaN || rhs.isNaN) { \\t\\t\\treturn org.apache.commons.math.complex.Complex.NaN;} \\t\\tdouble c \u003d rhs.getReal(); \\t\\tdouble d \u003d rhs.getImaginary(); \\t\\tif ((c \u003d\u003d 0.0) \u0026\u0026 (d \u003d\u003d 0.0)) { \\t\\t\\treturn org.apache.commons.math.complex.Complex.NaN;} \\t\\tif (rhs.isInfinite() \u0026\u0026 (!isInfinite())) { \\t\\t\\treturn org.apache.commons.math.complex.Complex.ZERO;} \\t\\tif (org.apache.commons.math.util.FastMath.abs(c) \u003c org.apache.commons.math.util.FastMath.abs(d)) { \\t\\t\\tdouble q \u003d c \\/ d; \\t\\t\\tdouble denominator \u003d (c * q) + d; \\t\\t\\treturn createComplex(((real * q) + imaginary) \\/ denominator, ((imaginary * q) - real) \\/ denominator);} else { \\t\\t\\tdouble q \u003d d \\/ c; \\t\\t\\tdouble denominator \u003d (d * q) + c; \\t\\t\\treturn createComplex(((imaginary * q) + real) \\/ denominator, (imaginary - (real * q)) \\/ denominator);}} \\t\\/**\\n@@ -260,18 +284 @@\\n-\\t *\\/\\n-\\t@java.lang.Override\\n-\\tpublic boolean equals(java.lang.Object other) {\\n-\\t\\tif (this \u003d\u003d other) {\\n-\\t\\t\\treturn true;\\n-\\t\\t}\\n-\\t\\tif (other instanceof org.apache.commons.math.complex.Complex) {\\n-\\t\\t\\torg.apache.commons.math.complex.Complex rhs \u003d ((org.apache.commons.math.complex.Complex) (other));\\n-\\t\\t\\tif (rhs.isNaN) {\\n-\\t\\t\\t\\treturn isNaN;\\n-\\t\\t\\t} else {\\n-\\t\\t\\t\\treturn (real \u003d\u003d rhs.real) \u0026\u0026 (imaginary \u003d\u003d rhs.imaginary);\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn false;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\t@java.lang.Override \\tpublic boolean equals(java.lang.Object other) { \\t\\tif (this \u003d\u003d other) { \\t\\t\\treturn true;} \\t\\tif (other instanceof org.apache.commons.math.complex.Complex) { \\t\\t\\torg.apache.commons.math.complex.Complex rhs \u003d ((org.apache.commons.math.complex.Complex) (other)); \\t\\t\\tif (rhs.isNaN) { \\t\\t\\t\\treturn isNaN;} else { \\t\\t\\t\\treturn (real \u003d\u003d rhs.real) \u0026\u0026 (imaginary \u003d\u003d rhs.imaginary);}} \\t\\treturn false;} \\t\\/**\\n@@ -283,8 +290 @@\\n-\\t *\\/\\n-\\t@java.lang.Override\\n-\\tpublic int hashCode() {\\n-\\t\\tif (isNaN) {\\n-\\t\\t\\treturn 7;\\n-\\t\\t}\\n-\\t\\treturn 37 * ((17 * org.apache.commons.math.util.MathUtils.hash(imaginary)) + \\n-\\t\\torg.apache.commons.math.util.MathUtils.hash(real));\\n+\\t *\\/ \\t@java.lang.Override \\tpublic int hashCode() { \\t\\tif (isNaN) { \\t\\t\\treturn 7;} \\t\\treturn 37 * ((17 * org.apache.commons.math.util.MathUtils.hash(imaginary)) + org.apache.commons.math.util.MathUtils.hash(real));\\n\\n"
}