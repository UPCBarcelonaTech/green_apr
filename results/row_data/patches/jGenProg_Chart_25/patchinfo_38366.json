{
  "VARIANT_ID": "38366",
  "VALIDATION": "|true|0|3243|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.jfree.data.statistics.DefaultStatisticalCategoryDataset",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/source\\/org\\/jfree\\/data\\/statistics\\/DefaultStatisticalCategoryDataset.java",
      "INGREDIENT_SCOPE": "PACKAGE",
      "SUSPICIOUNESS": "0.816",
      "INGREDIENT_PARENT": "return null",
      "PATCH_HUNK_TYPE": "CtReturnImpl|CtBlockImpl",
      "ORIGINAL_CODE": "return getMeanValue(row, column)",
      "BUGGY_CODE_TYPE": "CtReturnImpl|CtBlockImpl",
      "OPERATOR": "ReplaceOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/.\\/output_astor\\/AstorMain-Chart25\\/\\/src\\/\\/variant-38366\\/org\\/jfree\\/data\\/statistics\\/DefaultStatisticalCategoryDataset.java",
      "LINE": "126",
      "MP_RANKING": "11",
      "PATCH_HUNK_CODE": "return null"
    }
  ],
  "TIME": "16171",
  "GENERATION": "19183",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/.\\/output_astor\\/AstorMain-Chart25\\/\\/src\\/\\/variant-38366",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/source\\/org\\/jfree\\/data\\/statistics\\/DefaultStatisticalCategoryDatasetjava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/source\\/org\\/jfree\\/data\\/statistics\\/DefaultStatisticalCategoryDatasetjava\\n@@ -126,2 +125,0 @@\\n-\\t\\treturn getMeanValue(row, column);\\n-\\t}\\n@@ -129 +127,81 @@\\n-\\t\\/**\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\treturn null;} \\t\\/**\\n@@ -138,5 +216 @@\\n-\\t *\\/ \\tpublic java.lang.Number getValue(java.lang.Comparable rowKey, java.lang.Comparable columnKey) {\\n-\\t\\treturn getMeanValue(rowKey, columnKey);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.lang.Number getValue(java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\treturn getMeanValue(rowKey, columnKey);} \\t\\/**\\n@@ -150,11 +224 @@\\n-\\t *\\/ \\tpublic java.lang.Number getMeanValue(java.lang.Comparable rowKey, java.lang.Comparable columnKey) {\\n-\\t\\tjava.lang.Number result \u003d null;\\n-\\t\\torg.jfree.data.statistics.MeanAndStandardDeviation masd \u003d \\n-\\t\\t((org.jfree.data.statistics.MeanAndStandardDeviation) (this.data.getObject(rowKey, columnKey)));\\n-\\t\\tif (masd !\u003d null) {\\n-\\t\\t\\tresult \u003d masd.getMean();\\n-\\t\\t}\\n-\\t\\treturn result;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.lang.Number getMeanValue(java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tjava.lang.Number result \u003d null; \\t\\torg.jfree.data.statistics.MeanAndStandardDeviation masd \u003d ((org.jfree.data.statistics.MeanAndStandardDeviation) (this.data.getObject(rowKey, columnKey))); \\t\\tif (masd !\u003d null) { \\t\\t\\tresult \u003d masd.getMean();} \\t\\treturn result;} \\t\\/**\\n@@ -168,11 +232 @@\\n-\\t *\\/ \\tpublic java.lang.Number getStdDevValue(int row, int column) {\\n-\\t\\tjava.lang.Number result \u003d null;\\n-\\t\\torg.jfree.data.statistics.MeanAndStandardDeviation masd \u003d \\n-\\t\\t((org.jfree.data.statistics.MeanAndStandardDeviation) (this.data.getObject(row, column)));\\n-\\t\\tif (masd !\u003d null) {\\n-\\t\\t\\tresult \u003d masd.getStandardDeviation();\\n-\\t\\t}\\n-\\t\\treturn result;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.lang.Number getStdDevValue(int row, int column) { \\t\\tjava.lang.Number result \u003d null; \\t\\torg.jfree.data.statistics.MeanAndStandardDeviation masd \u003d ((org.jfree.data.statistics.MeanAndStandardDeviation) (this.data.getObject(row, column))); \\t\\tif (masd !\u003d null) { \\t\\t\\tresult \u003d masd.getStandardDeviation();} \\t\\treturn result;} \\t\\/**\\n@@ -186,11 +240 @@\\n-\\t *\\/ \\tpublic java.lang.Number getStdDevValue(java.lang.Comparable rowKey, java.lang.Comparable columnKey) {\\n-\\t\\tjava.lang.Number result \u003d null;\\n-\\t\\torg.jfree.data.statistics.MeanAndStandardDeviation masd \u003d \\n-\\t\\t((org.jfree.data.statistics.MeanAndStandardDeviation) (this.data.getObject(rowKey, columnKey)));\\n-\\t\\tif (masd !\u003d null) {\\n-\\t\\t\\tresult \u003d masd.getStandardDeviation();\\n-\\t\\t}\\n-\\t\\treturn result;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.lang.Number getStdDevValue(java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tjava.lang.Number result \u003d null; \\t\\torg.jfree.data.statistics.MeanAndStandardDeviation masd \u003d ((org.jfree.data.statistics.MeanAndStandardDeviation) (this.data.getObject(rowKey, columnKey))); \\t\\tif (masd !\u003d null) { \\t\\t\\tresult \u003d masd.getStandardDeviation();} \\t\\treturn result;} \\t\\/**\\n@@ -202,6 +246 @@\\n-\\t *\\/\\n-\\tpublic int getColumnIndex(java.lang.Comparable key) {\\n-\\t\\treturn this.data.getColumnIndex(key);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getColumnIndex(java.lang.Comparable key) { \\t\\treturn this.data.getColumnIndex(key);} \\t\\/**\\n@@ -213,6 +252 @@\\n-\\t *\\/\\n-\\tpublic java.lang.Comparable getColumnKey(int column) {\\n-\\t\\treturn this.data.getColumnKey(column);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.lang.Comparable getColumnKey(int column) { \\t\\treturn this.data.getColumnKey(column);} \\t\\/**\\n@@ -222,6 +256 @@\\n-\\t *\\/\\n-\\tpublic java.util.List getColumnKeys() {\\n-\\t\\treturn this.data.getColumnKeys();\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.util.List getColumnKeys() { \\t\\treturn this.data.getColumnKeys();} \\t\\/**\\n@@ -233,6 +262 @@\\n-\\t *\\/\\n-\\tpublic int getRowIndex(java.lang.Comparable key) {\\n-\\t\\treturn this.data.getRowIndex(key);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getRowIndex(java.lang.Comparable key) { \\t\\treturn this.data.getRowIndex(key);} \\t\\/**\\n@@ -244,6 +268 @@\\n-\\t *\\/\\n-\\tpublic java.lang.Comparable getRowKey(int row) {\\n-\\t\\treturn this.data.getRowKey(row);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.lang.Comparable getRowKey(int row) { \\t\\treturn this.data.getRowKey(row);} \\t\\/**\\n@@ -253,6 +272 @@\\n-\\t *\\/\\n-\\tpublic java.util.List getRowKeys() {\\n-\\t\\treturn this.data.getRowKeys();\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.util.List getRowKeys() { \\t\\treturn this.data.getRowKeys();} \\t\\/**\\n@@ -262,6 +276 @@\\n-\\t *\\/\\n-\\tpublic int getRowCount() {\\n-\\t\\treturn this.data.getRowCount();\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getRowCount() { \\t\\treturn this.data.getRowCount();} \\t\\/**\\n@@ -271,6 +280 @@\\n-\\t *\\/\\n-\\tpublic int getColumnCount() {\\n-\\t\\treturn this.data.getColumnCount();\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getColumnCount() { \\t\\treturn this.data.getColumnCount();} \\t\\/**\\n@@ -287,3 +291 @@\\n-\\t *\\/ \\tpublic void add(double mean, double standardDeviation, java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tadd(new java.lang.Double(mean), new java.lang.Double(standardDeviation), rowKey, columnKey);}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic void add(double mean, double standardDeviation, java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tadd(new java.lang.Double(mean), new java.lang.Double(standardDeviation), rowKey, columnKey);} \\t\\/**\\n@@ -300,3 +302 @@\\n-\\t *\\/ \\tpublic void add(java.lang.Number mean, java.lang.Number standardDeviation, java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\torg.jfree.data.statistics.MeanAndStandardDeviation item \u003d new org.jfree.data.statistics.MeanAndStandardDeviation(mean, standardDeviation);\\n-\\t\\tthis.data.addObject(item, rowKey, columnKey);\\n-\\t\\tdouble m \u003d 0.0;\\n+\\t *\\/ \\tpublic void add(java.lang.Number mean, java.lang.Number standardDeviation, java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\torg.jfree.data.statistics.MeanAndStandardDeviation item \u003d new org.jfree.data.statistics.MeanAndStandardDeviation(mean, standardDeviation); \\t\\tthis.data.addObject(item, rowKey, columnKey); \\t\\tdouble m \u003d 0.0;\\n\\n"
}