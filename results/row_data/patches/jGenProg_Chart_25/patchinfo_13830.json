{
  "VARIANT_ID": "13830",
  "VALIDATION": "|true|0|3243|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.jfree.data.KeyedObjects2D",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/source\\/org\\/jfree\\/data\\/KeyedObjects2D.java",
      "INGREDIENT_SCOPE": "PACKAGE",
      "SUSPICIOUNESS": "0.516",
      "INGREDIENT_PARENT": "if (this.equals(org.jfree.data.DomainOrder.NONE)) {\\n\\treturn org.jfree.data.DomainOrder.NONE;\\n}",
      "PATCH_HUNK_TYPE": "CtIfImpl|CtBlockImpl",
      "ORIGINAL_CODE": "if (columnKey !\u003d null) {\\n\\tresult \u003d rowData.getObject(columnKey);\\n}",
      "BUGGY_CODE_TYPE": "CtIfImpl|CtBlockImpl",
      "OPERATOR": "ReplaceOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/.\\/output_astor\\/AstorMain-Chart25\\/\\/src\\/\\/variant-13830\\/org\\/jfree\\/data\\/KeyedObjects2D.java",
      "LINE": "112",
      "MP_RANKING": "176",
      "PATCH_HUNK_CODE": "if (this.equals(org.jfree.data.DomainOrder.NONE)) {\\n\\treturn org.jfree.data.DomainOrder.NONE;\\n}"
    }
  ],
  "TIME": "5318",
  "GENERATION": "6915",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/.\\/output_astor\\/AstorMain-Chart25\\/\\/src\\/\\/variant-13830",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/source\\/org\\/jfree\\/data\\/KeyedObjects2Djava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_25\\/source\\/org\\/jfree\\/data\\/KeyedObjects2Djava\\n@@ -112,5 +111,0 @@\\n-\\t\\t\\tif (columnKey !\u003d null) {\\n-\\t\\t\\t\\tresult \u003d rowData.getObject(columnKey);\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn result;\\n@@ -118 +112,0 @@\\n-\\t}\\n@@ -120 +114,23 @@\\n-\\t\\/**\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\tif (this.equals(org.jfree.data.DomainOrder.NONE)) {\\n+\\t\\t\\t\\treturn org.jfree.data.DomainOrder.NONE;\\n+\\t\\t\\t}} \\t\\treturn result;} \\t\\/**\\n@@ -126,6 +142 @@\\n-\\t *\\/\\n-\\tpublic java.lang.Comparable getRowKey(int row) {\\n-\\t\\treturn ((java.lang.Comparable) (this.rowKeys.get(row)));\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.lang.Comparable getRowKey(int row) { \\t\\treturn ((java.lang.Comparable) (this.rowKeys.get(row)));} \\t\\/**\\n@@ -137,6 +148 @@\\n-\\t *\\/\\n-\\tpublic int getRowIndex(java.lang.Comparable key) {\\n-\\t\\treturn this.rowKeys.indexOf(key);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getRowIndex(java.lang.Comparable key) { \\t\\treturn this.rowKeys.indexOf(key);} \\t\\/**\\n@@ -146,6 +152 @@\\n-\\t *\\/\\n-\\tpublic java.util.List getRowKeys() {\\n-\\t\\treturn java.util.Collections.unmodifiableList(this.rowKeys);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.util.List getRowKeys() { \\t\\treturn java.util.Collections.unmodifiableList(this.rowKeys);} \\t\\/**\\n@@ -157,2 +158 @@\\n-\\t *\\/\\n-\\tpublic java.lang.Comparable getColumnKey(int column) {\\n+\\t *\\/ \\tpublic java.lang.Comparable getColumnKey(int column) {\\n\\n"
}