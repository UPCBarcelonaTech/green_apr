{
  "VARIANT_ID": "380",
  "VALIDATION": "|true|0|2103|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java",
      "INGREDIENT_SCOPE": "LOCAL",
      "SUSPICIOUNESS": "0.5",
      "INGREDIENT_PARENT": "tau \u003d s",
      "PATCH_HUNK_TYPE": "CtAssignmentImpl|CtBlockImpl",
      "ORIGINAL_CODE": "a2 \u003d 0.0",
      "BUGGY_CODE_TYPE": "CtAssignmentImpl|CtBlockImpl",
      "OPERATOR": "ReplaceOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/.\\/output_astor\\/AstorMain-Math81\\/\\/src\\/\\/variant-380\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java",
      "LINE": "1480",
      "MP_RANKING": "15",
      "PATCH_HUNK_CODE": "tau \u003d s"
    }
  ],
  "TIME": "295",
  "GENERATION": "190",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/.\\/output_astor\\/AstorMain-Math81\\/\\/src\\/\\/variant-380",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpljava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpljava\\n@@ -1480,44 +1479,0 @@\\n-\\t\\t\\t\\t\\t\\t\\ta2 \u003d 0.0;\\n-\\t\\t\\t\\t\\t\\t\\tif (work[nn - 5] \u003e work[nn - 7]) {\\n-\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tb2 \u003d work[nn - 5] \\/ work[nn - 7];\\n-\\t\\t\\t\\t\\t\\t\\tnp \u003d nn - 9;\\n-\\t\\t\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\t\\t\\tnp \u003d nn - (2 * pingPong);\\n-\\t\\t\\t\\t\\t\\t\\tb2 \u003d work[np - 2];\\n-\\t\\t\\t\\t\\t\\t\\tgam \u003d dN1;\\n-\\t\\t\\t\\t\\t\\t\\tif (work[np - 4] \u003e work[np - 2]) {\\n-\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\ta2 \u003d work[np - 4] \\/ work[np - 2];\\n-\\t\\t\\t\\t\\t\\t\\tif (work[nn - 9] \u003e work[nn - 11]) {\\n-\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tb2 \u003d work[nn - 9] \\/ work[nn - 11];\\n-\\t\\t\\t\\t\\t\\t\\tnp \u003d nn - 13;\\n-\\t\\t\\t\\t\\t\\t}\\n-\\n-\\t\\t\\t\\t\\t\\t\\/\\/ approximate contribution to norm squared from i \u003c nn-1.\\n-\\t\\t\\t\\t\\t\\ta2 \u003d a2 + b2;\\n-\\t\\t\\t\\t\\t\\tfor (int i4 \u003d np; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) {\\n-\\t\\t\\t\\t\\t\\t\\tif (b2 \u003d\u003d 0.0) {\\n-\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tb1 \u003d b2;\\n-\\t\\t\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) {\\n-\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tb2 \u003d b2 * (work[i4] \\/ work[i4 - 2]);\\n-\\t\\t\\t\\t\\t\\t\\ta2 \u003d a2 + b2;\\n-\\t\\t\\t\\t\\t\\t\\tif (((100 * java.lang.Math.max(b2, b1)) \u003c a2) || (cnst1 \u003c a2)) {\\n-\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\ta2 \u003d cnst3 * a2;\\n-\\n-\\t\\t\\t\\t\\t\\t\\/\\/ rayleigh quotient residual bound.\\n-\\t\\t\\t\\t\\t\\tif (a2 \u003c cnst1) {\\n-\\t\\t\\t\\t\\t\\t\\ts \u003d (gam * (1 - java.lang.Math.sqrt(a2))) \\/ (1 + a2);\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\ttau \u003d s;\\n@@ -1524,0 +1481,44 @@\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\t\\ttau \u003d s; \\t\\t\\t\\t\\t\\t\\tif (work[nn - 5] \u003e work[nn - 7]) { \\t\\t\\t\\t\\t\\t\\t\\treturn;} \\t\\t\\t\\t\\t\\t\\tb2 \u003d work[nn - 5] \\/ work[nn - 7]; \\t\\t\\t\\t\\t\\t\\tnp \u003d nn - 9;} else { \\t\\t\\t\\t\\t\\t\\tnp \u003d nn - (2 * pingPong); \\t\\t\\t\\t\\t\\t\\tb2 \u003d work[np - 2]; \\t\\t\\t\\t\\t\\t\\tgam \u003d dN1; \\t\\t\\t\\t\\t\\t\\tif (work[np - 4] \u003e work[np - 2]) { \\t\\t\\t\\t\\t\\t\\t\\treturn;} \\t\\t\\t\\t\\t\\t\\ta2 \u003d work[np - 4] \\/ work[np - 2]; \\t\\t\\t\\t\\t\\t\\tif (work[nn - 9] \u003e work[nn - 11]) { \\t\\t\\t\\t\\t\\t\\t\\treturn;} \\t\\t\\t\\t\\t\\t\\tb2 \u003d work[nn - 9] \\/ work[nn - 11]; \\t\\t\\t\\t\\t\\t\\tnp \u003d nn - 13;} \\t\\t\\t\\t\\t\\t\\/\\/ approximate contribution to norm squared from i \u003c nn-1. \\t\\t\\t\\t\\t\\ta2 \u003d a2 + b2; \\t\\t\\t\\t\\t\\tfor (int i4 \u003d np; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) { \\t\\t\\t\\t\\t\\t\\tif (b2 \u003d\u003d 0.0) { \\t\\t\\t\\t\\t\\t\\t\\tbreak;} \\t\\t\\t\\t\\t\\t\\tb1 \u003d b2; \\t\\t\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) { \\t\\t\\t\\t\\t\\t\\t\\treturn;} \\t\\t\\t\\t\\t\\t\\tb2 \u003d b2 * (work[i4] \\/ work[i4 - 2]); \\t\\t\\t\\t\\t\\t\\ta2 \u003d a2 + b2; \\t\\t\\t\\t\\t\\t\\tif (((100 * java.lang.Math.max(b2, b1)) \u003c a2) || (cnst1 \u003c a2)) { \\t\\t\\t\\t\\t\\t\\t\\tbreak;}} \\t\\t\\t\\t\\t\\ta2 \u003d cnst3 * a2; \\t\\t\\t\\t\\t\\t\\/\\/ rayleigh quotient residual bound.\\n+\\t\\t\\t\\t\\t\\tif (a2 \u003c cnst1) { \\t\\t\\t\\t\\t\\t\\ts \u003d (gam * (1 - java.lang.Math.sqrt(a2))) \\/ (1 + a2);} \\t\\t\\t\\t\\t\\ttau \u003d s;\\n\\n"
}