{
  "VARIANT_ID": "5626",
  "VALIDATION": "|true|0|2103|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java",
      "INGREDIENT_SCOPE": "LOCAL",
      "SUSPICIOUNESS": "0.577",
      "INGREDIENT_PARENT": "tType \u003d -8",
      "PATCH_HUNK_TYPE": "CtAssignmentImpl|CtBlockImpl",
      "ORIGINAL_CODE": "b2 \u003d work[nn - 13] \\/ work[nn - 15]",
      "BUGGY_CODE_TYPE": "CtAssignmentImpl|CtBlockImpl",
      "OPERATOR": "ReplaceOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/.\\/output_astor\\/AstorMain-Math81\\/\\/src\\/\\/variant-5626\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java",
      "LINE": "1544",
      "MP_RANKING": "10",
      "PATCH_HUNK_CODE": "tType \u003d -8"
    }
  ],
  "TIME": "10478",
  "GENERATION": "2813",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/.\\/output_astor\\/AstorMain-Math81\\/\\/src\\/\\/variant-5626",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpljava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_81\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpljava\\n@@ -1544,75 +1544,75 @@\\n-\\t\\t\\t\\t\\t\\tb2 \u003d work[nn - 13] \\/ work[nn - 15];\\n-\\t\\t\\t\\t\\t\\ta2 \u003d a2 + b2;\\n-\\t\\t\\t\\t\\t\\tfor (int i4 \u003d nn - 17; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) {\\n-\\t\\t\\t\\t\\t\\t\\tif (b2 \u003d\u003d 0.0) {\\n-\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tb1 \u003d b2;\\n-\\t\\t\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) {\\n-\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tb2 \u003d b2 * (work[i4] \\/ work[i4 - 2]);\\n-\\t\\t\\t\\t\\t\\t\\ta2 \u003d a2 + b2;\\n-\\t\\t\\t\\t\\t\\t\\tif (((100 * java.lang.Math.max(b2, b1)) \u003c a2) || (cnst1 \u003c a2)) {\\n-\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\ta2 \u003d cnst3 * a2;\\n-\\t\\t\\t\\t\\t}\\n-\\n-\\t\\t\\t\\t\\tif (a2 \u003c cnst1) {\\n-\\t\\t\\t\\t\\t\\ttau \u003d (gam * (1 - java.lang.Math.sqrt(a2))) \\/ (1 + a2);\\n-\\t\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\t\\ttau \u003d s;\\n-\\t\\t\\t\\t\\t}\\n-\\n-\\t\\t\\t\\t} else {\\n-\\n-\\t\\t\\t\\t\\t\\/\\/ case 6, no information to guide us.\\n-\\t\\t\\t\\t\\tif (tType \u003d\u003d (-6)) {\\n-\\t\\t\\t\\t\\t\\tg +\u003d 0.333 * (1 - g);\\n-\\t\\t\\t\\t\\t} else if (tType \u003d\u003d (-18)) {\\n-\\t\\t\\t\\t\\t\\tg \u003d 0.25 * 0.333;\\n-\\t\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\t\\tg \u003d 0.25;\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\ttau \u003d g * dMin;\\n-\\t\\t\\t\\t\\ttType \u003d -6;\\n-\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t\\tbreak;\\n-\\n-\\t\\t\\tcase 1 : \\t\\t\\t\\t\\/\\/ one eigenvalue just deflated. use dMin1, dN1 for dMin and dN.\\n-\\t\\t\\t\\tif ((dMin1 \u003d\u003d dN1) \u0026\u0026 (dMin2 \u003d\u003d dN2)) {\\n-\\n-\\t\\t\\t\\t\\t\\/\\/ cases 7 and 8.\\n-\\t\\t\\t\\t\\ttType \u003d -7;\\n-\\t\\t\\t\\t\\tdouble s \u003d 0.333 * dMin1;\\n-\\t\\t\\t\\t\\tif (work[nn - 5] \u003e work[nn - 7]) {\\n-\\t\\t\\t\\t\\t\\treturn;\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\tdouble b1 \u003d work[nn - 5] \\/ work[nn - 7];\\n-\\t\\t\\t\\t\\tdouble b2 \u003d b1;\\n-\\t\\t\\t\\t\\tif (b2 !\u003d 0.0) {\\n-\\t\\t\\t\\t\\t\\tfor (int i4 \u003d ((4 * end) - 10) + pingPong; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) {\\n-\\t\\t\\t\\t\\t\\t\\tfinal double oldB1 \u003d b1;\\n-\\t\\t\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) {\\n-\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tb1 \u003d b1 * (work[i4] \\/ work[i4 - 2]);\\n-\\t\\t\\t\\t\\t\\t\\tb2 \u003d b2 + b1;\\n-\\t\\t\\t\\t\\t\\t\\tif ((100 * java.lang.Math.max(b1, oldB1)) \u003c b2) {\\n-\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\tb2 \u003d java.lang.Math.sqrt(cnst3 * b2);\\n-\\t\\t\\t\\t\\tfinal double a2 \u003d dMin1 \\/ (1 + (b2 * b2));\\n-\\t\\t\\t\\t\\tfinal double gap2 \u003d (0.5 * dMin2) - a2;\\n-\\t\\t\\t\\t\\tif ((gap2 \u003e 0.0) \u0026\u0026 (gap2 \u003e (b2 * a2))) {\\n-\\t\\t\\t\\t\\t\\ttau \u003d java.lang.Math.max(s, a2 * (1 - (((cnst2 * a2) * (b2 \\/ gap2)) * b2)));\\n-\\t\\t\\t\\t\\t} else {\\n-\\t\\t\\t\\t\\t\\ttau \u003d java.lang.Math.max(s, a2 * (1 - (cnst2 * b2)));\\n-\\t\\t\\t\\t\\t\\ttType \u003d -8;\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t} else {\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\ttType \u003d -8; \\t\\t\\t\\t\\t\\ta2 \u003d a2 + b2; \\t\\t\\t\\t\\t\\tfor (int i4 \u003d nn - 17; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) { \\t\\t\\t\\t\\t\\t\\tif (b2 \u003d\u003d 0.0) { \\t\\t\\t\\t\\t\\t\\t\\tbreak;} \\t\\t\\t\\t\\t\\t\\tb1 \u003d b2; \\t\\t\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) { \\t\\t\\t\\t\\t\\t\\t\\treturn;} \\t\\t\\t\\t\\t\\t\\tb2 \u003d b2 * (work[i4] \\/ work[i4 - 2]); \\t\\t\\t\\t\\t\\t\\ta2 \u003d a2 + b2; \\t\\t\\t\\t\\t\\t\\tif (((100 * java.lang.Math.max(b2, b1)) \u003c a2) || (cnst1 \u003c a2)) { \\t\\t\\t\\t\\t\\t\\t\\tbreak;}} \\t\\t\\t\\t\\t\\ta2 \u003d cnst3 * a2;} \\t\\t\\t\\t\\tif (a2 \u003c cnst1) { \\t\\t\\t\\t\\t\\ttau \u003d (gam * (1 - java.lang.Math.sqrt(a2))) \\/ (1 + a2);} else { \\t\\t\\t\\t\\t\\ttau \u003d s;}} else { \\t\\t\\t\\t\\t\\/\\/ case 6, no information to guide us.\\n+\\t\\t\\t\\t\\tif (tType \u003d\u003d (-6)) { \\t\\t\\t\\t\\t\\tg +\u003d 0.333 * (1 - g);} else if (tType \u003d\u003d (-18)) { \\t\\t\\t\\t\\t\\tg \u003d 0.25 * 0.333;} else { \\t\\t\\t\\t\\t\\tg \u003d 0.25;} \\t\\t\\t\\t\\ttau \u003d g * dMin; \\t\\t\\t\\t\\ttType \u003d -6;} \\t\\t\\t\\tbreak; \\t\\t\\tcase 1 : \\t\\t\\t\\t\\/\\/ one eigenvalue just deflated. use dMin1, dN1 for dMin and dN.\\n+\\t\\t\\t\\tif ((dMin1 \u003d\u003d dN1) \u0026\u0026 (dMin2 \u003d\u003d dN2)) { \\t\\t\\t\\t\\t\\/\\/ cases 7 and 8. \\t\\t\\t\\t\\ttType \u003d -7; \\t\\t\\t\\t\\tdouble s \u003d 0.333 * dMin1; \\t\\t\\t\\t\\tif (work[nn - 5] \u003e work[nn - 7]) { \\t\\t\\t\\t\\t\\treturn;} \\t\\t\\t\\t\\tdouble b1 \u003d work[nn - 5] \\/ work[nn - 7]; \\t\\t\\t\\t\\tdouble b2 \u003d b1; \\t\\t\\t\\t\\tif (b2 !\u003d 0.0) { \\t\\t\\t\\t\\t\\tfor (int i4 \u003d ((4 * end) - 10) + pingPong; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) { \\t\\t\\t\\t\\t\\t\\tfinal double oldB1 \u003d b1; \\t\\t\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) { \\t\\t\\t\\t\\t\\t\\t\\treturn;} \\t\\t\\t\\t\\t\\t\\tb1 \u003d b1 * (work[i4] \\/ work[i4 - 2]); \\t\\t\\t\\t\\t\\t\\tb2 \u003d b2 + b1; \\t\\t\\t\\t\\t\\t\\tif ((100 * java.lang.Math.max(b1, oldB1)) \u003c b2) { \\t\\t\\t\\t\\t\\t\\t\\tbreak;}}} \\t\\t\\t\\t\\tb2 \u003d java.lang.Math.sqrt(cnst3 * b2); \\t\\t\\t\\t\\tfinal double a2 \u003d dMin1 \\/ (1 + (b2 * b2)); \\t\\t\\t\\t\\tfinal double gap2 \u003d (0.5 * dMin2) - a2; \\t\\t\\t\\t\\tif ((gap2 \u003e 0.0) \u0026\u0026 (gap2 \u003e (b2 * a2))) { \\t\\t\\t\\t\\t\\ttau \u003d java.lang.Math.max(s, a2 * (1 - (((cnst2 * a2) * (b2 \\/ gap2)) * b2)));} else { \\t\\t\\t\\t\\t\\ttau \u003d java.lang.Math.max(s, a2 * (1 - (cnst2 * b2))); \\t\\t\\t\\t\\t\\ttType \u003d -8;}} else {\\n\\n"
}