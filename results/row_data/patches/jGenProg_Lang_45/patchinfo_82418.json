{
  "VARIANT_ID": "82418",
  "VALIDATION": "|true|0|1877|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.apache.commons.lang.WordUtils",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Lang_45\\/src\\/java\\/org\\/apache\\/commons\\/lang\\/WordUtils.java",
      "INGREDIENT_SCOPE": "LOCAL",
      "SUSPICIOUNESS": "1",
      "INGREDIENT_PARENT": "\\/\\/ if the lower value is greater than the length of the string,\\n\\/\\/ set to the length of the string\\n\\/\\/ if the upper value is -1 (i.e. no limit) or is greater\\n\\/\\/ than the length of the string, set to the length of the string\\nif ((upper \u003d\u003d (-1)) || (upper \u003e str.length())) {\\n\\tupper \u003d str.length();\\n}",
      "PATCH_HUNK_TYPE": "CtIfImpl|CtBlockImpl",
      "ORIGINAL_CODE": "if (index \u003d\u003d (-1)) {\\n\\tresult.append(str.substring(0, upper));\\n\\t\\/\\/ only if abbreviation has occured do we append the appendToEnd value\\n\\tif (upper !\u003d str.length()) {\\n\\t\\tresult.append(org.apache.commons.lang.StringUtils.defaultString(appendToEnd));\\n\\t}\\n} else if (index \u003e upper) {\\n\\tresult.append(str.substring(0, upper));\\n\\tresult.append(org.apache.commons.lang.StringUtils.defaultString(appendToEnd));\\n} else {\\n\\tresult.append(str.substring(0, index));\\n\\tresult.append(org.apache.commons.lang.StringUtils.defaultString(appendToEnd));\\n}",
      "BUGGY_CODE_TYPE": "CtIfImpl|CtBlockImpl",
      "OPERATOR": "InsertBeforeOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Lang_45\\/.\\/output_astor\\/AstorMain-Lang45\\/\\/src\\/\\/variant-82418\\/org\\/apache\\/commons\\/lang\\/WordUtils.java",
      "LINE": "628",
      "MP_RANKING": "10",
      "PATCH_HUNK_CODE": "\\/\\/ if the lower value is greater than the length of the string,\\n\\/\\/ set to the length of the string\\n\\/\\/ if the upper value is -1 (i.e. no limit) or is greater\\n\\/\\/ than the length of the string, set to the length of the string\\nif ((upper \u003d\u003d (-1)) || (upper \u003e str.length())) {\\n\\tupper \u003d str.length();\\n}"
    }
  ],
  "TIME": "10024",
  "GENERATION": "41209",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Lang_45\\/.\\/output_astor\\/AstorMain-Lang45\\/\\/src\\/\\/variant-82418",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Lang_45\\/src\\/java\\/org\\/apache\\/commons\\/lang\\/WordUtilsjava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Lang_45\\/src\\/java\\/org\\/apache\\/commons\\/lang\\/WordUtilsjava\\n@@ -627,2 +627,2 @@\\n-\\t\\tint index \u003d org.apache.commons.lang.StringUtils.indexOf(str, \\\" \\\", lower);\\n-\\t\\tif (index \u003d\u003d (-1)) {\\n+\\t\\tint index \u003d org.apache.commons.lang.StringUtils.indexOf(str, \\\" \\\", lower); \\t\\t\\/\\/ if the lower value is greater than the length of the string, \\t\\t\\/\\/ set to the length of the string \\t\\t\\/\\/ if the upper value is -1 (i.e. no limit) or is greater \\t\\t\\/\\/ than the length of the string, set to the length of the string\\n+\\t\\tif ((upper \u003d\u003d (-1)) || (upper \u003e str.length())) { \\t\\t\\tupper \u003d str.length();} \\t\\tif (index \u003d\u003d (-1)) {\\n\\n"
}