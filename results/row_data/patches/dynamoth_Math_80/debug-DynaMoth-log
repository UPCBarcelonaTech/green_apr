Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors
.
Time: 64.993

OK (1 test)

org.apache.commons.math.linear.EigenSolverTest#testInvertible
.
Time: 0.005

OK (1 test)

org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal
.
Time: 0.001

OK (1 test)

org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix
.
Time: 0.078

OK (1 test)

org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit
.
Time: 0

OK (1 test)

org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt
.
Time: 0

OK (1 test)

org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal
.
Time: 0.002

OK (1 test)

org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx02
.E
Time: 0.004
There was 1 failure:
1) testMathpbx02(org.apache.commons.math.linear.EigenDecompositionImplTest)
junit.framework.AssertionFailedError: expected:<16828.208208485466> but was:<20654.74511575945>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:120)
	at junit.framework.Assert.assertEquals(Assert.java:129)
	at junit.framework.TestCase.assertEquals(TestCase.java:288)
	at org.apache.commons.math.linear.EigenDecompositionImplTest.testMathpbx02(EigenDecompositionImplTest.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at fr.inria.lille.repair.MethodTestRunner.runTest(MethodTestRunner.java:44)
	at fr.inria.lille.repair.MethodTestRunner.access$0(MethodTestRunner.java:37)
	at fr.inria.lille.repair.MethodTestRunner$1.call(MethodTestRunner.java:20)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

FAILURES!!!
Tests run: 1,  Failures: 1

org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows
.
Time: 0.009

OK (1 test)

org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions
.
Time: 0

OK (1 test)

org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard
.
Time: 0.005

OK (1 test)

org.apache.commons.math.linear.EigenDecompositionImplTest#testMath308
.
Time: 0

OK (1 test)

org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns
.
Time: 0

OK (1 test)

org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors
.
Time: 0.05

OK (1 test)

org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues
.
Time: 0

OK (1 test)

org.apache.commons.math.linear.EigenSolverTest#testSolve
.
Time: 0

OK (1 test)

org.apache.commons.math.linear.EigenSolverTest#testNonInvertible
.
Time: 0

OK (1 test)

