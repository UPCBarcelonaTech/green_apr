{
  "VARIANT_ID": "3106",
  "VALIDATION": "|true|0|12047|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.joda.time.field.ZeroIsMaxDateTimeField",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Time_4\\/src\\/main\\/java\\/org\\/joda\\/time\\/field\\/ZeroIsMaxDateTimeField.java",
      "INGREDIENT_SCOPE": "PACKAGE",
      "SUSPICIOUNESS": "0.866",
      "INGREDIENT_PARENT": "return getMaximumValue(instant)",
      "PATCH_HUNK_TYPE": "CtReturnImpl|CtBlockImpl",
      "ORIGINAL_CODE": "return 1",
      "BUGGY_CODE_TYPE": "CtReturnImpl|CtBlockImpl",
      "OPERATOR": "ReplaceOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Time_4\\/.\\/output_astor\\/AstorMain-Time4\\/\\/src\\/\\/variant-3106\\/org\\/joda\\/time\\/field\\/ZeroIsMaxDateTimeField.java",
      "LINE": "138",
      "MP_RANKING": "1",
      "PATCH_HUNK_CODE": "return getMaximumValue(instant)"
    }
  ],
  "TIME": "604",
  "GENERATION": "1553",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Time_4\\/.\\/output_astor\\/AstorMain-Time4\\/\\/src\\/\\/variant-3106",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Time_4\\/src\\/main\\/java\\/org\\/joda\\/time\\/field\\/ZeroIsMaxDateTimeFieldjava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Time_4\\/src\\/main\\/java\\/org\\/joda\\/time\\/field\\/ZeroIsMaxDateTimeFieldjava\\n@@ -138,2 +137,0 @@\\n-\\t\\treturn 1;\\n-\\t}\\n@@ -141 +139,680 @@\\n-\\t\\/**\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\treturn getMaximumValue(instant);} \\t\\/**\\n@@ -146,6 +823 @@\\n-\\t *\\/\\n-\\tpublic int getMaximumValue() {\\n-\\t\\treturn getWrappedField().getMaximumValue() + 1;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getMaximumValue() { \\t\\treturn getWrappedField().getMaximumValue() + 1;} \\t\\/**\\n@@ -156,6 +828 @@\\n-\\t *\\/\\n-\\tpublic int getMaximumValue(long instant) {\\n-\\t\\treturn getWrappedField().getMaximumValue(instant) + 1;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getMaximumValue(long instant) { \\t\\treturn getWrappedField().getMaximumValue(instant) + 1;} \\t\\/**\\n@@ -166,6 +833 @@\\n-\\t *\\/\\n-\\tpublic int getMaximumValue(org.joda.time.ReadablePartial instant) {\\n-\\t\\treturn getWrappedField().getMaximumValue(instant) + 1;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getMaximumValue(org.joda.time.ReadablePartial instant) { \\t\\treturn getWrappedField().getMaximumValue(instant) + 1;} \\t\\/**\\n@@ -176,28 +838 @@\\n-\\t *\\/\\n-\\tpublic int getMaximumValue(org.joda.time.ReadablePartial instant, int[] values) {\\n-\\t\\treturn getWrappedField().getMaximumValue(instant, values) + 1;\\n-\\t}\\n-\\n-\\tpublic long roundFloor(long instant) {\\n-\\t\\treturn getWrappedField().roundFloor(instant);\\n-\\t}\\n-\\n-\\tpublic long roundCeiling(long instant) {\\n-\\t\\treturn getWrappedField().roundCeiling(instant);\\n-\\t}\\n-\\n-\\tpublic long roundHalfFloor(long instant) {\\n-\\t\\treturn getWrappedField().roundHalfFloor(instant);\\n-\\t}\\n-\\n-\\tpublic long roundHalfCeiling(long instant) {\\n-\\t\\treturn getWrappedField().roundHalfCeiling(instant);\\n-\\t}\\n-\\n-\\tpublic long roundHalfEven(long instant) {\\n-\\t\\treturn getWrappedField().roundHalfEven(instant);\\n-\\t}\\n-\\n-\\tpublic long remainder(long instant) {\\n-\\t\\treturn getWrappedField().remainder(instant);\\n-\\t}}\\n\\\\ No newline at end of file\\n+\\t *\\/ \\tpublic int getMaximumValue(org.joda.time.ReadablePartial instant, int[] values) { \\t\\treturn getWrappedField().getMaximumValue(instant, values) + 1;} \\tpublic long roundFloor(long instant) { \\t\\treturn getWrappedField().roundFloor(instant);} \\tpublic long roundCeiling(long instant) { \\t\\treturn getWrappedField().roundCeiling(instant);} \\tpublic long roundHalfFloor(long instant) { \\t\\treturn getWrappedField().roundHalfFloor(instant);} \\tpublic long roundHalfCeiling(long instant) { \\t\\treturn getWrappedField().roundHalfCeiling(instant);} \\tpublic long roundHalfEven(long instant) { \\t\\treturn getWrappedField().roundHalfEven(instant);} \\tpublic long remainder(long instant) { \\t\\treturn getWrappedField().remainder(instant);}}\\n\\\\ No newline at end of file\\n\\n"
}