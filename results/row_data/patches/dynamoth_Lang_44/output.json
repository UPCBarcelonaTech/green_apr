{"nbStatement":27,"executionTime":806479,"date":"Thu Aug 18 16:30:11 EDT 2022","patch":[{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,12 +192,14 @@\n                 case 'L' :\n-                    if (dec == null\n+                    if (org.apache.commons.lang.NumberUtils.isDigits((java.lang.String) numeric)) {\n+                        if (dec == null\n                         && exp == null\n                         && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n-                        try {\n-                            return createLong(numeric);\n-                        } catch (NumberFormatException nfe) {\n-                            //Too big for a long\n+                            try {\n+                                return createLong(numeric);\n+                            } catch (NumberFormatException nfe) {\n+                                //Too big for a long\n+                            }\n+                            return createBigInteger(numeric);\n+                            \n                         }\n-                        return createBigInteger(numeric);\n-\n                     }\n","patchType":"PRECONDITION","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,12 +192,14 @@\n                 case 'L' :\n-                    if (dec == null\n+                    if (org.apache.commons.lang.NumberUtils.createBigDecimal((java.lang.String) numeric).intValue() == org.apache.commons.lang.NumberUtils.createBigInteger((java.lang.String) numeric).intValue()) {\n+                        if (dec == null\n                         && exp == null\n                         && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n-                        try {\n-                            return createLong(numeric);\n-                        } catch (NumberFormatException nfe) {\n-                            //Too big for a long\n+                            try {\n+                                return createLong(numeric);\n+                            } catch (NumberFormatException nfe) {\n+                                //Too big for a long\n+                            }\n+                            return createBigInteger(numeric);\n+                            \n                         }\n-                        return createBigInteger(numeric);\n-\n                     }\n","patchType":"PRECONDITION","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,12 +192,14 @@\n                 case 'L' :\n-                    if (dec == null\n+                    if (org.apache.commons.lang.NumberUtils.createBigInteger((java.lang.String) numeric).intValue() == org.apache.commons.lang.NumberUtils.createBigDecimal((java.lang.String) numeric).intValue()) {\n+                        if (dec == null\n                         && exp == null\n                         && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n-                        try {\n-                            return createLong(numeric);\n-                        } catch (NumberFormatException nfe) {\n-                            //Too big for a long\n+                            try {\n+                                return createLong(numeric);\n+                            } catch (NumberFormatException nfe) {\n+                                //Too big for a long\n+                            }\n+                            return createBigInteger(numeric);\n+                            \n                         }\n-                        return createBigInteger(numeric);\n-\n                     }\n","patchType":"PRECONDITION","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (exp == dec) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (decPos == expPos) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (allZeros == org.apache.commons.lang.NumberUtils.isDigits((java.lang.String) mant)) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (exp == null) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (expPos == decPos) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (dec == exp) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (null == exp) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (org.apache.commons.lang.NumberUtils.isDigits((java.lang.String) val) == org.apache.commons.lang.NumberUtils.isDigits((java.lang.String) mant)) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (org.apache.commons.lang.NumberUtils.isDigits((java.lang.String) mant) == allZeros) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}},{"patch":"--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n@@ -192,5 +192,3 @@\n                 case 'L' :\n-                    if (dec == null\n-                        && exp == null\n-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n+                    if (org.apache.commons.lang.NumberUtils.isDigits((java.lang.String) mant) == org.apache.commons.lang.NumberUtils.isDigits((java.lang.String) val)) {\n                         try {\n@@ -201,3 +199,3 @@\n                         return createBigInteger(numeric);\n-\n+                        \n                     }\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":3,"patchLocation":{"line":193,"class":"org.apache.commons.lang.NumberUtils"}}],"nb_methods":1887,"nb_classes":85,"nbAngelicValue":6}