--- a/source/org/jfree/chart/plot/CategoryPlot.java
+++ b/source/org/jfree/chart/plot/CategoryPlot.java
@@ -2862,37 +2862,39 @@
             int passCount = renderer.getPassCount();
-            for (int pass = 0; pass < passCount; pass++) {            
-                if (this.columnRenderingOrder == SortOrder.ASCENDING) {
-                    for (int column = 0; column < columnCount; column++) {
-                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {
-                            for (int row = 0; row < rowCount; row++) {
-                                renderer.drawItem(g2, state, dataArea, this, 
-                                        domainAxis, rangeAxis, currentDataset, 
-                                        row, column, pass);
+            if (false) {
+                for (int pass = 0; pass < passCount; pass++) {
+                    if (this.columnRenderingOrder == SortOrder.ASCENDING) {
+                        for (int column = 0; column < columnCount; column++) {
+                            if (this.rowRenderingOrder == SortOrder.ASCENDING) {
+                                for (int row = 0; row < rowCount; row++) {
+                                    renderer.drawItem(g2, state, dataArea, this,
+                                    domainAxis, rangeAxis, currentDataset,
+                                    row, column, pass);
+                                }
                             }
+                            else {
+                                for (int row = rowCount - 1; row >= 0; row--) {
+                                    renderer.drawItem(g2, state, dataArea, this,
+                                    domainAxis, rangeAxis, currentDataset,
+                                    row, column, pass);
+                                }
+                            }
                         }
-                        else {
-                            for (int row = rowCount - 1; row >= 0; row--) {
-                                renderer.drawItem(g2, state, dataArea, this, 
-                                        domainAxis, rangeAxis, currentDataset, 
-                                        row, column, pass);
-                            }                        
-                        }
                     }
-                }
-                else {
-                    for (int column = columnCount - 1; column >= 0; column--) {
-                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {
-                            for (int row = 0; row < rowCount; row++) {
-                                renderer.drawItem(g2, state, dataArea, this, 
-                                        domainAxis, rangeAxis, currentDataset, 
-                                        row, column, pass);
+                    else {
+                        for (int column = columnCount - 1; column >= 0; column--) {
+                            if (this.rowRenderingOrder == SortOrder.ASCENDING) {
+                                for (int row = 0; row < rowCount; row++) {
+                                    renderer.drawItem(g2, state, dataArea, this,
+                                    domainAxis, rangeAxis, currentDataset,
+                                    row, column, pass);
+                                }
                             }
+                            else {
+                                for (int row = rowCount - 1; row >= 0; row--) {
+                                    renderer.drawItem(g2, state, dataArea, this,
+                                    domainAxis, rangeAxis, currentDataset,
+                                    row, column, pass);
+                                }
+                            }
                         }
-                        else {
-                            for (int row = rowCount - 1; row >= 0; row--) {
-                                renderer.drawItem(g2, state, dataArea, this, 
-                                        domainAxis, rangeAxis, currentDataset, 
-                                        row, column, pass);
-                            }                        
-                        }
                     }
