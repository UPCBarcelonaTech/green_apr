{
  "VARIANT_ID": "20314",
  "VALIDATION": "|true|0|2142|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.apache.commons.math.analysis.solvers.BrentSolver",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_73\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/analysis\\/solvers\\/BrentSolver.java",
      "INGREDIENT_SCOPE": "PACKAGE",
      "SUSPICIOUNESS": "0.707",
      "INGREDIENT_PARENT": "verifyBracketing(min, max, f)",
      "PATCH_HUNK_TYPE": "CtInvocationImpl|CtBlockImpl",
      "ORIGINAL_CODE": "\\/\\/ return the second endpoint if it is good enough\\ndouble yMax \u003d f.value(max)",
      "BUGGY_CODE_TYPE": "CtLocalVariableImpl|CtBlockImpl",
      "OPERATOR": "InsertAfterOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_73\\/.\\/output_astor\\/AstorMain-Math73\\/\\/src\\/\\/variant-20314\\/org\\/apache\\/commons\\/math\\/analysis\\/solvers\\/BrentSolver.java",
      "LINE": "125",
      "MP_RANKING": "8",
      "PATCH_HUNK_CODE": "verifyBracketing(min, max, f)"
    }
  ],
  "TIME": "1500",
  "GENERATION": "10157",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_73\\/.\\/output_astor\\/AstorMain-Math73\\/\\/src\\/\\/variant-20314",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_73\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/analysis\\/solvers\\/BrentSolverjava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_73\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/analysis\\/solvers\\/BrentSolverjava\\n@@ -126,4 +125,0 @@\\n-\\t\\tif (java.lang.Math.abs(yMax) \u003c\u003d functionValueAccuracy) {\\n-\\t\\t\\tsetResult(yMax, 0);\\n-\\t\\t\\treturn result;\\n-\\t\\t}\\n@@ -131,4 +126,0 @@\\n-\\t\\t\\/\\/ reduce interval if initial and max bracket the root\\n-\\t\\tif ((yInitial * yMax) \u003c 0) {\\n-\\t\\t\\treturn solve(f, initial, yInitial, max, yMax, initial, yInitial);\\n-\\t\\t}\\n@@ -137,2 +128,0 @@\\n-\\t\\t\\/\\/ full Brent algorithm starting with provided initial guess\\n-\\t\\treturn solve(f, min, yMin, max, yMax, initial, yInitial);\\n@@ -140 +129,0 @@\\n-\\t}\\n@@ -141,0 +131,11 @@\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\tverifyBracketing(min, max, f); \\t\\tif (java.lang.Math.abs(yMax) \u003c\u003d functionValueAccuracy) { \\t\\t\\tsetResult(yMax, 0); \\t\\t\\treturn result;} \\t\\t\\/\\/ reduce interval if initial and max bracket the root\\n+\\t\\tif ((yInitial * yMax) \u003c 0) { \\t\\t\\treturn solve(f, initial, yInitial, max, yMax, initial, yInitial);} \\t\\t\\/\\/ full Brent algorithm starting with provided initial guess\\n+\\t\\treturn solve(f, min, yMin, max, yMax, initial, yInitial);}\\n\\n"
}