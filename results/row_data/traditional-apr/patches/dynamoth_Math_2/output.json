{"nbStatement":42,"executionTime":9798749,"date":"Sat Jun 04 23:20:38 EDT 2022","patch":[{"patch":"--- a/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\n@@ -137,3 +137,5 @@\n             if (tmp < upper) {\n-                upper = ((int) Math.ceil(tmp)) - 1;\n+                if (false) {\n+                    upper = ((int) Math.ceil(tmp)) - 1;\n+                }\n             }\n","patchType":"PRECONDITION","nb_test_that_execute_statement":63,"patchLocation":{"line":138,"class":"org.apache.commons.math3.distribution.AbstractIntegerDistribution"}},{"patch":"--- a/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\n@@ -136,4 +136,6 @@\n             tmp = mu + k * sigma;\n-            if (tmp < upper) {\n-                upper = ((int) Math.ceil(tmp)) - 1;\n+            if (false) {\n+                if (tmp < upper) {\n+                    upper = ((int) Math.ceil(tmp)) - 1;\n+                }\n             }\n","patchType":"PRECONDITION","nb_test_that_execute_statement":63,"patchLocation":{"line":137,"class":"org.apache.commons.math3.distribution.AbstractIntegerDistribution"}},{"patch":"--- a/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\n@@ -128,13 +128,15 @@\n                 Double.isInfinite(sigma) || Double.isNaN(sigma) || sigma == 0.0);\n-        if (chebyshevApplies) {\n-            double k = FastMath.sqrt((1.0 - p) / p);\n-            double tmp = mu - k * sigma;\n-            if (tmp > lower) {\n-                lower = ((int) Math.ceil(tmp)) - 1;\n+        if (false) {\n+            if (chebyshevApplies) {\n+                double k = FastMath.sqrt((1.0 - p) / p);\n+                double tmp = mu - k * sigma;\n+                if (tmp > lower) {\n+                    lower = ((int) Math.ceil(tmp)) - 1;\n+                }\n+                k = 1.0 / k;\n+                tmp = mu + k * sigma;\n+                if (tmp < upper) {\n+                    upper = ((int) Math.ceil(tmp)) - 1;\n+                }\n             }\n-            k = 1.0 / k;\n-            tmp = mu + k * sigma;\n-            if (tmp < upper) {\n-                upper = ((int) Math.ceil(tmp)) - 1;\n-            }\n         }\n","patchType":"PRECONDITION","nb_test_that_execute_statement":70,"patchLocation":{"line":129,"class":"org.apache.commons.math3.distribution.AbstractIntegerDistribution"}},{"patch":"--- a/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\n@@ -128,3 +128,3 @@\n                 Double.isInfinite(sigma) || Double.isNaN(sigma) || sigma == 0.0);\n-        if (chebyshevApplies) {\n+        if (false) {\n             double k = FastMath.sqrt((1.0 - p) / p);\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":70,"patchLocation":{"line":129,"class":"org.apache.commons.math3.distribution.AbstractIntegerDistribution"}}],"nb_methods":4947,"nb_classes":747,"nbAngelicValue":12}