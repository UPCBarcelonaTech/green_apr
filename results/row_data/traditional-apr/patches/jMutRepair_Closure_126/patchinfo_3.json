{
  "VARIANT_ID": "3",
  "VALIDATION": "|true|0|8011|[]|",
  "patchhunks": [
    {
      "LOCATION": "com.google.javascript.jscomp.MinimizeExitPoints",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jMutRepair\\/Closure_126\\/src\\/com\\/google\\/javascript\\/jscomp\\/MinimizeExitPoints.java",
      "ORIGINAL_CODE": "com.google.javascript.jscomp.NodeUtil.hasFinally(n)",
      "BUGGY_CODE_TYPE": "CtInvocationImpl|CtIfImpl",
      "OPERATOR": "IfExpresionMutOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jMutRepair\\/Closure_126\\/.\\/output_astor\\/AstorMain-Closure126\\/\\/src\\/\\/variant-3\\/com\\/google\\/javascript\\/jscomp\\/MinimizeExitPoints.java",
      "LINE": "141",
      "SUSPICIOUNESS": "0.577",
      "MP_RANKING": "1",
      "PATCH_HUNK_CODE": "!\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ncom.google.javascript.jscomp.NodeUtil.hasFinally(n)",
      "PATCH_HUNK_TYPE": "CtUnaryOperatorImpl|CtIfImpl"
    }
  ],
  "TIME": "1",
  "GENERATION": "1",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jMutRepair\\/Closure_126\\/.\\/output_astor\\/AstorMain-Closure126\\/\\/src\\/\\/variant-3",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jMutRepair\\/Closure_126\\/src\\/com\\/google\\/javascript\\/jscomp\\/MinimizeExitPointsjava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jMutRepair\\/Closure_126\\/src\\/com\\/google\\/javascript\\/jscomp\\/MinimizeExitPointsjava\\n@@ -141 +141 @@\\n-\\t\\t\\tif (com.google.javascript.jscomp.NodeUtil.hasFinally(n)) {\\n+\\t\\t\\tif (!com.google.javascript.jscomp.NodeUtil.hasFinally(n)) {\\n\\n"
}