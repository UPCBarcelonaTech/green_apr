{
  "VARIANT_ID": "1944",
  "VALIDATION": "|true|0|8011|[]|",
  "patchhunks": [
    {
      "LOCATION": "com.google.javascript.jscomp.MinimizeExitPoints",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Closure_126\\/src\\/com\\/google\\/javascript\\/jscomp\\/MinimizeExitPoints.java",
      "INGREDIENT_SCOPE": "PACKAGE",
      "SUSPICIOUNESS": "1",
      "INGREDIENT_PARENT": "\\/* Our implementation delegates to the compiler. We provide this\\nmethod because we don\u0027t want to expose Compiler to PeepholeOptimizations.\\n *\\/\\ncom.google.common.base.Preconditions.checkNotNull(compiler)",
      "PATCH_HUNK_TYPE": "CtInvocationImpl|CtBlockImpl",
      "ORIGINAL_CODE": "tryMinimizeExits(finallyBlock, exitType, labelName)",
      "BUGGY_CODE_TYPE": "CtInvocationImpl|CtBlockImpl",
      "OPERATOR": "ReplaceOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Closure_126\\/.\\/output_astor\\/AstorMain-Closure126\\/\\/src\\/\\/variant-1944\\/com\\/google\\/javascript\\/jscomp\\/MinimizeExitPoints.java",
      "LINE": "143",
      "MP_RANKING": "1",
      "PATCH_HUNK_CODE": "\\/* Our implementation delegates to the compiler. We provide this\\nmethod because we don\u0027t want to expose Compiler to PeepholeOptimizations.\\n *\\/\\ncom.google.common.base.Preconditions.checkNotNull(compiler)"
    }
  ],
  "TIME": "1277",
  "GENERATION": "972",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Closure_126\\/.\\/output_astor\\/AstorMain-Closure126\\/\\/src\\/\\/variant-1944",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Closure_126\\/src\\/com\\/google\\/javascript\\/jscomp\\/MinimizeExitPointsjava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Closure_126\\/src\\/com\\/google\\/javascript\\/jscomp\\/MinimizeExitPointsjava\\n@@ -142,3 +142,3 @@\\n-\\t\\t\\t\\tcom.google.javascript.rhino.Node finallyBlock \u003d n.getLastChild();\\n-\\t\\t\\t\\ttryMinimizeExits(finallyBlock, exitType, labelName);\\n-\\t\\t\\t}\\n+\\t\\t\\t\\tcom.google.javascript.rhino.Node finallyBlock \u003d n.getLastChild(); \\t\\t\\t\\t\\/* Our implementation delegates to the compiler. We provide this\\n+\\t\\t\\t\\tmethod because we don\u0027t want to expose Compiler to PeepholeOptimizations.\\n+\\t\\t\\t\\t *\\/ \\t\\t\\t\\tcom.google.common.base.Preconditions.checkNotNull(compiler);}\\n\\n"
}