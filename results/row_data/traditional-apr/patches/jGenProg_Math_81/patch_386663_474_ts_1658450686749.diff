--- script/workingdir/jGenProg/Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpljava
+++ script/workingdir/jGenProg/Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpljava
@@ -1526 +1526,51 @@
-				} else if (dMin == dN2) {
+				} else {
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
@@ -1528,34 +1577,0 @@
-					// case 5.
-					tType = -5;
-					double s = 0.25 * dMin;
-
-					// compute contribution to norm squared from i > nn-2.
-					final int np = nn - (2 * pingPong);
-					double b1 = work[np - 2];
-					double b2 = work[np - 6];
-					final double gam = dN2;
-					if ((work[np - 8] > b2) || (work[np - 4] > b1)) {
-						return;
-					}
-					double a2 = (work[np - 8] / b2) * (1 + (work[np - 4] / b1));
-
-					// approximate contribution to norm squared from i < nn-2.
-					if ((end - start) > 2) {
-						b2 = work[nn - 13] / work[nn - 15];
-						a2 = a2 + b2;
-						for (int i4 = nn - 17; i4 >= (((4 * start) + 2) + pingPong); i4 -= 4) {
-							if (b2 == 0.0) {
-								break;
-							}
-							b1 = b2;
-							if (work[i4] > work[i4 - 2]) {
-								return;
-							}
-							b2 = b2 * (work[i4] / work[i4 - 2]);
-							a2 = a2 + b2;
-							if (((100 * java.lang.Math.max(b2, b1)) < a2) || (cnst1 < a2)) {
-								break;
-							}
-						}
-						a2 = cnst3 * a2;
-					}
@@ -1563,5 +1578,0 @@
-					if (a2 < cnst1) {
-						tau = (gam * (1 - java.lang.Math.sqrt(a2))) / (1 + a2);
-					} else {
-						tau = s;
-					}
@@ -1569 +1579,0 @@
-				} else {
@@ -1571,10 +1580,0 @@
-					// case 6, no information to guide us.
-					if (tType == (-6)) {
-						g += 0.333 * (1 - g);
-					} else if (tType == (-18)) {
-						g = 0.25 * 0.333;
-					} else {
-						g = 0.25;
-					}
-					tau = g * dMin;
-					tType = -6;

