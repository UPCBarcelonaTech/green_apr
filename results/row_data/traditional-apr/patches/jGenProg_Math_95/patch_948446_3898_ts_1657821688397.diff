--- script/workingdir/jGenProg/Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpljava
+++ script/workingdir/jGenProg/Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpljava
@@ -148,2 +147,0 @@
-		return ret;
-	}
@@ -151 +149,15 @@
-	/**
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+		return p;} 	/**
@@ -159,7 +171 @@
-	 */ 	public void setNumeratorDegreesOfFreedom(double degreesOfFreedom) { 		if (degreesOfFreedom <= 0.0) { 			throw new java.lang.IllegalArgumentException(
-			"degrees of freedom must be positive.");
-		}
-		this.numeratorDegreesOfFreedom = degreesOfFreedom;
-	}
-
-	/**
+	 */ 	public void setNumeratorDegreesOfFreedom(double degreesOfFreedom) { 		if (degreesOfFreedom <= 0.0) { 			throw new java.lang.IllegalArgumentException("degrees of freedom must be positive.");} 		this.numeratorDegreesOfFreedom = degreesOfFreedom;} 	/**
@@ -169,5 +175 @@
-	 */ 	public double getNumeratorDegreesOfFreedom() {
-		return numeratorDegreesOfFreedom;
-	}
-
-	/**
+	 */ 	public double getNumeratorDegreesOfFreedom() { 		return numeratorDegreesOfFreedom;} 	/**
@@ -181,3 +183 @@
-	 */ 	public void setDenominatorDegreesOfFreedom(double degreesOfFreedom) { 		if (degreesOfFreedom <= 0.0) { 			throw new java.lang.IllegalArgumentException(
-			"degrees of freedom must be positive.");
-		}
+	 */ 	public void setDenominatorDegreesOfFreedom(double degreesOfFreedom) { 		if (degreesOfFreedom <= 0.0) { 			throw new java.lang.IllegalArgumentException("degrees of freedom must be positive.");}

