--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -420,11 +420,13 @@
                 double worstFitness = fitness[arindex[arindex.length-1]];
-                if (bestValue > bestFitness) {
-                    bestValue = bestFitness;
-                    lastResult = optimum;
-                    optimum = new PointValuePair(
-                            fitfun.repairAndDecode(bestArx.getColumn(0)),
-                            isMinimize ? bestFitness : -bestFitness);
-                    if (getConvergenceChecker() != null && lastResult != null) {
-                        if (getConvergenceChecker().converged(iterations, optimum, lastResult)) {
-                            break generationLoop;
+                if (org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.inputSigma!=null) {
+                    if (bestValue > bestFitness) {
+                        bestValue = bestFitness;
+                        lastResult = optimum;
+                        optimum = new PointValuePair(
+                        fitfun.repairAndDecode(bestArx.getColumn(0)),
+                        isMinimize ? bestFitness : -bestFitness);
+                        if (getConvergenceChecker() != null && lastResult != null) {
+                            if (getConvergenceChecker().converged(iterations, optimum, lastResult)) {
+                                break generationLoop;
+                            }
                         }
