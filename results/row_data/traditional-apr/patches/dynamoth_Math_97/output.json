{"nbStatement":25,"executionTime":195168,"date":"Sat Jun 04 17:40:37 EDT 2022","patch":[{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.functionValueAccuracy <= sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}},{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.defaultRelativeAccuracy <= sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}},{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.relativeAccuracy <= sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}},{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.defaultAbsoluteAccuracy <= sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}},{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.defaultFunctionValueAccuracy <= sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}},{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.absoluteAccuracy <= sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}},{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.result <= sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}},{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.functionValueAccuracy < sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}},{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.defaultRelativeAccuracy < sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}},{"patch":"--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -137,9 +137,9 @@\n         double sign = yMin * yMax;\n-        if (sign >= 0) {\n+        if (this.relativeAccuracy < sign) {\n             // check if either value is close to a zero\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw new IllegalArgumentException\n-                (\"Function values at endpoints do not have different signs.\" +\n-                        \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n-                        \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n+            // neither value is close to zero and min and max do not bracket root.\n+            throw new IllegalArgumentException\n+            (\"Function values at endpoints do not have different signs.\" +\n+            \"  Endpoints: [\" + min + \",\" + max + \"]\" +\n+            \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n         } else {\n","patchType":"CONDITIONAL","nb_test_that_execute_statement":32,"patchLocation":{"line":138,"class":"org.apache.commons.math.analysis.BrentSolver"}}],"nb_methods":1420,"nb_classes":231,"nbAngelicValue":1}