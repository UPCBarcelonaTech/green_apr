--- a/src/com/google/javascript/jscomp/InlineFunctions.java
+++ b/src/com/google/javascript/jscomp/InlineFunctions.java
@@ -689,12 +689,14 @@
   private boolean mimimizeCost(FunctionState fs) {
-    if (!inliningLowersCost(fs)) {
-      // Try again without Block inlining references
-      if (fs.hasBlockInliningReferences()) {
-        fs.setRemove(false);
-        fs.removeBlockInliningReferences();
-        if (!fs.hasReferences() || !inliningLowersCost(fs)) {
+    if (fs.references.size() <= 2) {
+      if (!inliningLowersCost(fs)) {
+        // Try again without Block inlining references
+        if (fs.hasBlockInliningReferences()) {
+          fs.setRemove(false);
+          fs.removeBlockInliningReferences();
+          if (!fs.hasReferences() || !inliningLowersCost(fs)) {
+            return false;
+          }
+        } else {
           return false;
         }
-      } else {
-        return false;
       }
