{
  "VARIANT_ID": "67820",
  "VALIDATION": "|true|0|3641|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.jfree.data.time.TimePeriodValues",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_7\\/source\\/org\\/jfree\\/data\\/time\\/TimePeriodValues.java",
      "INGREDIENT_SCOPE": "PACKAGE",
      "SUSPICIOUNESS": "0.447",
      "INGREDIENT_PARENT": "this.data.remove(index)",
      "PATCH_HUNK_TYPE": "CtInvocationImpl|CtBlockImpl",
      "ORIGINAL_CODE": "this.minEndIndex \u003d index",
      "BUGGY_CODE_TYPE": "CtAssignmentImpl|CtBlockImpl",
      "OPERATOR": "InsertBeforeOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_7\\/.\\/output_astor\\/AstorMain-Chart7\\/\\/src\\/\\/variant-67820\\/org\\/jfree\\/data\\/time\\/TimePeriodValues.java",
      "LINE": "317",
      "MP_RANKING": "3",
      "PATCH_HUNK_CODE": "this.data.remove(index)"
    }
  ],
  "TIME": "7526",
  "GENERATION": "33910",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_7\\/.\\/output_astor\\/AstorMain-Chart7\\/\\/src\\/\\/variant-67820",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_7\\/source\\/org\\/jfree\\/data\\/time\\/TimePeriodValuesjava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Chart_7\\/source\\/org\\/jfree\\/data\\/time\\/TimePeriodValuesjava\\n@@ -317,17 +316,0 @@\\n-\\t\\t\\t\\tthis.minEndIndex \u003d index;\\n-\\t\\t\\t}\\n-\\t\\t} else \\n-\\t\\t{\\n-\\t\\t\\tthis.minEndIndex \u003d index;\\n-\\t\\t}\\n-\\n-\\t\\tif (this.maxEndIndex \u003e\u003d 0) {\\n-\\t\\t\\tlong maxEnd \u003d getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\\n-\\n-\\t\\t\\tif (end \u003e maxEnd) {\\n-\\t\\t\\t\\tthis.maxEndIndex \u003d index;\\n-\\t\\t\\t}\\n-\\t\\t} else \\n-\\t\\t{\\n-\\t\\t\\tthis.maxEndIndex \u003d index;\\n-\\t\\t}\\n@@ -335 +317,0 @@\\n-\\t}\\n@@ -337,15 +318,0 @@\\n-\\t\\/**\\n-\\t * Recalculates the bounds for the collection of items.\\n-\\t *\\/\\n-\\tprivate void recalculateBounds() {\\n-\\t\\tthis.minStartIndex \u003d -1;\\n-\\t\\tthis.minMiddleIndex \u003d -1;\\n-\\t\\tthis.minEndIndex \u003d -1;\\n-\\t\\tthis.maxStartIndex \u003d -1;\\n-\\t\\tthis.maxMiddleIndex \u003d -1;\\n-\\t\\tthis.maxEndIndex \u003d -1;\\n-\\t\\tfor (int i \u003d 0; i \u003c this.data.size(); i++) {\\n-\\t\\t\\torg.jfree.data.time.TimePeriodValue tpv \u003d ((org.jfree.data.time.TimePeriodValue) (this.data.get(i)));\\n-\\t\\t\\tupdateBounds(tpv.getPeriod(), i);\\n-\\t\\t}\\n-\\t}\\n@@ -353 +320,505 @@\\n-\\t\\/**\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\tthis.data.remove(index); \\t\\t\\t\\tthis.minEndIndex \u003d index;}} else { \\t\\t\\tthis.minEndIndex \u003d index;} \\t\\tif (this.maxEndIndex \u003e\u003d 0) { \\t\\t\\tlong maxEnd \u003d getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime(); \\t\\t\\tif (end \u003e maxEnd) { \\t\\t\\t\\tthis.maxEndIndex \u003d index;}} else { \\t\\t\\tthis.maxEndIndex \u003d index;}} \\t\\/**\\n+\\t * Recalculates the bounds for the collection of items.\\n+\\t *\\/ \\tprivate void recalculateBounds() { \\t\\tthis.minStartIndex \u003d -1; \\t\\tthis.minMiddleIndex \u003d -1; \\t\\tthis.minEndIndex \u003d -1; \\t\\tthis.maxStartIndex \u003d -1; \\t\\tthis.maxMiddleIndex \u003d -1; \\t\\tthis.maxEndIndex \u003d -1; \\t\\tfor (int i \u003d 0; i \u003c this.data.size(); i++) { \\t\\t\\torg.jfree.data.time.TimePeriodValue tpv \u003d ((org.jfree.data.time.TimePeriodValue) (this.data.get(i))); \\t\\t\\tupdateBounds(tpv.getPeriod(), i);}} \\t\\/**\\n@@ -362,6 +833 @@\\n-\\t *\\/ \\tpublic void add(org.jfree.data.time.TimePeriod period, double value) {\\n-\\t\\torg.jfree.data.time.TimePeriodValue item \u003d new org.jfree.data.time.TimePeriodValue(period, value);\\n-\\t\\tadd(item);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic void add(org.jfree.data.time.TimePeriod period, double value) { \\t\\torg.jfree.data.time.TimePeriodValue item \u003d new org.jfree.data.time.TimePeriodValue(period, value); \\t\\tadd(item);} \\t\\/**\\n@@ -375,5 +841 @@\\n-\\t *\\/ \\tpublic void add(org.jfree.data.time.TimePeriod period, java.lang.Number value) { \\t\\torg.jfree.data.time.TimePeriodValue item \u003d new org.jfree.data.time.TimePeriodValue(period, value);\\n-\\t\\tadd(item);\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic void add(org.jfree.data.time.TimePeriod period, java.lang.Number value) { \\t\\torg.jfree.data.time.TimePeriodValue item \u003d new org.jfree.data.time.TimePeriodValue(period, value); \\t\\tadd(item);} \\t\\/**\\n@@ -387,6 +849 @@\\n-\\t *\\/ \\tpublic void update(int index, java.lang.Number value) { \\t\\torg.jfree.data.time.TimePeriodValue item \u003d getDataItem(index);\\n-\\t\\titem.setValue(value);\\n-\\t\\tfireSeriesChanged();\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic void update(int index, java.lang.Number value) { \\t\\torg.jfree.data.time.TimePeriodValue item \u003d getDataItem(index); \\t\\titem.setValue(value); \\t\\tfireSeriesChanged();} \\t\\/**\\n@@ -400,8 +857 @@\\n-\\t *\\/ \\tpublic void delete(int start, int end) { \\t\\tfor (int i \u003d 0; i \u003c\u003d (end - start); i++) {\\n-\\t\\t\\tthis.data.remove(start);\\n-\\t\\t}\\n-\\t\\trecalculateBounds();\\n-\\t\\tfireSeriesChanged();\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic void delete(int start, int end) { \\t\\tfor (int i \u003d 0; i \u003c\u003d (end - start); i++) { \\t\\t\\tthis.data.remove(start);} \\t\\trecalculateBounds(); \\t\\tfireSeriesChanged();} \\t\\/**\\n@@ -413,33 +863 @@\\n-\\t *\\/\\n-\\tpublic boolean equals(java.lang.Object obj) {\\n-\\t\\tif (obj \u003d\u003d this) {\\n-\\t\\t\\treturn true;\\n-\\t\\t}\\n-\\t\\tif (!(obj instanceof org.jfree.data.time.TimePeriodValues)) {\\n-\\t\\t\\treturn false;\\n-\\t\\t}\\n-\\t\\tif (!super.equals(obj)) {\\n-\\t\\t\\treturn false;\\n-\\t\\t}\\n-\\t\\torg.jfree.data.time.TimePeriodValues that \u003d ((org.jfree.data.time.TimePeriodValues) (obj));\\n-\\t\\tif (!org.jfree.chart.util.ObjectUtilities.equal(this.getDomainDescription(), \\n-\\t\\tthat.getDomainDescription())) {\\n-\\t\\t\\treturn false;\\n-\\t\\t}\\n-\\t\\tif (!org.jfree.chart.util.ObjectUtilities.equal(this.getRangeDescription(), \\n-\\t\\tthat.getRangeDescription())) {\\n-\\t\\t\\treturn false;\\n-\\t\\t}\\n-\\t\\tint count \u003d getItemCount();\\n-\\t\\tif (count !\u003d that.getItemCount()) {\\n-\\t\\t\\treturn false;\\n-\\t\\t}\\n-\\t\\tfor (int i \u003d 0; i \u003c count; i++) {\\n-\\t\\t\\tif (!getDataItem(i).equals(that.getDataItem(i))) {\\n-\\t\\t\\t\\treturn false;\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn true;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic boolean equals(java.lang.Object obj) { \\t\\tif (obj \u003d\u003d this) { \\t\\t\\treturn true;} \\t\\tif (!(obj instanceof org.jfree.data.time.TimePeriodValues)) { \\t\\t\\treturn false;} \\t\\tif (!super.equals(obj)) { \\t\\t\\treturn false;} \\t\\torg.jfree.data.time.TimePeriodValues that \u003d ((org.jfree.data.time.TimePeriodValues) (obj)); \\t\\tif (!org.jfree.chart.util.ObjectUtilities.equal(this.getDomainDescription(), that.getDomainDescription())) { \\t\\t\\treturn false;} \\t\\tif (!org.jfree.chart.util.ObjectUtilities.equal(this.getRangeDescription(), that.getRangeDescription())) { \\t\\t\\treturn false;} \\t\\tint count \u003d getItemCount(); \\t\\tif (count !\u003d that.getItemCount()) { \\t\\t\\treturn false;} \\t\\tfor (int i \u003d 0; i \u003c count; i++) { \\t\\t\\tif (!getDataItem(i).equals(that.getDataItem(i))) { \\t\\t\\t\\treturn false;}} \\t\\treturn true;} \\t\\/**\\n@@ -449,16 +867 @@\\n-\\t *\\/\\n-\\tpublic int hashCode() {\\n-\\t\\tint result;\\n-\\t\\tresult \u003d (this.domain !\u003d null) ? this.domain.hashCode() : 0;\\n-\\t\\tresult \u003d (29 * result) + (this.range !\u003d null ? this.range.hashCode() : 0);\\n-\\t\\tresult \u003d (29 * result) + this.data.hashCode();\\n-\\t\\tresult \u003d (29 * result) + this.minStartIndex;\\n-\\t\\tresult \u003d (29 * result) + this.maxStartIndex;\\n-\\t\\tresult \u003d (29 * result) + this.minMiddleIndex;\\n-\\t\\tresult \u003d (29 * result) + this.maxMiddleIndex;\\n-\\t\\tresult \u003d (29 * result) + this.minEndIndex;\\n-\\t\\tresult \u003d (29 * result) + this.maxEndIndex;\\n-\\t\\treturn result;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int hashCode() { \\t\\tint result; \\t\\tresult \u003d (this.domain !\u003d null) ? this.domain.hashCode() : 0; \\t\\tresult \u003d (29 * result) + (this.range !\u003d null ? this.range.hashCode() : 0); \\t\\tresult \u003d (29 * result) + this.data.hashCode(); \\t\\tresult \u003d (29 * result) + this.minStartIndex; \\t\\tresult \u003d (29 * result) + this.maxStartIndex; \\t\\tresult \u003d (29 * result) + this.minMiddleIndex; \\t\\tresult \u003d (29 * result) + this.maxMiddleIndex; \\t\\tresult \u003d (29 * result) + this.minEndIndex; \\t\\tresult \u003d (29 * result) + this.maxEndIndex; \\t\\treturn result;} \\t\\/**\\n@@ -478,7 +881 @@\\n-\\t *\\/\\n-\\tpublic java.lang.Object clone() throws java.lang.CloneNotSupportedException {\\n-\\t\\tjava.lang.Object clone \u003d createCopy(0, getItemCount() - 1);\\n-\\t\\treturn clone;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic java.lang.Object clone() throws java.lang.CloneNotSupportedException { \\t\\tjava.lang.Object clone \u003d createCopy(0, getItemCount() - 1); \\t\\treturn clone;} \\t\\/**\\n@@ -495,23 +892 @@\\n-\\t *\\/ \\tpublic org.jfree.data.time.TimePeriodValues createCopy(int start, int end) throws \\n-\\tjava.lang.CloneNotSupportedException {\\n-\\n-\\t\\torg.jfree.data.time.TimePeriodValues copy \u003d ((org.jfree.data.time.TimePeriodValues) (super.clone()));\\n-\\n-\\t\\tcopy.data \u003d new java.util.ArrayList();\\n-\\t\\tif (this.data.size() \u003e 0) {\\n-\\t\\t\\tfor (int index \u003d start; index \u003c\u003d end; index++) {\\n-\\t\\t\\t\\torg.jfree.data.time.TimePeriodValue item \u003d ((org.jfree.data.time.TimePeriodValue) (this.data.get(index)));\\n-\\t\\t\\t\\torg.jfree.data.time.TimePeriodValue clone \u003d ((org.jfree.data.time.TimePeriodValue) (item.clone()));\\n-\\t\\t\\t\\ttry {\\n-\\t\\t\\t\\t\\tcopy.add(clone);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t\\t catch (org.jfree.data.general.SeriesException e) {\\n-\\t\\t\\t\\t\\tjava.lang.System.err.println(\\\"Failed to add cloned item.\\\");\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn copy;\\n-\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic org.jfree.data.time.TimePeriodValues createCopy(int start, int end) throws java.lang.CloneNotSupportedException { \\t\\torg.jfree.data.time.TimePeriodValues copy \u003d ((org.jfree.data.time.TimePeriodValues) (super.clone())); \\t\\tcopy.data \u003d new java.util.ArrayList(); \\t\\tif (this.data.size() \u003e 0) { \\t\\t\\tfor (int index \u003d start; index \u003c\u003d end; index++) { \\t\\t\\t\\torg.jfree.data.time.TimePeriodValue item \u003d ((org.jfree.data.time.TimePeriodValue) (this.data.get(index))); \\t\\t\\t\\torg.jfree.data.time.TimePeriodValue clone \u003d ((org.jfree.data.time.TimePeriodValue) (item.clone())); \\t\\t\\t\\ttry { \\t\\t\\t\\t\\tcopy.add(clone);} catch (org.jfree.data.general.SeriesException e) { \\t\\t\\t\\t\\tjava.lang.System.err.println(\\\"Failed to add cloned item.\\\");}}} \\t\\treturn copy;} \\t\\/**\\n@@ -521,6 +896 @@\\n-\\t *\\/\\n-\\tpublic int getMinStartIndex() {\\n-\\t\\treturn this.minStartIndex;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getMinStartIndex() { \\t\\treturn this.minStartIndex;} \\t\\/**\\n@@ -530,6 +900 @@\\n-\\t *\\/\\n-\\tpublic int getMaxStartIndex() {\\n-\\t\\treturn this.maxStartIndex;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getMaxStartIndex() { \\t\\treturn this.maxStartIndex;} \\t\\/**\\n@@ -540,6 +905 @@\\n-\\t *\\/\\n-\\tpublic int getMinMiddleIndex() {\\n-\\t\\treturn this.minMiddleIndex;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getMinMiddleIndex() { \\t\\treturn this.minMiddleIndex;} \\t\\/**\\n@@ -550,6 +910 @@\\n-\\t *\\/\\n-\\tpublic int getMaxMiddleIndex() {\\n-\\t\\treturn this.maxMiddleIndex;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getMaxMiddleIndex() { \\t\\treturn this.maxMiddleIndex;} \\t\\/**\\n@@ -559,6 +914 @@\\n-\\t *\\/\\n-\\tpublic int getMinEndIndex() {\\n-\\t\\treturn this.minEndIndex;\\n-\\t}\\n-\\n-\\t\\/**\\n+\\t *\\/ \\tpublic int getMinEndIndex() { \\t\\treturn this.minEndIndex;} \\t\\/**\\n@@ -568,4 +918 @@\\n-\\t *\\/\\n-\\tpublic int getMaxEndIndex() {\\n-\\t\\treturn this.maxEndIndex;\\n-\\t}}\\n\\\\ No newline at end of file\\n+\\t *\\/ \\tpublic int getMaxEndIndex() { \\t\\treturn this.maxEndIndex;}}\\n\\\\ No newline at end of file\\n\\n"
}