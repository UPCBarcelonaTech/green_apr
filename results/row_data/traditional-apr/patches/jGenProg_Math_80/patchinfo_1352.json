{
  "VARIANT_ID": "1352",
  "VALIDATION": "|true|0|2104|[]|",
  "patchhunks": [
    {
      "LOCATION": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_80\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java",
      "INGREDIENT_SCOPE": "-",
      "ORIGINAL_CODE": "if ((1.5 * work[pingPong]) \u003c work[(4 * (n - 1)) + pingPong]) {\\n\\t\\/\\/ flip array\\n\\tint j \u003d (4 * n) - 1;\\n\\tfor (int i \u003d 0; i \u003c j; i +\u003d 4) {\\n\\t\\tfor (int k \u003d 0; k \u003c 4; k +\u003d step) {\\n\\t\\t\\tfinal double tmp \u003d work[i + k];\\n\\t\\t\\twork[i + k] \u003d work[j - k];\\n\\t\\t\\twork[j - k] \u003d tmp;\\n\\t\\t}\\n\\t\\tj -\u003d 4;\\n\\t}\\n\\treturn true;\\n}",
      "BUGGY_CODE_TYPE": "CtIfImpl|CtBlockImpl",
      "OPERATOR": "RemoveOp",
      "MODIFIED_FILE_PATH": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_80\\/.\\/output_astor\\/AstorMain-Math80\\/\\/src\\/\\/variant-1352\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java",
      "LINE": "1133",
      "SUSPICIOUNESS": "0.243",
      "MP_RANKING": "177"
    }
  ],
  "TIME": "643",
  "GENERATION": "676",
  "FOLDER_SOLUTION_CODE": "\\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_80\\/.\\/output_astor\\/AstorMain-Math80\\/\\/src\\/\\/variant-1352",
  "PATCH_DIFF_ORIG": "--- \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_80\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpljava\\n+++ \\/home\\/user\\/speedy_runner\\/scripts\\/workingdir\\/jGenProg\\/Math_80\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpljava\\n@@ -1134,12 +1134,12 @@\\n-\\t *\\/ \\tprivate boolean flipIfWarranted(final int n, final int step) { \\t\\tif ((1.5 * work[pingPong]) \u003c work[(4 * (n - 1)) + pingPong]) { \\t\\t\\t\\/\\/ flip array\\n-\\t\\t\\tint j \u003d (4 * n) - 1;\\n-\\t\\t\\tfor (int i \u003d 0; i \u003c j; i +\u003d 4) {\\n-\\t\\t\\t\\tfor (int k \u003d 0; k \u003c 4; k +\u003d step) {\\n-\\t\\t\\t\\t\\tfinal double tmp \u003d work[i + k];\\n-\\t\\t\\t\\t\\twork[i + k] \u003d work[j - k];\\n-\\t\\t\\t\\t\\twork[j - k] \u003d tmp;\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t\\tj -\u003d 4;\\n-\\t\\t\\t}\\n-\\t\\t\\treturn true;\\n-\\t\\t}\\n+\\t *\\/ \\tprivate boolean flipIfWarranted(final int n, final int step) {\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n\\n"
}