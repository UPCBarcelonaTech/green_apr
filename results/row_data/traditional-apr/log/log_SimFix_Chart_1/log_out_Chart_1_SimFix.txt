Sleep 1m start
GPR[SSLI]-1659843662581
GPR[ESLI]-1659843722586
Running SimFix Chart 1b
Timezone: America/Los_Angeles
Seed 260
Java 8: /experiment_home/jdk1.8.0_45/bin 
DEFECTS4J_HOME: /experiment_home/defects4j/
Creating out dir /experiment_home///results/SimFix/Chart/1/seed_260/
Project lc: chart
New out script/workingdir/SimFix/chart/chart_1_buggy
The file script/workingdir/SimFix/chart/chart_1_buggy does not exist!
script/workingdir/SimFix/chart/chart_1_buggy
Current directory: script/workingdir/SimFix/chart/chart_1_buggy
classpath:  script/workingdir/SimFix/chart/chart_1_buggy/lib/servlet.jar:/experiment_home/defects4j/framework/projects/lib/junit-4.11.jar:script/workingdir/SimFix/chart/chart_1_buggy/build:script/workingdir/SimFix/chart/chart_1_buggy/build-tests
Src java:  /source
Classes Java:  /build
Src Test:  /tests
Classes Test:  /build-tests
GPR[SSLB]-1659843742083
GPR[ESLB]-1659843802090
Calling SimFix: at script/workingdir/SimFix/chart/chart_1_buggy
ant
build
build-tests
ChangeLog
checkstyle
d4j-info
defects4j.build.properties
docfiles
experimental
lib
licence-LGPL.txt
maven-jfreechart-project.xml
NEWS
README.txt
source
swt
tests
content current dir: ant build build-tests ChangeLog checkstyle d4j-info defects4j.build.properties docfiles experimental lib licence-LGPL.txt maven-jfreechart-project.xml NEWS README.txt source swt tests
Node: host-75
Date init: Sat 06 Aug 2022 08:43:25 PM PDT
OAR_JOB_ID: 3720517
script/workingdir/SimFix/
GPR[SSUP]-1659843805297
=================================================
Project : chart_1	start : 22/08/06 20:43

GPR[ESUP]-1659843808368
GPR[SFL]-1659843808980
GPR[EFL]-1659843809023
GPR[SFP]-1659843809023
TIMEOUT : 18000000
GPR[SSUN]-1659843809034
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,1793
UNKNOWN ASTNode type : catch (NoSuchMethodException e) {
  result=object;
}

========
if(this.plot!=null){
return result;
}

========
GPR[SPVS]-1659843811533
GPR[SPVAP]-1659843811533
GPR[EPVAP]-1659843816070
GPR[SPVATF]-1659843816070
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843817198
GPR[EPVS]-1659843817198
========
if(plot==null){
return result;
}

========
GPR[SPVS]-1659843817202
GPR[SPVAP]-1659843817202
GPR[EPVAP]-1659843818593
GPR[SPVATF]-1659843818593
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843819743
GPR[EPVS]-1659843819743
========
this.plot=plot;
if(this.plot==null){
return result;
}

========
GPR[SPVS]-1659843819746
GPR[SPVAP]-1659843819746
GPR[EPVAP]-1659843821078
GPR[SPVATF]-1659843821078
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843822233
GPR[EPVS]-1659843822233
========
this.plot=plot;
if(plot==null){
return result;
}

========
GPR[SPVS]-1659843822236
GPR[SPVAP]-1659843822236
GPR[EPVAP]-1659843823578
GPR[SPVATF]-1659843823578
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843824758
GPR[EPVS]-1659843824758
========
if(this.plot==AreaRendererEndType.LEVEL){
return result;
}

========
GPR[SPVS]-1659843824766
GPR[SPVAP]-1659843824766
GPR[EPVAP]-1659843825572
GPR[EPVS]-1659843825572
========
if(this.plot==PlotOrientation.HORIZONTAL){
return result;
}

========
GPR[SPVS]-1659843825575
GPR[SPVAP]-1659843825575
GPR[EPVAP]-1659843826383
GPR[EPVS]-1659843826383
GPR[ESUN]-1659843826390
GPR[SSUN]-1659843826390
org.jfree.chart.plot.CategoryPlot,1613
GPR[ESUN]-1659843828612
GPR[SSUN]-1659843828612
org.jfree.chart.plot.CategoryPlot,1614
Find no block!
GPR[SSUN]-1659843828961
org.jfree.chart.plot.CategoryPlot,1665
========
this.renderers.set(index,renderer);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843831772
GPR[SPVAP]-1659843831772
GPR[EPVAP]-1659843836436
GPR[SPVATF]-1659843836436
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843837584
GPR[EPVS]-1659843837584
========
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843837587
GPR[SPVAP]-1659843837587
GPR[EPVAP]-1659843839018
GPR[SPVATF]-1659843839018
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843840193
GPR[EPVS]-1659843840193
========
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843840197
GPR[SPVAP]-1659843840197
GPR[EPVAP]-1659843841640
GPR[SPVATF]-1659843841640
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843842796
GPR[EPVS]-1659843842797
========
this.annotations.remove(index);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843842801
GPR[SPVAP]-1659843842801
GPR[EPVAP]-1659843844191
GPR[SPVATF]-1659843844191
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843845396
GPR[EPVS]-1659843845396
========
fireChangeEvent();
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843845399
GPR[SPVAP]-1659843845399
GPR[EPVAP]-1659843846814
GPR[SPVATF]-1659843846814
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843847987
GPR[EPVS]-1659843847987
========
this.annotations.remove(index);
fireChangeEvent();
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843847991
GPR[SPVAP]-1659843847991
GPR[EPVAP]-1659843849397
GPR[SPVATF]-1659843849397
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843850535
GPR[EPVS]-1659843850535
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(JANUARY!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843850540
GPR[SPVAP]-1659843850540
GPR[EPVAP]-1659843851387
GPR[EPVS]-1659843851387
========
if((Font)this.renderers.get(index)==null){
result=this.DEFAULT_VALUE_LABEL_FONT;
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843851392
GPR[SPVAP]-1659843851392
GPR[EPVAP]-1659843852254
GPR[EPVS]-1659843852254
========
if(crosshairDatasetIndex==0){
return this.rangeGridlinePaint;
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843852258
GPR[SPVAP]-1659843852258
GPR[EPVAP]-1659843853132
GPR[EPVS]-1659843853133
========
if(anchorValue<item.value){
return this.rangeGridlinePaint;
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843853137
GPR[SPVAP]-1659843853137
GPR[EPVAP]-1659843853983
GPR[EPVS]-1659843853983
========
if(annotations.isEmpty()){
return null;
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843853986
GPR[SPVAP]-1659843853986
GPR[EPVAP]-1659843854839
GPR[EPVS]-1659843854839
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing==null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843854843
GPR[SPVAP]-1659843854843
GPR[EPVAP]-1659843858276
GPR[SPVATF]-1659843858276
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843859443
GPR[EPVS]-1659843859443
========
if((index<0)||(series>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843859447
GPR[SPVAP]-1659843859447
GPR[EPVAP]-1659843860292
GPR[EPVS]-1659843860292
========
(XYSeries)this.annotations.get(index).removeChangeListener(this);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843860296
GPR[SPVAP]-1659843860296
GPR[EPVAP]-1659843860942
GPR[EPVS]-1659843860942
========
if(crosshairDatasetIndex<0){
throw new UnknownKeyException("Column key ("+domainCrosshairRowKey);
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843860946
GPR[SPVAP]-1659843860946
GPR[EPVAP]-1659843861820
GPR[EPVS]-1659843861820
========
if((CategoryDataset)this.renderers.get(index)==null){
continue;
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843861824
GPR[SPVAP]-1659843861824
GPR[EPVAP]-1659843862658
GPR[EPVS]-1659843862658
========
if((XYDataset)this.renderers.get(index)==null){
continue;
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843862661
GPR[SPVAP]-1659843862661
GPR[EPVAP]-1659843863499
GPR[EPVS]-1659843863499
========
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843863507
GPR[SPVAP]-1659843863507
GPR[EPVAP]-1659843864930
GPR[SPVATF]-1659843864930
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843866090
GPR[EPVS]-1659843866090
========
if((Comparable)this.foregroundRangeMarkers.get(domainCrosshairRowKey)!=null){
domainCrosshairRowKey=group;
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843866094
GPR[SPVAP]-1659843866094
GPR[EPVAP]-1659843866939
GPR[EPVS]-1659843866939
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("TaskSeriesCollection.remove(): index outside valid range.");
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843866943
GPR[SPVAP]-1659843866943
GPR[EPVAP]-1659843867809
GPR[EPVS]-1659843867809
========
(TaskSeries)this.annotations.get(index).removeChangeListener(this);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843867812
GPR[SPVAP]-1659843867812
GPR[EPVAP]-1659843868466
GPR[EPVS]-1659843868466
========
fireDatasetChanged(new DatasetChangeInfo());
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843868469
GPR[SPVAP]-1659843868469
GPR[EPVAP]-1659843869317
GPR[EPVS]-1659843869317
========
if((index<0)||(seriesIndex>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843869319
GPR[SPVAP]-1659843869319
GPR[EPVAP]-1659843870183
GPR[EPVS]-1659843870183
========
(MatrixSeries)this.annotations.get(index).removeChangeListener(this);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843870187
GPR[SPVAP]-1659843870187
GPR[EPVAP]-1659843870822
GPR[EPVS]-1659843870822
========
this.annotations.remove(index);
fireDatasetChanged(new DatasetChangeInfo());
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843870824
GPR[SPVAP]-1659843870824
GPR[EPVAP]-1659843871737
GPR[EPVS]-1659843871737
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843871740
GPR[SPVAP]-1659843871740
GPR[EPVAP]-1659843872598
GPR[EPVS]-1659843872598
========
(XIntervalSeries)this.annotations.get(index).removeChangeListener(this);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843872601
GPR[SPVAP]-1659843872601
GPR[EPVAP]-1659843873234
GPR[EPVS]-1659843873234
========
(XYIntervalSeries)this.annotations.get(index).removeChangeListener(this);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843873238
GPR[SPVAP]-1659843873238
GPR[EPVAP]-1659843873874
GPR[EPVS]-1659843873874
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
this.annotations.remove(index);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843873878
GPR[SPVAP]-1659843873878
GPR[EPVAP]-1659843874725
GPR[EPVS]-1659843874725
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
fireDatasetChanged(new DatasetChangeInfo());
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843874728
GPR[SPVAP]-1659843874728
GPR[EPVAP]-1659843875605
GPR[EPVS]-1659843875605
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
this.annotations.remove(index);
fireDatasetChanged(new DatasetChangeInfo());
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843875608
GPR[SPVAP]-1659843875608
GPR[EPVAP]-1659843876464
GPR[EPVS]-1659843876464
========
(YIntervalSeries)this.annotations.get(index).removeChangeListener(this);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843876467
GPR[SPVAP]-1659843876467
GPR[EPVAP]-1659843877108
GPR[EPVS]-1659843877108
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
(XYSeries)this.annotations.get(index).removeChangeListener(this);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843877111
GPR[SPVAP]-1659843877111
GPR[EPVAP]-1659843877743
GPR[EPVS]-1659843877743
========
(XYSeries)this.annotations.get(index).removeChangeListener(this);
this.annotations.remove(index);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843877746
GPR[SPVAP]-1659843877746
GPR[EPVAP]-1659843878384
GPR[EPVS]-1659843878384
========
(XYSeries)this.annotations.get(index).removeChangeListener(this);
fireDatasetChanged(new DatasetChangeInfo());
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843878387
GPR[SPVAP]-1659843878387
GPR[EPVAP]-1659843879020
GPR[EPVS]-1659843879020
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
(XYSeries)this.annotations.get(index).removeChangeListener(this);
this.annotations.remove(index);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843879023
GPR[SPVAP]-1659843879023
GPR[EPVAP]-1659843879663
GPR[EPVS]-1659843879663
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
(XYSeries)this.annotations.get(index).removeChangeListener(this);
fireDatasetChanged(new DatasetChangeInfo());
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843879667
GPR[SPVAP]-1659843879667
GPR[EPVAP]-1659843880296
GPR[EPVS]-1659843880296
========
(XYSeries)this.annotations.get(index).removeChangeListener(this);
this.annotations.remove(index);
fireDatasetChanged(new DatasetChangeInfo());
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843880298
GPR[SPVAP]-1659843880298
GPR[EPVAP]-1659843880946
GPR[EPVS]-1659843880946
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
(XYSeries)this.annotations.get(index).removeChangeListener(this);
this.annotations.remove(index);
fireDatasetChanged(new DatasetChangeInfo());
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843880949
GPR[SPVAP]-1659843880949
GPR[EPVAP]-1659843881588
GPR[EPVS]-1659843881588
========
if(index>=annotations.size()){
break;
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843881591
GPR[SPVAP]-1659843881591
GPR[EPVAP]-1659843882441
GPR[EPVS]-1659843882442
========
(SimpleHistogramBin)this.annotations.get(index).setSelected(rangeZeroBaselineVisible);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843882446
GPR[SPVAP]-1659843882446
GPR[EPVAP]-1659843883096
GPR[EPVS]-1659843883096
========
if(notify){
fireSelectionEvent();
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843883100
GPR[SPVAP]-1659843883100
GPR[EPVAP]-1659843883949
GPR[EPVS]-1659843883949
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
markers=new java.util.ArrayList();
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843883952
GPR[SPVAP]-1659843883952
GPR[EPVAP]-1659843884808
GPR[EPVS]-1659843884808
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing==null){
markers=new java.util.ArrayList();
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843884811
GPR[SPVAP]-1659843884811
GPR[EPVAP]-1659843885667
GPR[EPVS]-1659843885667
========
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'category\' argument.");
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843885671
GPR[SPVAP]-1659843885671
GPR[EPVAP]-1659843887119
GPR[SPVATF]-1659843887119
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843888356
GPR[EPVS]-1659843888356
========
if((Font)this.foregroundRangeMarkers.get(domainCrosshairRowKey)==null){
result=getTickLabelFont();
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843888359
GPR[SPVAP]-1659843888359
GPR[EPVAP]-1659843889237
GPR[EPVS]-1659843889237
========
if((Paint)this.foregroundRangeMarkers.get(domainCrosshairRowKey)==null){
result=getTickLabelPaint();
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843889240
GPR[SPVAP]-1659843889240
GPR[EPVAP]-1659843890089
GPR[EPVS]-1659843890089
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds");
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843890092
GPR[SPVAP]-1659843890092
GPR[EPVAP]-1659843890938
GPR[EPVS]-1659843890938
========
if(index<0||series>=getSeriesCount()){
throw new IllegalArgumentException("Invalid series index: "+series);
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843890943
GPR[SPVAP]-1659843890943
GPR[EPVAP]-1659843891800
GPR[EPVS]-1659843891800
========
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing==null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843891803
GPR[SPVAP]-1659843891803
GPR[EPVAP]-1659843893211
GPR[SPVATF]-1659843893211
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843894377
GPR[EPVS]-1659843894377
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
labelList=new java.util.ArrayList();
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843894381
GPR[SPVAP]-1659843894381
GPR[EPVAP]-1659843895266
GPR[EPVS]-1659843895266
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
this.annotations.remove(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843895269
GPR[SPVAP]-1659843895269
GPR[EPVAP]-1659843896690
GPR[SPVATF]-1659843896690
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843897864
GPR[EPVS]-1659843897864
========
(Block)annotations.get(0).setBounds(new Rectangle2D.Double(0.0,0.0,s.width,s.height));
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843897869
GPR[SPVAP]-1659843897869
GPR[EPVAP]-1659843898496
GPR[EPVS]-1659843898496
========
if(this.rangeZeroBaselineVisible){
return (SimpleHistogramBin)this.annotations.get(index).getItemCount()/(bin.getUpperBound()-bin.getLowerBound());
}else {
return bin.getItemCount();
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843898499
GPR[SPVAP]-1659843898499
GPR[EPVAP]-1659843899340
GPR[EPVS]-1659843899340
========
(Block)annotations.get(0).setBounds(new Rectangle2D.Double((anchorValue-s.width)/2.0,0.0,s.width,s.height));
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843899344
GPR[SPVAP]-1659843899344
GPR[EPVAP]-1659843900010
GPR[EPVS]-1659843900010
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(r!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843900014
GPR[SPVAP]-1659843900014
GPR[EPVAP]-1659843900861
GPR[EPVS]-1659843900861
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(r==null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843900865
GPR[SPVAP]-1659843900865
GPR[EPVAP]-1659843901724
GPR[EPVS]-1659843901724
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=-1){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843901728
GPR[SPVAP]-1659843901728
GPR[EPVAP]-1659843902570
GPR[EPVS]-1659843902570
========
fireSeriesChanged();
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843902573
GPR[SPVAP]-1659843902573
GPR[EPVAP]-1659843903432
GPR[EPVS]-1659843903432
========
this.renderers.set(0,renderer);
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843903435
GPR[SPVAP]-1659843903435
GPR[EPVAP]-1659843904830
GPR[SPVATF]-1659843904830
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843906030
GPR[EPVS]-1659843906030
========
this.renderers.set(0,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843906033
GPR[SPVAP]-1659843906033
GPR[EPVAP]-1659843907474
GPR[SPVATF]-1659843907474
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843908645
GPR[EPVS]-1659843908645
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=ORIENTATION_VERTICAL){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843908649
GPR[SPVAP]-1659843908649
GPR[EPVAP]-1659843909503
GPR[EPVS]-1659843909503
========
updateBoundsForRemovedItem((XYDataItem)this.annotations.remove(index));
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843909506
GPR[SPVAP]-1659843909506
GPR[EPVAP]-1659843910387
GPR[EPVS]-1659843910388
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(renderer!=null){
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843910395
GPR[SPVAP]-1659843910395
GPR[EPVAP]-1659843911789
GPR[SPVATF]-1659843911789
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843912937
GPR[EPVS]-1659843912937
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(renderer!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843912940
GPR[SPVAP]-1659843912940
GPR[EPVAP]-1659843914343
GPR[SPVATF]-1659843914343
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843915508
GPR[EPVS]-1659843915508
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843915511
GPR[SPVAP]-1659843915511
GPR[EPVAP]-1659843916912
GPR[SPVATF]-1659843916912
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843918053
GPR[EPVS]-1659843918053
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.addChangeListener(this);
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843918057
GPR[SPVAP]-1659843918057
GPR[EPVAP]-1659843919450
GPR[SPVATF]-1659843919450
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843920607
GPR[EPVS]-1659843920607
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843920609
GPR[SPVAP]-1659843920609
GPR[EPVAP]-1659843922003
GPR[SPVATF]-1659843922003
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843923162
GPR[EPVS]-1659843923162
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
this.renderers.set(0,existing);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843923165
GPR[SPVAP]-1659843923165
GPR[EPVAP]-1659843924572
GPR[SPVATF]-1659843924572
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843925721
GPR[EPVS]-1659843925721
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(renderer!=null){
existing.addChangeListener(this);
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843925724
GPR[SPVAP]-1659843925724
GPR[EPVAP]-1659843927138
GPR[SPVATF]-1659843927138
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843930380
GPR[EPVS]-1659843930380
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(renderer!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843930383
GPR[SPVAP]-1659843930383
GPR[EPVAP]-1659843931824
GPR[SPVATF]-1659843931824
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843932975
GPR[EPVS]-1659843932975
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
this.renderers.set(0,existing);
if(renderer!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843932979
GPR[SPVAP]-1659843932979
GPR[EPVAP]-1659843934442
GPR[SPVATF]-1659843934442
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843935608
GPR[EPVS]-1659843935608
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.addChangeListener(this);
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843935611
GPR[SPVAP]-1659843935612
GPR[EPVAP]-1659843937066
GPR[SPVATF]-1659843937066
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843938221
GPR[EPVS]-1659843938221
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(existing!=null){
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843938224
GPR[SPVAP]-1659843938224
GPR[EPVAP]-1659843939628
GPR[SPVATF]-1659843939628
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843940803
GPR[EPVS]-1659843940803
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
this.renderers.set(0,existing);
if(existing!=null){
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843940806
GPR[SPVAP]-1659843940806
GPR[EPVAP]-1659843942228
GPR[SPVATF]-1659843942228
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843943400
GPR[EPVS]-1659843943400
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(existing!=null){
existing.addChangeListener(this);
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843943403
GPR[SPVAP]-1659843943403
GPR[EPVAP]-1659843944808
GPR[SPVATF]-1659843944808
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843945996
GPR[EPVS]-1659843945996
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
this.renderers.set(0,existing);
if(existing!=null){
existing.addChangeListener(this);
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843945999
GPR[SPVAP]-1659843945999
GPR[EPVAP]-1659843947417
GPR[SPVATF]-1659843947417
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843948594
GPR[EPVS]-1659843948594
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
this.renderers.set(0,existing);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843948597
GPR[SPVAP]-1659843948597
GPR[EPVAP]-1659843949994
GPR[SPVATF]-1659843949994
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843951150
GPR[EPVS]-1659843951150
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(renderer!=null){
existing.addChangeListener(this);
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843951153
GPR[SPVAP]-1659843951153
GPR[EPVAP]-1659843952545
GPR[SPVATF]-1659843952545
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843953705
GPR[EPVS]-1659843953705
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(renderer!=null){
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843953708
GPR[SPVAP]-1659843953708
GPR[EPVAP]-1659843955112
GPR[SPVATF]-1659843955112
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843956263
GPR[EPVS]-1659843956263
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
this.renderers.set(0,existing);
if(renderer!=null){
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843956266
GPR[SPVAP]-1659843956266
GPR[EPVAP]-1659843957666
GPR[SPVATF]-1659843957666
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843958820
GPR[EPVS]-1659843958820
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(renderer!=null){
existing.addChangeListener(this);
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843958823
GPR[SPVAP]-1659843958823
GPR[EPVAP]-1659843960238
GPR[SPVATF]-1659843960238
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843961382
GPR[EPVS]-1659843961382
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
this.renderers.set(0,existing);
if(renderer!=null){
existing.addChangeListener(this);
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843961385
GPR[SPVAP]-1659843961385
GPR[EPVAP]-1659843962776
GPR[SPVATF]-1659843962776
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843963917
GPR[EPVS]-1659843963917
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
this.renderers.set(0,existing);
if(renderer!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843963920
GPR[SPVAP]-1659843963920
GPR[EPVAP]-1659843965344
GPR[SPVATF]-1659843965345
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843966504
GPR[EPVS]-1659843966504
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(existing!=null){
existing.addChangeListener(this);
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843966507
GPR[SPVAP]-1659843966507
GPR[EPVAP]-1659843967921
GPR[SPVATF]-1659843967922
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843969117
GPR[EPVS]-1659843969117
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
this.renderers.set(0,existing);
if(existing!=null){
existing.addChangeListener(this);
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843969120
GPR[SPVAP]-1659843969120
GPR[EPVAP]-1659843970521
GPR[SPVATF]-1659843970521
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843971702
GPR[EPVS]-1659843971702
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
this.renderers.set(0,existing);
if(existing!=null){
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843971705
GPR[SPVAP]-1659843971705
GPR[EPVAP]-1659843973143
GPR[SPVATF]-1659843973143
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843974279
GPR[EPVS]-1659843974279
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
this.renderers.set(0,existing);
if(existing!=null){
existing.addChangeListener(this);
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843974281
GPR[SPVAP]-1659843974281
GPR[EPVAP]-1659843975730
GPR[SPVATF]-1659843975730
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843976869
GPR[EPVS]-1659843976869
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(renderer!=null){
existing.addChangeListener(this);
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843976871
GPR[SPVAP]-1659843976871
GPR[EPVAP]-1659843978281
GPR[SPVATF]-1659843978281
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843979439
GPR[EPVS]-1659843979439
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
this.renderers.set(0,existing);
if(renderer!=null){
existing.addChangeListener(this);
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843979442
GPR[SPVAP]-1659843979442
GPR[EPVAP]-1659843980854
GPR[SPVATF]-1659843980854
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843981985
GPR[EPVS]-1659843981985
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
this.renderers.set(0,existing);
if(renderer!=null){
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843981988
GPR[SPVAP]-1659843981988
GPR[EPVAP]-1659843983430
GPR[SPVATF]-1659843983430
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843984571
GPR[EPVS]-1659843984571
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
this.renderers.set(0,existing);
if(renderer!=null){
existing.addChangeListener(this);
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843984574
GPR[SPVAP]-1659843984574
GPR[EPVAP]-1659843986042
GPR[SPVATF]-1659843986042
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843987197
GPR[EPVS]-1659843987197
========
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
this.renderers.set(0,existing);
if(existing!=null){
existing.addChangeListener(this);
renderer.removeChangeListener(this);
}

========
GPR[SPVS]-1659843987200
GPR[SPVAP]-1659843987200
GPR[EPVAP]-1659843988606
GPR[SPVATF]-1659843988606
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659843989776
GPR[EPVS]-1659843989776
========
this.index=index;
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843989779
GPR[SPVAP]-1659843989779
GPR[EPVAP]-1659843990639
GPR[EPVS]-1659843990639
========
anchorValue=direction%360;
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843990646
GPR[SPVAP]-1659843990646
GPR[EPVAP]-1659843991501
GPR[EPVS]-1659843991501
========
if(anchorValue<0.0){
direction=direction+360.0;
}
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843991503
GPR[SPVAP]-1659843991503
GPR[EPVAP]-1659843992354
GPR[EPVS]-1659843992354
GPR[ESUN]-1659843992356
GPR[SSUN]-1659843992356
org.jfree.chart.plot.CategoryPlot,1667
========
if(existing==null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659843994647
GPR[SPVAP]-1659843994647
GPR[EPVAP]-1659843999246
GPR[SPVATF]-1659843999246
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844002411
GPR[EPVS]-1659844002411
========
fireChangeEvent();
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659844002414
GPR[SPVAP]-1659844002414
GPR[EPVAP]-1659844003812
GPR[SPVATF]-1659844003812
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844004966
GPR[EPVS]-1659844004966
========
fireChangeEvent();
if(existing==null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659844004969
GPR[SPVAP]-1659844004969
GPR[EPVAP]-1659844006363
GPR[SPVATF]-1659844006363
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844007501
GPR[EPVS]-1659844007501
========
fireDatasetChanged(new DatasetChangeInfo());
if(existing!=null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659844007504
GPR[SPVAP]-1659844007504
GPR[EPVAP]-1659844008374
GPR[EPVS]-1659844008374
========
fireDatasetChanged(new DatasetChangeInfo());
if(existing==null){
existing.removeChangeListener(this);
}

========
GPR[SPVS]-1659844008378
GPR[SPVAP]-1659844008378
GPR[EPVAP]-1659844009218
GPR[EPVS]-1659844009218
GPR[ESUN]-1659844009218
GPR[SSUN]-1659844009218
org.jfree.chart.plot.CategoryPlot,1672
========
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844011508
GPR[SPVAP]-1659844011508
GPR[EPVAP]-1659844016164
GPR[SPVATF]-1659844016164
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844017313
GPR[EPVS]-1659844017313
========
if(this.renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844017316
GPR[SPVAP]-1659844017316
GPR[EPVAP]-1659844018160
GPR[EPVS]-1659844018160
========
fireChangeEvent();
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844018164
GPR[SPVAP]-1659844018164
GPR[EPVAP]-1659844019674
GPR[SPVATF]-1659844019674
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844021030
GPR[EPVS]-1659844021030
========
fireChangeEvent();
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844021033
GPR[SPVAP]-1659844021033
GPR[EPVAP]-1659844022476
GPR[SPVATF]-1659844022476
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844023632
GPR[EPVS]-1659844023632
========
notifyListeners(new TitleChangeEvent(this));
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844023635
GPR[SPVAP]-1659844023635
GPR[EPVAP]-1659844024488
GPR[EPVS]-1659844024488
========
if(renderer!=null){
renderer.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844026664
GPR[SPVAP]-1659844026664
GPR[EPVAP]-1659844028104
GPR[SPVATF]-1659844028104
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844029252
GPR[EPVS]-1659844029252
========
if(renderer!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844029254
GPR[SPVAP]-1659844029254
GPR[EPVAP]-1659844030700
GPR[SPVATF]-1659844030700
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844031845
GPR[EPVS]-1659844031845
========
if(existing!=null){
renderer.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844031848
GPR[SPVAP]-1659844031848
GPR[EPVAP]-1659844033258
GPR[SPVATF]-1659844033258
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844034448
GPR[EPVS]-1659844034448
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(this.renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844034452
GPR[SPVAP]-1659844034452
GPR[EPVAP]-1659844035298
GPR[EPVS]-1659844035298
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,(XYItemRenderer)(PublicCloneable)(XYItemRenderer)this.renderers.get(index).clone());
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844035301
GPR[SPVAP]-1659844035301
GPR[EPVAP]-1659844036154
GPR[EPVS]-1659844036154
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844036157
GPR[SPVAP]-1659844036157
GPR[EPVAP]-1659844037570
GPR[SPVATF]-1659844037570
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844038737
GPR[EPVS]-1659844038737
========
fireChangeEvent();
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844038739
GPR[SPVAP]-1659844038740
GPR[EPVAP]-1659844040222
GPR[SPVATF]-1659844040222
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844041365
GPR[EPVS]-1659844041365
========
fireChangeEvent();
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844041368
GPR[SPVAP]-1659844041368
GPR[EPVAP]-1659844042766
GPR[SPVATF]-1659844042766
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844043897
GPR[EPVS]-1659844043897
========
if(existing==null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844043908
GPR[SPVAP]-1659844043908
GPR[EPVAP]-1659844045322
GPR[SPVATF]-1659844045322
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844046477
GPR[EPVS]-1659844046477
========
if(notify){
fireChangeEvent();
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844046479
GPR[SPVAP]-1659844046479
GPR[EPVAP]-1659844047960
GPR[SPVATF]-1659844047960
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844049122
GPR[EPVS]-1659844049122
========
notifyListeners(new TitleChangeEvent(this));
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844049125
GPR[SPVAP]-1659844049125
GPR[EPVAP]-1659844049972
GPR[EPVS]-1659844049972
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.annotations.remove(index);
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844049975
GPR[SPVAP]-1659844049975
GPR[EPVAP]-1659844051385
GPR[SPVATF]-1659844051385
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844052561
GPR[EPVS]-1659844052561
========
renderer.setBaseItemLabelFont(this.DEFAULT_VALUE_LABEL_FONT);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844052565
GPR[SPVAP]-1659844052565
GPR[EPVAP]-1659844053958
GPR[SPVATF]-1659844053958
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844055118
GPR[EPVS]-1659844055118
========
renderer.setBaseItemLabelPaint(this.rangeGridlinePaint);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844055121
GPR[SPVAP]-1659844055121
GPR[EPVAP]-1659844056537
GPR[SPVATF]-1659844056538
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844057726
GPR[EPVS]-1659844057726
========
renderer.setBaseItemLabelFont(this.DEFAULT_VALUE_LABEL_FONT);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844057730
GPR[SPVAP]-1659844057730
GPR[EPVAP]-1659844059122
GPR[SPVATF]-1659844059122
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844060276
GPR[EPVS]-1659844060276
========
renderer.setBaseItemLabelPaint(this.rangeGridlinePaint);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844060279
GPR[SPVAP]-1659844060279
GPR[EPVAP]-1659844061685
GPR[SPVATF]-1659844061685
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844062856
GPR[EPVS]-1659844062856
========
renderer.setBaseItemLabelFont(this.DEFAULT_VALUE_LABEL_FONT);
renderer.setBaseItemLabelPaint(this.rangeGridlinePaint);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844062859
GPR[SPVAP]-1659844062859
GPR[EPVAP]-1659844064298
GPR[SPVATF]-1659844064298
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844065469
GPR[EPVS]-1659844065469
========
renderer.setBaseItemLabelFont(this.DEFAULT_VALUE_LABEL_FONT);
renderer.setBaseItemLabelPaint(this.rangeGridlinePaint);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844065471
GPR[SPVAP]-1659844065471
GPR[EPVAP]-1659844066933
GPR[SPVATF]-1659844066933
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844068111
GPR[EPVS]-1659844068111
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,DEFAULT_VALUE_LABEL_FONT);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844068115
GPR[SPVAP]-1659844068115
GPR[EPVAP]-1659844069506
GPR[SPVATF]-1659844069506
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844070652
GPR[EPVS]-1659844070652
========
if(notify){
fireChangeEvent();
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,DEFAULT_VALUE_LABEL_FONT);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844070656
GPR[SPVAP]-1659844070656
GPR[EPVAP]-1659844072080
GPR[SPVATF]-1659844072080
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844073236
GPR[EPVS]-1659844073236
========
if(index<0||index>getSubtitleCount()){
throw new IllegalArgumentException("The \'index\' argument is out of range.");
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844073240
GPR[SPVAP]-1659844073240
GPR[EPVAP]-1659844074506
GPR[EPVS]-1659844074506
========
fireChartChanged();
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844074516
GPR[SPVAP]-1659844074516
GPR[EPVAP]-1659844076537
GPR[EPVS]-1659844076537
========
if(existing!=null){
existing.removeChangeListener(this);
}
renderer.setBaseToolTipGenerator(new IntervalCategoryToolTipGenerator("{3} - {4}",DateFormat.getDateInstance()));
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844076541
GPR[SPVAP]-1659844076541
GPR[EPVAP]-1659844077383
GPR[EPVS]-1659844077383
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.anchorValue=0.8;
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844077386
GPR[SPVAP]-1659844077386
GPR[EPVAP]-1659844078819
GPR[SPVATF]-1659844078819
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844079997
GPR[EPVS]-1659844079997
========
if(notify){
notifyListeners(new RendererChangeEvent(this));
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844080000
GPR[SPVAP]-1659844080000
GPR[EPVAP]-1659844080853
GPR[EPVS]-1659844080853
========
repaint();
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844080856
GPR[SPVAP]-1659844080856
GPR[EPVAP]-1659844081721
GPR[EPVS]-1659844081722
========
fireChangeEvent();
if(existing==null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844081724
GPR[SPVAP]-1659844081724
GPR[EPVAP]-1659844083146
GPR[SPVATF]-1659844083146
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844084292
GPR[EPVS]-1659844084292
========
fireChartChanged();
if(existing==null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844084295
GPR[SPVAP]-1659844084295
GPR[EPVAP]-1659844085167
GPR[EPVS]-1659844085167
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.setStroke(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844085170
GPR[SPVAP]-1659844085170
GPR[EPVAP]-1659844086050
GPR[EPVS]-1659844086050
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.setPaint(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844086053
GPR[SPVAP]-1659844086053
GPR[EPVAP]-1659844086924
GPR[EPVS]-1659844086924
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.setShape(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844086926
GPR[SPVAP]-1659844086926
GPR[EPVAP]-1659844087801
GPR[EPVS]-1659844087801
========
this.axisOffset=0.0;
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844087804
GPR[SPVAP]-1659844087804
GPR[EPVAP]-1659844088652
GPR[EPVS]-1659844088652
========
if(existing!=null){
existing.removeChangeListener(this);
}
if((crosshairDatasetIndex<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("TaskSeriesCollection.remove(): index outside valid range.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844088655
GPR[SPVAP]-1659844088655
GPR[EPVAP]-1659844089500
GPR[EPVS]-1659844089500
========
this.annotations.remove(crosshairDatasetIndex);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844089503
GPR[SPVAP]-1659844089503
GPR[EPVAP]-1659844090922
GPR[SPVATF]-1659844090922
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844092086
GPR[EPVS]-1659844092086
========
fireDatasetChanged(new DatasetChangeInfo());
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844092089
GPR[SPVAP]-1659844092089
GPR[EPVAP]-1659844092929
GPR[EPVS]-1659844092929
========
if(existing!=null){
existing.removeChangeListener(this);
}
if((crosshairDatasetIndex<0)||(seriesIndex>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844092932
GPR[SPVAP]-1659844092932
GPR[EPVAP]-1659844093783
GPR[EPVS]-1659844093783
========
this.annotations.remove(crosshairDatasetIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844093785
GPR[SPVAP]-1659844093785
GPR[EPVAP]-1659844094636
GPR[EPVS]-1659844094636
========
if(existing!=null){
existing.removeChangeListener(this);
}
if((crosshairDatasetIndex<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844094639
GPR[SPVAP]-1659844094639
GPR[EPVAP]-1659844095474
GPR[EPVS]-1659844095474
========
this.annotations.remove(crosshairDatasetIndex);
if(existing!=null){
existing.removeChangeListener(this);
}
if((crosshairDatasetIndex<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844095478
GPR[SPVAP]-1659844095478
GPR[EPVAP]-1659844096320
GPR[EPVS]-1659844096320
========
fireDatasetChanged(new DatasetChangeInfo());
if(existing!=null){
existing.removeChangeListener(this);
}
if((crosshairDatasetIndex<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844096322
GPR[SPVAP]-1659844096323
GPR[EPVAP]-1659844097168
GPR[EPVS]-1659844097168
========
this.annotations.remove(crosshairDatasetIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(existing!=null){
existing.removeChangeListener(this);
}
if((crosshairDatasetIndex<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844097171
GPR[SPVAP]-1659844097171
GPR[EPVAP]-1659844098012
GPR[EPVS]-1659844098012
========
this.domainGridlinesVisible=false;
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844098016
GPR[SPVAP]-1659844098016
GPR[EPVAP]-1659844099422
GPR[SPVATF]-1659844099422
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844100611
GPR[EPVS]-1659844100611
========
this.rangePannable=false;
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844100614
GPR[SPVAP]-1659844100614
GPR[EPVAP]-1659844101992
GPR[SPVATF]-1659844101992
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844103121
GPR[EPVS]-1659844103121
========
this.domainGridlinesVisible=false;
this.rangePannable=false;
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844103124
GPR[SPVAP]-1659844103124
GPR[EPVAP]-1659844104560
GPR[SPVATF]-1659844104560
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844105707
GPR[EPVS]-1659844105707
========
fireDatasetChanged(new DatasetChangeInfo());
if(existing==null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844105710
GPR[SPVAP]-1659844105710
GPR[EPVAP]-1659844106549
GPR[EPVS]-1659844106549
========
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new UnknownKeyException("The key ("+domainCrosshairRowKey);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844106553
GPR[SPVAP]-1659844106553
GPR[EPVAP]-1659844107440
GPR[EPVS]-1659844107440
========
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new UnknownKeyException("Row key ("+domainCrosshairRowKey);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844107443
GPR[SPVAP]-1659844107443
GPR[EPVAP]-1659844108277
GPR[EPVS]-1659844108277
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.setSeriesPaint(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844108281
GPR[SPVAP]-1659844108281
GPR[EPVAP]-1659844109133
GPR[EPVS]-1659844109133
========
case 8 :

if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844109136
GPR[SPVAP]-1659844109136
GPR[EPVAP]-1659844109786
GPR[EPVS]-1659844109786
========
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new UnknownKeyException("The key ("+domainCrosshairRowKey.toString());
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844109789
GPR[SPVAP]-1659844109789
GPR[EPVAP]-1659844110655
GPR[EPVS]-1659844110655
========
if(existing!=null){
existing.removeChangeListener(this);
}
if((crosshairDatasetIndex<0)||(series>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844110658
GPR[SPVAP]-1659844110658
GPR[EPVAP]-1659844111559
GPR[EPVS]-1659844111559
========
case 1 :

if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844111562
GPR[SPVAP]-1659844111562
GPR[EPVAP]-1659844112210
GPR[EPVS]-1659844112210
========
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new SeriesException("There is no existing value for the "+"specified \'period\'.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844112214
GPR[SPVAP]-1659844112214
GPR[EPVAP]-1659844113109
GPR[EPVS]-1659844113109
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.crosshairDatasetIndex=index;
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844113112
GPR[SPVAP]-1659844113112
GPR[EPVAP]-1659844114554
GPR[SPVATF]-1659844114554
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844115689
GPR[EPVS]-1659844115689
========
fireSeriesChanged();
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844115692
GPR[SPVAP]-1659844115692
GPR[EPVAP]-1659844116564
GPR[EPVS]-1659844116564
========
if(existing!=null){
existing.removeChangeListener(this);
}
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844116567
GPR[SPVAP]-1659844116567
GPR[EPVAP]-1659844117981
GPR[SPVATF]-1659844117981
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844119133
GPR[EPVS]-1659844119133
========
case 3 :

if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844119136
GPR[SPVAP]-1659844119136
GPR[EPVAP]-1659844119769
GPR[EPVS]-1659844119769
========
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0||index>3){
throw new IllegalArgumentException("The index value ("+index);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844119772
GPR[SPVAP]-1659844119772
GPR[EPVAP]-1659844121163
GPR[SPVATF]-1659844121163
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844122354
GPR[EPVS]-1659844122354
========
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new UnknownKeyException("Column key ("+domainCrosshairRowKey);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844122357
GPR[SPVAP]-1659844122357
GPR[EPVAP]-1659844123221
GPR[EPVS]-1659844123221
========
this.annotations.remove(domainCrosshairRowKey);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844123223
GPR[SPVAP]-1659844123223
GPR[EPVAP]-1659844124624
GPR[SPVATF]-1659844124624
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844125792
GPR[EPVS]-1659844125792
========
fireDatasetChanged(new PieDatasetChangeInfo(PieDatasetChangeType.ADD,index,index));
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844125795
GPR[SPVAP]-1659844125795
GPR[EPVAP]-1659844126642
GPR[EPVS]-1659844126642
========
if(index<0){
throw new IllegalArgumentException("Negative \'index\'.");
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844126645
GPR[SPVAP]-1659844126645
GPR[EPVAP]-1659844128074
GPR[SPVATF]-1659844128074
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844129232
GPR[EPVS]-1659844129232
========
if(index>=getDatasetCount()){
return ;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844129236
GPR[SPVAP]-1659844129236
GPR[EPVAP]-1659844130629
GPR[SPVATF]-1659844130629
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844131784
GPR[EPVS]-1659844131784
========
if(index>=getDatasetCount()){
return ;
}
if(existing==null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844131786
GPR[SPVAP]-1659844131786
GPR[EPVAP]-1659844133182
GPR[SPVATF]-1659844133182
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844134341
GPR[EPVS]-1659844134341
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
rangeCrosshairLockedOnData=true;
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844134344
GPR[SPVAP]-1659844134344
GPR[EPVAP]-1659844135754
GPR[SPVATF]-1659844135754
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844136921
GPR[EPVS]-1659844136921
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(getDomainAxisForDataset(index)==null||getRangeAxisForDataset(index)==null){
return rangeCrosshairLockedOnData;
}
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844136924
GPR[SPVAP]-1659844136924
GPR[EPVAP]-1659844137786
GPR[EPVS]-1659844137786
========
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
rangeCrosshairLockedOnData=true;
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844137789
GPR[SPVAP]-1659844137789
GPR[EPVAP]-1659844139200
GPR[SPVATF]-1659844139200
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844140346
GPR[EPVS]-1659844140346
========
if(r!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844140349
GPR[SPVAP]-1659844140349
GPR[EPVAP]-1659844141188
GPR[EPVS]-1659844141188
========
if(r==null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844141191
GPR[SPVAP]-1659844141191
GPR[EPVAP]-1659844142053
GPR[EPVS]-1659844142053
========
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new IllegalArgumentException("Requires \'index\' >= 0.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844142056
GPR[SPVAP]-1659844142056
GPR[EPVAP]-1659844143502
GPR[SPVATF]-1659844143502
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844144649
GPR[EPVS]-1659844144649
========
this.datasetToDomainAxesMap.put(new Integer(index),new ArrayList(annotations));
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844144651
GPR[SPVAP]-1659844144651
GPR[EPVAP]-1659844146139
GPR[SPVATF]-1659844146139
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844149025
GPR[EPVS]-1659844149025
========
datasetChanged(new DatasetChangeEvent(this,getDataset(index),new DatasetChangeInfo()));
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844149027
GPR[SPVAP]-1659844149027
GPR[EPVAP]-1659844150424
GPR[SPVATF]-1659844150424
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844151585
GPR[EPVS]-1659844151585
========
this.datasetToDomainAxesMap.put(new Integer(index),new ArrayList(annotations));
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new IllegalArgumentException("Requires \'index\' >= 0.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844151588
GPR[SPVAP]-1659844151588
GPR[EPVAP]-1659844153009
GPR[SPVATF]-1659844153009
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844154175
GPR[EPVS]-1659844154175
========
datasetChanged(new DatasetChangeEvent(this,getDataset(index),new DatasetChangeInfo()));
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new IllegalArgumentException("Requires \'index\' >= 0.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844154177
GPR[SPVAP]-1659844154177
GPR[EPVAP]-1659844155600
GPR[SPVATF]-1659844155600
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844156769
GPR[EPVS]-1659844156769
========
this.datasetToDomainAxesMap.put(new Integer(index),new ArrayList(annotations));
datasetChanged(new DatasetChangeEvent(this,getDataset(index),new DatasetChangeInfo()));
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844156771
GPR[SPVAP]-1659844156771
GPR[EPVAP]-1659844158208
GPR[SPVATF]-1659844158208
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844159358
GPR[EPVS]-1659844159358
========
this.datasetToDomainAxesMap.put(new Integer(index),new ArrayList(annotations));
datasetChanged(new DatasetChangeEvent(this,getDataset(index),new DatasetChangeInfo()));
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new IllegalArgumentException("Requires \'index\' >= 0.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844159361
GPR[SPVAP]-1659844159361
GPR[EPVAP]-1659844160782
GPR[SPVATF]-1659844160782
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844161938
GPR[EPVS]-1659844161938
========
this.datasetToRangeAxesMap.put(new Integer(index),new ArrayList(annotations));
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844161941
GPR[SPVAP]-1659844161941
GPR[EPVAP]-1659844163353
GPR[SPVATF]-1659844163353
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844164518
GPR[EPVS]-1659844164518
========
this.datasetToRangeAxesMap.put(new Integer(index),new ArrayList(annotations));
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new IllegalArgumentException("Requires \'index\' >= 0.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844164521
GPR[SPVAP]-1659844164521
GPR[EPVAP]-1659844165916
GPR[SPVATF]-1659844165916
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844167071
GPR[EPVS]-1659844167071
========
this.datasetToRangeAxesMap.put(new Integer(index),new ArrayList(annotations));
datasetChanged(new DatasetChangeEvent(this,getDataset(index),new DatasetChangeInfo()));
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844167073
GPR[SPVAP]-1659844167073
GPR[EPVAP]-1659844168503
GPR[SPVATF]-1659844168503
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844169681
GPR[EPVS]-1659844169681
========
this.datasetToRangeAxesMap.put(new Integer(index),new ArrayList(annotations));
datasetChanged(new DatasetChangeEvent(this,getDataset(index),new DatasetChangeInfo()));
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new IllegalArgumentException("Requires \'index\' >= 0.");
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844169683
GPR[SPVAP]-1659844169683
GPR[EPVAP]-1659844171115
GPR[SPVATF]-1659844171115
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844172295
GPR[EPVS]-1659844172295
========
if(existing!=null){
existing.removeChangeListener(this);
}
if(!Double.isNaN(existing.getYValue())){
rangeZeroBaselineVisible=oldY<=this.anchorValue||oldY>=this.anchorValue;
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844172298
GPR[SPVAP]-1659844172298
GPR[EPVAP]-1659844173142
GPR[EPVS]-1659844173142
========
default :

if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844173148
GPR[SPVAP]-1659844173148
GPR[EPVAP]-1659844173793
GPR[EPVS]-1659844173793
========
case 5 :

if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}

========
GPR[SPVS]-1659844173797
GPR[SPVAP]-1659844173797
GPR[EPVAP]-1659844174429
GPR[EPVS]-1659844174429
GPR[ESUN]-1659844174429
GPR[SSUN]-1659844174429
org.jfree.chart.plot.CategoryPlot,1673
GPR[ESUN]-1659844174931
GPR[SSUN]-1659844174931
org.jfree.chart.plot.CategoryPlot,1674
GPR[ESUN]-1659844175302
GPR[SSUN]-1659844175302
org.jfree.chart.plot.CategoryPlot,1675
GPR[ESUN]-1659844175683
GPR[SSUN]-1659844175683
org.jfree.chart.plot.CategoryPlot,1678
========
if(notify){
fireChangeEvent();
}
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844177882
GPR[SPVAP]-1659844177882
GPR[EPVAP]-1659844182446
GPR[SPVATF]-1659844182446
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844183643
GPR[EPVS]-1659844183643
========
configureRangeAxes();
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844183646
GPR[SPVAP]-1659844183646
GPR[EPVAP]-1659844185100
GPR[SPVATF]-1659844185100
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844186266
GPR[EPVS]-1659844186266
========
this.domainGridlinesVisible=DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844186270
GPR[SPVAP]-1659844186270
GPR[EPVAP]-1659844187686
GPR[SPVATF]-1659844187686
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844188856
GPR[EPVS]-1659844188856
========
configureRangeAxes();
this.domainGridlinesVisible=DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844188859
GPR[SPVAP]-1659844188859
GPR[EPVAP]-1659844190291
GPR[SPVATF]-1659844190291
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844191490
GPR[EPVS]-1659844191490
========
if(this.renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844191493
GPR[SPVAP]-1659844191493
GPR[EPVAP]-1659844192353
GPR[EPVS]-1659844192353
========
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844192356
GPR[SPVAP]-1659844192356
GPR[EPVAP]-1659844193819
GPR[SPVATF]-1659844193819
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844194992
GPR[EPVS]-1659844194992
========
renderer.setBaseItemLabelFont(this.DEFAULT_VALUE_LABEL_FONT);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844194996
GPR[SPVAP]-1659844194996
GPR[EPVAP]-1659844196413
GPR[SPVATF]-1659844196413
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844197574
GPR[EPVS]-1659844197574
========
renderer.setBaseItemLabelPaint(this.rangeGridlinePaint);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844197577
GPR[SPVAP]-1659844197577
GPR[EPVAP]-1659844199021
GPR[SPVATF]-1659844199021
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844200194
GPR[EPVS]-1659844200194
========
renderer.setBaseItemLabelFont(this.DEFAULT_VALUE_LABEL_FONT);
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844200198
GPR[SPVAP]-1659844200198
GPR[EPVAP]-1659844201642
GPR[SPVATF]-1659844201642
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844202817
GPR[EPVS]-1659844202817
========
renderer.setBaseItemLabelPaint(this.rangeGridlinePaint);
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844202820
GPR[SPVAP]-1659844202820
GPR[EPVAP]-1659844204328
GPR[SPVATF]-1659844204328
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844205465
GPR[EPVS]-1659844205465
========
renderer.setBaseItemLabelFont(this.DEFAULT_VALUE_LABEL_FONT);
renderer.setBaseItemLabelPaint(this.rangeGridlinePaint);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844205469
GPR[SPVAP]-1659844205469
GPR[EPVAP]-1659844206879
GPR[SPVATF]-1659844206879
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844208021
GPR[EPVS]-1659844208021
========
renderer.setBaseItemLabelFont(this.DEFAULT_VALUE_LABEL_FONT);
renderer.setBaseItemLabelPaint(this.rangeGridlinePaint);
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844208024
GPR[SPVAP]-1659844208024
GPR[EPVAP]-1659844209412
GPR[SPVATF]-1659844209412
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844210597
GPR[EPVS]-1659844210597
========
fireChangeEvent();
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844210600
GPR[SPVAP]-1659844210600
GPR[EPVAP]-1659844212001
GPR[SPVATF]-1659844212001
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844213164
GPR[EPVS]-1659844213164
========
fireChangeEvent();
if(renderer==null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844213166
GPR[SPVAP]-1659844213166
GPR[EPVAP]-1659844214574
GPR[SPVATF]-1659844214574
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844215711
GPR[EPVS]-1659844215711
========
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
this.annotations=new java.util.ArrayList();
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844215715
GPR[SPVAP]-1659844215715
GPR[EPVAP]-1659844217107
GPR[SPVATF]-1659844217107
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844220380
GPR[EPVS]-1659844220380
========
setSelectionState(this);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844220382
GPR[SPVAP]-1659844220382
GPR[EPVAP]-1659844221221
GPR[EPVS]-1659844221221
========
notifyListeners(new TitleChangeEvent(this));
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844221225
GPR[SPVAP]-1659844221225
GPR[EPVAP]-1659844222062
GPR[EPVS]-1659844222062
========
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
if(index<0||index>getSubtitleCount()){
throw new IllegalArgumentException("The \'index\' argument is out of range.");
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844222065
GPR[SPVAP]-1659844222065
GPR[EPVAP]-1659844222910
GPR[EPVS]-1659844222910
========
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
renderer.setBaseToolTipGenerator(new IntervalCategoryToolTipGenerator("{3} - {4}",DateFormat.getDateInstance()));
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844222912
GPR[SPVAP]-1659844222912
GPR[EPVAP]-1659844223751
GPR[EPVS]-1659844223751
========
fireDatasetChanged(new DatasetChangeInfo());
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844223754
GPR[SPVAP]-1659844223754
GPR[EPVAP]-1659844224595
GPR[EPVS]-1659844224596
========
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
this.anchorValue=0.8;
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844224599
GPR[SPVAP]-1659844224599
GPR[EPVAP]-1659844226005
GPR[SPVATF]-1659844226005
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844227145
GPR[EPVS]-1659844227145
========
if(getDomainAxis()!=null){
axis.configure();
}
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844227147
GPR[SPVAP]-1659844227147
GPR[EPVAP]-1659844228011
GPR[EPVS]-1659844228011
========
if(getRangeAxis()!=null){
axis.configure();
}
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844228014
GPR[SPVAP]-1659844228014
GPR[EPVAP]-1659844228870
GPR[EPVS]-1659844228870
========
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
this.axisOffset=0.0;
configureRangeAxes();

========
GPR[SPVS]-1659844228873
GPR[SPVAP]-1659844228873
GPR[EPVAP]-1659844229718
GPR[EPVS]-1659844229718
========
this.domainGridlinesVisible=false;
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844229721
GPR[SPVAP]-1659844229721
GPR[EPVAP]-1659844231142
GPR[SPVATF]-1659844231142
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844232325
GPR[EPVS]-1659844232325
========
this.rangePannable=false;
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844232328
GPR[SPVAP]-1659844232328
GPR[EPVAP]-1659844233715
GPR[SPVATF]-1659844233715
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844234864
GPR[EPVS]-1659844234864
========
this.domainGridlinesVisible=false;
this.rangePannable=false;
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();

========
GPR[SPVS]-1659844234866
GPR[SPVAP]-1659844234867
GPR[EPVAP]-1659844236337
GPR[SPVATF]-1659844236337
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844237514
GPR[EPVS]-1659844237514
GPR[ESUN]-1659844237515
GPR[SSUN]-1659844237515
org.jfree.chart.plot.CategoryPlot,1679
========
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844239867
GPR[SPVAP]-1659844239867
GPR[EPVAP]-1659844244464
GPR[SPVATF]-1659844244464
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844245607
GPR[EPVS]-1659844245607
========
configureRangeAxes();
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844245610
GPR[SPVAP]-1659844245610
GPR[EPVAP]-1659844247054
GPR[SPVATF]-1659844247054
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844248234
GPR[EPVS]-1659844248234
========
this.notify=notify;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844248236
GPR[SPVAP]-1659844248236
GPR[EPVAP]-1659844249103
GPR[EPVS]-1659844249103
========
configureDomainAxes();
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844249106
GPR[SPVAP]-1659844249106
GPR[EPVAP]-1659844250527
GPR[SPVATF]-1659844250527
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844251702
GPR[EPVS]-1659844251702
========
this.domainGridlinesVisible=true;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844251705
GPR[SPVAP]-1659844251705
GPR[EPVAP]-1659844253123
GPR[SPVATF]-1659844253123
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844254310
GPR[EPVS]-1659844254310
========
configureDomainAxes();
configureRangeAxes();
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844254313
GPR[SPVAP]-1659844254313
GPR[EPVAP]-1659844255722
GPR[SPVATF]-1659844255722
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844256885
GPR[EPVS]-1659844256885
========
configureDomainAxes();
this.domainGridlinesVisible=true;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844256887
GPR[SPVAP]-1659844256887
GPR[EPVAP]-1659844258287
GPR[SPVATF]-1659844258287
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844259437
GPR[EPVS]-1659844259437
========
configureRangeAxes();
this.domainGridlinesVisible=true;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844259439
GPR[SPVAP]-1659844259439
GPR[EPVAP]-1659844260859
GPR[SPVATF]-1659844260859
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844262043
GPR[EPVS]-1659844262043
========
configureDomainAxes();
configureRangeAxes();
this.domainGridlinesVisible=true;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844262046
GPR[SPVAP]-1659844262046
GPR[EPVAP]-1659844263467
GPR[SPVATF]-1659844263467
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844264643
GPR[EPVS]-1659844264643
========
this.notify=rangeCrosshairLockedOnData;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844264647
GPR[SPVAP]-1659844264647
GPR[EPVAP]-1659844265524
GPR[EPVS]-1659844265524
========
if(getRangeAxis()!=null){
axis.configure();
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844265526
GPR[SPVAP]-1659844265526
GPR[EPVAP]-1659844266376
GPR[EPVS]-1659844266376
========
if(getDomainAxis()!=null){
axis.configure();
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844266379
GPR[SPVAP]-1659844266379
GPR[EPVAP]-1659844267222
GPR[EPVS]-1659844267222
========
this.anchorValue=anchorValue;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844267224
GPR[SPVAP]-1659844267224
GPR[EPVAP]-1659844268638
GPR[SPVATF]-1659844268638
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844269780
GPR[EPVS]-1659844269780
========
fireChangeEvent();
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844269782
GPR[SPVAP]-1659844269782
GPR[EPVAP]-1659844271175
GPR[SPVATF]-1659844271175
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844272358
GPR[EPVS]-1659844272358
========
if(DEFAULT_VALUE_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844272361
GPR[SPVAP]-1659844272361
GPR[EPVAP]-1659844273756
GPR[SPVATF]-1659844273756
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844274937
GPR[EPVS]-1659844274937
========
this.DEFAULT_VALUE_LABEL_FONT=DEFAULT_VALUE_LABEL_FONT;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844274940
GPR[SPVAP]-1659844274940
GPR[EPVAP]-1659844275782
GPR[EPVS]-1659844275782
========
if(rangeMinorGridlinePaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844275785
GPR[SPVAP]-1659844275785
GPR[EPVAP]-1659844277185
GPR[SPVATF]-1659844277185
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844278372
GPR[EPVS]-1659844278372
========
this.rangeGridlinePaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844278375
GPR[SPVAP]-1659844278375
GPR[EPVAP]-1659844279776
GPR[SPVATF]-1659844279776
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844280954
GPR[EPVS]-1659844280954
========
if(rangeMinorGridlinePaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.rangeGridlinePaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844280961
GPR[SPVAP]-1659844280961
GPR[EPVAP]-1659844282349
GPR[SPVATF]-1659844282349
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844283515
GPR[EPVS]-1659844283515
========
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844283519
GPR[SPVAP]-1659844283519
GPR[EPVAP]-1659844284906
GPR[SPVATF]-1659844284906
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844286093
GPR[EPVS]-1659844286093
========
this.domainCrosshairRowKey=domainCrosshairRowKey;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844286095
GPR[SPVAP]-1659844286095
GPR[EPVAP]-1659844287579
GPR[SPVATF]-1659844287579
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844288780
GPR[EPVS]-1659844288780
========
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
this.domainCrosshairRowKey=domainCrosshairRowKey;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844288783
GPR[SPVAP]-1659844288783
GPR[EPVAP]-1659844292375
GPR[SPVATF]-1659844292375
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844293542
GPR[EPVS]-1659844293542
========
if(rangeMinorGridlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844293545
GPR[SPVAP]-1659844293545
GPR[EPVAP]-1659844294959
GPR[SPVATF]-1659844294959
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844296119
GPR[EPVS]-1659844296119
========
this.rangeCrosshairStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844296121
GPR[SPVAP]-1659844296121
GPR[EPVAP]-1659844297551
GPR[SPVATF]-1659844297551
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844298698
GPR[EPVS]-1659844298698
========
if(rangeMinorGridlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.rangeCrosshairStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844298701
GPR[SPVAP]-1659844298701
GPR[EPVAP]-1659844300121
GPR[SPVATF]-1659844300121
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844301296
GPR[EPVS]-1659844301296
========
if(DEFAULT_VALUE_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.DEFAULT_VALUE_LABEL_FONT=DEFAULT_VALUE_LABEL_FONT;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844301299
GPR[SPVAP]-1659844301299
GPR[EPVAP]-1659844302188
GPR[EPVS]-1659844302188
========
if(axisOffset==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844302191
GPR[SPVAP]-1659844302191
GPR[EPVAP]-1659844303597
GPR[SPVATF]-1659844303597
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844304800
GPR[EPVS]-1659844304800
========
this.axisOffset=axisOffset;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844304802
GPR[SPVAP]-1659844304802
GPR[EPVAP]-1659844306224
GPR[SPVATF]-1659844306224
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844307373
GPR[EPVS]-1659844307373
========
if(axisOffset==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
this.axisOffset=axisOffset;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844307375
GPR[SPVAP]-1659844307375
GPR[EPVAP]-1659844308870
GPR[SPVATF]-1659844308870
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844310044
GPR[EPVS]-1659844310044
========
if(axisOffset==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844310047
GPR[SPVAP]-1659844310047
GPR[EPVAP]-1659844311454
GPR[SPVATF]-1659844311454
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844312600
GPR[EPVS]-1659844312600
========
if(axisOffset==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
this.axisOffset=axisOffset;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844312602
GPR[SPVAP]-1659844312602
GPR[EPVAP]-1659844314035
GPR[SPVATF]-1659844314035
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844315205
GPR[EPVS]-1659844315205
========
if(orientation==null){
throw new IllegalArgumentException("Null \'orientation\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844315207
GPR[SPVAP]-1659844315207
GPR[EPVAP]-1659844316654
GPR[SPVATF]-1659844316654
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844317833
GPR[EPVS]-1659844317833
========
this.orientation=orientation;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844317835
GPR[SPVAP]-1659844317835
GPR[EPVAP]-1659844319306
GPR[SPVATF]-1659844319306
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844320480
GPR[EPVS]-1659844320480
========
if(orientation==null){
throw new IllegalArgumentException("Null \'orientation\' argument.");
}
this.orientation=orientation;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844320483
GPR[SPVAP]-1659844320483
GPR[EPVAP]-1659844321884
GPR[SPVATF]-1659844321884
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844323035
GPR[EPVS]-1659844323035
========
if(renderingOrder==null){
throw new IllegalArgumentException("Null \'order\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844323038
GPR[SPVAP]-1659844323038
GPR[EPVAP]-1659844324451
GPR[SPVATF]-1659844324451
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844325605
GPR[EPVS]-1659844325605
========
this.renderingOrder=renderingOrder;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844325607
GPR[SPVAP]-1659844325607
GPR[EPVAP]-1659844327173
GPR[SPVATF]-1659844327173
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844328318
GPR[EPVS]-1659844328318
========
if(renderingOrder==null){
throw new IllegalArgumentException("Null \'order\' argument.");
}
this.renderingOrder=renderingOrder;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844328322
GPR[SPVAP]-1659844328322
GPR[EPVAP]-1659844329799
GPR[SPVATF]-1659844329799
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844331037
GPR[EPVS]-1659844331037
========
if(columnRenderingOrder==null){
throw new IllegalArgumentException("Null \'order\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844331040
GPR[SPVAP]-1659844331040
GPR[EPVAP]-1659844332442
GPR[SPVATF]-1659844332442
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844333645
GPR[EPVS]-1659844333645
========
this.columnRenderingOrder=columnRenderingOrder;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844333649
GPR[SPVAP]-1659844333649
GPR[EPVAP]-1659844335074
GPR[SPVATF]-1659844335074
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844336213
GPR[EPVS]-1659844336213
========
if(columnRenderingOrder==null){
throw new IllegalArgumentException("Null \'order\' argument.");
}
this.columnRenderingOrder=columnRenderingOrder;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844336216
GPR[SPVAP]-1659844336216
GPR[EPVAP]-1659844337650
GPR[SPVATF]-1659844337650
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844338859
GPR[EPVS]-1659844338859
========
this.rowRenderingOrder=columnRenderingOrder;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844338862
GPR[SPVAP]-1659844338862
GPR[EPVAP]-1659844340296
GPR[SPVATF]-1659844340296
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844341504
GPR[EPVS]-1659844341504
========
if(columnRenderingOrder==null){
throw new IllegalArgumentException("Null \'order\' argument.");
}
this.rowRenderingOrder=columnRenderingOrder;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844341507
GPR[SPVAP]-1659844341507
GPR[EPVAP]-1659844342898
GPR[SPVATF]-1659844342898
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844344041
GPR[EPVS]-1659844344041
========
if(domainGridlinePosition==null){
throw new IllegalArgumentException("Null \'position\' argument.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844344043
GPR[SPVAP]-1659844344043
GPR[EPVAP]-1659844345464
GPR[SPVATF]-1659844345464
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844346616
GPR[EPVS]-1659844346616
========
this.domainGridlinePosition=domainGridlinePosition;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844346619
GPR[SPVAP]-1659844346619
GPR[EPVAP]-1659844348019
GPR[SPVATF]-1659844348019
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844349210
GPR[EPVS]-1659844349210
========
if(domainGridlinePosition==null){
throw new IllegalArgumentException("Null \'position\' argument.");
}
this.domainGridlinePosition=domainGridlinePosition;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844349213
GPR[SPVAP]-1659844349213
GPR[EPVAP]-1659844350624
GPR[SPVATF]-1659844350624
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844351805
GPR[EPVS]-1659844351805
========
if(rangeMinorGridlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' not permitted.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844351808
GPR[SPVAP]-1659844351808
GPR[EPVAP]-1659844353210
GPR[SPVATF]-1659844353211
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844354407
GPR[EPVS]-1659844354407
========
this.domainGridlineStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844354410
GPR[SPVAP]-1659844354410
GPR[EPVAP]-1659844355823
GPR[SPVATF]-1659844355823
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844356969
GPR[EPVS]-1659844356969
========
if(rangeMinorGridlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' not permitted.");
}
this.domainGridlineStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844356971
GPR[SPVAP]-1659844356972
GPR[EPVAP]-1659844358448
GPR[SPVATF]-1659844358448
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844359665
GPR[EPVS]-1659844359665
========
this.domainGridlinePaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844359667
GPR[SPVAP]-1659844359667
GPR[EPVAP]-1659844361087
GPR[SPVATF]-1659844361087
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844362253
GPR[EPVS]-1659844362253
========
if(rangeMinorGridlinePaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.domainGridlinePaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844362255
GPR[SPVAP]-1659844362255
GPR[EPVAP]-1659844363654
GPR[SPVATF]-1659844363654
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844366830
GPR[EPVS]-1659844366830
========
this.rangeZeroBaselineStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844366833
GPR[SPVAP]-1659844366833
GPR[EPVAP]-1659844368238
GPR[SPVATF]-1659844368238
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844369397
GPR[EPVS]-1659844369397
========
if(rangeMinorGridlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.rangeZeroBaselineStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844369399
GPR[SPVAP]-1659844369399
GPR[EPVAP]-1659844370803
GPR[SPVATF]-1659844370803
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844371949
GPR[EPVS]-1659844371949
========
this.rangeZeroBaselinePaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844371952
GPR[SPVAP]-1659844371952
GPR[EPVAP]-1659844373380
GPR[SPVATF]-1659844373380
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844374517
GPR[EPVS]-1659844374517
========
if(rangeMinorGridlinePaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.rangeZeroBaselinePaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844374519
GPR[SPVAP]-1659844374519
GPR[EPVAP]-1659844375921
GPR[SPVATF]-1659844375922
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844377071
GPR[EPVS]-1659844377071
========
this.rangeGridlineStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844377074
GPR[SPVAP]-1659844377074
GPR[EPVAP]-1659844378486
GPR[SPVATF]-1659844378486
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844379649
GPR[EPVS]-1659844379649
========
if(rangeMinorGridlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.rangeGridlineStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844379652
GPR[SPVAP]-1659844379652
GPR[EPVAP]-1659844381167
GPR[SPVATF]-1659844381167
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844382310
GPR[EPVS]-1659844382310
========
this.rangeMinorGridlineStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844382313
GPR[SPVAP]-1659844382313
GPR[EPVAP]-1659844383721
GPR[SPVATF]-1659844383721
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844384917
GPR[EPVS]-1659844384917
========
if(rangeMinorGridlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.rangeMinorGridlineStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844384920
GPR[SPVAP]-1659844384920
GPR[EPVAP]-1659844386378
GPR[SPVATF]-1659844386378
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844387577
GPR[EPVS]-1659844387577
========
this.rangeMinorGridlinePaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844387579
GPR[SPVAP]-1659844387579
GPR[EPVAP]-1659844388989
GPR[SPVATF]-1659844388989
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844390186
GPR[EPVS]-1659844390186
========
if(rangeMinorGridlinePaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.rangeMinorGridlinePaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844390189
GPR[SPVAP]-1659844390189
GPR[EPVAP]-1659844391654
GPR[SPVATF]-1659844391654
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844392817
GPR[EPVS]-1659844392817
========
this.domainCrosshairPaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844392820
GPR[SPVAP]-1659844392820
GPR[EPVAP]-1659844394224
GPR[SPVATF]-1659844394224
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844395404
GPR[EPVS]-1659844395404
========
if(rangeMinorGridlinePaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.domainCrosshairPaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844395406
GPR[SPVAP]-1659844395406
GPR[EPVAP]-1659844396862
GPR[SPVATF]-1659844396862
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844398073
GPR[EPVS]-1659844398073
========
this.rangeCrosshairPaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844398075
GPR[SPVAP]-1659844398075
GPR[EPVAP]-1659844399510
GPR[SPVATF]-1659844399510
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844400657
GPR[EPVS]-1659844400657
========
if(rangeMinorGridlinePaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.rangeCrosshairPaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844400661
GPR[SPVAP]-1659844400661
GPR[EPVAP]-1659844402099
GPR[SPVATF]-1659844402099
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844403281
GPR[EPVS]-1659844403281
========
this.axisOffset=padding;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844403284
GPR[SPVAP]-1659844403284
GPR[EPVAP]-1659844404126
GPR[EPVS]-1659844404126
========
this.rangeMinorGridlinePaint=paint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844404129
GPR[SPVAP]-1659844404129
GPR[EPVAP]-1659844404986
GPR[EPVS]-1659844404986
========
if(rangeMinorGridlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.domainGridlineStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844404988
GPR[SPVAP]-1659844404988
GPR[EPVAP]-1659844406460
GPR[SPVATF]-1659844406460
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844407620
GPR[EPVS]-1659844407620
========
this.domainCrosshairStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844407625
GPR[SPVAP]-1659844407625
GPR[EPVAP]-1659844409030
GPR[SPVATF]-1659844409030
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844410174
GPR[EPVS]-1659844410174
========
if(rangeMinorGridlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.domainCrosshairStroke=rangeMinorGridlineStroke;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844410177
GPR[SPVAP]-1659844410177
GPR[EPVAP]-1659844411583
GPR[SPVATF]-1659844411583
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844412748
GPR[EPVS]-1659844412748
========
if(DEFAULT_VALUE_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844412751
GPR[SPVAP]-1659844412751
GPR[EPVAP]-1659844414226
GPR[SPVATF]-1659844414226
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844415386
GPR[EPVS]-1659844415386
========
if(DEFAULT_VALUE_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.DEFAULT_VALUE_LABEL_FONT=DEFAULT_VALUE_LABEL_FONT;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844415390
GPR[SPVAP]-1659844415390
GPR[EPVAP]-1659844416255
GPR[EPVS]-1659844416255
========
if(rangeMinorGridlinePaint==null){
throw new IllegalArgumentException("Null \'paint\' argument");
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844416258
GPR[SPVAP]-1659844416258
GPR[EPVAP]-1659844417663
GPR[SPVATF]-1659844417663
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844418805
GPR[EPVS]-1659844418805
========
if(rangeMinorGridlinePaint==null){
throw new IllegalArgumentException("Null \'paint\' argument");
}
this.rangeGridlinePaint=rangeMinorGridlinePaint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844418808
GPR[SPVAP]-1659844418808
GPR[EPVAP]-1659844420243
GPR[SPVATF]-1659844420243
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844421464
GPR[EPVS]-1659844421464
========
this.crosshairDatasetIndex=crosshairDatasetIndex;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844421468
GPR[SPVAP]-1659844421468
GPR[EPVAP]-1659844422913
GPR[SPVATF]-1659844422913
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844424083
GPR[EPVS]-1659844424083
========
if(this.rangeGridlinePaint!=null){
if(this.backgroundPaint.equals(rangeMinorGridlinePaint)){
return ;
}
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844424086
GPR[SPVAP]-1659844424086
GPR[EPVAP]-1659844424941
GPR[EPVS]-1659844424941
========
if(this.rangeCrosshairStroke!=null){
if(this.outlineStroke.equals(rangeMinorGridlineStroke)){
return ;
}
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844424944
GPR[SPVAP]-1659844424944
GPR[EPVAP]-1659844425783
GPR[EPVS]-1659844425783
========
if(this.rangeGridlinePaint!=null){
if(this.outlinePaint.equals(rangeMinorGridlinePaint)){
return ;
}
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844425786
GPR[SPVAP]-1659844425786
GPR[EPVAP]-1659844426627
GPR[EPVS]-1659844426627
========
if(getRangeAxis(1)!=null){
range2.configure();
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844426629
GPR[SPVAP]-1659844426629
GPR[EPVAP]-1659844427486
GPR[EPVS]-1659844427486
========
if(this.foregroundRangeMarkers==null){
this.explodePercentages=new TreeMap();
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844427489
GPR[SPVAP]-1659844427489
GPR[EPVAP]-1659844428388
GPR[EPVS]-1659844428388
========
this.foregroundRangeMarkers.put(domainCrosshairRowKey,new Double(anchorValue));
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844428390
GPR[SPVAP]-1659844428390
GPR[EPVAP]-1659844429820
GPR[SPVATF]-1659844429820
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844431084
GPR[EPVS]-1659844431084
========
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
this.foregroundRangeMarkers.put(domainCrosshairRowKey,new Double(anchorValue));
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844431087
GPR[SPVAP]-1659844431087
GPR[EPVAP]-1659844432498
GPR[SPVATF]-1659844432499
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844433648
GPR[EPVS]-1659844433648
========
if((DialLayer)this.annotations.get(index)!=null){
layer.removeChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844433650
GPR[SPVAP]-1659844433650
GPR[EPVAP]-1659844434498
GPR[EPVS]-1659844434498
========
this.annotations.remove(index);
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844434500
GPR[SPVAP]-1659844434500
GPR[EPVAP]-1659844435935
GPR[SPVATF]-1659844435935
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844438893
GPR[EPVS]-1659844438893
========
configureDomainAxes();
this.annotations.remove(index);
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844438896
GPR[SPVAP]-1659844438896
GPR[EPVAP]-1659844440307
GPR[SPVATF]-1659844440307
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844441490
GPR[EPVS]-1659844441490
========
if(this.renderer!=null){
this.renderer.removeChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844441493
GPR[SPVAP]-1659844441493
GPR[EPVAP]-1659844442370
GPR[EPVS]-1659844442370
========
this.renderer=renderer;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844442372
GPR[SPVAP]-1659844442372
GPR[EPVAP]-1659844443222
GPR[EPVS]-1659844443222
========
if(this.renderer!=null){
this.renderer.setPlot(this);
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844443224
GPR[SPVAP]-1659844443224
GPR[EPVAP]-1659844444104
GPR[EPVS]-1659844444104
========
configureDomainAxes();
this.renderer=renderer;
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844444107
GPR[SPVAP]-1659844444107
GPR[EPVAP]-1659844445001
GPR[EPVS]-1659844445001
========
this.domainGridlinesVisible=rangeCrosshairLockedOnData;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844445003
GPR[SPVAP]-1659844445003
GPR[EPVAP]-1659844446416
GPR[SPVATF]-1659844446416
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844447572
GPR[EPVS]-1659844447572
========
this.anchorValue=stepPoint;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844447575
GPR[SPVAP]-1659844447575
GPR[EPVAP]-1659844448409
GPR[EPVS]-1659844448409
========
this.rangeCrosshairLockedOnData[crosshairDatasetIndex]=selected;
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844448413
GPR[SPVAP]-1659844448413
GPR[EPVAP]-1659844449267
GPR[EPVS]-1659844449267
GPR[ESUN]-1659844449270
GPR[SSUN]-1659844449270
org.jfree.chart.plot.CategoryPlot,1681
========
if(notify){
this.backgroundImageAlignment=crosshairDatasetIndex;
fireChangeEvent();
}

========
GPR[SPVS]-1659844451519
GPR[SPVAP]-1659844451519
GPR[EPVAP]-1659844453447
GPR[EPVS]-1659844453447
========
if(notify){
this.interiorGap=anchorValue;
fireChangeEvent();
}

========
GPR[SPVS]-1659844453450
GPR[SPVAP]-1659844453450
GPR[EPVAP]-1659844455342
GPR[EPVS]-1659844455342
========
if(notify){
this.domainGridlinesVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844455345
GPR[SPVAP]-1659844455345
GPR[EPVAP]-1659844459764
GPR[SPVATF]-1659844459764
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844460926
GPR[EPVS]-1659844460926
========
if(notify){
this.rangeGridlinesVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844460929
GPR[SPVAP]-1659844460929
GPR[EPVAP]-1659844462421
GPR[SPVATF]-1659844462421
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844463579
GPR[EPVS]-1659844463579
========
if(notify){
this.rangeMinorGridlinesVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844463583
GPR[SPVAP]-1659844463583
GPR[EPVAP]-1659844464987
GPR[SPVATF]-1659844464987
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844466160
GPR[EPVS]-1659844466160
========
if(notify){
this.domainCrosshairVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844466164
GPR[SPVAP]-1659844466164
GPR[EPVAP]-1659844467584
GPR[SPVATF]-1659844467584
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844468774
GPR[EPVS]-1659844468774
========
if(notify){
this.rangeCrosshairVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844468777
GPR[SPVAP]-1659844468777
GPR[EPVAP]-1659844470187
GPR[SPVATF]-1659844470187
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844471352
GPR[EPVS]-1659844471352
========
if(notify){
this.rangeCrosshairLockedOnData=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844471355
GPR[SPVAP]-1659844471355
GPR[EPVAP]-1659844472763
GPR[SPVATF]-1659844472763
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844473961
GPR[EPVS]-1659844473961
========
if(notify){
this.units=crosshairDatasetIndex;
fireChangeEvent();
}

========
GPR[SPVS]-1659844473964
GPR[SPVAP]-1659844473964
GPR[EPVAP]-1659844474844
GPR[EPVS]-1659844474844
========
if(notify){
this.tickLabelsVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844474846
GPR[SPVAP]-1659844474846
GPR[EPVAP]-1659844475700
GPR[EPVS]-1659844475700
========
if(notify){
this.angleLabelsVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844475703
GPR[SPVAP]-1659844475703
GPR[EPVAP]-1659844476636
GPR[EPVS]-1659844476636
========
if(notify){
this.angleGridlinesVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844476638
GPR[SPVAP]-1659844476638
GPR[EPVAP]-1659844477511
GPR[EPVS]-1659844477511
========
if(notify){
this.radiusGridlinesVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844477514
GPR[SPVAP]-1659844477514
GPR[EPVAP]-1659844478360
GPR[EPVS]-1659844478360
========
if(notify){
this.domainMinorGridlinesVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844478362
GPR[SPVAP]-1659844478362
GPR[EPVAP]-1659844479201
GPR[EPVS]-1659844479201
========
if(notify){
this.domainCrosshairLockedOnData=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844479203
GPR[SPVAP]-1659844479203
GPR[EPVAP]-1659844480092
GPR[EPVS]-1659844480092
========
if(notify){
this.labelType=crosshairDatasetIndex;
fireChangeEvent();
}

========
GPR[SPVS]-1659844480095
GPR[SPVAP]-1659844480095
GPR[EPVAP]-1659844480964
GPR[EPVS]-1659844480964
========
if(notify){
this.includeBaseInRange=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844480966
GPR[SPVAP]-1659844480966
GPR[EPVAP]-1659844481827
GPR[EPVS]-1659844481827
========
if(notify){
this.plotLines=drawSharedDomainAxis;
fireChangeEvent();
}

========
GPR[SPVS]-1659844481829
GPR[SPVAP]-1659844481829
GPR[EPVAP]-1659844482676
GPR[EPVS]-1659844482676
========
if(notify){
this.treatLegendShapeAsLine=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844482678
GPR[SPVAP]-1659844482678
GPR[EPVAP]-1659844483520
GPR[EPVS]-1659844483520
========
if(notify){
this.drawXError=drawSharedDomainAxis;
fireChangeEvent();
}

========
GPR[SPVS]-1659844483522
GPR[SPVAP]-1659844483522
GPR[EPVAP]-1659844484424
GPR[EPVS]-1659844484424
========
if(notify){
this.drawYError=drawSharedDomainAxis;
fireChangeEvent();
}

========
GPR[SPVS]-1659844484427
GPR[SPVAP]-1659844484427
GPR[EPVAP]-1659844485333
GPR[EPVS]-1659844485333
========
if(notify){
this.drawSeriesLineAsPath=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844485336
GPR[SPVAP]-1659844485336
GPR[EPVAP]-1659844486197
GPR[EPVS]-1659844486197
========
if(notify){
this.boxWidth=anchorValue;
fireChangeEvent();
}

========
GPR[SPVS]-1659844486200
GPR[SPVAP]-1659844486200
GPR[EPVAP]-1659844487080
GPR[EPVS]-1659844487080
========
if(notify){
this.useYInterval=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844487083
GPR[SPVAP]-1659844487083
GPR[EPVAP]-1659844487939
GPR[EPVS]-1659844487939
========
if(notify){
this.candleWidth=anchorValue;
fireChangeEvent();
}

========
GPR[SPVS]-1659844487942
GPR[SPVAP]-1659844487942
GPR[EPVAP]-1659844488812
GPR[EPVS]-1659844488812
========
if(notify){
this.autoWidthMethod=crosshairDatasetIndex;
fireChangeEvent();
}

========
GPR[SPVS]-1659844488815
GPR[SPVAP]-1659844488815
GPR[EPVAP]-1659844489690
GPR[EPVS]-1659844489690
========
if(notify){
this.autoWidthFactor=anchorValue;
fireChangeEvent();
}

========
GPR[SPVS]-1659844489693
GPR[SPVAP]-1659844489693
GPR[EPVAP]-1659844490554
GPR[EPVS]-1659844490554
========
if(notify){
this.autoWidthGap=anchorValue;
fireChangeEvent();
}

========
GPR[SPVS]-1659844490556
GPR[SPVAP]-1659844490556
GPR[EPVAP]-1659844491397
GPR[EPVS]-1659844491397
========
if(notify){
this.drawVolume=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844491400
GPR[SPVAP]-1659844491400
GPR[EPVAP]-1659844492244
GPR[EPVS]-1659844492244
========
if(notify){
this.useOutlinePaint=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844492246
GPR[SPVAP]-1659844492246
GPR[EPVAP]-1659844493100
GPR[EPVS]-1659844493101
========
if(notify){
this.baseShapesVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844493103
GPR[SPVAP]-1659844493103
GPR[EPVAP]-1659844493948
GPR[EPVS]-1659844493948
========
if(notify){
this.plotLines=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844493951
GPR[SPVAP]-1659844493951
GPR[EPVAP]-1659844494808
GPR[EPVS]-1659844494808
========
if(notify){
this.plotImages=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844494815
GPR[SPVAP]-1659844494815
GPR[EPVAP]-1659844495666
GPR[EPVS]-1659844495666
========
if(notify){
this.plotDiscontinuous=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844495668
GPR[SPVAP]-1659844495668
GPR[EPVAP]-1659844496511
GPR[EPVS]-1659844496511
========
if(notify){
this.visible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844496513
GPR[SPVAP]-1659844496513
GPR[EPVAP]-1659844497361
GPR[EPVS]-1659844497361
========
if(notify){
this.minorTickMarksVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844497363
GPR[SPVAP]-1659844497363
GPR[EPVAP]-1659844498214
GPR[EPVS]-1659844498214
========
if(notify){
this.tickMarksVisible=rangeZeroBaselineVisible;
fireChangeEvent();
}

========
GPR[SPVS]-1659844498217
GPR[SPVAP]-1659844498217
GPR[EPVAP]-1659844499108
GPR[EPVS]-1659844499108
========
this.domainGridlinesVisible=rangeZeroBaselineVisible;
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844499110
GPR[SPVAP]-1659844499110
GPR[EPVAP]-1659844500538
GPR[SPVATF]-1659844500538
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844501726
GPR[EPVS]-1659844501726
========
fireChangeEvent();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844501728
GPR[SPVAP]-1659844501728
GPR[EPVAP]-1659844503138
GPR[SPVATF]-1659844503138
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844504329
GPR[EPVS]-1659844504329
========
this.domainGridlinesVisible=rangeZeroBaselineVisible;
fireChangeEvent();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844504331
GPR[SPVAP]-1659844504331
GPR[EPVAP]-1659844505778
GPR[SPVATF]-1659844505778
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844506954
GPR[EPVS]-1659844506954
========
if(notify){
this.subrangePaint[range]=rangeMinorGridlinePaint;
fireChangeEvent();
}

========
GPR[SPVS]-1659844506956
GPR[SPVAP]-1659844506956
GPR[EPVAP]-1659844507829
GPR[EPVS]-1659844507829
========
if(notify){
if(notify){
fireSeriesChanged();
}
fireChangeEvent();
}

========
GPR[SPVS]-1659844507832
GPR[SPVAP]-1659844507832
GPR[EPVAP]-1659844509115
GPR[EPVS]-1659844509115
========
this.anchorValue=anchorValue;
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844509125
GPR[SPVAP]-1659844509125
GPR[EPVAP]-1659844511784
GPR[SPVATF]-1659844511784
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844512936
GPR[EPVS]-1659844512936
========
this.anchorValue=anchorValue;
fireChangeEvent();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844512940
GPR[SPVAP]-1659844512940
GPR[EPVAP]-1659844514373
GPR[SPVATF]-1659844514374
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844515570
GPR[EPVS]-1659844515570
========
this.crosshairDatasetIndex=crosshairDatasetIndex;
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844515573
GPR[SPVAP]-1659844515573
GPR[EPVAP]-1659844516975
GPR[SPVATF]-1659844516975
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844518168
GPR[EPVS]-1659844518168
========
this.crosshairDatasetIndex=crosshairDatasetIndex;
fireChangeEvent();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844518171
GPR[SPVAP]-1659844518171
GPR[EPVAP]-1659844519604
GPR[SPVATF]-1659844519604
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844520782
GPR[EPVS]-1659844520782
========
this.notify=notify;
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844520785
GPR[SPVAP]-1659844520785
GPR[EPVAP]-1659844521640
GPR[EPVS]-1659844521640
========
this.notify=rangeCrosshairLockedOnData;
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844521643
GPR[SPVAP]-1659844521643
GPR[EPVAP]-1659844522480
GPR[EPVS]-1659844522480
========
if(notify){
this.valueLocation=crosshairDatasetIndex;
fireChangeEvent();
}

========
GPR[SPVS]-1659844522484
GPR[SPVAP]-1659844522484
GPR[EPVAP]-1659844523348
GPR[EPVS]-1659844523348
========
if(notify){
this.axisLocation=crosshairDatasetIndex;
fireChangeEvent();
}

========
GPR[SPVS]-1659844523351
GPR[SPVAP]-1659844523351
GPR[EPVAP]-1659844524200
GPR[EPVS]-1659844524200
========
this.anchorValue=stepPoint;
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844524203
GPR[SPVAP]-1659844524203
GPR[EPVAP]-1659844525048
GPR[EPVS]-1659844525048
========
updateOffsets();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844525051
GPR[SPVAP]-1659844525051
GPR[EPVAP]-1659844525898
GPR[EPVS]-1659844525898
========
this.anchorValue=anchorValue;
updateOffsets();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844525901
GPR[SPVAP]-1659844525901
GPR[EPVAP]-1659844526748
GPR[EPVS]-1659844526748
========
updateOffsets();
fireChangeEvent();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844526750
GPR[SPVAP]-1659844526750
GPR[EPVAP]-1659844527637
GPR[EPVS]-1659844527637
========
this.anchorValue=anchorValue;
updateOffsets();
fireChangeEvent();
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844527639
GPR[SPVAP]-1659844527639
GPR[EPVAP]-1659844528490
GPR[EPVS]-1659844528490
========
if(notify){
notifyListeners(new AxisChangeEvent(this));
}
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844528492
GPR[SPVAP]-1659844528492
GPR[EPVAP]-1659844529338
GPR[EPVS]-1659844529338
========
if(notify){
this.autoTickUnitSelection=rangeCrosshairLockedOnData;
fireChangeEvent();
}

========
GPR[SPVS]-1659844529341
GPR[SPVAP]-1659844529341
GPR[EPVAP]-1659844530179
GPR[EPVS]-1659844530179
========
if(notify){
this.autoRange=rangeCrosshairLockedOnData;
fireChangeEvent();
}

========
GPR[SPVS]-1659844530181
GPR[SPVAP]-1659844530181
GPR[EPVAP]-1659844531034
GPR[EPVS]-1659844531034
========
if(notify){
if(this.rangeCrosshairLockedOnData){
autoAdjustRange();
}
fireChangeEvent();
}

========
GPR[SPVS]-1659844531037
GPR[SPVAP]-1659844531037
GPR[EPVAP]-1659844531882
GPR[EPVS]-1659844531882
========
if(notify){
this.autoRange=rangeCrosshairLockedOnData;
if(this.rangeCrosshairLockedOnData){
autoAdjustRange();
}

fireChangeEvent();
}

========
GPR[SPVS]-1659844531884
GPR[SPVAP]-1659844531884
GPR[EPVAP]-1659844532732
GPR[EPVS]-1659844532732
========
if(notify){
this.autoRangeMinimumSize=anchorValue;
fireChangeEvent();
}

========
GPR[SPVS]-1659844532735
GPR[SPVAP]-1659844532735
GPR[EPVAP]-1659844533576
GPR[EPVS]-1659844533576
========
if(notify){
this.autoRangeMinimumSize=anchorValue;
if(this.rangeCrosshairLockedOnData){
autoAdjustRange();
}

fireChangeEvent();
}

========
GPR[SPVS]-1659844533579
GPR[SPVAP]-1659844533579
GPR[EPVAP]-1659844534418
GPR[EPVS]-1659844534418
========
if(notify){
setDisplayRange(crosshairDatasetIndex,anchorValue,anchorValue);
fireChangeEvent();
}

========
GPR[SPVS]-1659844534421
GPR[SPVAP]-1659844534421
GPR[EPVAP]-1659844535268
GPR[EPVS]-1659844535268
========
if(notify){
setAxisRange();
fireChangeEvent();
}

========
GPR[SPVS]-1659844535271
GPR[SPVAP]-1659844535271
GPR[EPVAP]-1659844536149
GPR[EPVS]-1659844536149
========
if(notify){
fireChangeEvent();
fireChangeEvent();
}

========
GPR[SPVS]-1659844536152
GPR[SPVAP]-1659844536152
GPR[EPVAP]-1659844537628
GPR[SPVATF]-1659844537628
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844538768
GPR[EPVS]-1659844538768
========
if(notify){
setDisplayRange(crosshairDatasetIndex,anchorValue,anchorValue);
setAxisRange();
fireChangeEvent();

fireChangeEvent();
}

========
GPR[SPVS]-1659844538771
GPR[SPVAP]-1659844538771
GPR[EPVAP]-1659844539623
GPR[EPVS]-1659844539623
========
if(notify){
if(getItemCount()>this.crosshairDatasetIndex){
TimeSeriesDataItem (TimeSeriesDataItem)this.annotations.remove(0)=(TimeSeriesDataItem)this.annotations.remove(0);
updateBoundsForRemovedItem((TimeSeriesDataItem)this.annotations.remove(0));
}
fireChangeEvent();
}

========
GPR[SPVS]-1659844539626
GPR[SPVAP]-1659844539626
GPR[EPVAP]-1659844540253
GPR[EPVS]-1659844540253
========
if(notify){
removeAgedItems(false);
fireChangeEvent();
}

========
GPR[SPVS]-1659844540256
GPR[SPVAP]-1659844540256
GPR[EPVAP]-1659844541105
GPR[EPVS]-1659844541105
========
if(notify){
if(getItemCount()>this.crosshairDatasetIndex){
TimeSeriesDataItem (TimeSeriesDataItem)this.annotations.remove(0)=(TimeSeriesDataItem)this.annotations.remove(0);
updateBoundsForRemovedItem((TimeSeriesDataItem)this.annotations.remove(0));
}
removeAgedItems(false);
if(notify){
fireSeriesChanged();
}

fireChangeEvent();
}

========
GPR[SPVS]-1659844541107
GPR[SPVAP]-1659844541107
GPR[EPVAP]-1659844541761
GPR[EPVS]-1659844541761
========
if(notify){
this.notify=notify;
fireChangeEvent();
}

========
GPR[SPVS]-1659844541763
GPR[SPVAP]-1659844541763
GPR[EPVAP]-1659844542666
GPR[EPVS]-1659844542666
========
if(notify){
this.annotations.remove(crosshairDatasetIndex);
fireChangeEvent();
}

========
GPR[SPVS]-1659844542669
GPR[SPVAP]-1659844542669
GPR[EPVAP]-1659844544076
GPR[SPVATF]-1659844544076
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844545217
GPR[EPVS]-1659844545217
========
if(notify){
configureRangeAxes();
fireChangeEvent();
}

========
GPR[SPVS]-1659844545219
GPR[SPVAP]-1659844545219
GPR[EPVAP]-1659844546630
GPR[SPVATF]-1659844546630
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844547767
GPR[EPVS]-1659844547767
========
if(notify){
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();

fireChangeEvent();
}

========
GPR[SPVS]-1659844547770
GPR[SPVAP]-1659844547770
GPR[EPVAP]-1659844549196
GPR[SPVATF]-1659844549196
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844554536
GPR[EPVS]-1659844554536
========
if(notify){
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();
}

========
GPR[SPVS]-1659844554538
GPR[SPVAP]-1659844554538
GPR[EPVAP]-1659844555968
GPR[SPVATF]-1659844555968
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844557109
GPR[EPVS]-1659844557109
========
if(notify){
this.annotations.remove(crosshairDatasetIndex);
fireChangeEvent();
fireChangeEvent();
}

========
GPR[SPVS]-1659844557112
GPR[SPVAP]-1659844557112
GPR[EPVAP]-1659844558515
GPR[SPVATF]-1659844558515
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844559676
GPR[EPVS]-1659844559676
========
if(notify){
this.annotations.remove(crosshairDatasetIndex);
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();

fireChangeEvent();
}

========
GPR[SPVS]-1659844559678
GPR[SPVAP]-1659844559678
GPR[EPVAP]-1659844561086
GPR[SPVATF]-1659844561086
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844562244
GPR[EPVS]-1659844562244
========
if(notify){
configureRangeAxes();
fireChangeEvent();
fireChangeEvent();
}

========
GPR[SPVS]-1659844562247
GPR[SPVAP]-1659844562247
GPR[EPVAP]-1659844563687
GPR[SPVATF]-1659844563687
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844564848
GPR[EPVS]-1659844564848
========
if(notify){
configureRangeAxes();
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();

fireChangeEvent();
}

========
GPR[SPVS]-1659844564851
GPR[SPVAP]-1659844564851
GPR[EPVAP]-1659844566291
GPR[SPVATF]-1659844566291
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844567431
GPR[EPVS]-1659844567431
========
if(notify){
fireChangeEvent();
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();

fireChangeEvent();
}

========
GPR[SPVS]-1659844567434
GPR[SPVAP]-1659844567434
GPR[EPVAP]-1659844568830
GPR[SPVATF]-1659844568830
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844570002
GPR[EPVS]-1659844570002
========
if(notify){
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();
fireChangeEvent();
}

========
GPR[SPVS]-1659844570005
GPR[SPVAP]-1659844570005
GPR[EPVAP]-1659844571412
GPR[SPVATF]-1659844571412
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844572572
GPR[EPVS]-1659844572572
========
if(notify){
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();

fireChangeEvent();
}

========
GPR[SPVS]-1659844572574
GPR[SPVAP]-1659844572574
GPR[EPVAP]-1659844574054
GPR[SPVATF]-1659844574054
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844575213
GPR[EPVS]-1659844575213
========
if(notify){
this.annotations.remove(crosshairDatasetIndex);
fireChangeEvent();
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();

fireChangeEvent();
}

========
GPR[SPVS]-1659844575215
GPR[SPVAP]-1659844575215
GPR[EPVAP]-1659844576614
GPR[SPVATF]-1659844576614
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844577769
GPR[EPVS]-1659844577769
========
if(notify){
configureRangeAxes();
fireChangeEvent();
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();

fireChangeEvent();
}

========
GPR[SPVS]-1659844577771
GPR[SPVAP]-1659844577771
GPR[EPVAP]-1659844579238
GPR[SPVATF]-1659844579238
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844580540
GPR[EPVS]-1659844580540
========
if(notify){
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();
this.annotations.remove(crosshairDatasetIndex);
configureRangeAxes();
fireChangeEvent();

fireChangeEvent();
}

========
GPR[SPVS]-1659844580551
GPR[SPVAP]-1659844580551
GPR[EPVAP]-1659844583778
GPR[SPVATF]-1659844583778
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844584937
GPR[EPVS]-1659844584937
========
this.domainGridlinesVisible=rangeCrosshairLockedOnData;
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844584940
GPR[SPVAP]-1659844584940
GPR[EPVAP]-1659844586381
GPR[SPVATF]-1659844586381
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844587559
GPR[EPVS]-1659844587559
========
(SimpleHistogramBin)this.annotations.get(crosshairDatasetIndex).setSelected(rangeCrosshairLockedOnData);
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844587562
GPR[SPVAP]-1659844587562
GPR[EPVAP]-1659844588227
GPR[EPVS]-1659844588227
========
this.rangeCrosshairLockedOnData[crosshairDatasetIndex]=selected;
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844588230
GPR[SPVAP]-1659844588230
GPR[EPVAP]-1659844589082
GPR[EPVS]-1659844589082
========
if(notify){
fireSelectionEvent();
}
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844589085
GPR[SPVAP]-1659844589085
GPR[EPVAP]-1659844589927
GPR[EPVS]-1659844589927
========
getSeries(crosshairDatasetIndex).getRawDataItem(crosshairDatasetIndex).setSelected(rangeCrosshairLockedOnData);
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844589930
GPR[SPVAP]-1659844589930
GPR[EPVAP]-1659844590780
GPR[EPVS]-1659844590780
========
super.setAutoRangeMinimumSize(anchorValue,notify);
if(notify){
fireChangeEvent();
}

========
GPR[SPVS]-1659844590783
GPR[SPVAP]-1659844590783
GPR[EPVAP]-1659844591620
GPR[EPVS]-1659844591620
GPR[ESUN]-1659844591622
GPR[SSUN]-1659844591622
org.jfree.chart.plot.CategoryPlot,1682
GPR[ESUN]-1659844592150
GPR[SSUN]-1659844592150
org.jfree.chart.plot.CategoryPlot,1684
Find no block!
GPR[SSUN]-1659844592493
org.jfree.chart.plot.CategoryPlot,567
GPR[ESUN]-1659844594516
GPR[SSUN]-1659844594516
org.jfree.chart.plot.CategoryPlot,568
Find no block!
GPR[SSUN]-1659844594859
org.jfree.chart.plot.CategoryPlot,1339
========
setDataset(dataset);

========
GPR[SPVS]-1659844597014
GPR[SPVAP]-1659844597014
GPR[EPVAP]-1659844601625
GPR[SPVATF]-1659844601625
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844602793
GPR[EPVS]-1659844602793
GPR[ESUN]-1659844602797
GPR[SSUN]-1659844602797
org.jfree.chart.plot.CategoryPlot,1340
Find no block!
GPR[SSUN]-1659844603299
org.jfree.chart.plot.CategoryPlot,1358
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844605493
GPR[SPVAP]-1659844605493
GPR[EPVAP]-1659844610082
GPR[SPVATF]-1659844610082
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844611263
GPR[EPVS]-1659844611263
========
if(dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844611265
GPR[SPVAP]-1659844611265
GPR[EPVAP]-1659844612738
GPR[SPVATF]-1659844612738
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844613900
GPR[EPVS]-1659844613900
========
if(this.dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844613902
GPR[SPVAP]-1659844613902
GPR[EPVAP]-1659844614784
GPR[EPVS]-1659844614784
========
if(dataset!=null){
this.datasets[0]=dataset;
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844614786
GPR[SPVAP]-1659844614786
GPR[EPVAP]-1659844615630
GPR[EPVS]-1659844615630
========
if(clone.dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844615633
GPR[SPVAP]-1659844615633
GPR[EPVAP]-1659844616470
GPR[EPVS]-1659844616470
========
if(this.dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844616473
GPR[SPVAP]-1659844616473
GPR[EPVAP]-1659844617349
GPR[EPVS]-1659844617349
========
this.dataset=dataset;
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844617351
GPR[SPVAP]-1659844617351
GPR[EPVAP]-1659844618264
GPR[EPVS]-1659844618264
========
if(dataset!=null){
setDatasetGroup(this.dataset.getGroup());
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844618268
GPR[SPVAP]-1659844618268
GPR[EPVAP]-1659844619153
GPR[EPVS]-1659844619153
========
if(rangeCrosshairLockedOnData){
fireChangeEvent();
}
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844619156
GPR[SPVAP]-1659844619156
GPR[EPVAP]-1659844620595
GPR[SPVATF]-1659844620595
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844621758
GPR[EPVS]-1659844621758
========
if(rangeCrosshairLockedOnData){
fireChangeEvent();
}
if(dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844621761
GPR[SPVAP]-1659844621761
GPR[EPVAP]-1659844623182
GPR[SPVATF]-1659844623182
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844624354
GPR[EPVS]-1659844624354
========
fireChangeEvent();
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844624356
GPR[SPVAP]-1659844624356
GPR[EPVAP]-1659844625752
GPR[SPVATF]-1659844625752
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844626924
GPR[EPVS]-1659844626924
========
fireChangeEvent();
if(dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844626927
GPR[SPVAP]-1659844626927
GPR[EPVAP]-1659844628330
GPR[SPVATF]-1659844628330
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844629483
GPR[EPVS]-1659844629483
========
repaint();
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844629486
GPR[SPVAP]-1659844629486
GPR[EPVAP]-1659844630384
GPR[EPVS]-1659844630384
========
fireChartChanged();
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844630386
GPR[SPVAP]-1659844630386
GPR[EPVAP]-1659844631262
GPR[EPVS]-1659844631262
========
if(super.findRangeBounds(dataset,rangeCrosshairLockedOnData)!=null){
if(this.rangeCrosshairLockedOnData){
result=Range.expandToInclude(result,this.anchorValue);
}
}
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844631264
GPR[SPVAP]-1659844631264
GPR[EPVAP]-1659844632126
GPR[EPVS]-1659844632126
========
if(dataset!=null){
this.columnCount=dataset.getColumnCount();
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844632128
GPR[SPVAP]-1659844632128
GPR[EPVAP]-1659844632998
GPR[EPVS]-1659844632998
========
fireDatasetChanged(new DatasetChangeInfo());
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844633001
GPR[SPVAP]-1659844633001
GPR[EPVAP]-1659844633895
GPR[EPVS]-1659844633895
========
fireDatasetChanged(new DatasetChangeInfo());
if(dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844633898
GPR[SPVAP]-1659844633898
GPR[EPVAP]-1659844634741
GPR[EPVS]-1659844634741
========
this.domainCrosshairRowKey=rowKey;
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844634745
GPR[SPVAP]-1659844634745
GPR[EPVAP]-1659844635616
GPR[EPVS]-1659844635616
========
this.domainCrosshairRowKey=columnKey;
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844635619
GPR[SPVAP]-1659844635619
GPR[EPVAP]-1659844636456
GPR[EPVS]-1659844636456
========
this.dataset=dataset;
if(dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659844636458
GPR[SPVAP]-1659844636459
GPR[EPVAP]-1659844637339
GPR[EPVS]-1659844637339
GPR[ESUN]-1659844637342
GPR[SSUN]-1659844637342
org.jfree.chart.plot.CategoryPlot,1045
========
if(parent instanceof CategoryPlot){
rangeAxis=(XYPlot)parent.getRangeAxis();
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}

========
GPR[SPVS]-1659844639712
GPR[SPVAP]-1659844639712
GPR[EPVAP]-1659844641627
GPR[EPVS]-1659844641627
========
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getDomainAxis(index);
}

========
GPR[SPVS]-1659844641629
GPR[SPVAP]-1659844641630
GPR[EPVAP]-1659844643579
GPR[EPVS]-1659844643579
========
if(result==null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getDomainAxis(index);
}
}

========
GPR[SPVS]-1659844645518
GPR[SPVAP]-1659844645518
GPR[EPVAP]-1659844647396
GPR[EPVS]-1659844647396
========
if(axis==null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844647400
GPR[SPVAP]-1659844647400
GPR[EPVAP]-1659844649169
GPR[EPVS]-1659844649169
========
if(result!=null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844649172
GPR[SPVAP]-1659844649172
GPR[EPVAP]-1659844653512
GPR[SPVATF]-1659844653512
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844654692
GPR[EPVS]-1659844654692
========
if(yAxis==null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844654695
GPR[SPVAP]-1659844654695
GPR[EPVAP]-1659844657624
GPR[EPVS]-1659844657624
========
if(axis!=null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844657626
GPR[SPVAP]-1659844657626
GPR[EPVAP]-1659844658517
GPR[EPVS]-1659844658517
========
this.index=index;
if(result==null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844658527
GPR[SPVAP]-1659844658527
GPR[EPVAP]-1659844659424
GPR[EPVS]-1659844659424
========
if(result==null||getRangeAxisForDataset(index)==null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844659427
GPR[SPVAP]-1659844659427
GPR[EPVAP]-1659844660876
GPR[SPVATF]-1659844660876
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844662080
GPR[EPVS]-1659844662080
========
if(xAxis==null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844662083
GPR[SPVAP]-1659844662083
GPR[EPVAP]-1659844662944
GPR[EPVS]-1659844662944
========
rangeCrosshairLockedOnData=true;
if(result==null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844662946
GPR[SPVAP]-1659844662946
GPR[EPVAP]-1659844664376
GPR[SPVATF]-1659844664376
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844665555
GPR[EPVS]-1659844665555
========
rangeCrosshairLockedOnData=true;
if(result==null||getRangeAxisForDataset(index)==null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844665557
GPR[SPVAP]-1659844665557
GPR[EPVAP]-1659844667028
GPR[SPVATF]-1659844667028
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844668189
GPR[EPVS]-1659844668189
========
if(yAxis!=null){
Plot parent=getParent();
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}
}

========
GPR[SPVS]-1659844668196
GPR[SPVAP]-1659844668196
GPR[EPVAP]-1659844669052
GPR[EPVS]-1659844669052
GPR[ESUN]-1659844669053
GPR[SSUN]-1659844669053
org.jfree.chart.plot.CategoryPlot,1046
GPR[ESUN]-1659844669546
GPR[SSUN]-1659844669546
org.jfree.chart.plot.CategoryPlot,1352
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(this.dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844672874
GPR[SPVAP]-1659844672874
GPR[EPVAP]-1659844674798
GPR[EPVS]-1659844674798
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.dataset=dataset;
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844674801
GPR[SPVAP]-1659844674801
GPR[EPVAP]-1659844676724
GPR[EPVS]-1659844676724
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset==null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844676726
GPR[SPVAP]-1659844676726
GPR[EPVAP]-1659844681320
GPR[SPVATF]-1659844681320
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844682488
GPR[EPVS]-1659844682488
========
if(rangeCrosshairLockedOnData){
fireChangeEvent();
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844682492
GPR[SPVAP]-1659844682492
GPR[EPVAP]-1659844683930
GPR[SPVATF]-1659844683930
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844685093
GPR[EPVS]-1659844685093
========
configureRangeAxes();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844685095
GPR[SPVAP]-1659844685095
GPR[EPVAP]-1659844686524
GPR[SPVATF]-1659844686524
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844687693
GPR[EPVS]-1659844687693
========
configureRangeAxes();
if(rangeCrosshairLockedOnData){
fireChangeEvent();
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844687696
GPR[SPVAP]-1659844687696
GPR[EPVAP]-1659844689155
GPR[SPVATF]-1659844689155
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844690339
GPR[EPVS]-1659844690339
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(dataset!=null){
dataset.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844690342
GPR[SPVAP]-1659844690342
GPR[EPVAP]-1659844691754
GPR[SPVATF]-1659844691754
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844692909
GPR[EPVS]-1659844692909
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(dataset!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844692912
GPR[SPVAP]-1659844692912
GPR[EPVAP]-1659844694298
GPR[SPVATF]-1659844694298
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844695473
GPR[EPVS]-1659844695473
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
dataset.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844695475
GPR[SPVAP]-1659844695475
GPR[EPVAP]-1659844696903
GPR[SPVATF]-1659844696903
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844698079
GPR[EPVS]-1659844698079
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.annotations.remove(index);
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844698082
GPR[SPVAP]-1659844698082
GPR[EPVAP]-1659844699485
GPR[SPVATF]-1659844699485
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844700639
GPR[EPVS]-1659844700639
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
super();
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844700642
GPR[SPVAP]-1659844700642
GPR[EPVAP]-1659844701499
GPR[EPVS]-1659844701499
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
this.existing=dataset;
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844701502
GPR[SPVAP]-1659844701502
GPR[EPVAP]-1659844702350
GPR[EPVS]-1659844702350
========
this.anchorValue=DEFAULT_HEAD;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844702352
GPR[SPVAP]-1659844702352
GPR[EPVAP]-1659844703217
GPR[EPVS]-1659844703217
========
this.anchorValue=DEFAULT_AXIS_LABEL_GAP;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844703220
GPR[SPVAP]-1659844703220
GPR[EPVAP]-1659844704074
GPR[EPVS]-1659844704074
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new IllegalArgumentException("Requires \'index\' >= 0.");
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844704077
GPR[SPVAP]-1659844704077
GPR[EPVAP]-1659844705523
GPR[SPVATF]-1659844705523
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844706670
GPR[EPVS]-1659844706670
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.datasetToDomainAxesMap.put(event,new ArrayList(annotations));
datasetChanged(event);

========
GPR[SPVS]-1659844706673
GPR[SPVAP]-1659844706673
GPR[EPVAP]-1659844708080
GPR[SPVATF]-1659844708080
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844709249
GPR[EPVS]-1659844709249
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new IllegalArgumentException("Requires \'index\' >= 0.");
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.datasetToDomainAxesMap.put(event,new ArrayList(annotations));
datasetChanged(event);

========
GPR[SPVS]-1659844709253
GPR[SPVAP]-1659844709253
GPR[EPVAP]-1659844710667
GPR[SPVATF]-1659844710667
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844711816
GPR[EPVS]-1659844711816
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.datasetToRangeAxesMap.put(event,new ArrayList(annotations));
datasetChanged(event);

========
GPR[SPVS]-1659844711819
GPR[SPVAP]-1659844711819
GPR[EPVAP]-1659844713249
GPR[SPVATF]-1659844713249
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844714435
GPR[EPVS]-1659844714435
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new IllegalArgumentException("Requires \'index\' >= 0.");
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.datasetToRangeAxesMap.put(event,new ArrayList(annotations));
datasetChanged(event);

========
GPR[SPVS]-1659844714439
GPR[SPVAP]-1659844714439
GPR[EPVAP]-1659844715851
GPR[SPVATF]-1659844715851
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844717032
GPR[EPVS]-1659844717032
========
if(index<0){
throw new IllegalArgumentException("Negative \'index\'.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844717035
GPR[SPVAP]-1659844717035
GPR[EPVAP]-1659844718503
GPR[SPVATF]-1659844718503
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844719668
GPR[EPVS]-1659844719668
========
if(index<0||index>=Math.max(getDatasetCount(),getRendererCount())){
throw new IllegalArgumentException("Index "+index);
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844719678
GPR[SPVAP]-1659844719678
GPR[EPVAP]-1659844721105
GPR[SPVATF]-1659844721105
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844722300
GPR[EPVS]-1659844722300
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(this.fixedLegendItems!=null){
return this.fixedLegendItems;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844722303
GPR[SPVAP]-1659844722303
GPR[EPVAP]-1659844723156
GPR[EPVS]-1659844723156
========
if((Object[])annotations.get(index+1)[0]==null){
crosshairDatasetIndex=-((Integer)(Object[])annotations.get(index)[0]).intValue()-1;
}else {
series=((Integer)curr[0]).intValue();
if(series<0){
series=-((Integer)prev[0]).intValue()-1;
}
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844723158
GPR[SPVAP]-1659844723158
GPR[EPVAP]-1659844724036
GPR[EPVS]-1659844724036
========
this.dataset=dataset;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844724039
GPR[SPVAP]-1659844724039
GPR[EPVAP]-1659844724897
GPR[EPVS]-1659844724897
========
fireChangeEvent();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844724900
GPR[SPVAP]-1659844724900
GPR[EPVAP]-1659844726346
GPR[SPVATF]-1659844726346
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844729648
GPR[EPVS]-1659844729648
========
if(!Arrays.equals((double[][])this.annotations.get(index)[0],(double[][])that.seriesList.get(index)[0])){
return false;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844729652
GPR[SPVAP]-1659844729652
GPR[EPVAP]-1659844730497
GPR[EPVS]-1659844730497
========
if(!Arrays.equals(event,(double[][])that.seriesList.get(index)[1])){
return false;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844730499
GPR[SPVAP]-1659844730499
GPR[EPVAP]-1659844731391
GPR[EPVS]-1659844731391
========
if(!Arrays.equals(event,(double[][])that.seriesList.get(index)[0])){
return false;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844731394
GPR[SPVAP]-1659844731394
GPR[EPVAP]-1659844732248
GPR[EPVS]-1659844732248
========
if(!Arrays.equals((double[][])this.annotations.get(index)[1],(double[][])that.seriesList.get(index)[1])){
return false;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844732250
GPR[SPVAP]-1659844732250
GPR[EPVAP]-1659844733094
GPR[EPVS]-1659844733094
========
notifyListeners(new TitleChangeEvent(this));
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844733097
GPR[SPVAP]-1659844733097
GPR[EPVAP]-1659844733985
GPR[EPVS]-1659844733985
========
if(event>=0){
return (KeyedObjects)this.annotations.get(index).getObject(index);
}else {
return null;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844733988
GPR[SPVAP]-1659844733988
GPR[EPVAP]-1659844734825
GPR[EPVS]-1659844734825
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0||index>getSubtitleCount()){
throw new IllegalArgumentException("The \'index\' argument is out of range.");
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844734828
GPR[SPVAP]-1659844734828
GPR[EPVAP]-1659844735689
GPR[EPVS]-1659844735689
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(this.dataset==null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844735692
GPR[SPVAP]-1659844735692
GPR[EPVAP]-1659844736538
GPR[EPVS]-1659844736538
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing==null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844736542
GPR[SPVAP]-1659844736542
GPR[EPVAP]-1659844737977
GPR[SPVATF]-1659844737977
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844739130
GPR[EPVS]-1659844739130
========
event=lookupSectionPaint((Comparable)annotations.get(index),true);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844739133
GPR[SPVAP]-1659844739133
GPR[EPVAP]-1659844740032
GPR[EPVS]-1659844740032
========
rangeGridlinePaint=lookupSectionOutlinePaint((Comparable)annotations.get(index),false);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844740035
GPR[SPVAP]-1659844740035
GPR[EPVAP]-1659844740882
GPR[EPVS]-1659844740882
========
rangeCrosshairStroke=lookupSectionOutlineStroke((Comparable)annotations.get(index),false);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844740885
GPR[SPVAP]-1659844740885
GPR[EPVAP]-1659844741729
GPR[EPVS]-1659844741729
========
if(super.findRangeBounds(dataset,rangeCrosshairLockedOnData)!=null){
if(this.rangeCrosshairLockedOnData){
result=Range.expandToInclude(result,this.anchorValue);
}
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844741732
GPR[SPVAP]-1659844741732
GPR[EPVAP]-1659844742577
GPR[EPVS]-1659844742577
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("TaskSeriesCollection.remove(): index outside valid range.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844742580
GPR[SPVAP]-1659844742580
GPR[EPVAP]-1659844743472
GPR[EPVS]-1659844743472
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.annotations.remove(index);
datasetChanged(event);

========
GPR[SPVS]-1659844743475
GPR[SPVAP]-1659844743475
GPR[EPVAP]-1659844744885
GPR[SPVATF]-1659844744885
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844746043
GPR[EPVS]-1659844746043
========
if((index<0)||(seriesIndex>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844746045
GPR[SPVAP]-1659844746045
GPR[EPVAP]-1659844746919
GPR[EPVS]-1659844746919
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844746923
GPR[SPVAP]-1659844746923
GPR[EPVAP]-1659844747822
GPR[EPVS]-1659844747822
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.annotations.remove(index);
datasetChanged(event);

========
GPR[SPVS]-1659844747824
GPR[SPVAP]-1659844747824
GPR[EPVAP]-1659844748664
GPR[EPVS]-1659844748664
========
super.datasetChanged(event);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844748667
GPR[SPVAP]-1659844748667
GPR[EPVAP]-1659844749538
GPR[EPVS]-1659844749538
========
if(crosshairDatasetIndex<0){
return ;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844749541
GPR[SPVAP]-1659844749541
GPR[EPVAP]-1659844750949
GPR[SPVATF]-1659844750949
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844752137
GPR[EPVS]-1659844752137
========
if(crosshairDatasetIndex<0){
return ;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing==null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844752140
GPR[SPVAP]-1659844752140
GPR[EPVAP]-1659844753556
GPR[SPVATF]-1659844753556
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844754696
GPR[EPVS]-1659844754696
========
this.domainCrosshairRowKey=rowKey;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844754699
GPR[SPVAP]-1659844754699
GPR[EPVAP]-1659844755536
GPR[EPVS]-1659844755536
========
this.domainCrosshairRowKey=columnKey;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844755539
GPR[SPVAP]-1659844755539
GPR[EPVAP]-1659844756378
GPR[EPVS]-1659844756378
========
this.dataset=dataset;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset==null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844756381
GPR[SPVAP]-1659844756381
GPR[EPVAP]-1659844757223
GPR[EPVS]-1659844757223
========
new NumberAxis(null).setPlot(this);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844757226
GPR[SPVAP]-1659844757226
GPR[EPVAP]-1659844758061
GPR[EPVS]-1659844758061
========
new NumberAxis(null).addChangeListener(this);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844758064
GPR[SPVAP]-1659844758064
GPR[EPVAP]-1659844758936
GPR[EPVS]-1659844758936
========
setAxisRange();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844758938
GPR[SPVAP]-1659844758938
GPR[EPVAP]-1659844759804
GPR[EPVS]-1659844759804
========
if(!isSeriesVisible(crosshairDatasetIndex)||!isSeriesVisibleInLegend(series)){
return null;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844759807
GPR[SPVAP]-1659844759807
GPR[EPVAP]-1659844760663
GPR[EPVS]-1659844760663
========
if(!isSeriesVisible(crosshairDatasetIndex)||!isSeriesVisibleInLegend(series)){
return null;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing==null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844760666
GPR[SPVAP]-1659844760666
GPR[EPVAP]-1659844761518
GPR[EPVS]-1659844761518
========
if(!isSeriesVisible(index)||!isSeriesVisibleInLegend(series)){
return null;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844761521
GPR[SPVAP]-1659844761521
GPR[EPVAP]-1659844762376
GPR[EPVS]-1659844762376
========
if(annotations.isEmpty()){
return null;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844762379
GPR[SPVAP]-1659844762379
GPR[EPVAP]-1659844763265
GPR[EPVS]-1659844763265
========
if(!rangeCrosshairLockedOnData||this.domainGridlinesVisible){
return new Range(getXValue((TimePeriod)annotations.get(0)),getXValue(event));
}else {
return new Range(first.getStart().getTime(),last.getEnd().getTime());
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844763267
GPR[SPVAP]-1659844763267
GPR[EPVAP]-1659844764133
GPR[EPVS]-1659844764133
========
if((StatisticalCategoryDataset)dataset.getMeanValue(index,crosshairDatasetIndex)==null){
return ;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844764135
GPR[SPVAP]-1659844764135
GPR[EPVAP]-1659844764986
GPR[EPVS]-1659844764986
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
this.columnCount=dataset.getColumnCount();
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844764990
GPR[SPVAP]-1659844764990
GPR[EPVAP]-1659844765843
GPR[EPVS]-1659844765843
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(clone.dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844765846
GPR[SPVAP]-1659844765846
GPR[EPVAP]-1659844766726
GPR[EPVS]-1659844766726
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(crosshairDatasetIndex<0){
return null;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844766729
GPR[SPVAP]-1659844766729
GPR[EPVAP]-1659844767597
GPR[EPVS]-1659844767597
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(!this.getItemVisible(crosshairDatasetIndex,index)){
return null;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844767599
GPR[SPVAP]-1659844767599
GPR[EPVAP]-1659844768482
GPR[EPVS]-1659844768482
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
setBackgroundPaint(event);

========
GPR[SPVS]-1659844768486
GPR[SPVAP]-1659844768486
GPR[EPVAP]-1659844769336
GPR[EPVS]-1659844769336
========
new MultiplePiePlot(dataset).setOutlineStroke(null);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844769338
GPR[SPVAP]-1659844769338
GPR[EPVAP]-1659844770787
GPR[SPVATF]-1659844770787
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844771981
GPR[EPVS]-1659844771981
========
(PiePlot)new MultiplePiePlot(dataset).getPieChart().getPlot().setToolTipGenerator(event);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844771984
GPR[SPVAP]-1659844771984
GPR[EPVAP]-1659844772641
GPR[EPVS]-1659844772641
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,DEFAULT_VALUE_LABEL_FONT);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844772645
GPR[SPVAP]-1659844772645
GPR[EPVAP]-1659844774074
GPR[SPVATF]-1659844774074
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844775253
GPR[EPVS]-1659844775253
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(!isSeriesVisible(crosshairDatasetIndex)){
return ;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844775257
GPR[SPVAP]-1659844775257
GPR[EPVAP]-1659844776114
GPR[EPVS]-1659844776114
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(!getItemVisible(crosshairDatasetIndex,index)){
return ;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844776118
GPR[SPVAP]-1659844776118
GPR[EPVAP]-1659844776986
GPR[EPVS]-1659844776986
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(!getItemLineVisible(crosshairDatasetIndex,index)&&!getItemShapeVisible(row,column)){
return ;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844776989
GPR[SPVAP]-1659844776989
GPR[EPVAP]-1659844777839
GPR[EPVS]-1659844777839
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(dataset.getValue(crosshairDatasetIndex,index)==null){
return ;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844777842
GPR[SPVAP]-1659844777842
GPR[EPVAP]-1659844779331
GPR[SPVATF]-1659844779331
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844780499
GPR[EPVS]-1659844780499
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(!getItemVisible(index,crosshairDatasetIndex)){
return ;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844780502
GPR[SPVAP]-1659844780502
GPR[EPVAP]-1659844781358
GPR[EPVS]-1659844781358
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.setStroke(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844781360
GPR[SPVAP]-1659844781360
GPR[EPVAP]-1659844782196
GPR[EPVS]-1659844782196
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.setPaint(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844782198
GPR[SPVAP]-1659844782198
GPR[EPVAP]-1659844783068
GPR[EPVS]-1659844783068
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.setShape(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844783071
GPR[SPVAP]-1659844783071
GPR[EPVAP]-1659844783917
GPR[EPVS]-1659844783917
========
if((index<0)||(series>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844783920
GPR[SPVAP]-1659844783920
GPR[EPVAP]-1659844784784
GPR[EPVS]-1659844784784
========
fireDatasetChanged(new DatasetChangeInfo());
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844784786
GPR[SPVAP]-1659844784786
GPR[EPVAP]-1659844785691
GPR[EPVS]-1659844785691
========
if((Font)this.datasets.get(index)==null){
result=this.DEFAULT_VALUE_LABEL_FONT;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844785693
GPR[SPVAP]-1659844785693
GPR[EPVAP]-1659844786532
GPR[EPVS]-1659844786532
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(!getItemVisible(index,crosshairDatasetIndex)){
return ;
}
if(existing==null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844786536
GPR[SPVAP]-1659844786536
GPR[EPVAP]-1659844787378
GPR[EPVS]-1659844787378
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(dataset==null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844787381
GPR[SPVAP]-1659844787381
GPR[EPVAP]-1659844788805
GPR[SPVATF]-1659844788805
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844789948
GPR[EPVS]-1659844789948
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
setPosition(event);

========
GPR[SPVS]-1659844789951
GPR[SPVAP]-1659844789951
GPR[EPVAP]-1659844790788
GPR[EPVS]-1659844790788
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.axisOffset=RectangleInsets.ZERO_INSETS;
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844790790
GPR[SPVAP]-1659844790790
GPR[EPVAP]-1659844792194
GPR[SPVATF]-1659844792194
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844793332
GPR[EPVS]-1659844793332
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.annotations=new ArrayList();
datasetChanged(event);

========
GPR[SPVS]-1659844793335
GPR[SPVAP]-1659844793335
GPR[EPVAP]-1659844794798
GPR[SPVATF]-1659844794798
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844795943
GPR[EPVS]-1659844795943
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.axisOffset=RectangleInsets.ZERO_INSETS;
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
setBackgroundPaint(event);

========
GPR[SPVS]-1659844795945
GPR[SPVAP]-1659844795945
GPR[EPVAP]-1659844796799
GPR[EPVS]-1659844796799
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.annotations=new ArrayList();
setBackgroundPaint(event);

========
GPR[SPVS]-1659844796802
GPR[SPVAP]-1659844796802
GPR[EPVAP]-1659844797676
GPR[EPVS]-1659844797676
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.axisOffset=RectangleInsets.ZERO_INSETS;
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.annotations=new ArrayList();
datasetChanged(event);

========
GPR[SPVS]-1659844797678
GPR[SPVAP]-1659844797678
GPR[EPVAP]-1659844801170
GPR[SPVATF]-1659844801170
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844802353
GPR[EPVS]-1659844802353
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.axisOffset=RectangleInsets.ZERO_INSETS;
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.annotations=new ArrayList();
setBackgroundPaint(event);

========
GPR[SPVS]-1659844802355
GPR[SPVAP]-1659844802356
GPR[EPVAP]-1659844803225
GPR[EPVS]-1659844803225
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(crosshairDatasetIndex<0){
return ;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844803229
GPR[SPVAP]-1659844803229
GPR[EPVAP]-1659844804636
GPR[SPVATF]-1659844804636
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844805821
GPR[EPVS]-1659844805821
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(crosshairDatasetIndex<0){
return ;
}
if(existing==null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844805823
GPR[SPVAP]-1659844805823
GPR[EPVAP]-1659844807250
GPR[SPVATF]-1659844807250
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844808405
GPR[EPVS]-1659844808405
========
new BarRenderer().setBaseToolTipGenerator(new StandardCategoryToolTipGenerator());
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844808408
GPR[SPVAP]-1659844808408
GPR[EPVAP]-1659844809249
GPR[EPVS]-1659844809249
========
new TextTitle("Series Title",new Font("Tahoma",Font.BOLD,12)).setPosition(RectangleEdge.BOTTOM);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844809251
GPR[SPVAP]-1659844809251
GPR[EPVAP]-1659844810121
GPR[EPVS]-1659844810121
========
new MultiplePiePlot(dataset).setOutlineStroke(null);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
setBackgroundPaint(event);

========
GPR[SPVS]-1659844810124
GPR[SPVAP]-1659844810124
GPR[EPVAP]-1659844811004
GPR[EPVS]-1659844811004
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(!Double.isNaN(existing.getYValue())){
rangeCrosshairLockedOnData=oldY<=this.anchorValue||oldY>=this.anchorValue;
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844811007
GPR[SPVAP]-1659844811007
GPR[EPVAP]-1659844811894
GPR[EPVS]-1659844811894
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(this.existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844811897
GPR[SPVAP]-1659844811897
GPR[EPVAP]-1659844812762
GPR[EPVS]-1659844812762
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new UnknownKeyException("The key ("+domainCrosshairRowKey);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844812768
GPR[SPVAP]-1659844812768
GPR[EPVAP]-1659844813625
GPR[EPVS]-1659844813625
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new UnknownKeyException("Row key ("+domainCrosshairRowKey);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844813628
GPR[SPVAP]-1659844813628
GPR[EPVAP]-1659844814545
GPR[EPVS]-1659844814545
========
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844814547
GPR[SPVAP]-1659844814547
GPR[EPVAP]-1659844815988
GPR[SPVATF]-1659844815988
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844817165
GPR[EPVS]-1659844817165
========
if((Comparable)this.foregroundRangeMarkers.get(domainCrosshairRowKey)!=null){
domainCrosshairRowKey=group;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844817167
GPR[SPVAP]-1659844817167
GPR[EPVAP]-1659844818048
GPR[EPVS]-1659844818048
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new UnknownKeyException("The key ("+domainCrosshairRowKey.toString());
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844818051
GPR[SPVAP]-1659844818051
GPR[EPVAP]-1659844818904
GPR[EPVS]-1659844818904
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.setSeriesPaint(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844818907
GPR[SPVAP]-1659844818907
GPR[EPVAP]-1659844819760
GPR[EPVS]-1659844819760
========
case 1 :

CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844819763
GPR[SPVAP]-1659844819763
GPR[EPVAP]-1659844820406
GPR[EPVS]-1659844820406
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
labelList=new java.util.ArrayList();
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844820409
GPR[SPVAP]-1659844820409
GPR[EPVAP]-1659844821297
GPR[EPVS]-1659844821297
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
this.datasets[0]=dataset;
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844821300
GPR[SPVAP]-1659844821300
GPR[EPVAP]-1659844822166
GPR[EPVS]-1659844822167
========
case 8 :

CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844822169
GPR[SPVAP]-1659844822169
GPR[EPVAP]-1659844822803
GPR[EPVS]-1659844822803
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.crosshairDatasetIndex=index;
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844822806
GPR[SPVAP]-1659844822806
GPR[EPVAP]-1659844824250
GPR[SPVATF]-1659844824250
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844825408
GPR[EPVS]-1659844825408
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
new Object[4][0]=dataset.getRowKey(crosshairDatasetIndex).toString();
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844825412
GPR[SPVAP]-1659844825412
GPR[EPVAP]-1659844826257
GPR[EPVS]-1659844826258
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
new Object[4][1]=dataset.getColumnKey(index).toString();
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844826260
GPR[SPVAP]-1659844826261
GPR[EPVAP]-1659844827105
GPR[EPVS]-1659844827105
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0){
throw new SeriesException("There is no existing value for the "+"specified \'period\'.");
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844827108
GPR[SPVAP]-1659844827108
GPR[EPVAP]-1659844827984
GPR[EPVS]-1659844827984
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(anchorValue>this.anchorValue){
return this.rangeGridlinePaint;
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844827988
GPR[SPVAP]-1659844827988
GPR[EPVAP]-1659844828848
GPR[EPVS]-1659844828848
========
if(anchorValue<item.value){
return this.rangeGridlinePaint;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844828850
GPR[SPVAP]-1659844828850
GPR[EPVAP]-1659844829698
GPR[EPVS]-1659844829698
========
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'category\' argument.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844829704
GPR[SPVAP]-1659844829704
GPR[EPVAP]-1659844831145
GPR[SPVATF]-1659844831145
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844832291
GPR[EPVS]-1659844832291
========
if((Font)this.foregroundRangeMarkers.get(domainCrosshairRowKey)==null){
result=getTickLabelFont();
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844832294
GPR[SPVAP]-1659844832294
GPR[EPVAP]-1659844833143
GPR[EPVS]-1659844833143
========
if((Paint)this.foregroundRangeMarkers.get(domainCrosshairRowKey)==null){
result=getTickLabelPaint();
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844833146
GPR[SPVAP]-1659844833146
GPR[EPVAP]-1659844834002
GPR[EPVS]-1659844834002
========
if(index<0||series>=getSeriesCount()){
throw new IllegalArgumentException("Invalid series index: "+series);
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844834005
GPR[SPVAP]-1659844834005
GPR[EPVAP]-1659844834868
GPR[EPVS]-1659844834868
========
if((index<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844834872
GPR[SPVAP]-1659844834872
GPR[EPVAP]-1659844835723
GPR[EPVS]-1659844835723
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=PlotOrientation.HORIZONTAL){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844835727
GPR[SPVAP]-1659844835727
GPR[EPVAP]-1659844836590
GPR[EPVS]-1659844836590
========
if(true){
this.annotations.remove(index);
this.annotations.remove(rowIndex);
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844836593
GPR[SPVAP]-1659844836593
GPR[EPVAP]-1659844837550
GPR[EPVS]-1659844837550
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(getToolTipGenerator(crosshairDatasetIndex,crosshairDatasetIndex,rangeCrosshairLockedOnData)!=null){
event=generator.generateToolTip(dataset,crosshairDatasetIndex,crosshairDatasetIndex);
}
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844837554
GPR[SPVAP]-1659844837554
GPR[EPVAP]-1659844838418
GPR[EPVS]-1659844838418
========
(Block)annotations.get(0).setBounds(new Rectangle2D.Double(0.0,0.0,s.width,s.height));
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844838422
GPR[SPVAP]-1659844838422
GPR[EPVAP]-1659844839063
GPR[EPVS]-1659844839063
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
if(orientation==PlotOrientation.VERTICAL){
line=new Line2D.Double(anchorValue,anchorValue,anchorValue,anchorValue);
}else {
line=new Line2D.Double(anchorValue,anchorValue,anchorValue,anchorValue);
}
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844839066
GPR[SPVAP]-1659844839066
GPR[EPVAP]-1659844839915
GPR[EPVS]-1659844839915
========
this.annotations.remove(domainCrosshairRowKey);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844839918
GPR[SPVAP]-1659844839918
GPR[EPVAP]-1659844841410
GPR[SPVATF]-1659844841410
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844842597
GPR[EPVS]-1659844842597
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.anchorValue=0.8;
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844842600
GPR[SPVAP]-1659844842600
GPR[EPVAP]-1659844843981
GPR[SPVATF]-1659844843981
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844845143
GPR[EPVS]-1659844845143
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=crosshairDatasetIndex){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844845147
GPR[SPVAP]-1659844845147
GPR[EPVAP]-1659844845993
GPR[EPVS]-1659844845993
========
if(this.rangeCrosshairLockedOnData){
return (SimpleHistogramBin)this.annotations.get(index).getItemCount()/(bin.getUpperBound()-bin.getLowerBound());
}else {
return bin.getItemCount();
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844845996
GPR[SPVAP]-1659844845996
GPR[EPVAP]-1659844846876
GPR[EPVS]-1659844846876
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
allItemsNull=false;
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844846879
GPR[SPVAP]-1659844846879
GPR[EPVAP]-1659844847732
GPR[EPVS]-1659844847732
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=ORIENTATION_VERTICAL){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844847735
GPR[SPVAP]-1659844847735
GPR[EPVAP]-1659844848591
GPR[EPVS]-1659844848591
========
if(!(dataset instanceof StatisticalCategoryDataset)){
throw new IllegalArgumentException("Requires StatisticalCategoryDataset.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844848594
GPR[SPVAP]-1659844848594
GPR[EPVAP]-1659844849432
GPR[EPVS]-1659844849432
========
this.domainGridlinesVisible=false;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844849436
GPR[SPVAP]-1659844849436
GPR[EPVAP]-1659844850865
GPR[SPVATF]-1659844850865
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844852019
GPR[EPVS]-1659844852019
========
this.rangePannable=false;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844852022
GPR[SPVAP]-1659844852022
GPR[EPVAP]-1659844853442
GPR[SPVATF]-1659844853442
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844854609
GPR[EPVS]-1659844854609
========
this.domainGridlinesVisible=false;
this.rangePannable=false;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844854612
GPR[SPVAP]-1659844854612
GPR[EPVAP]-1659844856052
GPR[SPVATF]-1659844856052
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844857204
GPR[EPVS]-1659844857204
========
case 3 :

CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844857207
GPR[SPVAP]-1659844857207
GPR[EPVAP]-1659844857865
GPR[EPVS]-1659844857865
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844857868
GPR[SPVAP]-1659844857868
GPR[EPVAP]-1659844859281
GPR[SPVATF]-1659844859281
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844860442
GPR[EPVS]-1659844860442
========
if(index>=getDatasetCount()){
return ;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844860445
GPR[SPVAP]-1659844860445
GPR[EPVAP]-1659844861920
GPR[SPVATF]-1659844861920
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844863134
GPR[EPVS]-1659844863134
========
if(index>=getDatasetCount()){
return ;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing==null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844863136
GPR[SPVAP]-1659844863136
GPR[EPVAP]-1659844864579
GPR[SPVATF]-1659844864579
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844865761
GPR[EPVS]-1659844865761
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<0||index>3){
throw new IllegalArgumentException("The index value ("+index);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844865763
GPR[SPVAP]-1659844865763
GPR[EPVAP]-1659844867168
GPR[SPVATF]-1659844867168
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844868352
GPR[EPVS]-1659844868352
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
if(orientation==PlotOrientation.HORIZONTAL){
line=new Line2D.Double(anchorValue,anchorValue,anchorValue,anchorValue);
}else if(orientation==PlotOrientation.VERTICAL){
line=new Line2D.Double(anchorValue,anchorValue,anchorValue,anchorValue);
}
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844868356
GPR[SPVAP]-1659844868356
GPR[EPVAP]-1659844869204
GPR[EPVS]-1659844869204
========
(Block)annotations.get(0).setBounds(event);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844869207
GPR[SPVAP]-1659844869207
GPR[EPVAP]-1659844869844
GPR[EPVS]-1659844869844
========
new Object[8][0]=dataset.getRowKey(crosshairDatasetIndex);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844869849
GPR[SPVAP]-1659844869849
GPR[EPVAP]-1659844870690
GPR[EPVS]-1659844870690
========
new Object[8][1]=getNumberFormat().format(event);
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844870693
GPR[SPVAP]-1659844870693
GPR[EPVAP]-1659844873379
GPR[EPVS]-1659844873379
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
this.axisOffset=0.0;
datasetChanged(event);

========
GPR[SPVS]-1659844873381
GPR[SPVAP]-1659844873381
GPR[EPVAP]-1659844874282
GPR[EPVS]-1659844874282
========
this.anchorValue=15.0;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844874285
GPR[SPVAP]-1659844874285
GPR[EPVAP]-1659844875690
GPR[SPVATF]-1659844875690
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844876872
GPR[EPVS]-1659844876872
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
if(crosshairDatasetIndex==crosshairDatasetIndex-1){
runningTotal=dataset.getValue(crosshairDatasetIndex,crosshairDatasetIndex).doubleValue();
}else {
runningTotal=anchorValue+dataset.getValue(crosshairDatasetIndex,crosshairDatasetIndex).doubleValue();
}
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844876876
GPR[SPVAP]-1659844876876
GPR[EPVAP]-1659844877744
GPR[EPVS]-1659844877744
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
maximum=Math.max(event,anchorValue);
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844877747
GPR[SPVAP]-1659844877747
GPR[EPVAP]-1659844878620
GPR[EPVS]-1659844878620
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
allItemsNull=false;
if(crosshairDatasetIndex==crosshairDatasetIndex-1){
runningTotal=dataset.getValue(crosshairDatasetIndex,crosshairDatasetIndex).doubleValue();
}else {
runningTotal=anchorValue+dataset.getValue(crosshairDatasetIndex,crosshairDatasetIndex).doubleValue();
}
maximum=Math.max(event,anchorValue);

existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844878623
GPR[SPVAP]-1659844878623
GPR[EPVAP]-1659844879542
GPR[EPVS]-1659844879542
========
if(getRenderer(index)==null){
renderer=getRenderer();
if(renderer==null){
return rangeCrosshairLockedOnData;
}
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844879545
GPR[SPVAP]-1659844879545
GPR[EPVAP]-1659844880456
GPR[EPVS]-1659844880457
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(!Double.isNaN(getRawDataItem(index).getYValue())){
rangeCrosshairLockedOnData=oldY<=this.anchorValue||oldY>=this.anchorValue;
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844880460
GPR[SPVAP]-1659844880460
GPR[EPVAP]-1659844881329
GPR[EPVS]-1659844881329
========
if(domainCrosshairRowKey==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing==null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844881332
GPR[SPVAP]-1659844881332
GPR[EPVAP]-1659844882767
GPR[SPVATF]-1659844882767
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844883973
GPR[EPVS]-1659844883973
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(index<=0){
String event="The \'weight\' must be positive.";
throw new IllegalArgumentException(msg);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844883977
GPR[SPVAP]-1659844883977
GPR[EPVAP]-1659844884832
GPR[EPVS]-1659844884832
========
configureRangeAxes();
fireChangeEvent();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844884835
GPR[SPVAP]-1659844884835
GPR[EPVAP]-1659844886286
GPR[SPVATF]-1659844886286
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844887463
GPR[EPVS]-1659844887463
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets=new ObjectList();
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844887466
GPR[SPVAP]-1659844887466
GPR[EPVAP]-1659844888874
GPR[SPVATF]-1659844888874
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844890068
GPR[EPVS]-1659844890068
========
this.rangeAxisLocations=new ObjectList();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844890071
GPR[SPVAP]-1659844890071
GPR[EPVAP]-1659844891528
GPR[SPVATF]-1659844891528
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844892709
GPR[EPVS]-1659844892709
========
this.annotations=new java.util.ArrayList();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844892712
GPR[SPVAP]-1659844892712
GPR[EPVAP]-1659844894149
GPR[SPVATF]-1659844894149
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844895338
GPR[EPVS]-1659844895338
========
this.rangeAxisLocations=new ObjectList();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets=new ObjectList();
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844895341
GPR[SPVAP]-1659844895341
GPR[EPVAP]-1659844896816
GPR[SPVATF]-1659844896816
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844898053
GPR[EPVS]-1659844898053
========
this.annotations=new java.util.ArrayList();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets=new ObjectList();
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844898056
GPR[SPVAP]-1659844898056
GPR[EPVAP]-1659844899486
GPR[SPVATF]-1659844899486
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844900653
GPR[EPVS]-1659844900653
========
this.rangeAxisLocations=new ObjectList();
this.annotations=new java.util.ArrayList();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844900655
GPR[SPVAP]-1659844900655
GPR[EPVAP]-1659844902094
GPR[SPVATF]-1659844902094
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844903250
GPR[EPVS]-1659844903250
========
this.rangeAxisLocations=new ObjectList();
this.annotations=new java.util.ArrayList();
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets=new ObjectList();
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844903252
GPR[SPVAP]-1659844903252
GPR[EPVAP]-1659844904663
GPR[SPVATF]-1659844904663
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844905881
GPR[EPVS]-1659844905881
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
this.dataset=dataset;
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844905886
GPR[SPVAP]-1659844905886
GPR[EPVAP]-1659844906728
GPR[EPVS]-1659844906728
========
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.dataset=dataset;
this.datasets.set(index,dataset);
if(this.dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844906731
GPR[SPVAP]-1659844906731
GPR[EPVAP]-1659844907624
GPR[EPVS]-1659844907624
========
anchorValue=direction%360;
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844907627
GPR[SPVAP]-1659844907627
GPR[EPVAP]-1659844908466
GPR[EPVS]-1659844908466
========
if(anchorValue<0.0){
direction=direction+360.0;
}
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844908468
GPR[SPVAP]-1659844908469
GPR[EPVAP]-1659844909302
GPR[EPVS]-1659844909302
========
default :

CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844909308
GPR[SPVAP]-1659844909308
GPR[EPVAP]-1659844909958
GPR[EPVS]-1659844909958
========
case 5 :

CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

========
GPR[SPVS]-1659844909962
GPR[SPVAP]-1659844909962
GPR[EPVAP]-1659844910596
GPR[EPVS]-1659844910596
GPR[ESUN]-1659844910597
GPR[SSUN]-1659844910597
org.jfree.chart.plot.CategoryPlot,1353
GPR[ESUN]-1659844911111
GPR[SSUN]-1659844911111
org.jfree.chart.plot.CategoryPlot,1356
GPR[ESUN]-1659844911462
GPR[SSUN]-1659844911462
org.jfree.chart.plot.CategoryPlot,1357
GPR[ESUN]-1659844911847
GPR[SSUN]-1659844911847
org.jfree.chart.plot.CategoryPlot,1362
GPR[ESUN]-1659844912206
GPR[SSUN]-1659844912206
org.jfree.chart.plot.CategoryPlot,1365
GPR[ESUN]-1659844912554
GPR[SSUN]-1659844912554
org.jfree.chart.plot.CategoryPlot,1367
Find no block!
GPR[SSUN]-1659844912915
org.jfree.chart.renderer.category.LineAndShapeRenderer,201
GPR[ESUN]-1659844914949
GPR[SSUN]-1659844914949
org.jfree.chart.renderer.category.LineAndShapeRenderer,202
Find no block!
GPR[SSUN]-1659844915311
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,1791
========
LegendItemCollection result=new LegendItemCollection();
if(this.plot!=null){
return result;
}

========
GPR[SPVS]-1659844917517
GPR[SPVAP]-1659844917517
GPR[EPVAP]-1659844922168
GPR[SPVATF]-1659844922168
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844923342
GPR[EPVS]-1659844923342
========
LegendItemCollection result=new LegendItemCollection();
if(plot==null){
return result;
}

========
GPR[SPVS]-1659844923344
GPR[SPVAP]-1659844923344
GPR[EPVAP]-1659844924728
GPR[SPVATF]-1659844924728
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844925877
GPR[EPVS]-1659844925877
========
this.plot=plot;
LegendItemCollection result=new LegendItemCollection();
if(this.plot==null){
return result;
}

========
GPR[SPVS]-1659844925879
GPR[SPVAP]-1659844925879
GPR[EPVAP]-1659844927198
GPR[SPVATF]-1659844927198
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844928352
GPR[EPVS]-1659844928352
========
this.plot=plot;
LegendItemCollection result=new LegendItemCollection();
if(plot==null){
return result;
}

========
GPR[SPVS]-1659844928354
GPR[SPVAP]-1659844928354
GPR[EPVAP]-1659844929746
GPR[SPVATF]-1659844929746
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844930952
GPR[EPVS]-1659844930952
========
LegendItemCollection result=new LegendItemCollection();
if(this.plot==PlotOrientation.HORIZONTAL){
return result;
}

========
GPR[SPVS]-1659844930955
GPR[SPVAP]-1659844930955
GPR[EPVAP]-1659844931752
GPR[EPVS]-1659844931752
========
LegendItemCollection result=new LegendItemCollection();
if(this.plot==AreaRendererEndType.LEVEL){
return result;
}

========
GPR[SPVS]-1659844931754
GPR[SPVAP]-1659844931754
GPR[EPVAP]-1659844932557
GPR[EPVS]-1659844932557
GPR[ESUN]-1659844932559
GPR[SSUN]-1659844932559
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,1792
GPR[ESUN]-1659844933040
GPR[SSUN]-1659844933040
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,1795
========
if(this.plot.getDataset(index)!=null){
return result;
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844935602
GPR[SPVAP]-1659844935602
GPR[EPVAP]-1659844937720
GPR[EPVS]-1659844937720
========
if(columnCount<0){
return ;
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844937722
GPR[SPVAP]-1659844937722
GPR[EPVAP]-1659844939639
GPR[EPVS]-1659844939639
========
if(plot.getDataset()!=null){
index=dataset.getColumnCount();
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844939641
GPR[SPVAP]-1659844939641
GPR[EPVAP]-1659844941096
GPR[EPVS]-1659844941096
========
if(dataset==null){
return null;
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844941098
GPR[SPVAP]-1659844941098
GPR[EPVAP]-1659844942560
GPR[EPVS]-1659844942560
========
if(plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844942562
GPR[SPVAP]-1659844942562
GPR[EPVAP]-1659844948602
GPR[SPVATF]-1659844948602
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844949784
GPR[EPVS]-1659844949784
========
this.plot=plot;
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844949786
GPR[SPVAP]-1659844949786
GPR[EPVAP]-1659844951143
GPR[SPVATF]-1659844951143
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844952330
GPR[EPVS]-1659844952330
========
this.plot=plot;
if(plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844952332
GPR[SPVAP]-1659844952332
GPR[EPVAP]-1659844953695
GPR[SPVATF]-1659844953695
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844954870
GPR[EPVS]-1659844954870
========
if(this.plot==null){
return result;
}
if(columnCount<0){
return ;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844954872
GPR[SPVAP]-1659844954872
GPR[EPVAP]-1659844955684
GPR[EPVS]-1659844955684
========
if(dataset==null){
return ;
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844955687
GPR[SPVAP]-1659844955687
GPR[EPVAP]-1659844956525
GPR[EPVS]-1659844956525
========
if(this.plot!=null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844956528
GPR[SPVAP]-1659844956528
GPR[EPVAP]-1659844957931
GPR[SPVATF]-1659844957931
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844959089
GPR[EPVS]-1659844959089
========
setPlot(plot);
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844959091
GPR[SPVAP]-1659844959091
GPR[EPVAP]-1659844960438
GPR[SPVATF]-1659844960438
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844961600
GPR[EPVS]-1659844961600
========
setPlot(plot);
if(this.plot!=null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844961602
GPR[SPVAP]-1659844961602
GPR[EPVAP]-1659844962956
GPR[SPVATF]-1659844962956
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844964104
GPR[EPVS]-1659844964104
========
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
if(!isSeriesVisible(columnCount)||!isSeriesVisibleInLegend(series)){
return null;
}
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844964106
GPR[SPVAP]-1659844964106
GPR[EPVAP]-1659844964898
GPR[EPVS]-1659844964898
========
if(plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
if(!isSeriesVisible(columnCount)||!isSeriesVisibleInLegend(series)){
return null;
}
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844964901
GPR[SPVAP]-1659844964901
GPR[EPVAP]-1659844965705
GPR[EPVS]-1659844965705
========
if(index>=0){
return (TimeSeriesDataItem)this.foregroundAnnotations.get(index);
}else {
return null;
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844965709
GPR[SPVAP]-1659844965709
GPR[EPVAP]-1659844966526
GPR[EPVS]-1659844966526
========
if(index>=0){
return getDataItem(index);
}else {
return null;
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844966528
GPR[SPVAP]-1659844966528
GPR[EPVAP]-1659844967351
GPR[EPVS]-1659844967351
========
if(index>=0){
return getValue(index);
}else {
return null;
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844967352
GPR[SPVAP]-1659844967352
GPR[EPVAP]-1659844968159
GPR[EPVS]-1659844968159
========
removeValue(index);
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844968161
GPR[SPVAP]-1659844968161
GPR[EPVAP]-1659844968969
GPR[EPVS]-1659844968969
========
removeRow(index);
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844968971
GPR[SPVAP]-1659844968971
GPR[EPVAP]-1659844969795
GPR[EPVS]-1659844969795
========
if(index>=0){
return (KeyedObjects)this.foregroundAnnotations.get(rowCount).getObject(index);
}else {
return null;
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844969799
GPR[SPVAP]-1659844969799
GPR[EPVAP]-1659844970599
GPR[EPVS]-1659844970599
========
if(this.plot==PlotOrientation.HORIZONTAL){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844970601
GPR[SPVAP]-1659844970601
GPR[EPVAP]-1659844971456
GPR[EPVS]-1659844971456
========
if(index>=0){
result=getSeries(index);
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844971459
GPR[SPVAP]-1659844971459
GPR[EPVAP]-1659844972325
GPR[EPVS]-1659844972325
========
if(index>=0){
TimeSeriesDataItem (TimeSeriesDataItem)this.foregroundAnnotations.remove(index)=(TimeSeriesDataItem)this.foregroundAnnotations.remove(index);
updateBoundsForRemovedItem(item);
if(this.data.isEmpty()){
this.dataset=null;
}
fireSeriesChanged();
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844972327
GPR[SPVAP]-1659844972327
GPR[EPVAP]-1659844972956
GPR[EPVS]-1659844972956
========
if(getRenderer(index)!=null){
existing.removeChangeListener(this);
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844972958
GPR[SPVAP]-1659844972958
GPR[EPVAP]-1659844973782
GPR[EPVS]-1659844973782
========
if((CategoryItemRenderer)this.itemLabelGeneratorList.get(index)!=null){
existing.removeChangeListener(this);
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844973784
GPR[SPVAP]-1659844973784
GPR[EPVAP]-1659844974591
GPR[EPVS]-1659844974591
========
fireDatasetChanged(new PieDatasetChangeInfo(PieDatasetChangeType.ADD,index,index));
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844974594
GPR[SPVAP]-1659844974594
GPR[EPVAP]-1659844975397
GPR[EPVS]-1659844975397
========
if(this.plot==null){
return result;
}
double index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844975404
GPR[SPVAP]-1659844975404
GPR[EPVAP]-1659844976215
GPR[EPVS]-1659844976215
========
if(index==0||columnCount==0){
return true;
}
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);

========
GPR[SPVS]-1659844976221
GPR[SPVAP]-1659844976221
GPR[EPVAP]-1659844977052
GPR[EPVS]-1659844977052
GPR[ESUN]-1659844977057
GPR[SSUN]-1659844977057
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,1796
========
if(this.plot==null){
return result;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659844979875
GPR[SPVAP]-1659844979875
GPR[EPVAP]-1659844984510
GPR[SPVATF]-1659844984510
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844985669
GPR[EPVS]-1659844985669
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset==null){
return result;
}

========
GPR[SPVS]-1659844985671
GPR[SPVAP]-1659844985671
GPR[EPVAP]-1659844987051
GPR[SPVATF]-1659844987051
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659844988221
GPR[SPVATR]-1659844988222
TESTING : chart_1
GPR[EPVATR]-1659845000365
GPR[EPVS]-1659845000365
GPR[PF]-1659845000365
sourceFile  script/workingdir/SimFix/chart/chart_1_buggy/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
location   script/workingdir/SimFix/chart/chart_1_buggy
========
int index=this.plot.getIndexOf(this);
if(plot==null){
return null;
}
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845000378
GPR[SPVAP]-1659845000378
GPR[EPVAP]-1659845001756
GPR[SPVATF]-1659845001756
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845002927
GPR[EPVS]-1659845002927
========
int index=this.plot.getIndexOf(this);
if(!isSeriesVisible(columnCount)||!isSeriesVisibleInLegend(series)){
return null;
}
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845002929
GPR[SPVAP]-1659845002929
GPR[EPVAP]-1659845003728
GPR[EPVS]-1659845003728
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(plot==null){
return null;
}
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845003730
GPR[SPVAP]-1659845003730
GPR[EPVAP]-1659845005080
GPR[SPVATF]-1659845005080
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845006238
GPR[EPVS]-1659845006238
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(plot==null){
return null;
}
if(dataset==null){
return result;
}

========
GPR[SPVS]-1659845006240
GPR[SPVAP]-1659845006240
GPR[EPVAP]-1659845007609
GPR[SPVATF]-1659845007609
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845008765
GPR[SPVATR]-1659845008765
TESTING : chart_1
GPR[EPVATR]-1659845023052
GPR[EPVS]-1659845023052
GPR[PF]-1659845023052
sourceFile  script/workingdir/SimFix/chart/chart_1_buggy/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
location   script/workingdir/SimFix/chart/chart_1_buggy
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(this.dataset==null){
return result;
}

========
GPR[SPVS]-1659845023061
GPR[SPVAP]-1659845023061
GPR[EPVAP]-1659845023882
GPR[EPVS]-1659845023882
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(this.dataset!=null){
return result;
}

========
GPR[SPVS]-1659845023884
GPR[SPVAP]-1659845023884
GPR[EPVAP]-1659845024691
GPR[EPVS]-1659845024691
========
prefetchSectionPaints();
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845024693
GPR[SPVAP]-1659845024693
GPR[EPVAP]-1659845025514
GPR[EPVS]-1659845025514
========
int index=this.plot.getIndexOf(this);
if(plot==null){
return null;
}
if(!isSeriesVisible(columnCount)||!isSeriesVisibleInLegend(series)){
return null;
}
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845025516
GPR[SPVAP]-1659845025516
GPR[EPVAP]-1659845026307
GPR[EPVS]-1659845026307
========
if(columnCount<0){
return ;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845026309
GPR[SPVAP]-1659845026309
GPR[EPVAP]-1659845027102
GPR[EPVS]-1659845027102
========
this.itemLabelGeneratorList.set(index,dataset);
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845027104
GPR[SPVAP]-1659845027104
GPR[EPVAP]-1659845027925
GPR[EPVS]-1659845027925
========
if(dataset!=null){
dataset.addChangeListener(this);
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845027927
GPR[SPVAP]-1659845027927
GPR[EPVAP]-1659845028735
GPR[EPVS]-1659845028735
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845028737
GPR[SPVAP]-1659845028737
GPR[EPVAP]-1659845029543
GPR[EPVS]-1659845029543
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
setPlot(plot);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845029545
GPR[SPVAP]-1659845029545
GPR[EPVAP]-1659845030906
GPR[SPVATF]-1659845030906
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845032063
GPR[EPVS]-1659845032063
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=PlotOrientation.HORIZONTAL){
return result;
}

========
GPR[SPVS]-1659845032065
GPR[SPVAP]-1659845032065
GPR[EPVAP]-1659845032861
GPR[EPVS]-1659845032861
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(existing!=null){
return result;
}

========
GPR[SPVS]-1659845032863
GPR[SPVAP]-1659845032863
GPR[EPVAP]-1659845033678
GPR[EPVS]-1659845033678
========
this.itemLabelGeneratorList.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845033680
GPR[SPVAP]-1659845033680
GPR[EPVAP]-1659845034488
GPR[EPVS]-1659845034488
========
this.itemLabelGeneratorList.set(index,dataset);
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845034489
GPR[SPVAP]-1659845034489
GPR[EPVAP]-1659845035291
GPR[EPVS]-1659845035291
========
if(dataset!=null){
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845035292
GPR[SPVAP]-1659845035292
GPR[EPVAP]-1659845036097
GPR[EPVS]-1659845036097
========
this.itemLabelGeneratorList.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845036098
GPR[SPVAP]-1659845036098
GPR[EPVAP]-1659845036900
GPR[EPVS]-1659845036900
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset==PlotOrientation.HORIZONTAL){
return result;
}

========
GPR[SPVS]-1659845036903
GPR[SPVAP]-1659845036903
GPR[EPVAP]-1659845037698
GPR[EPVS]-1659845037698
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(result==null){
result=new Rectangle();
}
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845037700
GPR[SPVAP]-1659845037700
GPR[EPVAP]-1659845038505
GPR[EPVS]-1659845038505
========
if(index>=0){
return (TimeSeriesDataItem)this.foregroundAnnotations.get(index);
}else {
return null;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845038508
GPR[SPVAP]-1659845038508
GPR[EPVAP]-1659845039307
GPR[EPVS]-1659845039307
========
if(index>=0){
return getDataItem(index);
}else {
return null;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845039310
GPR[SPVAP]-1659845039310
GPR[EPVAP]-1659845040123
GPR[EPVS]-1659845040123
========
if(index>=0){
return getValue(index);
}else {
return null;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845040125
GPR[SPVAP]-1659845040125
GPR[EPVAP]-1659845040959
GPR[EPVS]-1659845040959
========
this.dataset=dataset;
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845040961
GPR[SPVAP]-1659845040961
GPR[EPVAP]-1659845041754
GPR[EPVS]-1659845041754
========
removeValue(index);
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845041756
GPR[SPVAP]-1659845041756
GPR[EPVAP]-1659845042575
GPR[EPVS]-1659845042575
========
removeRow(index);
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845042577
GPR[SPVAP]-1659845042577
GPR[EPVAP]-1659845043426
GPR[EPVS]-1659845043426
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(!isSeriesVisible(rowCount)){
return ;
}
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845043427
GPR[SPVAP]-1659845043427
GPR[EPVAP]-1659845044229
GPR[EPVS]-1659845044229
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(!getItemVisible(rowCount,index)){
return ;
}
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845044231
GPR[SPVAP]-1659845044232
GPR[EPVAP]-1659845045027
GPR[EPVS]-1659845045027
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(!getItemVisible(rowCount,index)){
return ;
}
if(dataset==null){
return result;
}

========
GPR[SPVS]-1659845045028
GPR[SPVAP]-1659845045028
GPR[EPVAP]-1659845045826
GPR[EPVS]-1659845045826
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=ORIENTATION_VERTICAL){
return result;
}

========
GPR[SPVS]-1659845045828
GPR[SPVAP]-1659845045828
GPR[EPVAP]-1659845046635
GPR[EPVS]-1659845046635
========
this.foregroundAnnotations.remove(index);
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845046637
GPR[SPVAP]-1659845046637
GPR[EPVAP]-1659845047439
GPR[EPVS]-1659845047439
========
fireChangeEvent();
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845047441
GPR[SPVAP]-1659845047441
GPR[EPVAP]-1659845048781
GPR[SPVATF]-1659845048781
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845049941
GPR[EPVS]-1659845049941
========
this.foregroundAnnotations.remove(index);
fireChangeEvent();
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845049943
GPR[SPVAP]-1659845049943
GPR[EPVAP]-1659845050774
GPR[EPVS]-1659845050774
========
if(index>=0){
return (KeyedObjects)this.foregroundAnnotations.get(rowCount).getObject(index);
}else {
return null;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845050776
GPR[SPVAP]-1659845050776
GPR[EPVAP]-1659845051573
GPR[EPVS]-1659845051573
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
this.dataset=dataset;
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845051575
GPR[SPVAP]-1659845051575
GPR[EPVAP]-1659845052398
GPR[EPVS]-1659845052398
========
if(columnCount<0){
return ;
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset==null){
return result;
}

========
GPR[SPVS]-1659845052401
GPR[SPVAP]-1659845052401
GPR[EPVAP]-1659845053240
GPR[EPVS]-1659845053240
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(!getItemLineVisible(rowCount,columnCount)&&!getItemShapeVisible(row,column)){
return ;
}
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845053243
GPR[SPVAP]-1659845053243
GPR[EPVAP]-1659845054035
GPR[EPVS]-1659845054035
========
if(index>=0){
result=getSeries(index);
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845054038
GPR[SPVAP]-1659845054038
GPR[EPVAP]-1659845054875
GPR[EPVS]-1659845054875
========
this.dataset=dataset;
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset==null){
return result;
}

========
GPR[SPVS]-1659845054879
GPR[SPVAP]-1659845054879
GPR[EPVAP]-1659845055675
GPR[EPVS]-1659845055675
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
this.dataset=source;
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845055677
GPR[SPVAP]-1659845055677
GPR[EPVAP]-1659845056498
GPR[EPVS]-1659845056498
========
this.index=index;
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845056506
GPR[SPVAP]-1659845056506
GPR[EPVAP]-1659845057307
GPR[EPVS]-1659845057307
========
result.setDataset(dataset);
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845057310
GPR[SPVAP]-1659845057310
GPR[EPVAP]-1659845058100
GPR[EPVS]-1659845058100
========
result.setDatasetIndex(index);
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845058102
GPR[SPVAP]-1659845058102
GPR[EPVAP]-1659845058911
GPR[EPVS]-1659845058911
========
result.setSeriesKey(dataset.getRowKey(columnCount));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845058912
GPR[SPVAP]-1659845058912
GPR[EPVAP]-1659845059732
GPR[EPVS]-1659845059732
========
fireDatasetChanged(new PieDatasetChangeInfo(PieDatasetChangeType.ADD,index,index));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845059735
GPR[SPVAP]-1659845059735
GPR[EPVAP]-1659845060559
GPR[EPVS]-1659845060559
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset==null){
return true;
}
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845060562
GPR[SPVAP]-1659845060562
GPR[EPVAP]-1659845061363
GPR[EPVS]-1659845061363
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845061365
GPR[SPVAP]-1659845061365
GPR[EPVAP]-1659845062168
GPR[EPVS]-1659845062168
========
this.dataset=dataset;
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(this.dataset!=null){
return result;
}

========
GPR[SPVS]-1659845062170
GPR[SPVAP]-1659845062170
GPR[EPVAP]-1659845062976
GPR[EPVS]-1659845062976
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(this.dataset!=null){
return result;
}

========
GPR[SPVS]-1659845062978
GPR[SPVAP]-1659845062978
GPR[EPVAP]-1659845063774
GPR[EPVS]-1659845063774
========
this.dataset=dataset;
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845063778
GPR[SPVAP]-1659845063778
GPR[EPVAP]-1659845064616
GPR[EPVS]-1659845064616
========
this.dataset=dataset;
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(this.dataset!=null){
return result;
}

========
GPR[SPVS]-1659845064617
GPR[SPVAP]-1659845064617
GPR[EPVAP]-1659845065416
GPR[EPVS]-1659845065416
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=rowCount){
return result;
}

========
GPR[SPVS]-1659845065420
GPR[SPVAP]-1659845065420
GPR[EPVAP]-1659845066248
GPR[EPVS]-1659845066248
========
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=PlotOrientation.VERTICAL){
return result;
}

========
GPR[SPVS]-1659845066251
GPR[SPVAP]-1659845066251
GPR[EPVAP]-1659845067041
GPR[EPVS]-1659845067041
========
double index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845067047
GPR[SPVAP]-1659845067047
GPR[EPVAP]-1659845067860
GPR[EPVS]-1659845067860
========
result.setDataset(dataset);
result.setDatasetIndex(index);
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845067864
GPR[SPVAP]-1659845067864
GPR[EPVAP]-1659845068700
GPR[EPVS]-1659845068700
========
result.setDataset(dataset);
result.setSeriesKey(dataset.getRowKey(columnCount));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845068702
GPR[SPVAP]-1659845068702
GPR[EPVAP]-1659845069514
GPR[EPVS]-1659845069514
========
result.setDatasetIndex(index);
result.setSeriesKey(dataset.getRowKey(columnCount));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845069516
GPR[SPVAP]-1659845069516
GPR[EPVAP]-1659845070360
GPR[EPVS]-1659845070360
========
result.setDataset(dataset);
result.setDatasetIndex(index);
result.setSeriesKey(dataset.getRowKey(columnCount));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845070361
GPR[SPVAP]-1659845070361
GPR[EPVAP]-1659845071170
GPR[EPVS]-1659845071170
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(this.dataset!=null){
return result;
}

========
GPR[SPVS]-1659845071173
GPR[SPVAP]-1659845071173
GPR[EPVAP]-1659845071999
GPR[EPVS]-1659845071999
========
this.dataset=dataset;
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845072001
GPR[SPVAP]-1659845072001
GPR[EPVAP]-1659845072831
GPR[EPVS]-1659845072831
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845072833
GPR[SPVAP]-1659845072833
GPR[EPVAP]-1659845073652
GPR[EPVS]-1659845073652
========
this.dataset=dataset;
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(this.dataset!=null){
return result;
}

========
GPR[SPVS]-1659845073654
GPR[SPVAP]-1659845073654
GPR[EPVAP]-1659845074519
GPR[EPVS]-1659845074519
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(this.dataset!=null){
return result;
}

========
GPR[SPVS]-1659845074521
GPR[SPVAP]-1659845074521
GPR[EPVAP]-1659845075336
GPR[EPVS]-1659845075336
========
this.dataset=dataset;
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845075338
GPR[SPVAP]-1659845075338
GPR[EPVAP]-1659845076176
GPR[EPVS]-1659845076176
========
this.dataset=dataset;
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(this.dataset!=null){
return result;
}

========
GPR[SPVS]-1659845076178
GPR[SPVAP]-1659845076178
GPR[EPVAP]-1659845076988
GPR[EPVS]-1659845076988
GPR[ESUN]-1659845076989
GPR[SSUN]-1659845076989
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,1797
UNKNOWN ASTNode type : catch (NoSuchMethodException e) {
  result=object;
}

========
if(dataset==null){
return result;
}

========
GPR[SPVS]-1659845079372
GPR[SPVAP]-1659845079372
GPR[EPVAP]-1659845083922
GPR[SPVATF]-1659845083922
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845085076
GPR[SPVATR]-1659845085076
TESTING : chart_1
GPR[EPVATR]-1659845099023
GPR[EPVS]-1659845099023
GPR[PF]-1659845099023
sourceFile  script/workingdir/SimFix/chart/chart_1_buggy/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
location   script/workingdir/SimFix/chart/chart_1_buggy
========
if(this.dataset==null){
return result;
}

========
GPR[SPVS]-1659845099032
GPR[SPVAP]-1659845099032
GPR[EPVAP]-1659845099845
GPR[EPVS]-1659845099845
========
if(this.dataset!=null){
return result;
}

========
GPR[SPVS]-1659845099847
GPR[SPVAP]-1659845099847
GPR[EPVAP]-1659845100674
GPR[EPVS]-1659845100674
========
this.dataset=dataset;
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845100676
GPR[SPVAP]-1659845100676
GPR[EPVAP]-1659845101489
GPR[EPVS]-1659845101489
========
if(dataset.getValue(rowCount,columnCount)==null){
return ;
}
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845101491
GPR[SPVAP]-1659845101491
GPR[EPVAP]-1659845102300
GPR[EPVS]-1659845102300
========
if(dataset!=null){
dataset.addChangeListener(this);
}
if(dataset!=null){
return result;
}

========
GPR[SPVS]-1659845102301
GPR[SPVAP]-1659845102302
GPR[EPVAP]-1659845103123
GPR[EPVS]-1659845103124
========
this.dataset=dataset;
if(dataset==null){
return result;
}

========
GPR[SPVS]-1659845103125
GPR[SPVAP]-1659845103125
GPR[EPVAP]-1659845103928
GPR[EPVS]-1659845103928
========
if(dataset!=TableOrder.BY_ROW){
return result;
}

========
GPR[SPVS]-1659845103930
GPR[SPVAP]-1659845103930
GPR[EPVAP]-1659845104733
GPR[EPVS]-1659845104733
========
if(dataset==TableOrder.BY_ROW){
return result;
}

========
GPR[SPVS]-1659845104735
GPR[SPVAP]-1659845104735
GPR[EPVAP]-1659845105540
GPR[EPVS]-1659845105540
========
if(dataset!=PlotOrientation.VERTICAL){
return result;
}

========
GPR[SPVS]-1659845105542
GPR[SPVAP]-1659845105542
GPR[EPVAP]-1659845106381
GPR[EPVS]-1659845106381
========
if(dataset==PlotOrientation.VERTICAL){
return result;
}

========
GPR[SPVS]-1659845106383
GPR[SPVAP]-1659845106383
GPR[EPVAP]-1659845107189
GPR[EPVS]-1659845107189
========
if(dataset!=PlotOrientation.HORIZONTAL){
return result;
}

========
GPR[SPVS]-1659845107192
GPR[SPVAP]-1659845107192
GPR[EPVAP]-1659845107995
GPR[EPVS]-1659845107995
GPR[ESUN]-1659845107996
GPR[SSUN]-1659845107996
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,1798
GPR[ESUN]-1659845108490
GPR[SSUN]-1659845108490
org.jfree.chart.plot.CategoryPlot,1727
========
return this.renderers.size();

========
GPR[SPVS]-1659845110607
GPR[SPVAP]-1659845110607
GPR[EPVAP]-1659845115265
GPR[SPVATF]-1659845115265
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845116415
GPR[EPVS]-1659845116415
GPR[ESUN]-1659845116416
GPR[SSUN]-1659845116416
org.jfree.data.category.DefaultCategoryDataset,259
========
fireDatasetChanged(new DatasetChangeInfo());
addValue(new Double(value),rowKey,columnKey);

========
GPR[SPVS]-1659845118762
GPR[SPVAP]-1659845118762
GPR[EPVAP]-1659845123236
GPR[SPVATF]-1659845123236
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845124407
GPR[EPVS]-1659845124407
========
if(getValue(rowKey,columnKey)!=null){
value=n.doubleValue();
}
addValue(new Double(value),rowKey,columnKey);

========
GPR[SPVS]-1659845124410
GPR[SPVAP]-1659845124410
GPR[EPVAP]-1659845125126
GPR[EPVS]-1659845125126
========
this.value=value;
addValue(new Double(value),rowKey,columnKey);

========
GPR[SPVS]-1659845125127
GPR[SPVAP]-1659845125127
GPR[EPVAP]-1659845125873
GPR[EPVS]-1659845125873
========
updateBounds();
addValue(new Double(value),rowKey,columnKey);

========
GPR[SPVS]-1659845125875
GPR[SPVAP]-1659845125875
GPR[EPVAP]-1659845126605
GPR[EPVS]-1659845126605
========
updateBounds();
fireDatasetChanged(new DatasetChangeInfo());
addValue(new Double(value),rowKey,columnKey);

========
GPR[SPVS]-1659845126607
GPR[SPVAP]-1659845126607
GPR[EPVAP]-1659845127322
GPR[EPVS]-1659845127322
========
if(value<=0.0){
throw new IllegalArgumentException("Requires \'value\' > 0.0.");
}
addValue(new Double(value),rowKey,columnKey);

========
GPR[SPVS]-1659845127325
GPR[SPVAP]-1659845127325
GPR[EPVAP]-1659845128611
GPR[SPVATF]-1659845128611
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845129741
GPR[EPVS]-1659845129741
========
if(value<=0.0){
throw new IllegalArgumentException("Requires \'value\' > 0.0.");
}
this.value=value;
addValue(new Double(value),rowKey,columnKey);

========
GPR[SPVS]-1659845129742
GPR[SPVAP]-1659845129742
GPR[EPVAP]-1659845130466
GPR[EPVS]-1659845130466
========
if(getRowIndex(rowKey)<0){
throw new UnknownKeyException("Row key ("+rowKey);
}
addValue(new Double(value),rowKey,columnKey);

========
GPR[SPVS]-1659845130468
GPR[SPVAP]-1659845130468
GPR[EPVAP]-1659845131782
GPR[SPVATF]-1659845131782
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845132934
GPR[EPVS]-1659845132934
GPR[ESUN]-1659845132941
GPR[SSUN]-1659845132941
org.jfree.data.category.DefaultCategoryDataset,260
Find no block!
GPR[SSUN]-1659845133409
org.jfree.chart.renderer.category.LineAndShapeRenderer,211
========
this.seriesShapesVisible=new BooleanList();
super();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;

========
GPR[SPVS]-1659845135407
GPR[SPVAP]-1659845135407
GPR[EPVAP]-1659845137636
GPR[EPVS]-1659845137636
========
super();
this.seriesLinesVisible=new BooleanList();
super.setDrawSeriesLineAsPath(true);
this.baseLinesVisible=lines;

========
GPR[SPVS]-1659845137638
GPR[SPVAP]-1659845137638
GPR[EPVAP]-1659845139111
GPR[EPVS]-1659845139111
========
super();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=flag;

========
GPR[SPVS]-1659845139113
GPR[SPVAP]-1659845139113
GPR[EPVAP]-1659845140549
GPR[EPVS]-1659845140549
========
fireChangeEvent();
super();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;

========
GPR[SPVS]-1659845140551
GPR[SPVAP]-1659845140551
GPR[EPVAP]-1659845141985
GPR[EPVS]-1659845141985
========
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
super();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;

========
GPR[SPVS]-1659845141987
GPR[SPVAP]-1659845141987
GPR[EPVAP]-1659845143452
GPR[EPVS]-1659845143452
========
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
super();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;

========
GPR[SPVS]-1659845143453
GPR[SPVAP]-1659845143453
GPR[EPVAP]-1659845144912
GPR[EPVS]-1659845144912
========
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
super();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;

========
GPR[SPVS]-1659845144913
GPR[SPVAP]-1659845144913
GPR[EPVAP]-1659845146386
GPR[EPVS]-1659845146386
========
fireChangeEvent();
super();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=flag;

========
GPR[SPVS]-1659845146388
GPR[SPVAP]-1659845146388
GPR[EPVAP]-1659845147832
GPR[EPVS]-1659845147832
GPR[ESUN]-1659845147832
GPR[SSUN]-1659845147832
org.jfree.chart.renderer.category.LineAndShapeRenderer,212
GPR[ESUN]-1659845148253
GPR[SSUN]-1659845148253
org.jfree.chart.renderer.category.LineAndShapeRenderer,213
========
this.baseShapesVisible=shapes;
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();

========
GPR[SPVS]-1659845150253
GPR[SPVAP]-1659845150253
GPR[EPVAP]-1659845154822
GPR[SPVATF]-1659845154822
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845155989
GPR[EPVS]-1659845155989
========
this.seriesShapesFilled=new BooleanList();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();

========
GPR[SPVS]-1659845155990
GPR[SPVAP]-1659845155990
GPR[EPVAP]-1659845157282
GPR[SPVATF]-1659845157282
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845158455
GPR[EPVS]-1659845158455
========
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();

========
GPR[SPVS]-1659845158456
GPR[SPVAP]-1659845158456
GPR[EPVAP]-1659845159719
GPR[SPVATF]-1659845159719
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845160912
GPR[EPVS]-1659845160912
========
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=flag;
this.seriesShapesVisible=new BooleanList();

========
GPR[SPVS]-1659845160914
GPR[SPVAP]-1659845160914
GPR[EPVAP]-1659845161660
GPR[EPVS]-1659845161660
========
fireChangeEvent();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();

========
GPR[SPVS]-1659845161661
GPR[SPVAP]-1659845161661
GPR[EPVAP]-1659845165316
GPR[SPVATF]-1659845165316
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845166487
GPR[EPVS]-1659845166487
========
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();

========
GPR[SPVS]-1659845166488
GPR[SPVAP]-1659845166488
GPR[EPVAP]-1659845167230
GPR[EPVS]-1659845167230
========
this.seriesLinesVisible=new BooleanList();
super(lines,shapes);
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();

========
GPR[SPVS]-1659845167231
GPR[SPVAP]-1659845167231
GPR[EPVAP]-1659845167977
GPR[EPVS]-1659845167977
========
this.seriesLinesVisible=new BooleanList();
super.setDrawSeriesLineAsPath(true);
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();

========
GPR[SPVS]-1659845167978
GPR[SPVAP]-1659845167978
GPR[EPVAP]-1659845168723
GPR[EPVS]-1659845168723
========
fireChangeEvent();
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=flag;
this.seriesShapesVisible=new BooleanList();

========
GPR[SPVS]-1659845168725
GPR[SPVAP]-1659845168725
GPR[EPVAP]-1659845169496
GPR[EPVS]-1659845169496
GPR[ESUN]-1659845169497
GPR[SSUN]-1659845169497
org.jfree.chart.renderer.category.LineAndShapeRenderer,214
========
this.seriesShapesFilled=new BooleanList();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845171624
GPR[SPVAP]-1659845171624
GPR[EPVAP]-1659845176252
GPR[SPVATF]-1659845176252
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845177403
GPR[EPVS]-1659845177403
========
this.baseShapesFilled=true;
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845177404
GPR[SPVAP]-1659845177404
GPR[EPVAP]-1659845178753
GPR[SPVATF]-1659845178753
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845179921
GPR[EPVS]-1659845179921
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845179923
GPR[SPVAP]-1659845179923
GPR[EPVAP]-1659845181187
GPR[SPVATF]-1659845181187
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845182341
GPR[EPVS]-1659845182341
========
this.useFillPaint=false;
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845182342
GPR[SPVAP]-1659845182342
GPR[EPVAP]-1659845183623
GPR[SPVATF]-1659845183623
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845184790
GPR[EPVS]-1659845184790
========
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
super(lines,shapes);
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845184791
GPR[SPVAP]-1659845184791
GPR[EPVAP]-1659845185548
GPR[EPVS]-1659845185548
========
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
super.setDrawSeriesLineAsPath(true);
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845185549
GPR[SPVAP]-1659845185549
GPR[EPVAP]-1659845186315
GPR[EPVS]-1659845186315
========
this.baseLinesVisible=flag;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845186317
GPR[SPVAP]-1659845186317
GPR[EPVAP]-1659845187082
GPR[EPVS]-1659845187082
========
fireChangeEvent();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845187083
GPR[SPVAP]-1659845187083
GPR[EPVAP]-1659845188366
GPR[SPVATF]-1659845188366
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845189513
GPR[EPVS]-1659845189513
========
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=flag;

========
GPR[SPVS]-1659845189514
GPR[SPVAP]-1659845189514
GPR[EPVAP]-1659845190255
GPR[EPVS]-1659845190255
========
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845190257
GPR[SPVAP]-1659845190257
GPR[EPVAP]-1659845191008
GPR[EPVS]-1659845191008
========
fireChangeEvent();
this.baseLinesVisible=flag;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;

========
GPR[SPVS]-1659845191009
GPR[SPVAP]-1659845191009
GPR[EPVAP]-1659845191758
GPR[EPVS]-1659845191758
========
fireChangeEvent();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=flag;

========
GPR[SPVS]-1659845191759
GPR[SPVAP]-1659845191759
GPR[EPVAP]-1659845192544
GPR[EPVS]-1659845192544
GPR[ESUN]-1659845192545
GPR[SSUN]-1659845192545
org.jfree.chart.renderer.category.LineAndShapeRenderer,215
========
this.seriesLinesVisible=new BooleanList();
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845194727
GPR[SPVAP]-1659845194727
GPR[EPVAP]-1659845199296
GPR[SPVATF]-1659845199296
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845200469
GPR[EPVS]-1659845200469
========
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845200470
GPR[SPVAP]-1659845200470
GPR[EPVAP]-1659845201758
GPR[SPVATF]-1659845201758
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845202925
GPR[EPVS]-1659845202925
========
this.seriesLinesVisible=new BooleanList();
this.baseLinesVisible=lines;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845202927
GPR[SPVAP]-1659845202927
GPR[EPVAP]-1659845204208
GPR[SPVATF]-1659845204208
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845205373
GPR[EPVS]-1659845205373
========
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.useFillPaint=false;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845205374
GPR[SPVAP]-1659845205374
GPR[EPVAP]-1659845206718
GPR[SPVATF]-1659845206718
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845207912
GPR[EPVS]-1659845207912
========
this.drawOutlines=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845207913
GPR[SPVAP]-1659845207913
GPR[EPVAP]-1659845209221
GPR[SPVATF]-1659845209221
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845210402
GPR[EPVS]-1659845210402
========
this.drawOutlines=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.useFillPaint=false;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845210403
GPR[SPVAP]-1659845210403
GPR[EPVAP]-1659845211685
GPR[SPVATF]-1659845211685
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845212886
GPR[EPVS]-1659845212886
========
this.useFillPaint=false;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845212887
GPR[SPVAP]-1659845212887
GPR[EPVAP]-1659845214166
GPR[SPVATF]-1659845214166
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845215365
GPR[EPVS]-1659845215365
========
this.drawOutlines=false;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845215366
GPR[SPVAP]-1659845215367
GPR[EPVAP]-1659845216683
GPR[SPVATF]-1659845216683
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845217823
GPR[EPVS]-1659845217823
========
this.useOutlinePaint=false;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845217824
GPR[SPVAP]-1659845217824
GPR[EPVAP]-1659845219084
GPR[SPVATF]-1659845219084
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845220281
GPR[EPVS]-1659845220281
========
this.useSeriesOffset=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845220282
GPR[SPVAP]-1659845220282
GPR[EPVAP]-1659845221581
GPR[SPVATF]-1659845221581
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845222747
GPR[EPVS]-1659845222747
========
this.useFillPaint=false;
this.drawOutlines=false;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845222748
GPR[SPVAP]-1659845222748
GPR[EPVAP]-1659845224028
GPR[SPVATF]-1659845224028
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845225195
GPR[EPVS]-1659845225195
========
this.useFillPaint=false;
this.useOutlinePaint=false;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845225196
GPR[SPVAP]-1659845225196
GPR[EPVAP]-1659845226489
GPR[SPVATF]-1659845226489
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845227680
GPR[EPVS]-1659845227680
========
this.useFillPaint=false;
this.useSeriesOffset=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845227682
GPR[SPVAP]-1659845227682
GPR[EPVAP]-1659845229008
GPR[SPVATF]-1659845229008
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845230167
GPR[EPVS]-1659845230167
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845230169
GPR[SPVAP]-1659845230169
GPR[EPVAP]-1659845231485
GPR[SPVATF]-1659845231485
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845232641
GPR[EPVS]-1659845232641
========
this.drawOutlines=false;
this.useSeriesOffset=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845232642
GPR[SPVAP]-1659845232642
GPR[EPVAP]-1659845233925
GPR[SPVATF]-1659845233925
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845235057
GPR[EPVS]-1659845235057
========
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845235059
GPR[SPVAP]-1659845235059
GPR[EPVAP]-1659845237971
GPR[SPVATF]-1659845237971
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845239301
GPR[EPVS]-1659845239301
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845239302
GPR[SPVAP]-1659845239302
GPR[EPVAP]-1659845240572
GPR[SPVATF]-1659845240572
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845241751
GPR[EPVS]-1659845241751
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useSeriesOffset=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845241753
GPR[SPVAP]-1659845241753
GPR[EPVAP]-1659845243008
GPR[SPVATF]-1659845243008
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845244179
GPR[EPVS]-1659845244179
========
this.useFillPaint=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845244181
GPR[SPVAP]-1659845244181
GPR[EPVAP]-1659845245480
GPR[SPVATF]-1659845245480
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845246670
GPR[EPVS]-1659845246670
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845246671
GPR[SPVAP]-1659845246671
GPR[EPVAP]-1659845247989
GPR[SPVATF]-1659845247989
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845249177
GPR[EPVS]-1659845249177
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845249178
GPR[SPVAP]-1659845249178
GPR[EPVAP]-1659845250439
GPR[SPVATF]-1659845250439
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845251598
GPR[EPVS]-1659845251598
========
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=flag;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845251599
GPR[SPVAP]-1659845251599
GPR[EPVAP]-1659845252344
GPR[EPVS]-1659845252344
========
fireChangeEvent();
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845252346
GPR[SPVAP]-1659845252346
GPR[EPVAP]-1659845253608
GPR[SPVATF]-1659845253608
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845254795
GPR[EPVS]-1659845254795
========
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845254797
GPR[SPVAP]-1659845254797
GPR[EPVAP]-1659845255584
GPR[EPVS]-1659845255584
========
this.seriesShapesVisible=new BooleanList();
super(lines,shapes);
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845255586
GPR[SPVAP]-1659845255586
GPR[EPVAP]-1659845256384
GPR[EPVS]-1659845256384
========
this.seriesShapesVisible=new BooleanList();
super.setDrawSeriesLineAsPath(true);
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845256386
GPR[SPVAP]-1659845256386
GPR[EPVAP]-1659845257156
GPR[EPVS]-1659845257156
========
clone.legendLine=ShapeUtilities.clone(this.legendLine);
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845257158
GPR[SPVAP]-1659845257158
GPR[EPVAP]-1659845257918
GPR[EPVS]-1659845257918
========
fireChangeEvent();
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=flag;
this.seriesShapesFilled=new BooleanList();

========
GPR[SPVS]-1659845257919
GPR[SPVAP]-1659845257919
GPR[EPVAP]-1659845258705
GPR[EPVS]-1659845258705
GPR[ESUN]-1659845258706
GPR[SSUN]-1659845258706
org.jfree.chart.renderer.category.LineAndShapeRenderer,216
========
this.seriesShapesVisible=new BooleanList();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845260764
GPR[SPVAP]-1659845260764
GPR[EPVAP]-1659845265368
GPR[SPVATF]-1659845265368
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845266564
GPR[EPVS]-1659845266564
========
this.useFillPaint=false;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845266566
GPR[SPVAP]-1659845266566
GPR[EPVAP]-1659845267851
GPR[SPVATF]-1659845267851
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845269019
GPR[EPVS]-1659845269019
========
this.seriesShapesVisible=new BooleanList();
this.useFillPaint=false;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845269021
GPR[SPVAP]-1659845269021
GPR[EPVAP]-1659845270294
GPR[SPVATF]-1659845270294
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845271437
GPR[EPVS]-1659845271437
========
this.baseShapesVisible=shapes;
this.useFillPaint=false;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845271438
GPR[SPVAP]-1659845271438
GPR[EPVAP]-1659845272714
GPR[SPVATF]-1659845272714
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845273881
GPR[EPVS]-1659845273881
========
this.drawOutlines=true;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845273882
GPR[SPVAP]-1659845273882
GPR[EPVAP]-1659845275196
GPR[SPVATF]-1659845275196
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845276344
GPR[EPVS]-1659845276344
========
this.drawOutlines=true;
this.baseShapesVisible=shapes;
this.useFillPaint=false;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845276345
GPR[SPVAP]-1659845276345
GPR[EPVAP]-1659845277621
GPR[SPVATF]-1659845277621
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845278802
GPR[EPVS]-1659845278802
========
this.drawOutlines=false;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845278804
GPR[SPVAP]-1659845278804
GPR[EPVAP]-1659845280119
GPR[SPVATF]-1659845280119
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845281256
GPR[EPVS]-1659845281256
========
this.useOutlinePaint=false;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845281257
GPR[SPVAP]-1659845281257
GPR[EPVAP]-1659845282550
GPR[SPVATF]-1659845282550
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845283708
GPR[EPVS]-1659845283708
========
this.itemMargin=0.2;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845283709
GPR[SPVAP]-1659845283709
GPR[EPVAP]-1659845284992
GPR[SPVATF]-1659845284992
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845286167
GPR[EPVS]-1659845286167
========
this.useFillPaint=false;
this.drawOutlines=false;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845286168
GPR[SPVAP]-1659845286168
GPR[EPVAP]-1659845287512
GPR[SPVATF]-1659845287512
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845288695
GPR[EPVS]-1659845288695
========
this.useFillPaint=false;
this.useOutlinePaint=false;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845288697
GPR[SPVAP]-1659845288697
GPR[EPVAP]-1659845289962
GPR[SPVATF]-1659845289962
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845291127
GPR[EPVS]-1659845291127
========
this.useFillPaint=false;
this.itemMargin=0.2;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845291128
GPR[SPVAP]-1659845291128
GPR[EPVAP]-1659845292389
GPR[SPVATF]-1659845292389
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845293552
GPR[EPVS]-1659845293552
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845293553
GPR[SPVAP]-1659845293553
GPR[EPVAP]-1659845294838
GPR[SPVATF]-1659845294838
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845296001
GPR[EPVS]-1659845296001
========
this.drawOutlines=false;
this.itemMargin=0.2;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845296002
GPR[SPVAP]-1659845296002
GPR[EPVAP]-1659845297276
GPR[SPVATF]-1659845297276
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845298425
GPR[EPVS]-1659845298425
========
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845298426
GPR[SPVAP]-1659845298426
GPR[EPVAP]-1659845299705
GPR[SPVATF]-1659845299705
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845300856
GPR[EPVS]-1659845300856
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845300858
GPR[SPVAP]-1659845300858
GPR[EPVAP]-1659845302137
GPR[SPVATF]-1659845302137
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845303285
GPR[EPVS]-1659845303285
========
this.useFillPaint=false;
this.drawOutlines=false;
this.itemMargin=0.2;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845303286
GPR[SPVAP]-1659845303286
GPR[EPVAP]-1659845304573
GPR[SPVATF]-1659845304573
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845305749
GPR[EPVS]-1659845305749
========
this.useFillPaint=false;
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845305750
GPR[SPVAP]-1659845305750
GPR[EPVAP]-1659845307032
GPR[SPVATF]-1659845307032
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845310413
GPR[EPVS]-1659845310413
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845310414
GPR[SPVAP]-1659845310414
GPR[EPVAP]-1659845311726
GPR[SPVATF]-1659845311726
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845312888
GPR[EPVS]-1659845312888
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845312889
GPR[SPVAP]-1659845312889
GPR[EPVAP]-1659845314191
GPR[SPVATF]-1659845314191
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845315339
GPR[EPVS]-1659845315339
========
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=shapes;

========
GPR[SPVS]-1659845315341
GPR[SPVAP]-1659845315341
GPR[EPVAP]-1659845316592
GPR[SPVATF]-1659845316592
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845317761
GPR[EPVS]-1659845317761
========
fireChangeEvent();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845317763
GPR[SPVAP]-1659845317763
GPR[EPVAP]-1659845319039
GPR[SPVATF]-1659845319039
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845320190
GPR[EPVS]-1659845320190
========
fireChangeEvent();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=shapes;

========
GPR[SPVS]-1659845320191
GPR[SPVAP]-1659845320191
GPR[EPVAP]-1659845321465
GPR[SPVATF]-1659845321465
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845322632
GPR[EPVS]-1659845322632
========
this.baseShapesVisible=flag;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845322634
GPR[SPVAP]-1659845322634
GPR[EPVAP]-1659845323401
GPR[EPVS]-1659845323401
========
super(lines,shapes);
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845323403
GPR[SPVAP]-1659845323403
GPR[EPVAP]-1659845324139
GPR[EPVS]-1659845324139
========
super.setDrawSeriesLineAsPath(true);
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845324140
GPR[SPVAP]-1659845324140
GPR[EPVAP]-1659845324873
GPR[EPVS]-1659845324873
========
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=false;

========
GPR[SPVS]-1659845324874
GPR[SPVAP]-1659845324874
GPR[EPVAP]-1659845326160
GPR[SPVATF]-1659845326160
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845327330
GPR[EPVS]-1659845327330
========
clone.legendLine=ShapeUtilities.clone(this.legendLine);
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845327331
GPR[SPVAP]-1659845327331
GPR[EPVAP]-1659845328089
GPR[EPVS]-1659845328089
========
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
this.baseShapesVisible=shapes;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845328091
GPR[SPVAP]-1659845328091
GPR[EPVAP]-1659845328834
GPR[EPVS]-1659845328834
========
fireChangeEvent();
this.baseShapesVisible=flag;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;

========
GPR[SPVS]-1659845328835
GPR[SPVAP]-1659845328835
GPR[EPVAP]-1659845329584
GPR[EPVS]-1659845329584
GPR[ESUN]-1659845329585
GPR[SSUN]-1659845329585
org.jfree.chart.renderer.category.LineAndShapeRenderer,217
========
this.drawOutlines=true;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845331727
GPR[SPVAP]-1659845331727
GPR[EPVAP]-1659845336292
GPR[SPVATF]-1659845336292
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845337465
GPR[EPVS]-1659845337465
========
this.useOutlinePaint=false;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845337466
GPR[SPVAP]-1659845337466
GPR[EPVAP]-1659845338794
GPR[SPVATF]-1659845338794
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845339947
GPR[EPVS]-1659845339947
========
this.drawOutlines=true;
this.useOutlinePaint=false;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845339948
GPR[SPVAP]-1659845339948
GPR[EPVAP]-1659845341202
GPR[SPVATF]-1659845341202
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845342373
GPR[EPVS]-1659845342373
========
this.drawOutlines=false;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845342375
GPR[SPVAP]-1659845342375
GPR[EPVAP]-1659845343643
GPR[SPVATF]-1659845343643
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845344788
GPR[EPVS]-1659845344788
========
this.useSeriesOffset=true;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845344789
GPR[SPVAP]-1659845344789
GPR[EPVAP]-1659845346115
GPR[SPVATF]-1659845346115
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845347253
GPR[EPVS]-1659845347253
========
this.itemMargin=0.2;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845347254
GPR[SPVAP]-1659845347254
GPR[EPVAP]-1659845348515
GPR[SPVATF]-1659845348515
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845349670
GPR[EPVS]-1659845349670
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845349671
GPR[SPVAP]-1659845349671
GPR[EPVAP]-1659845350965
GPR[SPVATF]-1659845350965
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845352129
GPR[EPVS]-1659845352129
========
this.drawOutlines=false;
this.useSeriesOffset=true;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845352130
GPR[SPVAP]-1659845352130
GPR[EPVAP]-1659845353434
GPR[SPVATF]-1659845353434
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845354589
GPR[EPVS]-1659845354589
========
this.drawOutlines=false;
this.itemMargin=0.2;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845354590
GPR[SPVAP]-1659845354590
GPR[EPVAP]-1659845355900
GPR[SPVATF]-1659845355900
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845357040
GPR[EPVS]-1659845357040
========
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845357041
GPR[SPVAP]-1659845357041
GPR[EPVAP]-1659845358343
GPR[SPVATF]-1659845358343
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845359533
GPR[EPVS]-1659845359533
========
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845359534
GPR[SPVAP]-1659845359534
GPR[EPVAP]-1659845360831
GPR[SPVATF]-1659845360831
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845361993
GPR[EPVS]-1659845361993
========
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845361995
GPR[SPVAP]-1659845361995
GPR[EPVAP]-1659845363258
GPR[SPVATF]-1659845363258
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845364388
GPR[EPVS]-1659845364388
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845364389
GPR[SPVAP]-1659845364389
GPR[EPVAP]-1659845365628
GPR[SPVATF]-1659845365628
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845366822
GPR[EPVS]-1659845366822
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845366823
GPR[SPVAP]-1659845366823
GPR[EPVAP]-1659845368113
GPR[SPVATF]-1659845368113
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845369241
GPR[EPVS]-1659845369241
========
this.drawOutlines=false;
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845369242
GPR[SPVAP]-1659845369242
GPR[EPVAP]-1659845370519
GPR[SPVATF]-1659845370519
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845371664
GPR[EPVS]-1659845371664
========
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845371666
GPR[SPVAP]-1659845371666
GPR[EPVAP]-1659845372940
GPR[SPVATF]-1659845372940
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845374081
GPR[EPVS]-1659845374081
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845374082
GPR[SPVAP]-1659845374082
GPR[EPVAP]-1659845375351
GPR[SPVATF]-1659845375351
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845376493
GPR[EPVS]-1659845376493
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=true;

========
GPR[SPVS]-1659845376495
GPR[SPVAP]-1659845376495
GPR[EPVAP]-1659845377770
GPR[SPVATF]-1659845377771
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845378973
GPR[EPVS]-1659845378973
========
this.seriesShapesFilled=new BooleanList();
this.drawOutlines=false;
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845378974
GPR[SPVAP]-1659845378974
GPR[EPVAP]-1659845382241
GPR[SPVATF]-1659845382241
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845383419
GPR[EPVS]-1659845383419
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=baseShapesVisible;
this.useFillPaint=false;

========
GPR[SPVS]-1659845383420
GPR[SPVAP]-1659845383420
GPR[EPVAP]-1659845384699
GPR[SPVATF]-1659845384699
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845385854
GPR[EPVS]-1659845385854
========
fireChangeEvent();
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845385856
GPR[SPVAP]-1659845385856
GPR[EPVAP]-1659845387123
GPR[SPVATF]-1659845387123
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845388289
GPR[EPVS]-1659845388289
========
fireChangeEvent();
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=baseShapesVisible;
this.useFillPaint=false;

========
GPR[SPVS]-1659845388291
GPR[SPVAP]-1659845388291
GPR[EPVAP]-1659845389595
GPR[SPVATF]-1659845389595
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845390784
GPR[EPVS]-1659845390784
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=baseShapesVisible;

========
GPR[SPVS]-1659845390785
GPR[SPVAP]-1659845390785
GPR[EPVAP]-1659845392092
GPR[SPVATF]-1659845392092
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845393276
GPR[EPVS]-1659845393276
========
fireChangeEvent();
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=baseShapesVisible;

========
GPR[SPVS]-1659845393277
GPR[SPVAP]-1659845393277
GPR[EPVAP]-1659845394550
GPR[SPVATF]-1659845394550
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845395713
GPR[EPVS]-1659845395713
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=useSeriesOffset;

========
GPR[SPVS]-1659845395715
GPR[SPVAP]-1659845395715
GPR[EPVAP]-1659845396980
GPR[SPVATF]-1659845396980
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845398146
GPR[EPVS]-1659845398146
========
fireChangeEvent();
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=useSeriesOffset;

========
GPR[SPVS]-1659845398147
GPR[SPVAP]-1659845398147
GPR[EPVAP]-1659845399460
GPR[SPVATF]-1659845399460
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845400617
GPR[EPVS]-1659845400617
========
clone.legendLine=ShapeUtilities.clone(this.legendLine);
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845400618
GPR[SPVAP]-1659845400618
GPR[EPVAP]-1659845401370
GPR[EPVS]-1659845401370
========
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845401371
GPR[SPVAP]-1659845401371
GPR[EPVAP]-1659845402133
GPR[EPVS]-1659845402133
========
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845402135
GPR[SPVAP]-1659845402135
GPR[EPVAP]-1659845402882
GPR[EPVS]-1659845402882
========
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;

========
GPR[SPVS]-1659845402883
GPR[SPVAP]-1659845402883
GPR[EPVAP]-1659845403623
GPR[EPVS]-1659845403623
GPR[ESUN]-1659845403624
GPR[SSUN]-1659845403624
org.jfree.chart.renderer.category.LineAndShapeRenderer,218
========
this.useOutlinePaint=false;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845405768
GPR[SPVAP]-1659845405768
GPR[EPVAP]-1659845410324
GPR[SPVATF]-1659845410324
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845411528
GPR[EPVS]-1659845411528
========
this.useSeriesOffset=false;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845411529
GPR[SPVAP]-1659845411529
GPR[EPVAP]-1659845412855
GPR[SPVATF]-1659845412855
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845414010
GPR[EPVS]-1659845414010
========
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845414011
GPR[SPVAP]-1659845414012
GPR[EPVAP]-1659845415273
GPR[SPVATF]-1659845415273
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845416464
GPR[EPVS]-1659845416464
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845416465
GPR[SPVAP]-1659845416465
GPR[EPVAP]-1659845417757
GPR[SPVATF]-1659845417757
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845418969
GPR[EPVS]-1659845418969
========
this.seriesShapesFilled=new BooleanList();
this.useOutlinePaint=false;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845418970
GPR[SPVAP]-1659845418970
GPR[EPVAP]-1659845420275
GPR[SPVATF]-1659845420275
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845421425
GPR[EPVS]-1659845421425
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845421426
GPR[SPVAP]-1659845421426
GPR[EPVAP]-1659845422684
GPR[SPVATF]-1659845422684
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845423859
GPR[EPVS]-1659845423859
========
this.useSeriesOffset=true;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845423860
GPR[SPVAP]-1659845423860
GPR[EPVAP]-1659845425130
GPR[SPVATF]-1659845425130
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845426273
GPR[EPVS]-1659845426273
========
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845426274
GPR[SPVAP]-1659845426274
GPR[EPVAP]-1659845427546
GPR[SPVATF]-1659845427546
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845428720
GPR[EPVS]-1659845428720
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845428721
GPR[SPVAP]-1659845428721
GPR[EPVAP]-1659845430000
GPR[SPVATF]-1659845430000
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845431201
GPR[EPVS]-1659845431201
========
this.useOutlinePaint=false;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845431202
GPR[SPVAP]-1659845431202
GPR[EPVAP]-1659845432503
GPR[SPVATF]-1659845432503
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845433668
GPR[EPVS]-1659845433668
========
this.useSeriesOffset=true;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845433670
GPR[SPVAP]-1659845433670
GPR[EPVAP]-1659845434942
GPR[SPVATF]-1659845434942
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845436123
GPR[EPVS]-1659845436123
========
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845436124
GPR[SPVAP]-1659845436124
GPR[EPVAP]-1659845437389
GPR[SPVATF]-1659845437389
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845438571
GPR[EPVS]-1659845438571
========
this.seriesShapesFilled=new BooleanList();
this.useSeriesOffset=true;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845438572
GPR[SPVAP]-1659845438572
GPR[EPVAP]-1659845439851
GPR[SPVATF]-1659845439851
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845441014
GPR[EPVS]-1659845441014
========
this.seriesShapesFilled=new BooleanList();
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845441015
GPR[SPVAP]-1659845441015
GPR[EPVAP]-1659845442278
GPR[SPVATF]-1659845442278
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845443450
GPR[EPVS]-1659845443450
========
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845443451
GPR[SPVAP]-1659845443451
GPR[EPVAP]-1659845444754
GPR[SPVATF]-1659845444754
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845445918
GPR[EPVS]-1659845445918
========
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845445919
GPR[SPVAP]-1659845445919
GPR[EPVAP]-1659845447203
GPR[SPVATF]-1659845447203
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845448356
GPR[EPVS]-1659845448356
========
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845448357
GPR[SPVAP]-1659845448357
GPR[EPVAP]-1659845449630
GPR[SPVATF]-1659845449630
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845450769
GPR[EPVS]-1659845450769
========
this.seriesShapesFilled=new BooleanList();
this.useOutlinePaint=false;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845450771
GPR[SPVAP]-1659845450771
GPR[EPVAP]-1659845454055
GPR[SPVATF]-1659845454055
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845455274
GPR[EPVS]-1659845455274
========
this.seriesShapesFilled=new BooleanList();
this.useSeriesOffset=true;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845455275
GPR[SPVAP]-1659845455275
GPR[EPVAP]-1659845456558
GPR[SPVATF]-1659845456558
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845457724
GPR[EPVS]-1659845457724
========
this.seriesShapesFilled=new BooleanList();
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845457726
GPR[SPVAP]-1659845457726
GPR[EPVAP]-1659845459002
GPR[SPVATF]-1659845459002
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845460132
GPR[EPVS]-1659845460132
========
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845460133
GPR[SPVAP]-1659845460133
GPR[EPVAP]-1659845461410
GPR[SPVATF]-1659845461410
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845462577
GPR[EPVS]-1659845462577
========
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845462579
GPR[SPVAP]-1659845462579
GPR[EPVAP]-1659845463827
GPR[SPVATF]-1659845463827
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845464985
GPR[EPVS]-1659845464985
========
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845464986
GPR[SPVAP]-1659845464986
GPR[EPVAP]-1659845466262
GPR[SPVATF]-1659845466262
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845467413
GPR[EPVS]-1659845467413
========
this.seriesShapesFilled=new BooleanList();
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845467414
GPR[SPVAP]-1659845467414
GPR[EPVAP]-1659845468687
GPR[SPVATF]-1659845468687
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845469883
GPR[EPVS]-1659845469883
========
this.seriesShapesFilled=new BooleanList();
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845469885
GPR[SPVAP]-1659845469885
GPR[EPVAP]-1659845471168
GPR[SPVATF]-1659845471168
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845472338
GPR[EPVS]-1659845472338
========
this.seriesShapesFilled=new BooleanList();
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845472339
GPR[SPVAP]-1659845472339
GPR[EPVAP]-1659845473594
GPR[SPVATF]-1659845473594
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845474783
GPR[EPVS]-1659845474783
========
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845474785
GPR[SPVAP]-1659845474785
GPR[EPVAP]-1659845476070
GPR[SPVATF]-1659845476070
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845477229
GPR[EPVS]-1659845477229
========
this.seriesShapesFilled=new BooleanList();
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845477230
GPR[SPVAP]-1659845477230
GPR[EPVAP]-1659845478507
GPR[SPVATF]-1659845478507
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845479686
GPR[EPVS]-1659845479686
========
this.seriesShapesFilled=new BooleanList();
this.useOutlinePaint=false;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845479688
GPR[SPVAP]-1659845479688
GPR[EPVAP]-1659845480975
GPR[SPVATF]-1659845480975
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845482166
GPR[EPVS]-1659845482166
========
this.seriesShapesFilled=new BooleanList();
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845482167
GPR[SPVAP]-1659845482167
GPR[EPVAP]-1659845483475
GPR[SPVATF]-1659845483475
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845484641
GPR[EPVS]-1659845484641
========
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845484642
GPR[SPVAP]-1659845484642
GPR[EPVAP]-1659845485934
GPR[SPVATF]-1659845485934
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845487093
GPR[EPVS]-1659845487093
========
this.seriesShapesFilled=new BooleanList();
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845487095
GPR[SPVAP]-1659845487095
GPR[EPVAP]-1659845488361
GPR[SPVATF]-1659845488361
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845489533
GPR[EPVS]-1659845489533
========
this.baseLinesVisible=false;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845489535
GPR[SPVAP]-1659845489535
GPR[EPVAP]-1659845490805
GPR[SPVATF]-1659845490805
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845491968
GPR[EPVS]-1659845491968
========
this.baseLinesVisible=false;
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;

========
GPR[SPVS]-1659845491970
GPR[SPVAP]-1659845491970
GPR[EPVAP]-1659845493223
GPR[SPVATF]-1659845493223
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845494369
GPR[EPVS]-1659845494369
========
this.baseShapesFilled=true;
this.useFillPaint=true;
this.drawOutlines=true;

========
GPR[SPVS]-1659845494371
GPR[SPVAP]-1659845494371
GPR[EPVAP]-1659845495668
GPR[SPVATF]-1659845495668
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845496859
GPR[EPVS]-1659845496859
========
this.baseShapesFilled=true;
this.useFillPaint=true;
this.drawOutlines=false;

========
GPR[SPVS]-1659845496860
GPR[SPVAP]-1659845496861
GPR[EPVAP]-1659845498150
GPR[SPVATF]-1659845498150
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845499324
GPR[EPVS]-1659845499324
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=true;
this.drawOutlines=true;

========
GPR[SPVS]-1659845499325
GPR[SPVAP]-1659845499325
GPR[EPVAP]-1659845500611
GPR[SPVATF]-1659845500611
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845501773
GPR[EPVS]-1659845501773
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=true;
this.drawOutlines=false;

========
GPR[SPVS]-1659845501774
GPR[SPVAP]-1659845501774
GPR[EPVAP]-1659845503064
GPR[SPVATF]-1659845503064
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845504249
GPR[EPVS]-1659845504249
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=baseShapesVisible;

========
GPR[SPVS]-1659845504250
GPR[SPVAP]-1659845504250
GPR[EPVAP]-1659845505520
GPR[SPVATF]-1659845505520
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845506668
GPR[EPVS]-1659845506668
========
fireChangeEvent();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845506669
GPR[SPVAP]-1659845506669
GPR[EPVAP]-1659845507937
GPR[SPVATF]-1659845507937
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845509133
GPR[EPVS]-1659845509133
========
fireChangeEvent();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=baseShapesVisible;

========
GPR[SPVS]-1659845509134
GPR[SPVAP]-1659845509134
GPR[EPVAP]-1659845510443
GPR[SPVATF]-1659845510443
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845511613
GPR[EPVS]-1659845511613
========
this.baseShapesFilled=baseShapesVisible;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845511614
GPR[SPVAP]-1659845511614
GPR[EPVAP]-1659845512900
GPR[SPVATF]-1659845512900
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845514037
GPR[EPVS]-1659845514037
========
fireChangeEvent();
this.baseShapesFilled=baseShapesVisible;
this.useFillPaint=false;
this.drawOutlines=true;

========
GPR[SPVS]-1659845514038
GPR[SPVAP]-1659845514038
GPR[EPVAP]-1659845515323
GPR[SPVATF]-1659845515323
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845516488
GPR[EPVS]-1659845516488
========
this.baseShapesFilled=true;
this.useFillPaint=baseShapesVisible;
this.drawOutlines=true;

========
GPR[SPVS]-1659845516490
GPR[SPVAP]-1659845516490
GPR[EPVAP]-1659845517758
GPR[SPVATF]-1659845517758
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845518909
GPR[EPVS]-1659845518909
========
fireChangeEvent();
this.baseShapesFilled=true;
this.useFillPaint=baseShapesVisible;
this.drawOutlines=true;

========
GPR[SPVS]-1659845518911
GPR[SPVAP]-1659845518911
GPR[EPVAP]-1659845520177
GPR[SPVATF]-1659845520177
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845521317
GPR[EPVS]-1659845521317
========
this.baseShapesFilled=true;
this.useFillPaint=useSeriesOffset;
this.drawOutlines=true;

========
GPR[SPVS]-1659845521318
GPR[SPVAP]-1659845521318
GPR[EPVAP]-1659845522610
GPR[SPVATF]-1659845522610
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845523785
GPR[EPVS]-1659845523785
========
fireChangeEvent();
this.baseShapesFilled=true;
this.useFillPaint=useSeriesOffset;
this.drawOutlines=true;

========
GPR[SPVS]-1659845523786
GPR[SPVAP]-1659845523786
GPR[EPVAP]-1659845525078
GPR[SPVATF]-1659845525078
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845527184
GPR[EPVS]-1659845527184
GPR[ESUN]-1659845527185
GPR[SSUN]-1659845527185
org.jfree.chart.renderer.category.LineAndShapeRenderer,219
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845530474
GPR[SPVAP]-1659845530474
GPR[EPVAP]-1659845535034
GPR[SPVATF]-1659845535034
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845536177
GPR[EPVS]-1659845536177
========
this.useSeriesOffset=false;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845536178
GPR[SPVAP]-1659845536178
GPR[EPVAP]-1659845537496
GPR[SPVATF]-1659845537496
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845538674
GPR[EPVS]-1659845538674
========
this.baseShapesFilled=true;
this.useSeriesOffset=false;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845538675
GPR[SPVAP]-1659845538675
GPR[EPVAP]-1659845539947
GPR[SPVATF]-1659845539947
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845541095
GPR[EPVS]-1659845541095
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845541097
GPR[SPVAP]-1659845541097
GPR[EPVAP]-1659845542378
GPR[SPVATF]-1659845542378
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845543609
GPR[EPVS]-1659845543609
========
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=true;

========
GPR[SPVS]-1659845543611
GPR[SPVAP]-1659845543611
GPR[EPVAP]-1659845544902
GPR[SPVATF]-1659845544902
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845546060
GPR[EPVS]-1659845546060
========
this.baseLinesVisible=false;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845546061
GPR[SPVAP]-1659845546061
GPR[EPVAP]-1659845547326
GPR[SPVATF]-1659845547326
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845548507
GPR[EPVS]-1659845548507
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=true;

========
GPR[SPVS]-1659845548508
GPR[SPVAP]-1659845548508
GPR[EPVAP]-1659845549771
GPR[SPVATF]-1659845549771
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845550923
GPR[EPVS]-1659845550923
========
this.baseLinesVisible=false;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845550925
GPR[SPVAP]-1659845550925
GPR[EPVAP]-1659845552192
GPR[SPVATF]-1659845552192
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845553374
GPR[EPVS]-1659845553374
========
this.baseLinesVisible=false;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=true;

========
GPR[SPVS]-1659845553375
GPR[SPVAP]-1659845553375
GPR[EPVAP]-1659845554674
GPR[SPVATF]-1659845554674
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845555877
GPR[EPVS]-1659845555877
========
this.baseLinesVisible=false;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=true;

========
GPR[SPVS]-1659845555879
GPR[SPVAP]-1659845555879
GPR[EPVAP]-1659845557150
GPR[SPVATF]-1659845557150
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845558326
GPR[EPVS]-1659845558326
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845558327
GPR[SPVAP]-1659845558327
GPR[EPVAP]-1659845559605
GPR[SPVATF]-1659845559605
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845560749
GPR[EPVS]-1659845560749
========
this.useSeriesOffset=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845560750
GPR[SPVAP]-1659845560750
GPR[EPVAP]-1659845562018
GPR[SPVATF]-1659845562018
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845563188
GPR[EPVS]-1659845563188
========
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845563189
GPR[SPVAP]-1659845563189
GPR[EPVAP]-1659845564474
GPR[SPVATF]-1659845564474
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845565628
GPR[EPVS]-1659845565628
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845565630
GPR[SPVAP]-1659845565630
GPR[EPVAP]-1659845566965
GPR[SPVATF]-1659845566965
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845568123
GPR[EPVS]-1659845568123
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845568124
GPR[SPVAP]-1659845568124
GPR[EPVAP]-1659845569406
GPR[SPVATF]-1659845569406
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845570581
GPR[EPVS]-1659845570581
========
this.useSeriesOffset=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845570583
GPR[SPVAP]-1659845570583
GPR[EPVAP]-1659845571867
GPR[SPVATF]-1659845571867
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845573017
GPR[EPVS]-1659845573017
========
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845573018
GPR[SPVAP]-1659845573018
GPR[EPVAP]-1659845574270
GPR[SPVATF]-1659845574270
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845575453
GPR[EPVS]-1659845575453
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845575454
GPR[SPVAP]-1659845575454
GPR[EPVAP]-1659845576714
GPR[SPVATF]-1659845576714
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845577881
GPR[EPVS]-1659845577881
========
this.seriesShapesFilled=new BooleanList();
this.useSeriesOffset=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845577883
GPR[SPVAP]-1659845577883
GPR[EPVAP]-1659845579154
GPR[SPVATF]-1659845579154
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845580349
GPR[EPVS]-1659845580349
========
this.seriesShapesFilled=new BooleanList();
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845580350
GPR[SPVAP]-1659845580350
GPR[EPVAP]-1659845581634
GPR[SPVATF]-1659845581634
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845582786
GPR[EPVS]-1659845582786
========
this.baseShapesFilled=true;
this.useSeriesOffset=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845582787
GPR[SPVAP]-1659845582787
GPR[EPVAP]-1659845584050
GPR[SPVATF]-1659845584050
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845585235
GPR[EPVS]-1659845585235
========
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845585237
GPR[SPVAP]-1659845585237
GPR[EPVAP]-1659845586495
GPR[SPVATF]-1659845586495
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845587645
GPR[EPVS]-1659845587645
========
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845587646
GPR[SPVAP]-1659845587646
GPR[EPVAP]-1659845588904
GPR[SPVATF]-1659845588904
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845590060
GPR[EPVS]-1659845590060
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845590062
GPR[SPVAP]-1659845590062
GPR[EPVAP]-1659845591322
GPR[SPVATF]-1659845591322
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845592484
GPR[EPVS]-1659845592484
========
this.seriesShapesFilled=new BooleanList();
this.useSeriesOffset=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845592486
GPR[SPVAP]-1659845592486
GPR[EPVAP]-1659845593749
GPR[SPVATF]-1659845593749
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845594909
GPR[EPVS]-1659845594909
========
this.seriesShapesFilled=new BooleanList();
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845594910
GPR[SPVAP]-1659845594910
GPR[EPVAP]-1659845596173
GPR[SPVATF]-1659845596173
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845597313
GPR[EPVS]-1659845597313
========
this.baseShapesFilled=true;
this.useSeriesOffset=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845597314
GPR[SPVAP]-1659845597314
GPR[EPVAP]-1659845600833
GPR[SPVATF]-1659845600833
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845602001
GPR[EPVS]-1659845602001
========
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845602002
GPR[SPVAP]-1659845602002
GPR[EPVAP]-1659845603302
GPR[SPVATF]-1659845603302
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845604465
GPR[EPVS]-1659845604465
========
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845604466
GPR[SPVAP]-1659845604466
GPR[EPVAP]-1659845605745
GPR[SPVATF]-1659845605745
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845606892
GPR[EPVS]-1659845606892
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useSeriesOffset=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845606893
GPR[SPVAP]-1659845606893
GPR[EPVAP]-1659845608171
GPR[SPVATF]-1659845608171
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845609338
GPR[EPVS]-1659845609338
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845609340
GPR[SPVAP]-1659845609340
GPR[EPVAP]-1659845610602
GPR[SPVATF]-1659845610602
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845611809
GPR[EPVS]-1659845611809
========
this.seriesShapesFilled=new BooleanList();
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845611811
GPR[SPVAP]-1659845611811
GPR[EPVAP]-1659845613081
GPR[SPVATF]-1659845613081
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845614230
GPR[EPVS]-1659845614230
========
this.baseShapesFilled=true;
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845614231
GPR[SPVAP]-1659845614231
GPR[EPVAP]-1659845615511
GPR[SPVATF]-1659845615511
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845616672
GPR[EPVS]-1659845616672
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useSeriesOffset=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845616674
GPR[SPVAP]-1659845616674
GPR[EPVAP]-1659845617949
GPR[SPVATF]-1659845617949
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845619131
GPR[EPVS]-1659845619131
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845619132
GPR[SPVAP]-1659845619132
GPR[EPVAP]-1659845620415
GPR[SPVATF]-1659845620415
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845621563
GPR[EPVS]-1659845621563
========
this.seriesShapesFilled=new BooleanList();
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845621564
GPR[SPVAP]-1659845621564
GPR[EPVAP]-1659845622824
GPR[SPVATF]-1659845622824
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845623975
GPR[EPVS]-1659845623975
========
this.baseShapesFilled=true;
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845623976
GPR[SPVAP]-1659845623976
GPR[EPVAP]-1659845625265
GPR[SPVATF]-1659845625265
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845626418
GPR[EPVS]-1659845626418
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useSeriesOffset=true;
this.itemMargin=0.2;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845626419
GPR[SPVAP]-1659845626419
GPR[EPVAP]-1659845627748
GPR[SPVATF]-1659845627748
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845628976
GPR[EPVS]-1659845628976
========
this.useFillPaint=true;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845628978
GPR[SPVAP]-1659845628978
GPR[EPVAP]-1659845630269
GPR[SPVATF]-1659845630269
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845631429
GPR[EPVS]-1659845631429
========
this.useSeriesOffset=false;
this.useFillPaint=true;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845631430
GPR[SPVAP]-1659845631430
GPR[EPVAP]-1659845632695
GPR[SPVATF]-1659845632695
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845633842
GPR[EPVS]-1659845633842
========
this.useFillPaint=false;
this.drawOutlines=baseShapesVisible;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845633843
GPR[SPVAP]-1659845633843
GPR[EPVAP]-1659845635100
GPR[SPVATF]-1659845635100
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845636255
GPR[EPVS]-1659845636255
========
fireChangeEvent();
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845636256
GPR[SPVAP]-1659845636256
GPR[EPVAP]-1659845637534
GPR[SPVATF]-1659845637534
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845638689
GPR[EPVS]-1659845638689
========
fireChangeEvent();
this.useFillPaint=false;
this.drawOutlines=baseShapesVisible;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845638690
GPR[SPVAP]-1659845638690
GPR[EPVAP]-1659845639948
GPR[SPVATF]-1659845639948
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845641122
GPR[EPVS]-1659845641122
========
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=useSeriesOffset;

========
GPR[SPVS]-1659845641123
GPR[SPVAP]-1659845641123
GPR[EPVAP]-1659845642389
GPR[SPVATF]-1659845642389
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845643528
GPR[EPVS]-1659845643528
========
fireChangeEvent();
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=useSeriesOffset;

========
GPR[SPVS]-1659845643530
GPR[SPVAP]-1659845643530
GPR[EPVAP]-1659845644797
GPR[SPVATF]-1659845644797
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845645968
GPR[EPVS]-1659845645968
========
this.useFillPaint=baseShapesVisible;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845645969
GPR[SPVAP]-1659845645969
GPR[EPVAP]-1659845647234
GPR[SPVATF]-1659845647234
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845648398
GPR[EPVS]-1659845648398
========
fireChangeEvent();
this.useFillPaint=baseShapesVisible;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845648399
GPR[SPVAP]-1659845648399
GPR[EPVAP]-1659845649701
GPR[SPVATF]-1659845649701
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845650902
GPR[EPVS]-1659845650902
========
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=baseShapesVisible;

========
GPR[SPVS]-1659845650903
GPR[SPVAP]-1659845650903
GPR[EPVAP]-1659845652196
GPR[SPVATF]-1659845652196
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845653347
GPR[EPVS]-1659845653347
========
fireChangeEvent();
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=baseShapesVisible;

========
GPR[SPVS]-1659845653348
GPR[SPVAP]-1659845653348
GPR[EPVAP]-1659845654654
GPR[SPVATF]-1659845654654
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845655806
GPR[EPVS]-1659845655806
========
this.useFillPaint=useSeriesOffset;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845655807
GPR[SPVAP]-1659845655807
GPR[EPVAP]-1659845657074
GPR[SPVATF]-1659845657074
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845658232
GPR[EPVS]-1659845658232
========
fireChangeEvent();
this.useFillPaint=useSeriesOffset;
this.drawOutlines=true;
this.useOutlinePaint=false;

========
GPR[SPVS]-1659845658233
GPR[SPVAP]-1659845658233
GPR[EPVAP]-1659845659493
GPR[SPVATF]-1659845659493
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845660644
GPR[EPVS]-1659845660644
GPR[ESUN]-1659845660645
GPR[SSUN]-1659845660645
org.jfree.chart.renderer.category.LineAndShapeRenderer,220
========
this.itemMargin=0.0;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845662811
GPR[SPVAP]-1659845662811
GPR[EPVAP]-1659845667384
GPR[SPVATF]-1659845667384
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845668575
GPR[EPVS]-1659845668575
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845668576
GPR[SPVAP]-1659845668576
GPR[EPVAP]-1659845669884
GPR[SPVATF]-1659845669884
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845673064
GPR[EPVS]-1659845673064
========
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845673066
GPR[SPVAP]-1659845673066
GPR[EPVAP]-1659845674382
GPR[SPVATF]-1659845674382
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845675553
GPR[EPVS]-1659845675553
========
this.seriesShapesFilled=new BooleanList();
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845675555
GPR[SPVAP]-1659845675555
GPR[EPVAP]-1659845676887
GPR[SPVATF]-1659845676887
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845678069
GPR[EPVS]-1659845678069
========
this.baseShapesFilled=true;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845678070
GPR[SPVAP]-1659845678070
GPR[EPVAP]-1659845679347
GPR[SPVATF]-1659845679347
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845680501
GPR[EPVS]-1659845680501
========
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845680502
GPR[SPVAP]-1659845680502
GPR[EPVAP]-1659845681784
GPR[SPVATF]-1659845681784
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845682955
GPR[EPVS]-1659845682955
========
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845682956
GPR[SPVAP]-1659845682956
GPR[EPVAP]-1659845684226
GPR[SPVATF]-1659845684226
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845685384
GPR[EPVS]-1659845685384
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845685386
GPR[SPVAP]-1659845685386
GPR[EPVAP]-1659845686666
GPR[SPVATF]-1659845686666
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845687846
GPR[EPVS]-1659845687846
========
this.seriesShapesFilled=new BooleanList();
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845687848
GPR[SPVAP]-1659845687848
GPR[EPVAP]-1659845689160
GPR[SPVATF]-1659845689160
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845690325
GPR[EPVS]-1659845690325
========
this.baseShapesFilled=true;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845690326
GPR[SPVAP]-1659845690326
GPR[EPVAP]-1659845691591
GPR[SPVATF]-1659845691591
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845692771
GPR[EPVS]-1659845692771
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845692772
GPR[SPVAP]-1659845692772
GPR[EPVAP]-1659845694038
GPR[SPVATF]-1659845694038
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845695184
GPR[EPVS]-1659845695184
========
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845695186
GPR[SPVAP]-1659845695186
GPR[EPVAP]-1659845696461
GPR[SPVATF]-1659845696461
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845697607
GPR[EPVS]-1659845697607
========
this.seriesShapesFilled=new BooleanList();
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845697608
GPR[SPVAP]-1659845697608
GPR[EPVAP]-1659845698871
GPR[SPVATF]-1659845698871
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845700013
GPR[EPVS]-1659845700013
========
this.baseShapesFilled=true;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845700015
GPR[SPVAP]-1659845700015
GPR[EPVAP]-1659845701274
GPR[SPVATF]-1659845701274
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845702418
GPR[EPVS]-1659845702418
========
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845702420
GPR[SPVAP]-1659845702420
GPR[EPVAP]-1659845703677
GPR[SPVATF]-1659845703677
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845704852
GPR[EPVS]-1659845704852
========
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845704853
GPR[SPVAP]-1659845704853
GPR[EPVAP]-1659845706115
GPR[SPVATF]-1659845706115
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845707277
GPR[EPVS]-1659845707277
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845707278
GPR[SPVAP]-1659845707278
GPR[EPVAP]-1659845708548
GPR[SPVATF]-1659845708548
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845709711
GPR[EPVS]-1659845709711
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845709712
GPR[SPVAP]-1659845709712
GPR[EPVAP]-1659845711014
GPR[SPVATF]-1659845711014
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845712174
GPR[EPVS]-1659845712174
========
this.seriesShapesFilled=new BooleanList();
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845712175
GPR[SPVAP]-1659845712175
GPR[EPVAP]-1659845713501
GPR[SPVATF]-1659845713501
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845714652
GPR[EPVS]-1659845714652
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845714653
GPR[SPVAP]-1659845714653
GPR[EPVAP]-1659845715936
GPR[SPVATF]-1659845715936
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845717108
GPR[EPVS]-1659845717108
========
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845717109
GPR[SPVAP]-1659845717109
GPR[EPVAP]-1659845718394
GPR[SPVATF]-1659845718394
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845719559
GPR[EPVS]-1659845719559
========
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845719561
GPR[SPVAP]-1659845719561
GPR[EPVAP]-1659845720856
GPR[SPVATF]-1659845720856
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845721993
GPR[EPVS]-1659845721993
========
this.seriesShapesFilled=new BooleanList();
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845721994
GPR[SPVAP]-1659845721994
GPR[EPVAP]-1659845723254
GPR[SPVATF]-1659845723254
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845724410
GPR[EPVS]-1659845724410
========
this.baseShapesFilled=true;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845724411
GPR[SPVAP]-1659845724411
GPR[EPVAP]-1659845725720
GPR[SPVATF]-1659845725720
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845726876
GPR[EPVS]-1659845726876
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845726877
GPR[SPVAP]-1659845726877
GPR[EPVAP]-1659845728146
GPR[SPVATF]-1659845728146
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845729322
GPR[EPVS]-1659845729322
========
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845729323
GPR[SPVAP]-1659845729323
GPR[EPVAP]-1659845730588
GPR[SPVATF]-1659845730588
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845731733
GPR[EPVS]-1659845731733
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845731734
GPR[SPVAP]-1659845731734
GPR[EPVAP]-1659845733008
GPR[SPVATF]-1659845733008
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845734150
GPR[EPVS]-1659845734150
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845734152
GPR[SPVAP]-1659845734152
GPR[EPVAP]-1659845735414
GPR[SPVATF]-1659845735414
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845736548
GPR[EPVS]-1659845736548
========
this.seriesShapesFilled=new BooleanList();
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845736550
GPR[SPVAP]-1659845736550
GPR[EPVAP]-1659845737826
GPR[SPVATF]-1659845737826
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845738965
GPR[EPVS]-1659845738965
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845738967
GPR[SPVAP]-1659845738967
GPR[EPVAP]-1659845740250
GPR[SPVATF]-1659845740250
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845741391
GPR[EPVS]-1659845741391
========
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845741392
GPR[SPVAP]-1659845741392
GPR[EPVAP]-1659845744941
GPR[SPVATF]-1659845744941
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845746119
GPR[EPVS]-1659845746119
========
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845746121
GPR[SPVAP]-1659845746121
GPR[EPVAP]-1659845747434
GPR[SPVATF]-1659845747434
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845748594
GPR[EPVS]-1659845748594
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845748595
GPR[SPVAP]-1659845748595
GPR[EPVAP]-1659845749900
GPR[SPVATF]-1659845749900
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845751043
GPR[EPVS]-1659845751043
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845751044
GPR[SPVAP]-1659845751044
GPR[EPVAP]-1659845752322
GPR[SPVATF]-1659845752322
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845753486
GPR[EPVS]-1659845753486
========
this.seriesShapesFilled=new BooleanList();
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845753487
GPR[SPVAP]-1659845753487
GPR[EPVAP]-1659845754759
GPR[SPVATF]-1659845754759
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845755900
GPR[EPVS]-1659845755900
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845755901
GPR[SPVAP]-1659845755901
GPR[EPVAP]-1659845757190
GPR[SPVATF]-1659845757190
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845758356
GPR[EPVS]-1659845758356
========
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845758357
GPR[SPVAP]-1659845758357
GPR[EPVAP]-1659845759616
GPR[SPVATF]-1659845759616
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845760766
GPR[EPVS]-1659845760766
========
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845760768
GPR[SPVAP]-1659845760768
GPR[EPVAP]-1659845762115
GPR[SPVATF]-1659845762115
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845763287
GPR[EPVS]-1659845763287
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845763288
GPR[SPVAP]-1659845763288
GPR[EPVAP]-1659845764548
GPR[SPVATF]-1659845764548
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845765696
GPR[EPVS]-1659845765696
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845765698
GPR[SPVAP]-1659845765698
GPR[EPVAP]-1659845766973
GPR[SPVATF]-1659845766973
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845768126
GPR[EPVS]-1659845768126
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845768128
GPR[SPVAP]-1659845768128
GPR[EPVAP]-1659845769410
GPR[SPVATF]-1659845769410
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845770564
GPR[EPVS]-1659845770564
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845770566
GPR[SPVAP]-1659845770566
GPR[EPVAP]-1659845771819
GPR[SPVATF]-1659845771819
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845772952
GPR[EPVS]-1659845772952
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845772954
GPR[SPVAP]-1659845772954
GPR[EPVAP]-1659845774212
GPR[SPVATF]-1659845774212
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845775377
GPR[EPVS]-1659845775377
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845775378
GPR[SPVAP]-1659845775378
GPR[EPVAP]-1659845776648
GPR[SPVATF]-1659845776648
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845777787
GPR[EPVS]-1659845777787
========
this.seriesShapesFilled=new BooleanList();
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845777789
GPR[SPVAP]-1659845777789
GPR[EPVAP]-1659845779075
GPR[SPVATF]-1659845779075
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845780226
GPR[EPVS]-1659845780226
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845780227
GPR[SPVAP]-1659845780227
GPR[EPVAP]-1659845781500
GPR[SPVATF]-1659845781500
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845782665
GPR[EPVS]-1659845782665
========
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845782666
GPR[SPVAP]-1659845782666
GPR[EPVAP]-1659845783963
GPR[SPVATF]-1659845783963
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845785125
GPR[EPVS]-1659845785125
========
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845785126
GPR[SPVAP]-1659845785126
GPR[EPVAP]-1659845786447
GPR[SPVATF]-1659845786447
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845787600
GPR[EPVS]-1659845787600
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845787601
GPR[SPVAP]-1659845787601
GPR[EPVAP]-1659845788915
GPR[SPVATF]-1659845788915
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845790080
GPR[EPVS]-1659845790080
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845790081
GPR[SPVAP]-1659845790081
GPR[EPVAP]-1659845791357
GPR[SPVATF]-1659845791357
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845792506
GPR[EPVS]-1659845792506
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845792508
GPR[SPVAP]-1659845792508
GPR[EPVAP]-1659845793792
GPR[SPVATF]-1659845793792
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845794944
GPR[EPVS]-1659845794944
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845794945
GPR[SPVAP]-1659845794945
GPR[EPVAP]-1659845796199
GPR[SPVATF]-1659845796199
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845797349
GPR[EPVS]-1659845797349
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845797350
GPR[SPVAP]-1659845797350
GPR[EPVAP]-1659845798614
GPR[SPVATF]-1659845798615
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845799809
GPR[EPVS]-1659845799809
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845799810
GPR[SPVAP]-1659845799810
GPR[EPVAP]-1659845801094
GPR[SPVATF]-1659845801094
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845802250
GPR[EPVS]-1659845802250
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845802251
GPR[SPVAP]-1659845802251
GPR[EPVAP]-1659845803523
GPR[SPVATF]-1659845803523
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845804696
GPR[EPVS]-1659845804696
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;

========
GPR[SPVS]-1659845804697
GPR[SPVAP]-1659845804697
GPR[EPVAP]-1659845805967
GPR[SPVATF]-1659845805967
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845807095
GPR[EPVS]-1659845807095
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.itemMargin=0.2;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845807097
GPR[SPVAP]-1659845807097
GPR[EPVAP]-1659845808362
GPR[SPVATF]-1659845808362
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845809505
GPR[EPVS]-1659845809505
========
this.drawOutlines=true;
this.useOutlinePaint=true;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845809506
GPR[SPVAP]-1659845809506
GPR[EPVAP]-1659845810763
GPR[SPVATF]-1659845810763
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845811937
GPR[EPVS]-1659845811937
========
this.baseLinesVisible=false;
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845811938
GPR[SPVAP]-1659845811938
GPR[EPVAP]-1659845813204
GPR[SPVATF]-1659845813204
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845814339
GPR[EPVS]-1659845814339
========
this.drawOutlines=false;
this.useOutlinePaint=true;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845814340
GPR[SPVAP]-1659845814340
GPR[EPVAP]-1659845815618
GPR[SPVATF]-1659845815618
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845816771
GPR[EPVS]-1659845816771
========
this.baseLinesVisible=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845816773
GPR[SPVAP]-1659845816773
GPR[EPVAP]-1659845819866
GPR[SPVATF]-1659845819866
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845821011
GPR[EPVS]-1659845821011
========
this.baseLinesVisible=false;
this.drawOutlines=true;
this.useOutlinePaint=true;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845821012
GPR[SPVAP]-1659845821012
GPR[EPVAP]-1659845822349
GPR[SPVATF]-1659845822349
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845823520
GPR[EPVS]-1659845823520
========
this.baseLinesVisible=false;
this.drawOutlines=false;
this.useOutlinePaint=true;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845823521
GPR[SPVAP]-1659845823521
GPR[EPVAP]-1659845824785
GPR[SPVATF]-1659845824785
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845825944
GPR[EPVS]-1659845825944
========
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=baseShapesVisible;

========
GPR[SPVS]-1659845825945
GPR[SPVAP]-1659845825945
GPR[EPVAP]-1659845827212
GPR[SPVATF]-1659845827212
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845828340
GPR[EPVS]-1659845828340
========
fireChangeEvent();
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845828342
GPR[SPVAP]-1659845828342
GPR[EPVAP]-1659845829666
GPR[SPVATF]-1659845829666
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845830815
GPR[EPVS]-1659845830815
========
fireChangeEvent();
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=baseShapesVisible;

========
GPR[SPVS]-1659845830817
GPR[SPVAP]-1659845830817
GPR[EPVAP]-1659845832128
GPR[SPVATF]-1659845832128
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845833273
GPR[EPVS]-1659845833273
========
this.drawOutlines=baseShapesVisible;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845833275
GPR[SPVAP]-1659845833275
GPR[EPVAP]-1659845834590
GPR[SPVATF]-1659845834590
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845835770
GPR[EPVS]-1659845835770
========
fireChangeEvent();
this.drawOutlines=baseShapesVisible;
this.useOutlinePaint=false;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845835771
GPR[SPVAP]-1659845835771
GPR[EPVAP]-1659845837061
GPR[SPVATF]-1659845837061
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845838222
GPR[EPVS]-1659845838222
========
this.drawOutlines=true;
this.useOutlinePaint=useSeriesOffset;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845838223
GPR[SPVAP]-1659845838223
GPR[EPVAP]-1659845839493
GPR[SPVATF]-1659845839493
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845840675
GPR[EPVS]-1659845840675
========
fireChangeEvent();
this.drawOutlines=true;
this.useOutlinePaint=useSeriesOffset;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845840677
GPR[SPVAP]-1659845840677
GPR[EPVAP]-1659845841979
GPR[SPVATF]-1659845841979
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845843156
GPR[EPVS]-1659845843156
========
this.drawOutlines=true;
this.useOutlinePaint=baseShapesVisible;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845843158
GPR[SPVAP]-1659845843158
GPR[EPVAP]-1659845844449
GPR[SPVATF]-1659845844449
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845845582
GPR[EPVS]-1659845845582
========
fireChangeEvent();
this.drawOutlines=true;
this.useOutlinePaint=baseShapesVisible;
this.useSeriesOffset=false;

========
GPR[SPVS]-1659845845583
GPR[SPVAP]-1659845845583
GPR[EPVAP]-1659845846855
GPR[SPVATF]-1659845846855
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845848029
GPR[EPVS]-1659845848029
GPR[ESUN]-1659845848031
GPR[SSUN]-1659845848031
org.jfree.chart.renderer.category.LineAndShapeRenderer,221
========
this.drawOutlines=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845850247
GPR[SPVAP]-1659845850247
GPR[EPVAP]-1659845854802
GPR[SPVATF]-1659845854802
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845855968
GPR[EPVS]-1659845855968
========
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845855970
GPR[SPVAP]-1659845855970
GPR[EPVAP]-1659845857307
GPR[SPVATF]-1659845857307
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845858501
GPR[EPVS]-1659845858501
========
this.seriesShapesFilled=new BooleanList();
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845858502
GPR[SPVAP]-1659845858502
GPR[EPVAP]-1659845859806
GPR[SPVATF]-1659845859806
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845860962
GPR[EPVS]-1659845860962
========
this.baseShapesFilled=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845860964
GPR[SPVAP]-1659845860964
GPR[EPVAP]-1659845862252
GPR[SPVATF]-1659845862252
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845863442
GPR[EPVS]-1659845863442
========
this.useFillPaint=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845863443
GPR[SPVAP]-1659845863443
GPR[EPVAP]-1659845864765
GPR[SPVATF]-1659845864765
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845865920
GPR[EPVS]-1659845865920
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845865922
GPR[SPVAP]-1659845865922
GPR[EPVAP]-1659845867202
GPR[SPVATF]-1659845867203
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845868376
GPR[EPVS]-1659845868376
========
this.seriesShapesFilled=new BooleanList();
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845868377
GPR[SPVAP]-1659845868377
GPR[EPVAP]-1659845869671
GPR[SPVATF]-1659845869671
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845870815
GPR[EPVS]-1659845870815
========
this.baseShapesFilled=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845870816
GPR[SPVAP]-1659845870816
GPR[EPVAP]-1659845872134
GPR[SPVATF]-1659845872134
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845873283
GPR[EPVS]-1659845873283
========
this.useFillPaint=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845873284
GPR[SPVAP]-1659845873284
GPR[EPVAP]-1659845874599
GPR[SPVATF]-1659845874599
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845875808
GPR[EPVS]-1659845875808
========
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845875810
GPR[SPVAP]-1659845875810
GPR[EPVAP]-1659845877096
GPR[SPVATF]-1659845877096
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845878261
GPR[EPVS]-1659845878261
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845878262
GPR[SPVAP]-1659845878262
GPR[EPVAP]-1659845879524
GPR[SPVATF]-1659845879524
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845880678
GPR[EPVS]-1659845880678
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845880679
GPR[SPVAP]-1659845880679
GPR[EPVAP]-1659845881957
GPR[SPVATF]-1659845881957
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845883100
GPR[EPVS]-1659845883100
========
this.seriesShapesFilled=new BooleanList();
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845883101
GPR[SPVAP]-1659845883101
GPR[EPVAP]-1659845884375
GPR[SPVATF]-1659845884375
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845885535
GPR[EPVS]-1659845885535
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845885536
GPR[SPVAP]-1659845885536
GPR[EPVAP]-1659845886795
GPR[SPVATF]-1659845886795
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845887961
GPR[EPVS]-1659845887961
========
this.baseShapesFilled=true;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845887962
GPR[SPVAP]-1659845887962
GPR[EPVAP]-1659845890288
GPR[SPVATF]-1659845890289
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845892243
GPR[EPVS]-1659845892243
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845892244
GPR[SPVAP]-1659845892244
GPR[EPVAP]-1659845893533
GPR[SPVATF]-1659845893533
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845894696
GPR[EPVS]-1659845894696
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845894698
GPR[SPVAP]-1659845894698
GPR[EPVAP]-1659845895964
GPR[SPVATF]-1659845895964
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845897126
GPR[EPVS]-1659845897126
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845897127
GPR[SPVAP]-1659845897127
GPR[EPVAP]-1659845898448
GPR[SPVATF]-1659845898448
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845899645
GPR[EPVS]-1659845899645
========
this.seriesShapesFilled=new BooleanList();
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845899646
GPR[SPVAP]-1659845899646
GPR[EPVAP]-1659845900959
GPR[SPVATF]-1659845900959
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845902118
GPR[EPVS]-1659845902118
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845902119
GPR[SPVAP]-1659845902119
GPR[EPVAP]-1659845903410
GPR[SPVATF]-1659845903410
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845904570
GPR[EPVS]-1659845904570
========
this.baseShapesFilled=true;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845904571
GPR[SPVAP]-1659845904571
GPR[EPVAP]-1659845905857
GPR[SPVATF]-1659845905857
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845907025
GPR[EPVS]-1659845907025
========
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845907026
GPR[SPVAP]-1659845907026
GPR[EPVAP]-1659845908308
GPR[SPVATF]-1659845908308
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845909503
GPR[EPVS]-1659845909503
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845909505
GPR[SPVAP]-1659845909505
GPR[EPVAP]-1659845910790
GPR[SPVATF]-1659845910790
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845911961
GPR[EPVS]-1659845911961
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845911963
GPR[SPVAP]-1659845911963
GPR[EPVAP]-1659845913238
GPR[SPVATF]-1659845913238
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845914402
GPR[EPVS]-1659845914402
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845914404
GPR[SPVAP]-1659845914404
GPR[EPVAP]-1659845915683
GPR[SPVATF]-1659845915683
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845916838
GPR[EPVS]-1659845916838
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845916840
GPR[SPVAP]-1659845916840
GPR[EPVAP]-1659845918103
GPR[SPVATF]-1659845918103
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845919255
GPR[EPVS]-1659845919255
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845919257
GPR[SPVAP]-1659845919257
GPR[EPVAP]-1659845920527
GPR[SPVATF]-1659845920527
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845921681
GPR[EPVS]-1659845921681
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845921683
GPR[SPVAP]-1659845921683
GPR[EPVAP]-1659845922961
GPR[SPVATF]-1659845922961
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845924160
GPR[EPVS]-1659845924160
========
this.seriesShapesFilled=new BooleanList();
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845924162
GPR[SPVAP]-1659845924162
GPR[EPVAP]-1659845925446
GPR[SPVATF]-1659845925446
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845926599
GPR[EPVS]-1659845926599
========
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845926600
GPR[SPVAP]-1659845926600
GPR[EPVAP]-1659845927870
GPR[SPVATF]-1659845927870
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845929023
GPR[EPVS]-1659845929023
========
this.seriesShapesFilled=new BooleanList();
this.baseShapesFilled=true;
this.useFillPaint=false;
this.drawOutlines=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845929024
GPR[SPVAP]-1659845929024
GPR[EPVAP]-1659845930317
GPR[SPVATF]-1659845930317
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845931467
GPR[EPVS]-1659845931467
========
this.useOutlinePaint=true;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845931469
GPR[SPVAP]-1659845931469
GPR[EPVAP]-1659845932759
GPR[SPVATF]-1659845932759
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845933919
GPR[EPVS]-1659845933919
========
this.baseLinesVisible=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845933920
GPR[SPVAP]-1659845933920
GPR[EPVAP]-1659845935194
GPR[SPVATF]-1659845935194
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845936342
GPR[EPVS]-1659845936342
========
this.baseLinesVisible=false;
this.useOutlinePaint=true;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845936343
GPR[SPVAP]-1659845936343
GPR[EPVAP]-1659845937625
GPR[SPVATF]-1659845937625
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845938784
GPR[EPVS]-1659845938784
========
this.useOutlinePaint=true;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845938786
GPR[SPVAP]-1659845938786
GPR[EPVAP]-1659845940054
GPR[SPVATF]-1659845940054
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845941217
GPR[EPVS]-1659845941217
========
this.baseShapesVisible=false;
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845941219
GPR[SPVAP]-1659845941219
GPR[EPVAP]-1659845942534
GPR[SPVATF]-1659845942534
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845943685
GPR[EPVS]-1659845943685
========
setBaseLegendShape(new Rectangle2D.Double(-4.0,-4.0,8.0,8.0));
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845943693
GPR[SPVAP]-1659845943693
GPR[EPVAP]-1659845944956
GPR[SPVATF]-1659845944956
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845946100
GPR[EPVS]-1659845946100
========
this.baseShapesVisible=false;
this.useOutlinePaint=true;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845946101
GPR[SPVAP]-1659845946101
GPR[EPVAP]-1659845947383
GPR[SPVATF]-1659845947383
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845948612
GPR[EPVS]-1659845948612
========
setBaseLegendShape(new Rectangle2D.Double(-4.0,-4.0,8.0,8.0));
this.useOutlinePaint=true;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845948613
GPR[SPVAP]-1659845948613
GPR[EPVAP]-1659845949907
GPR[SPVATF]-1659845949907
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845951078
GPR[EPVS]-1659845951078
========
this.baseShapesVisible=false;
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845951079
GPR[SPVAP]-1659845951079
GPR[EPVAP]-1659845952366
GPR[SPVATF]-1659845952366
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845953548
GPR[EPVS]-1659845953548
========
setBaseLegendShape(new Rectangle2D.Double(-4.0,-4.0,8.0,8.0));
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845953550
GPR[SPVAP]-1659845953550
GPR[EPVAP]-1659845954843
GPR[SPVATF]-1659845954843
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845956018
GPR[EPVS]-1659845956018
========
this.baseShapesVisible=false;
setBaseLegendShape(new Rectangle2D.Double(-4.0,-4.0,8.0,8.0));
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845956019
GPR[SPVAP]-1659845956019
GPR[EPVAP]-1659845957338
GPR[SPVATF]-1659845957338
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845958508
GPR[EPVS]-1659845958508
========
this.baseShapesVisible=false;
this.useOutlinePaint=true;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845958510
GPR[SPVAP]-1659845958510
GPR[EPVAP]-1659845959797
GPR[SPVATF]-1659845959797
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845960946
GPR[EPVS]-1659845960946
========
setBaseLegendShape(new Rectangle2D.Double(-4.0,-4.0,8.0,8.0));
this.useOutlinePaint=true;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845960947
GPR[SPVAP]-1659845960947
GPR[EPVAP]-1659845964163
GPR[SPVATF]-1659845964163
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845965321
GPR[EPVS]-1659845965321
========
this.baseShapesVisible=false;
setBaseLegendShape(new Rectangle2D.Double(-4.0,-4.0,8.0,8.0));
this.useOutlinePaint=true;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845965322
GPR[SPVAP]-1659845965322
GPR[EPVAP]-1659845966584
GPR[SPVATF]-1659845966584
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845967741
GPR[EPVS]-1659845967741
========
this.baseShapesVisible=false;
setBaseLegendShape(new Rectangle2D.Double(-4.0,-4.0,8.0,8.0));
this.useOutlinePaint=false;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845967742
GPR[SPVAP]-1659845967742
GPR[EPVAP]-1659845969027
GPR[SPVATF]-1659845969027
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845970225
GPR[EPVS]-1659845970225
========
this.baseShapesVisible=false;
setBaseLegendShape(new Rectangle2D.Double(-4.0,-4.0,8.0,8.0));
this.useOutlinePaint=true;
this.useSeriesOffset=true;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845970226
GPR[SPVAP]-1659845970226
GPR[EPVAP]-1659845971526
GPR[SPVATF]-1659845971526
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845972672
GPR[EPVS]-1659845972672
========
this.useOutlinePaint=false;
this.useSeriesOffset=false;
super();
this.itemMargin=0.0;

========
GPR[SPVS]-1659845972673
GPR[SPVAP]-1659845972673
GPR[EPVAP]-1659845973416
GPR[EPVS]-1659845973416
========
setBaseLegendShape(new Rectangle2D.Float(-5.0,-1.0,10.0,2.0));
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845973417
GPR[SPVAP]-1659845973417
GPR[EPVAP]-1659845974183
GPR[EPVS]-1659845974183
========
setBaseOutlinePaint(new Color(0,0,0,0));
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845974184
GPR[SPVAP]-1659845974184
GPR[EPVAP]-1659845974930
GPR[EPVS]-1659845974930
========
fireChangeEvent();
this.useOutlinePaint=false;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845974931
GPR[SPVAP]-1659845974931
GPR[EPVAP]-1659845976251
GPR[SPVATF]-1659845976251
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845977396
GPR[EPVS]-1659845977396
========
this.useOutlinePaint=false;
this.useSeriesOffset=baseShapesVisible;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845977398
GPR[SPVAP]-1659845977398
GPR[EPVAP]-1659845978649
GPR[SPVATF]-1659845978649
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845979799
GPR[EPVS]-1659845979799
========
fireChangeEvent();
this.useOutlinePaint=false;
this.useSeriesOffset=baseShapesVisible;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845979800
GPR[SPVAP]-1659845979800
GPR[EPVAP]-1659845981075
GPR[SPVATF]-1659845981075
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845982315
GPR[EPVS]-1659845982315
========
this.useOutlinePaint=useSeriesOffset;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845982317
GPR[SPVAP]-1659845982317
GPR[EPVAP]-1659845983587
GPR[SPVATF]-1659845983587
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845984744
GPR[EPVS]-1659845984744
========
fireChangeEvent();
this.useOutlinePaint=useSeriesOffset;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845984745
GPR[SPVAP]-1659845984745
GPR[EPVAP]-1659845986020
GPR[SPVATF]-1659845986020
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845987173
GPR[EPVS]-1659845987173
========
this.useOutlinePaint=baseShapesVisible;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845987174
GPR[SPVAP]-1659845987174
GPR[EPVAP]-1659845988418
GPR[SPVATF]-1659845988418
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845989561
GPR[EPVS]-1659845989561
========
fireChangeEvent();
this.useOutlinePaint=baseShapesVisible;
this.useSeriesOffset=false;
this.itemMargin=0.0;

========
GPR[SPVS]-1659845989562
GPR[SPVAP]-1659845989562
GPR[EPVAP]-1659845990820
GPR[SPVATF]-1659845990820
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659845991985
GPR[EPVS]-1659845991985
GPR[ESUN]-1659845991987
GPR[SSUN]-1659845991987
org.jfree.chart.renderer.category.LineAndShapeRenderer,222
GPR[ESUN]-1659845992456
GPR[SSUN]-1659845992456
org.jfree.chart.renderer.category.LineAndShapeRenderer,223
Find no block!
GPR[SSUN]-1659845992758
org.jfree.data.general.AbstractDataset,191
========
if(listeners[i]!=DatasetChangeListener.class){
((DatasetChangeListener)listeners[i+1]).datasetChanged(event);
}

========
GPR[SPVS]-1659845995392
GPR[SPVAP]-1659845995392
GPR[EPVAP]-1659846000011
GPR[SPVATF]-1659846000011
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846001207
GPR[EPVS]-1659846001207
========
if(clone.datasets[i]!=null){
((DatasetChangeListener)listeners[i+1]).datasetChanged(event);
}

========
GPR[SPVS]-1659846001208
GPR[SPVAP]-1659846001208
GPR[EPVAP]-1659846001925
GPR[EPVS]-1659846001925
========
if(clone.datasets[i]==DatasetChangeListener.class){
((DatasetChangeListener)listeners[i+1]).datasetChanged(event);
}

========
GPR[SPVS]-1659846001926
GPR[SPVAP]-1659846001926
GPR[EPVAP]-1659846002685
GPR[EPVS]-1659846002686
========
if(listeners[i]==null){
((DatasetChangeListener)listeners[i+1]).datasetChanged(event);
}

========
GPR[SPVS]-1659846002686
GPR[SPVAP]-1659846002686
GPR[EPVAP]-1659846003975
GPR[SPVATF]-1659846003975
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846005133
GPR[EPVS]-1659846005133
========
if(listeners[i]!=null){
((DatasetChangeListener)listeners[i+1]).datasetChanged(event);
}

========
GPR[SPVS]-1659846005134
GPR[SPVAP]-1659846005134
GPR[EPVAP]-1659846006397
GPR[SPVATF]-1659846006397
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846007585
GPR[EPVS]-1659846007585
========
if(listeners[i]==DatasetChangeListener.class){
((DatasetChangeListener)listeners[i+1]).setPaint(event);
}

========
GPR[SPVS]-1659846007587
GPR[SPVAP]-1659846007587
GPR[EPVAP]-1659846008332
GPR[EPVS]-1659846008333
========
if(listeners[i]==DatasetChangeListener.class){
start=i+1;
((DatasetChangeListener)listeners[i+1]).datasetChanged(event);
}

========
GPR[SPVS]-1659846008336
GPR[SPVAP]-1659846008336
GPR[EPVAP]-1659846009087
GPR[EPVS]-1659846009087
GPR[ESUN]-1659846009093
GPR[SSUN]-1659846009093
org.jfree.data.general.AbstractDataset,192
GPR[ESUN]-1659846009600
GPR[SSUN]-1659846009600
org.jfree.chart.LegendItemCollection,107
========
return this.items.iterator();

========
GPR[SPVS]-1659846011983
GPR[SPVAP]-1659846011983
GPR[EPVAP]-1659846013892
GPR[EPVS]-1659846013892
========
return getUniqueValues().size();

========
GPR[SPVS]-1659846013898
GPR[SPVAP]-1659846013898
GPR[EPVAP]-1659846015767
GPR[EPVS]-1659846015767
GPR[ESUN]-1659846015770
GPR[SSUN]-1659846015770
org.jfree.chart.LegendItemCollection,68
Find no block!
GPR[SSUN]-1659846016099
org.jfree.chart.LegendItemCollection,69
========
clone.dates=new java.util.ArrayList(this.dates);
this.items=new java.util.ArrayList();

========
GPR[SPVS]-1659846020927
GPR[SPVAP]-1659846020927
GPR[EPVAP]-1659846022940
GPR[EPVS]-1659846022940
GPR[ESUN]-1659846022940
GPR[SSUN]-1659846022940
org.jfree.chart.LegendItemCollection,70
Find no block!
GPR[SSUN]-1659846023315
org.jfree.data.category.DefaultCategoryDataset,243
UNKNOWN ASTNode type : catch (NumberFormatException e1) {
  value=null;
}

========
fireDatasetChanged(new DatasetChangeInfo());
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846025441
GPR[SPVAP]-1659846025441
GPR[EPVAP]-1659846030075
GPR[SPVATF]-1659846030075
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846031218
GPR[EPVS]-1659846031218
========
this.value=value;
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846031220
GPR[SPVAP]-1659846031220
GPR[EPVAP]-1659846031940
GPR[EPVS]-1659846031940
========
this.data=new DefaultKeyedValue(columnKey,value);
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846031941
GPR[SPVAP]-1659846031941
GPR[EPVAP]-1659846032686
GPR[EPVS]-1659846032686
========
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
this.data.clear();
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846032689
GPR[SPVAP]-1659846032689
GPR[EPVAP]-1659846035686
GPR[SPVATF]-1659846035686
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846036845
GPR[EPVS]-1659846036845
========
if(seriesKeys.length!=getSeriesCount()){
throw new IllegalArgumentException("The number of series keys does not match the data.");
}
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846036847
GPR[SPVAP]-1659846036847
GPR[EPVAP]-1659846037578
GPR[EPVS]-1659846037578
========
this.data=new KeyedObjects2D();
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846037579
GPR[SPVAP]-1659846037579
GPR[EPVAP]-1659846038853
GPR[SPVATF]-1659846038853
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846040043
GPR[EPVS]-1659846040043
========
if(this.data==null){
throw new RuntimeException("updateValue: can\'t update null.");
}
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846040045
GPR[SPVAP]-1659846040045
GPR[EPVAP]-1659846041291
GPR[SPVATF]-1659846041291
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846042473
GPR[EPVS]-1659846042473
========
if(value==null){
throw new IllegalArgumentException("Null \'value\' argument.");
}
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846042475
GPR[SPVAP]-1659846042475
GPR[EPVAP]-1659846043730
GPR[SPVATF]-1659846043730
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846044913
GPR[EPVS]-1659846044913
========
if(value==null){
throw new IllegalArgumentException("Null \'value\' argument.");
}
this.value=value;
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846044914
GPR[SPVAP]-1659846044914
GPR[EPVAP]-1659846045630
GPR[EPVS]-1659846045630
========
if(getRowIndex(rowKey)<0){
throw new UnknownKeyException("Row key ("+rowKey);
}
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846045632
GPR[SPVAP]-1659846045632
GPR[EPVAP]-1659846046938
GPR[SPVATF]-1659846046938
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846048060
GPR[EPVS]-1659846048060
========
if(rowKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
this.data.addObject(new SelectableValue(value),rowKey,columnKey);
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846048063
GPR[SPVAP]-1659846048063
GPR[EPVAP]-1659846049299
GPR[SPVATF]-1659846049299
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846050496
GPR[EPVS]-1659846050496
GPR[ESUN]-1659846050498
GPR[SSUN]-1659846050498
org.jfree.data.category.DefaultCategoryDataset,244
GPR[ESUN]-1659846051026
GPR[SSUN]-1659846051026
org.jfree.data.category.DefaultCategoryDataset,246
Find no block!
GPR[SSUN]-1659846051400
org.jfree.data.category.AbstractCategoryDataset,64
GPR[ESUN]-1659846053427
GPR[SSUN]-1659846053427
org.jfree.data.category.AbstractCategoryDataset,65
Find no block!
GPR[SSUN]-1659846053790
org.jfree.data.category.AbstractCategoryDataset,87
========
fireDatasetChanged(new DatasetChangeInfo());
this.selectionState=state;
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846055878
GPR[SPVAP]-1659846055878
GPR[EPVAP]-1659846060444
GPR[SPVATF]-1659846060444
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846061609
GPR[EPVS]-1659846061609
========
updateBounds();
this.selectionState=state;
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846061610
GPR[SPVAP]-1659846061610
GPR[EPVAP]-1659846062293
GPR[EPVS]-1659846062293
========
updateBounds();
fireDatasetChanged(new DatasetChangeInfo());
this.selectionState=state;
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846062294
GPR[SPVAP]-1659846062294
GPR[EPVAP]-1659846063008
GPR[EPVS]-1659846063008
========
this.selectionState=state;
if(seriesKeys.length!=getSeriesCount()){
throw new IllegalArgumentException("The number of series keys does not match the data.");
}
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846063009
GPR[SPVAP]-1659846063009
GPR[EPVAP]-1659846063700
GPR[EPVS]-1659846063700
========
fireDatasetChanged(new PieDatasetChangeInfo(PieDatasetChangeType.UPDATE,0,getItemCount()-1));
this.selectionState=state;
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846063701
GPR[SPVAP]-1659846063701
GPR[EPVAP]-1659846064378
GPR[EPVS]-1659846064378
========
this.selectionState=selectionState;
fireDatasetChanged(new DatasetChangeInfo());

========
GPR[SPVS]-1659846064379
GPR[SPVAP]-1659846064379
GPR[EPVAP]-1659846065633
GPR[SPVATF]-1659846065633
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846066777
GPR[EPVS]-1659846066777
GPR[ESUN]-1659846066777
GPR[SSUN]-1659846066777
org.jfree.data.category.AbstractCategoryDataset,88
GPR[ESUN]-1659846067183
GPR[SSUN]-1659846067184
org.jfree.data.category.AbstractCategoryDataset,90
Find no block!
GPR[SSUN]-1659846067483
org.jfree.data.category.DefaultCategoryDataset,80
Find no block!
GPR[SSUN]-1659846067766
org.jfree.data.category.DefaultCategoryDataset,81
========
fireDatasetChanged(new DatasetChangeInfo());
this.data=new KeyedObjects2D();
setSelectionState(this);

========
GPR[SPVS]-1659846069675
GPR[SPVAP]-1659846069675
GPR[EPVAP]-1659846074246
GPR[SPVATF]-1659846074246
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846075409
GPR[EPVS]-1659846075409
========
updateBounds();
this.data=new KeyedObjects2D();
setSelectionState(this);

========
GPR[SPVS]-1659846075410
GPR[SPVAP]-1659846075410
GPR[EPVAP]-1659846076135
GPR[EPVS]-1659846076135
========
updateBounds();
fireDatasetChanged(new DatasetChangeInfo());
this.data=new KeyedObjects2D();
setSelectionState(this);

========
GPR[SPVS]-1659846076136
GPR[SPVAP]-1659846076136
GPR[EPVAP]-1659846076885
GPR[EPVS]-1659846076885
========
setSelectionState(this);
this.data=new KeyedObjects2D();
setSelectionState(this);

========
GPR[SPVS]-1659846076886
GPR[SPVAP]-1659846076886
GPR[EPVAP]-1659846078171
GPR[SPVATF]-1659846078171
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846079326
GPR[EPVS]-1659846079326
GPR[ESUN]-1659846079326
GPR[SSUN]-1659846079326
org.jfree.data.category.DefaultCategoryDataset,83
GPR[ESUN]-1659846079797
GPR[SSUN]-1659846079797
org.jfree.data.category.DefaultCategoryDataset,84
Find no block!
GPR[SSUN]-1659846080121
org.jfree.data.KeyedObjects2D,257
========
setObject(object,columnKey);

========
GPR[SPVS]-1659846082207
GPR[SPVAP]-1659846082207
GPR[EPVAP]-1659846084519
GPR[EPVS]-1659846084519
========
setObject(object,rowKey);

========
GPR[SPVS]-1659846084520
GPR[SPVAP]-1659846084520
GPR[EPVAP]-1659846085663
GPR[EPVS]-1659846085663
========
fireDatasetChanged(new DatasetChangeInfo());
setObject(object,rowKey,columnKey);

========
GPR[SPVS]-1659846085665
GPR[SPVAP]-1659846085665
GPR[EPVAP]-1659846086779
GPR[EPVS]-1659846086779
========
fireSeriesChanged();
setObject(object,rowKey,columnKey);

========
GPR[SPVS]-1659846086781
GPR[SPVAP]-1659846086781
GPR[EPVAP]-1659846087942
GPR[EPVS]-1659846087942
========
if(getRowIndex(rowKey)<0){
throw new UnknownKeyException("Row key ("+rowKey);
}
setObject(object,rowKey,columnKey);

========
GPR[SPVS]-1659846087945
GPR[SPVAP]-1659846087945
GPR[EPVAP]-1659846091382
GPR[SPVATF]-1659846091382
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846092583
GPR[EPVS]-1659846092583
========
updateBounds();
setObject(object,rowKey,columnKey);

========
GPR[SPVS]-1659846092584
GPR[SPVAP]-1659846092584
GPR[EPVAP]-1659846093287
GPR[EPVS]-1659846093287
========
updateBounds();
fireDatasetChanged(new DatasetChangeInfo());
setObject(object,rowKey,columnKey);

========
GPR[SPVS]-1659846093288
GPR[SPVAP]-1659846093288
GPR[EPVAP]-1659846093994
GPR[EPVS]-1659846093994
GPR[ESUN]-1659846093996
GPR[SSUN]-1659846093996
org.jfree.data.KeyedObjects2D,258
Find no block!
GPR[SSUN]-1659846094487
org.jfree.data.SelectableValue,65
GPR[ESUN]-1659846096505
GPR[SSUN]-1659846096505
org.jfree.data.SelectableValue,66
Find no block!
GPR[SSUN]-1659846096835
org.jfree.data.SelectableValue,74
Find no block!
GPR[SSUN]-1659846097196
org.jfree.data.SelectableValue,75
UNKNOWN ASTNode type : catch (NumberFormatException e1) {
  value=null;
}

========
super();
this.value=value;
this.selected=selected;

========
GPR[SPVS]-1659846099327
GPR[SPVAP]-1659846099327
GPR[EPVAP]-1659846103900
GPR[SPVATF]-1659846103900
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846105051
GPR[EPVS]-1659846105051
========
this.value=value;
this.selected=includeUpperBound;

========
GPR[SPVS]-1659846105052
GPR[SPVAP]-1659846105052
GPR[EPVAP]-1659846105759
GPR[EPVS]-1659846105759
========
this.selected=false;
this.value=value;
this.selected=selected;

========
GPR[SPVS]-1659846105760
GPR[SPVAP]-1659846105760
GPR[EPVAP]-1659846106997
GPR[SPVATF]-1659846106997
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846110327
GPR[EPVS]-1659846110327
========
fireDatasetChanged(new DatasetChangeInfo());
this.value=value;
this.selected=selected;

========
GPR[SPVS]-1659846110329
GPR[SPVAP]-1659846110329
GPR[EPVAP]-1659846111001
GPR[EPVS]-1659846111001
========
this.value=y;
this.selected=selected;

========
GPR[SPVS]-1659846111003
GPR[SPVAP]-1659846111003
GPR[EPVAP]-1659846111669
GPR[EPVS]-1659846111669
========
this.value=value;
this.selected=oldY;

========
GPR[SPVS]-1659846111674
GPR[SPVAP]-1659846111674
GPR[EPVAP]-1659846112356
GPR[EPVS]-1659846112356
GPR[ESUN]-1659846112365
GPR[SSUN]-1659846112365
org.jfree.data.SelectableValue,76
GPR[ESUN]-1659846112857
GPR[SSUN]-1659846112857
org.jfree.data.SelectableValue,77
Find no block!
GPR[SSUN]-1659846113181
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,293
========
if(this.plot==null){
throw new IllegalArgumentException("Null \'plot\' argument.");
}

========
GPR[SPVS]-1659846115278
GPR[SPVAP]-1659846115278
GPR[EPVAP]-1659846119870
GPR[SPVATF]-1659846119870
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846121025
GPR[EPVS]-1659846121025
========
if(plot==AreaRendererEndType.LEVEL){
throw new IllegalArgumentException("Null \'plot\' argument.");
}

========
GPR[SPVS]-1659846121027
GPR[SPVAP]-1659846121027
GPR[EPVAP]-1659846121835
GPR[EPVS]-1659846121835
========
if(plot==PlotOrientation.HORIZONTAL){
throw new IllegalArgumentException("Null \'plot\' argument.");
}

========
GPR[SPVS]-1659846121837
GPR[SPVAP]-1659846121837
GPR[EPVAP]-1659846122651
GPR[EPVS]-1659846122651
GPR[ESUN]-1659846122651
GPR[SSUN]-1659846122651
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,296
========
if(this.plot==null){
throw new IllegalArgumentException("Null \'plot\' argument.");
}
this.plot=plot;

========
GPR[SPVS]-1659846124876
GPR[SPVAP]-1659846124876
GPR[EPVAP]-1659846129417
GPR[SPVATF]-1659846129417
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846130583
GPR[EPVS]-1659846130583
========
if(plot==PlotOrientation.HORIZONTAL){
throw new IllegalArgumentException("Null \'plot\' argument.");
}
this.plot=plot;

========
GPR[SPVS]-1659846130585
GPR[SPVAP]-1659846130585
GPR[EPVAP]-1659846131394
GPR[EPVS]-1659846131395
========
if(plot==PlotOrientation.VERTICAL){
throw new IllegalArgumentException("Null \'plot\' argument.");
}
this.plot=plot;

========
GPR[SPVS]-1659846131398
GPR[SPVAP]-1659846131398
GPR[EPVAP]-1659846132241
GPR[EPVS]-1659846132241
GPR[ESUN]-1659846132241
GPR[SSUN]-1659846132241
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,297
Find no block!
GPR[SSUN]-1659846132775
org.jfree.data.KeyedObjects2D,270
========
if(columnKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}

========
GPR[SPVS]-1659846134818
GPR[SPVAP]-1659846134818
GPR[EPVAP]-1659846139342
GPR[SPVATF]-1659846139342
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846140498
GPR[EPVS]-1659846140498
========
if(rowKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}

========
GPR[SPVS]-1659846140499
GPR[SPVAP]-1659846140499
GPR[EPVAP]-1659846141779
GPR[SPVATF]-1659846141779
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846142936
GPR[EPVS]-1659846142936
========
if(columnKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}

========
GPR[SPVS]-1659846142938
GPR[SPVAP]-1659846142938
GPR[EPVAP]-1659846144197
GPR[SPVATF]-1659846144197
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846145362
GPR[EPVS]-1659846145362
GPR[ESUN]-1659846145362
GPR[SSUN]-1659846145362
org.jfree.data.KeyedObjects2D,273
========
if(columnKey!=null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}

========
GPR[SPVS]-1659846147468
GPR[SPVAP]-1659846147468
GPR[EPVAP]-1659846152056
GPR[SPVATF]-1659846152056
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846153231
GPR[EPVS]-1659846153231
GPR[ESUN]-1659846153232
GPR[SSUN]-1659846153232
org.jfree.data.KeyedObjects2D,277
========
row.setObject(columnKey,object);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846157615
GPR[SPVAP]-1659846157615
GPR[EPVAP]-1659846160085
GPR[EPVS]-1659846160085
========
if(this.columnKeys.indexOf(columnKey)<0){
this.columnKeys.add(columnKey);
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846160087
GPR[SPVAP]-1659846160087
GPR[EPVAP]-1659846163577
GPR[SPVATF]-1659846163577
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846164789
GPR[EPVS]-1659846164789
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(columnKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846164791
GPR[SPVAP]-1659846164791
GPR[EPVAP]-1659846166090
GPR[SPVATF]-1659846166090
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846167276
GPR[EPVS]-1659846167276
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowIndex,rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846167277
GPR[SPVAP]-1659846167277
GPR[EPVAP]-1659846168536
GPR[SPVATF]-1659846168536
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846169723
GPR[EPVS]-1659846169723
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(row);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846169725
GPR[SPVAP]-1659846169725
GPR[EPVAP]-1659846170446
GPR[EPVS]-1659846170446
========
if(this.rows.indexOf(columnKey)<0){
this.rows.add(columnKey);
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846170447
GPR[SPVAP]-1659846170447
GPR[EPVAP]-1659846171716
GPR[SPVATF]-1659846171716
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846172925
GPR[EPVS]-1659846172925
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(columnKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowIndex,rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846172926
GPR[SPVAP]-1659846172926
GPR[EPVAP]-1659846174173
GPR[SPVATF]-1659846174173
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846175349
GPR[EPVS]-1659846175349
========
if(this.rows.indexOf(columnKey)<0){
this.rows.add(columnKey);
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(columnKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846175350
GPR[SPVAP]-1659846175350
GPR[EPVAP]-1659846176626
GPR[SPVATF]-1659846176626
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846177774
GPR[EPVS]-1659846177774
========
if(this.rows.indexOf(columnKey)<0){
this.rows.add(columnKey);
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowIndex,rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846177775
GPR[SPVAP]-1659846177775
GPR[EPVAP]-1659846179006
GPR[SPVATF]-1659846179006
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846180172
GPR[EPVS]-1659846180172
========
if(this.rows.indexOf(columnKey)<0){
this.rows.add(columnKey);
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(columnKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowIndex,rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846180184
GPR[SPVAP]-1659846180184
GPR[EPVAP]-1659846183335
GPR[SPVATF]-1659846183335
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846184552
GPR[EPVS]-1659846184552
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846184554
GPR[SPVAP]-1659846184554
GPR[EPVAP]-1659846185269
GPR[EPVS]-1659846185269
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846185271
GPR[SPVAP]-1659846185271
GPR[EPVAP]-1659846185968
GPR[EPVS]-1659846185968
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(position>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846185969
GPR[SPVAP]-1659846185969
GPR[EPVAP]-1659846186666
GPR[EPVS]-1659846186666
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.setBorder(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846186667
GPR[SPVAP]-1659846186667
GPR[EPVAP]-1659846187371
GPR[EPVS]-1659846187371
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(autoIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846187373
GPR[SPVAP]-1659846187373
GPR[EPVAP]-1659846188075
GPR[EPVS]-1659846188075
========
KeyedObjects row;
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846188077
GPR[SPVAP]-1659846188077
GPR[EPVAP]-1659846188799
GPR[EPVS]-1659846188799
========
KeyedObjects row;
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846188800
GPR[SPVAP]-1659846188800
GPR[EPVAP]-1659846189510
GPR[EPVS]-1659846189510
========
KeyedObjects row;
clone.rows=new java.util.ArrayList(this.rows.size());
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846189511
GPR[SPVAP]-1659846189511
GPR[EPVAP]-1659846190221
GPR[EPVS]-1659846190221
========
KeyedObjects row;
int rowIndex=this.rowKeys.get(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846190223
GPR[SPVAP]-1659846190223
GPR[EPVAP]-1659846190946
GPR[EPVS]-1659846190946
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(tempWeek>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846190947
GPR[SPVAP]-1659846190947
GPR[EPVAP]-1659846191664
GPR[EPVS]-1659846191664
========
if(true){
this.rowKeys.remove(rowIndex);
this.rows.remove(rowIndex);
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846191666
GPR[SPVAP]-1659846191666
GPR[EPVAP]-1659846192366
GPR[EPVS]-1659846192366
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(keyIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846192367
GPR[SPVAP]-1659846192367
GPR[EPVAP]-1659846193064
GPR[EPVS]-1659846193064
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(pos>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846193065
GPR[SPVAP]-1659846193065
GPR[EPVAP]-1659846193758
GPR[EPVS]-1659846193758
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
rebuildIndex();
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846193759
GPR[SPVAP]-1659846193759
GPR[EPVAP]-1659846194464
GPR[EPVS]-1659846194464
========
KeyedObjects row;
rowKeys.add(this.columnKey);
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846194465
GPR[SPVAP]-1659846194465
GPR[EPVAP]-1659846195172
GPR[EPVS]-1659846195172
========
if(System.getProperty("os.name").toLowerCase().startsWith("mac os x")){
rowIndex=InputEvent.ALT_MASK;
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846195174
GPR[SPVAP]-1659846195174
GPR[EPVAP]-1659846195888
GPR[EPVS]-1659846195888
========
new PanHandler().setModifier(rowIndex);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846195890
GPR[SPVAP]-1659846195890
GPR[EPVAP]-1659846196603
GPR[EPVS]-1659846196603
========
this.rows.add(new PanHandler());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846196604
GPR[SPVAP]-1659846196604
GPR[EPVAP]-1659846197321
GPR[EPVS]-1659846197321
========
this.columnKeys=new java.util.ArrayList();
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846197322
GPR[SPVAP]-1659846197322
GPR[EPVAP]-1659846198583
GPR[SPVATF]-1659846198583
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846199762
GPR[EPVS]-1659846199762
========
KeyedObjects row;
long rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846199765
GPR[SPVAP]-1659846199765
GPR[EPVAP]-1659846200470
GPR[EPVS]-1659846200470
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(this.rowKeys.indexOf(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846200471
GPR[SPVAP]-1659846200471
GPR[EPVAP]-1659846201721
GPR[SPVATF]-1659846201721
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846202876
GPR[EPVS]-1659846202876
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(this.rowKeys.indexOf(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846202877
GPR[SPVAP]-1659846202877
GPR[EPVAP]-1659846203584
GPR[EPVS]-1659846203584
========
fireChangeEvent();
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846203586
GPR[SPVAP]-1659846203586
GPR[EPVAP]-1659846204309
GPR[EPVS]-1659846204309
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(i>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846204311
GPR[SPVAP]-1659846204311
GPR[EPVAP]-1659846205004
GPR[EPVS]-1659846205004
========
KeyedObjects row;
double rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846205005
GPR[SPVAP]-1659846205005
GPR[EPVAP]-1659846205707
GPR[EPVS]-1659846205707
========
Collections.sort(columnKeys);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846205708
GPR[SPVAP]-1659846205708
GPR[EPVAP]-1659846206990
GPR[SPVATF]-1659846206990
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846208155
GPR[EPVS]-1659846208155
========
Collections.sort(this.rows);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846208157
GPR[SPVAP]-1659846208157
GPR[EPVAP]-1659846209415
GPR[SPVATF]-1659846209415
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846210585
GPR[EPVS]-1659846210585
========
KeyedObjects row;
if(!(this.rowKeys.contains(rowKey))){
throw new UnknownKeyException("Unrecognised columnKey: "+columnKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846210587
GPR[SPVAP]-1659846210587
GPR[EPVAP]-1659846211833
GPR[SPVATF]-1659846211833
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846212988
GPR[EPVS]-1659846212988
========
new HashMap().put("key",rowKey);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846212990
GPR[SPVAP]-1659846212991
GPR[EPVAP]-1659846213717
GPR[EPVS]-1659846213717
========
new HashMap().put("bins",rowKeys);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846213719
GPR[SPVAP]-1659846213719
GPR[EPVAP]-1659846214419
GPR[EPVS]-1659846214419
========
new HashMap().put("values.length",new Integer(values.length));
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846214420
GPR[SPVAP]-1659846214420
GPR[EPVAP]-1659846215134
GPR[EPVS]-1659846215134
========
this.rows.add(new HashMap());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846215135
GPR[SPVAP]-1659846215135
GPR[EPVAP]-1659846215819
GPR[EPVS]-1659846215819
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(k>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846215821
GPR[SPVAP]-1659846215821
GPR[EPVAP]-1659846216523
GPR[EPVS]-1659846216523
========
fireSeriesChanged();
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846216526
GPR[SPVAP]-1659846216526
GPR[EPVAP]-1659846217243
GPR[EPVS]-1659846217243
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(subplotIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846217246
GPR[SPVAP]-1659846217246
GPR[EPVAP]-1659846217994
GPR[EPVS]-1659846217994
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(item>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846217995
GPR[SPVAP]-1659846217995
GPR[EPVAP]-1659846218714
GPR[EPVS]-1659846218714
========
if((BoxAndWhiskerItem)this.rows.get(rowIndex)!=null){
columnKeys=stats.getOutliers();
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846218717
GPR[SPVAP]-1659846218717
GPR[EPVAP]-1659846219415
GPR[EPVS]-1659846219415
========
if((KeyedObject)this.rows.get(rowIndex)!=null){
object=kobj.getObject();
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846219417
GPR[SPVAP]-1659846219417
GPR[EPVAP]-1659846220116
GPR[EPVS]-1659846220116
========
if((KeyedObject)this.rows.get(rowIndex)!=null){
columnKey=item.getKey();
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846220117
GPR[SPVAP]-1659846220117
GPR[EPVAP]-1659846220818
GPR[EPVS]-1659846220818
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(result>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846220820
GPR[SPVAP]-1659846220820
GPR[EPVAP]-1659846221536
GPR[EPVS]-1659846221536
========
KeyedObjects row;
if(rows.isEmpty()){
return null;
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846221537
GPR[SPVAP]-1659846221537
GPR[EPVAP]-1659846222232
GPR[EPVS]-1659846222232
========
if(columnKey!=null){
columnKey=group;
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846222234
GPR[SPVAP]-1659846222234
GPR[EPVAP]-1659846222940
GPR[EPVS]-1659846222940
========
fireChartChanged();
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846222942
GPR[SPVAP]-1659846222942
GPR[EPVAP]-1659846223646
GPR[EPVS]-1659846223646
========
if((DialLayer)this.rows.get(rowIndex)!=null){
layer.removeChangeListener(this);
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846223647
GPR[SPVAP]-1659846223647
GPR[EPVAP]-1659846224373
GPR[EPVS]-1659846224373
========
this.rows.remove(rowIndex);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846224374
GPR[SPVAP]-1659846224374
GPR[EPVAP]-1659846225077
GPR[EPVS]-1659846225077
========
if((DialPointer)this.rows.get(rowIndex)!=null){
pointer.removeChangeListener(this);
}
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846225079
GPR[SPVAP]-1659846225079
GPR[EPVAP]-1659846225785
GPR[EPVS]-1659846225785
========
this.rows.remove(rowIndex);
fireChangeEvent();
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846225786
GPR[SPVAP]-1659846225786
GPR[EPVAP]-1659846226526
GPR[EPVS]-1659846226526
========
KeyedObjects row;
boolean rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846226527
GPR[SPVAP]-1659846226527
GPR[EPVAP]-1659846227238
GPR[EPVS]-1659846227238
========
KeyedObjects row;
if(rows==null){
throw new IllegalArgumentException("Null \'categories\' argument.");
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846227239
GPR[SPVAP]-1659846227239
GPR[EPVAP]-1659846228525
GPR[SPVATF]-1659846228525
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846229677
GPR[EPVS]-1659846229677
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(count>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846229679
GPR[SPVAP]-1659846229679
GPR[EPVAP]-1659846230400
GPR[EPVS]-1659846230400
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
fireDatasetChanged(new DatasetChangeInfo());
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846230403
GPR[SPVAP]-1659846230403
GPR[EPVAP]-1659846231115
GPR[EPVS]-1659846231115
========
(Block)rowKeys.get(0).setBounds(new Rectangle2D.Double(0.0,0.0,s.width,s.height));
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846231117
GPR[SPVAP]-1659846231117
GPR[EPVAP]-1659846231739
GPR[EPVS]-1659846231739
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846231741
GPR[SPVAP]-1659846231741
GPR[EPVAP]-1659846232451
GPR[EPVS]-1659846232451
========
removeRow(rowIndex);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846232453
GPR[SPVAP]-1659846232453
GPR[EPVAP]-1659846233157
GPR[EPVS]-1659846233157
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(weight>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846233159
GPR[SPVAP]-1659846233159
GPR[EPVAP]-1659846233862
GPR[EPVS]-1659846233862
========
configureRangeAxes();
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846233863
GPR[SPVAP]-1659846233863
GPR[EPVAP]-1659846234569
GPR[EPVS]-1659846234569
========
KeyedObjects row;
if(getColumnIndex(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846234572
GPR[SPVAP]-1659846234572
GPR[EPVAP]-1659846235844
GPR[SPVATF]-1659846235844
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846237001
GPR[EPVS]-1659846237001
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846237002
GPR[SPVAP]-1659846237002
GPR[EPVAP]-1659846238270
GPR[SPVATF]-1659846238270
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846239442
GPR[EPVS]-1659846239442
========
KeyedObjects row;
if(getColumnIndex(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(i>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846239443
GPR[SPVAP]-1659846239443
GPR[EPVAP]-1659846240141
GPR[EPVS]-1659846240141
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(i>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846240143
GPR[SPVAP]-1659846240143
GPR[EPVAP]-1659846240842
GPR[EPVS]-1659846240842
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
if(getColumnIndex(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846240843
GPR[SPVAP]-1659846240843
GPR[EPVAP]-1659846242100
GPR[SPVATF]-1659846242100
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846243290
GPR[EPVS]-1659846243290
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
if(getColumnIndex(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(i>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846243291
GPR[SPVAP]-1659846243291
GPR[EPVAP]-1659846244000
GPR[EPVS]-1659846244000
========
KeyedObjects row;
int rowIndex=(TimeSeriesDataItem)this.rows.get(rowIndex).getValue()!=null?this.rowKeys.indexOf(rowKey):Double.NaN;
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846244002
GPR[SPVAP]-1659846244002
GPR[EPVAP]-1659846244718
GPR[EPVS]-1659846244718
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(r>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846244720
GPR[SPVAP]-1659846244720
GPR[EPVAP]-1659846245445
GPR[EPVS]-1659846245445
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(c>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846245446
GPR[SPVAP]-1659846245446
GPR[EPVAP]-1659846246143
GPR[EPVS]-1659846246143
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846246144
GPR[SPVAP]-1659846246144
GPR[EPVAP]-1659846247400
GPR[SPVATF]-1659846247400
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846248548
GPR[EPVS]-1659846248548
========
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846248550
GPR[SPVAP]-1659846248550
GPR[EPVAP]-1659846249256
GPR[EPVS]-1659846249256
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(r>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846249257
GPR[SPVAP]-1659846249257
GPR[EPVAP]-1659846249963
GPR[EPVS]-1659846249963
========
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(r>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846249964
GPR[SPVAP]-1659846249964
GPR[EPVAP]-1659846250673
GPR[EPVS]-1659846250673
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(c>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846250675
GPR[SPVAP]-1659846250675
GPR[EPVAP]-1659846251384
GPR[EPVS]-1659846251384
========
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(c>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846251385
GPR[SPVAP]-1659846251385
GPR[EPVAP]-1659846252095
GPR[EPVS]-1659846252095
========
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846252096
GPR[SPVAP]-1659846252096
GPR[EPVAP]-1659846252936
GPR[EPVS]-1659846252936
========
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(r>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846252943
GPR[SPVAP]-1659846252943
GPR[EPVAP]-1659846255343
GPR[EPVS]-1659846255343
========
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(c>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846255344
GPR[SPVAP]-1659846255344
GPR[EPVAP]-1659846256092
GPR[EPVS]-1659846256092
========
KeyedObjects row;
if(rowKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846256094
GPR[SPVAP]-1659846256094
GPR[EPVAP]-1659846257370
GPR[SPVATF]-1659846257370
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846258565
GPR[EPVS]-1659846258565
========
KeyedObjects row;
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846258567
GPR[SPVAP]-1659846258567
GPR[EPVAP]-1659846259811
GPR[SPVATF]-1659846259811
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846260982
GPR[EPVS]-1659846260982
========
KeyedObjects row;
if(rowKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846260983
GPR[SPVAP]-1659846260983
GPR[EPVAP]-1659846261701
GPR[EPVS]-1659846261701
========
KeyedObjects row;
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846261702
GPR[SPVAP]-1659846261702
GPR[EPVAP]-1659846262402
GPR[EPVS]-1659846262402
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846262403
GPR[SPVAP]-1659846262403
GPR[EPVAP]-1659846263105
GPR[EPVS]-1659846263105
========
KeyedObjects row;
if(rowKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846263106
GPR[SPVAP]-1659846263106
GPR[EPVAP]-1659846264384
GPR[SPVATF]-1659846264384
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846265534
GPR[EPVS]-1659846265534
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
if(rowKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846265535
GPR[SPVAP]-1659846265535
GPR[EPVAP]-1659846266796
GPR[SPVATF]-1659846266796
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846267949
GPR[EPVS]-1659846267949
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846267950
GPR[SPVAP]-1659846267950
GPR[EPVAP]-1659846269187
GPR[SPVATF]-1659846269187
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846270349
GPR[EPVS]-1659846270349
========
KeyedObjects row;
if(rowKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846270350
GPR[SPVAP]-1659846270350
GPR[EPVAP]-1659846271053
GPR[EPVS]-1659846271053
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
if(rowKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846271054
GPR[SPVAP]-1659846271054
GPR[EPVAP]-1659846271756
GPR[EPVS]-1659846271756
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846271757
GPR[SPVAP]-1659846271757
GPR[EPVAP]-1659846272459
GPR[EPVS]-1659846272459
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
if(rowKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846272460
GPR[SPVAP]-1659846272460
GPR[EPVAP]-1659846273700
GPR[SPVATF]-1659846273700
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846274885
GPR[EPVS]-1659846274885
========
this.rowKeys.remove(rowKey);
KeyedObjects row;
if(rowKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int rowIndex=this.rowKeys.indexOf(rowKey);
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846274886
GPR[SPVAP]-1659846274886
GPR[EPVAP]-1659846275597
GPR[EPVS]-1659846275597
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rangeIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846275599
GPR[SPVAP]-1659846275599
GPR[EPVAP]-1659846276296
GPR[EPVS]-1659846276296
========
(TaskSeries)this.rows.get(rowIndex).removeChangeListener(this);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846276298
GPR[SPVAP]-1659846276298
GPR[EPVAP]-1659846276914
GPR[EPVS]-1659846276914
========
this.rows.remove(rowIndex);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846276915
GPR[SPVAP]-1659846276915
GPR[EPVAP]-1659846277618
GPR[EPVS]-1659846277618
========
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846277619
GPR[SPVAP]-1659846277619
GPR[EPVAP]-1659846278322
GPR[EPVS]-1659846278322
========
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846278323
GPR[SPVAP]-1659846278323
GPR[EPVAP]-1659846279034
GPR[EPVS]-1659846279034
========
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846279035
GPR[SPVAP]-1659846279035
GPR[EPVAP]-1659846279749
GPR[EPVS]-1659846279749
========
(MatrixSeries)this.rows.get(rowIndex).removeChangeListener(this);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846279750
GPR[SPVAP]-1659846279750
GPR[EPVAP]-1659846280361
GPR[EPVS]-1659846280361
========
this.rows.remove(rowIndex);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846280363
GPR[SPVAP]-1659846280363
GPR[EPVAP]-1659846281065
GPR[EPVS]-1659846281065
========
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846281066
GPR[SPVAP]-1659846281066
GPR[EPVAP]-1659846281815
GPR[EPVS]-1659846281815
========
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846281816
GPR[SPVAP]-1659846281816
GPR[EPVAP]-1659846282516
GPR[EPVS]-1659846282516
========
(XIntervalSeries)this.rows.get(rowIndex).removeChangeListener(this);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846282517
GPR[SPVAP]-1659846282517
GPR[EPVAP]-1659846283127
GPR[EPVS]-1659846283127
========
(XYIntervalSeries)this.rows.get(rowIndex).removeChangeListener(this);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846283128
GPR[SPVAP]-1659846283128
GPR[EPVAP]-1659846283749
GPR[EPVS]-1659846283749
========
(YIntervalSeries)this.rows.get(rowIndex).removeChangeListener(this);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846283750
GPR[SPVAP]-1659846283750
GPR[EPVAP]-1659846284364
GPR[EPVS]-1659846284364
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846284365
GPR[SPVAP]-1659846284365
GPR[EPVAP]-1659846284972
GPR[EPVS]-1659846284972
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846284974
GPR[SPVAP]-1659846284974
GPR[EPVAP]-1659846286229
GPR[SPVATF]-1659846286229
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846287391
GPR[EPVS]-1659846287391
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846287392
GPR[SPVAP]-1659846287392
GPR[EPVAP]-1659846288093
GPR[EPVS]-1659846288093
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846288094
GPR[SPVAP]-1659846288094
GPR[EPVAP]-1659846288698
GPR[EPVS]-1659846288698
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
this.rows.remove(rowIndex);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846288700
GPR[SPVAP]-1659846288700
GPR[EPVAP]-1659846289310
GPR[EPVS]-1659846289310
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846289310
GPR[SPVAP]-1659846289311
GPR[EPVAP]-1659846289916
GPR[EPVS]-1659846289916
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
this.rows.remove(rowIndex);
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846289917
GPR[SPVAP]-1659846289917
GPR[EPVAP]-1659846290536
GPR[EPVS]-1659846290536
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846290537
GPR[SPVAP]-1659846290537
GPR[EPVAP]-1659846291152
GPR[EPVS]-1659846291152
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846291153
GPR[SPVAP]-1659846291153
GPR[EPVAP]-1659846291756
GPR[EPVS]-1659846291756
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846291757
GPR[SPVAP]-1659846291757
GPR[EPVAP]-1659846292400
GPR[EPVS]-1659846292400
========
fireChartChanged();
KeyedObjects row;
int rowIndex=this.rowKeys.get(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846292401
GPR[SPVAP]-1659846292401
GPR[EPVAP]-1659846293121
GPR[EPVS]-1659846293121
========
KeyedObjects row;
int rowIndex=this.rowKeys.indexOf(rowKey);
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
fireDatasetChanged(new DatasetChangeInfo());
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846293125
GPR[SPVAP]-1659846293125
GPR[EPVAP]-1659846293853
GPR[EPVS]-1659846293853
GPR[ESUN]-1659846293855
GPR[SSUN]-1659846293855
org.jfree.data.KeyedObjects2D,278
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowIndex,rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846297746
GPR[SPVAP]-1659846297746
GPR[EPVAP]-1659846302330
GPR[SPVATF]-1659846302330
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846303477
GPR[EPVS]-1659846303477
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(row);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846303478
GPR[SPVAP]-1659846303478
GPR[EPVAP]-1659846304178
GPR[EPVS]-1659846304178
========
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846304179
GPR[SPVAP]-1659846304179
GPR[EPVAP]-1659846304924
GPR[EPVS]-1659846304924
========
if(baseIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846304925
GPR[SPVAP]-1659846304925
GPR[EPVAP]-1659846305624
GPR[EPVS]-1659846305624
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
baseIndex=0;
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846305625
GPR[SPVAP]-1659846305625
GPR[EPVAP]-1659846306388
GPR[EPVS]-1659846306388
========
if(rowIndex>0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846306389
GPR[SPVAP]-1659846306389
GPR[EPVAP]-1659846307691
GPR[SPVATF]-1659846307691
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846308838
GPR[EPVS]-1659846308838
========
if(n>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846308839
GPR[SPVAP]-1659846308839
GPR[EPVAP]-1659846309548
GPR[EPVS]-1659846309548
========
if(n>0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846309549
GPR[SPVAP]-1659846309549
GPR[EPVAP]-1659846310260
GPR[EPVS]-1659846310260
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846310262
GPR[SPVAP]-1659846310262
GPR[EPVAP]-1659846311017
GPR[EPVS]-1659846311017
========
if(position>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846311018
GPR[SPVAP]-1659846311018
GPR[EPVAP]-1659846311738
GPR[EPVS]-1659846311738
========
if(autoIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846311740
GPR[SPVAP]-1659846311740
GPR[EPVAP]-1659846312439
GPR[EPVS]-1659846312439
========
if(tempWeek>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846312441
GPR[SPVAP]-1659846312441
GPR[EPVAP]-1659846313147
GPR[EPVS]-1659846313147
========
if(rowIndex>=0){
this.week=1;
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846313149
GPR[SPVAP]-1659846313149
GPR[EPVAP]-1659846313854
GPR[EPVS]-1659846313854
========
if(keyIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846313856
GPR[SPVAP]-1659846313856
GPR[EPVAP]-1659846314558
GPR[EPVS]-1659846314558
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(new KeyedObject(rowKey,object));
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846314559
GPR[SPVAP]-1659846314559
GPR[EPVAP]-1659846315857
GPR[SPVATF]-1659846315857
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846317033
GPR[EPVS]-1659846317033
========
if(keyIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(new KeyedObject(rowKey,object));
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846317034
GPR[SPVAP]-1659846317034
GPR[EPVAP]-1659846317740
GPR[EPVS]-1659846317740
========
if(columnIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846317741
GPR[SPVAP]-1659846317741
GPR[EPVAP]-1659846318468
GPR[EPVS]-1659846318468
========
if(pos>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846318470
GPR[SPVAP]-1659846318470
GPR[EPVAP]-1659846319178
GPR[EPVS]-1659846319178
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
rebuildIndex();
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846319179
GPR[SPVAP]-1659846319179
GPR[EPVAP]-1659846319875
GPR[EPVS]-1659846319875
========
if(high>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846319877
GPR[SPVAP]-1659846319877
GPR[EPVAP]-1659846320574
GPR[EPVS]-1659846320574
========
if(mapIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846320578
GPR[SPVAP]-1659846320578
GPR[EPVAP]-1659846321295
GPR[EPVS]-1659846321295
========
if(i>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846321297
GPR[SPVAP]-1659846321297
GPR[EPVAP]-1659846321999
GPR[EPVS]-1659846321999
========
Collections.sort(this.rowKeys);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846322000
GPR[SPVAP]-1659846322000
GPR[EPVAP]-1659846323281
GPR[SPVATF]-1659846323281
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846324479
GPR[EPVS]-1659846324479
========
if(count>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846324482
GPR[SPVAP]-1659846324482
GPR[EPVAP]-1659846325458
GPR[EPVS]-1659846325458
========
fireChangeEvent();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846325468
GPR[SPVAP]-1659846325468
GPR[EPVAP]-1659846327440
GPR[EPVS]-1659846327440
========
fireSeriesChanged();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846327441
GPR[SPVAP]-1659846327441
GPR[EPVAP]-1659846328167
GPR[EPVS]-1659846328167
========
if(k>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846328168
GPR[SPVAP]-1659846328168
GPR[EPVAP]-1659846328871
GPR[EPVS]-1659846328871
========
repaint();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846328873
GPR[SPVAP]-1659846328873
GPR[EPVAP]-1659846329576
GPR[EPVS]-1659846329576
========
fireOverlayChanged();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846329577
GPR[SPVAP]-1659846329577
GPR[EPVAP]-1659846330289
GPR[EPVS]-1659846330289
========
fireChartChanged();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846330290
GPR[SPVAP]-1659846330290
GPR[EPVAP]-1659846330999
GPR[EPVS]-1659846330999
========
if(row>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846331000
GPR[SPVAP]-1659846331000
GPR[EPVAP]-1659846331736
GPR[EPVS]-1659846331736
========
if(!(this.rowKeys.contains(columnKey))){
throw new UnknownKeyException("Unrecognised columnKey: "+columnKey);
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846331737
GPR[SPVAP]-1659846331737
GPR[EPVAP]-1659846333020
GPR[SPVATF]-1659846333020
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846334227
GPR[EPVS]-1659846334227
========
if(subplotIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846334228
GPR[SPVAP]-1659846334228
GPR[EPVAP]-1659846334934
GPR[EPVS]-1659846334934
========
if(item>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846334937
GPR[SPVAP]-1659846334937
GPR[EPVAP]-1659846335652
GPR[EPVS]-1659846335652
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.setBorder(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846335653
GPR[SPVAP]-1659846335654
GPR[EPVAP]-1659846336360
GPR[EPVS]-1659846336360
========
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846336362
GPR[SPVAP]-1659846336362
GPR[EPVAP]-1659846337070
GPR[EPVS]-1659846337070
========
this.rowKeys=new java.util.ArrayList();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846337071
GPR[SPVAP]-1659846337071
GPR[EPVAP]-1659846338322
GPR[SPVATF]-1659846338322
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846339475
GPR[EPVS]-1659846339475
========
if(rows.isEmpty()){
return null;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846339477
GPR[SPVAP]-1659846339477
GPR[EPVAP]-1659846340180
GPR[EPVS]-1659846340180
========
if(columnKey!=null){
columnKey=group;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846340182
GPR[SPVAP]-1659846340182
GPR[EPVAP]-1659846340884
GPR[EPVS]-1659846340884
========
fireChartChanged();
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846340886
GPR[SPVAP]-1659846340886
GPR[EPVAP]-1659846341599
GPR[EPVS]-1659846341599
========
if(binIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846341600
GPR[SPVAP]-1659846341600
GPR[EPVAP]-1659846342307
GPR[EPVS]-1659846342307
========
(HistogramBin)rowKeys.get(rowIndex).incrementCount();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846342308
GPR[SPVAP]-1659846342308
GPR[EPVAP]-1659846342918
GPR[EPVS]-1659846342918
========
if(fieldIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846342919
GPR[SPVAP]-1659846342919
GPR[EPVAP]-1659846343656
GPR[EPVS]-1659846343656
========
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846343660
GPR[SPVAP]-1659846343660
GPR[EPVAP]-1659846344369
GPR[EPVS]-1659846344369
========
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846344373
GPR[SPVAP]-1659846344373
GPR[EPVAP]-1659846345640
GPR[SPVATF]-1659846345640
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846346783
GPR[EPVS]-1659846346783
========
if(!this.rowKeys.contains(rowKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846346784
GPR[SPVAP]-1659846346784
GPR[EPVAP]-1659846347531
GPR[EPVS]-1659846347531
========
if(getColumnIndex(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846347533
GPR[SPVAP]-1659846347533
GPR[EPVAP]-1659846348771
GPR[SPVATF]-1659846348771
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846349933
GPR[EPVS]-1659846349933
========
this.rowKeys.remove(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846349934
GPR[SPVAP]-1659846349934
GPR[EPVAP]-1659846351204
GPR[SPVATF]-1659846351204
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846352361
GPR[EPVS]-1659846352361
========
if(getColumnIndex(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
if(i>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846352362
GPR[SPVAP]-1659846352362
GPR[EPVAP]-1659846353066
GPR[EPVS]-1659846353066
========
this.rowKeys.remove(rowKey);
if(i>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846353067
GPR[SPVAP]-1659846353067
GPR[EPVAP]-1659846353771
GPR[EPVS]-1659846353771
========
if(getColumnIndex(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
this.rowKeys.remove(rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846353773
GPR[SPVAP]-1659846353773
GPR[EPVAP]-1659846355041
GPR[SPVATF]-1659846355041
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846356204
GPR[EPVS]-1659846356204
========
if(getColumnIndex(rowKey)<0){
throw new UnknownKeyException("Column key ("+rowKey);
}
this.rowKeys.remove(rowKey);
if(i>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846356206
GPR[SPVAP]-1659846356206
GPR[EPVAP]-1659846356903
GPR[EPVS]-1659846356903
========
(TaskSeries)this.rows.get(rowIndex).removeChangeListener(this);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846356908
GPR[SPVAP]-1659846356908
GPR[EPVAP]-1659846357516
GPR[EPVS]-1659846357516
========
this.rows.remove(rowIndex);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846357518
GPR[SPVAP]-1659846357518
GPR[EPVAP]-1659846358781
GPR[SPVATF]-1659846358781
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846359962
GPR[EPVS]-1659846359962
========
this.rows.remove(rowIndex);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846359963
GPR[SPVAP]-1659846359963
GPR[EPVAP]-1659846360656
GPR[EPVS]-1659846360656
========
fireDatasetChanged(new DatasetChangeInfo());
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846360657
GPR[SPVAP]-1659846360657
GPR[EPVAP]-1659846361349
GPR[EPVS]-1659846361349
========
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846361350
GPR[SPVAP]-1659846361350
GPR[EPVAP]-1659846362044
GPR[EPVS]-1659846362044
========
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846362045
GPR[SPVAP]-1659846362045
GPR[EPVAP]-1659846362775
GPR[EPVS]-1659846362775
========
(MatrixSeries)this.rows.get(rowIndex).removeChangeListener(this);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846362777
GPR[SPVAP]-1659846362777
GPR[EPVAP]-1659846363389
GPR[EPVS]-1659846363389
========
this.rows.remove(rowIndex);
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846363390
GPR[SPVAP]-1659846363390
GPR[EPVAP]-1659846364098
GPR[EPVS]-1659846364098
========
fireDatasetChanged(new DatasetChangeInfo());
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846364099
GPR[SPVAP]-1659846364099
GPR[EPVAP]-1659846364800
GPR[EPVS]-1659846364800
========
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846364801
GPR[SPVAP]-1659846364801
GPR[EPVAP]-1659846365524
GPR[EPVS]-1659846365524
========
(XIntervalSeries)this.rows.get(rowIndex).removeChangeListener(this);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846365525
GPR[SPVAP]-1659846365525
GPR[EPVAP]-1659846366132
GPR[EPVS]-1659846366132
========
(XYIntervalSeries)this.rows.get(rowIndex).removeChangeListener(this);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846366134
GPR[SPVAP]-1659846366134
GPR[EPVAP]-1659846366746
GPR[EPVS]-1659846366746
========
(YIntervalSeries)this.rows.get(rowIndex).removeChangeListener(this);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846366748
GPR[SPVAP]-1659846366748
GPR[EPVAP]-1659846367359
GPR[EPVS]-1659846367359
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846367361
GPR[SPVAP]-1659846367361
GPR[EPVAP]-1659846367970
GPR[EPVS]-1659846367970
========
removeRow(rowIndex);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846367972
GPR[SPVAP]-1659846367972
GPR[EPVAP]-1659846369200
GPR[SPVATF]-1659846369200
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846370349
GPR[EPVS]-1659846370349
========
removeRow(rowIndex);
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846370351
GPR[SPVAP]-1659846370351
GPR[EPVAP]-1659846371053
GPR[EPVS]-1659846371053
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846371054
GPR[SPVAP]-1659846371054
GPR[EPVAP]-1659846371666
GPR[EPVS]-1659846371666
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
this.rows.remove(rowIndex);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846371667
GPR[SPVAP]-1659846371667
GPR[EPVAP]-1659846372285
GPR[EPVS]-1659846372285
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846372286
GPR[SPVAP]-1659846372286
GPR[EPVAP]-1659846372892
GPR[EPVS]-1659846372892
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
this.rows.remove(rowIndex);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846372894
GPR[SPVAP]-1659846372894
GPR[EPVAP]-1659846373502
GPR[EPVS]-1659846373502
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
fireDatasetChanged(new DatasetChangeInfo());
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846373503
GPR[SPVAP]-1659846373503
GPR[EPVAP]-1659846374110
GPR[EPVS]-1659846374110
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846374112
GPR[SPVAP]-1659846374112
GPR[EPVAP]-1659846374720
GPR[EPVS]-1659846374720
========
(XYSeries)this.rows.get(rowIndex).removeChangeListener(this);
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846374721
GPR[SPVAP]-1659846374721
GPR[EPVAP]-1659846375330
GPR[EPVS]-1659846375330
========
if(r>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846375332
GPR[SPVAP]-1659846375332
GPR[EPVAP]-1659846376087
GPR[EPVS]-1659846376087
========
if(c>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846376088
GPR[SPVAP]-1659846376088
GPR[EPVAP]-1659846376800
GPR[EPVS]-1659846376800
========
if(rowIndex>=getRowIndex(rowKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846376801
GPR[SPVAP]-1659846376801
GPR[EPVAP]-1659846378070
GPR[SPVATF]-1659846378070
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846379209
GPR[EPVS]-1659846379209
========
if(rowIndex>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846379210
GPR[SPVAP]-1659846379210
GPR[EPVAP]-1659846380441
GPR[SPVATF]-1659846380441
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846381597
GPR[EPVS]-1659846381597
========
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=getRowIndex(rowKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846381598
GPR[SPVAP]-1659846381598
GPR[EPVAP]-1659846382302
GPR[EPVS]-1659846382302
========
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846382303
GPR[SPVAP]-1659846382303
GPR[EPVAP]-1659846383003
GPR[EPVS]-1659846383003
========
if(r>=getRowIndex(rowKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846383004
GPR[SPVAP]-1659846383004
GPR[EPVAP]-1659846383714
GPR[EPVS]-1659846383714
========
if(r>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846383715
GPR[SPVAP]-1659846383715
GPR[EPVAP]-1659846384429
GPR[EPVS]-1659846384429
========
fireDatasetChanged(new DatasetChangeInfo());
if(r>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846384429
GPR[SPVAP]-1659846384429
GPR[EPVAP]-1659846385132
GPR[EPVS]-1659846385132
========
if(c>=getRowIndex(rowKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846385133
GPR[SPVAP]-1659846385133
GPR[EPVAP]-1659846385852
GPR[EPVS]-1659846385852
========
if(c>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846385854
GPR[SPVAP]-1659846385854
GPR[EPVAP]-1659846386567
GPR[EPVS]-1659846386567
========
fireDatasetChanged(new DatasetChangeInfo());
if(c>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846386568
GPR[SPVAP]-1659846386568
GPR[EPVAP]-1659846387265
GPR[EPVS]-1659846387265
========
fireDatasetChanged(new DatasetChangeInfo());
if(r>=getRowIndex(rowKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846387267
GPR[SPVAP]-1659846387267
GPR[EPVAP]-1659846388002
GPR[EPVS]-1659846388002
========
fireDatasetChanged(new DatasetChangeInfo());
if(r>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846388003
GPR[SPVAP]-1659846388003
GPR[EPVAP]-1659846388712
GPR[EPVS]-1659846388712
========
fireDatasetChanged(new DatasetChangeInfo());
if(c>=getRowIndex(rowKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846388713
GPR[SPVAP]-1659846388713
GPR[EPVAP]-1659846389427
GPR[EPVS]-1659846389427
========
fireDatasetChanged(new DatasetChangeInfo());
if(c>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846389428
GPR[SPVAP]-1659846389428
GPR[EPVAP]-1659846390126
GPR[EPVS]-1659846390126
========
if(subinterval>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846390128
GPR[SPVAP]-1659846390128
GPR[EPVAP]-1659846390826
GPR[EPVS]-1659846390826
========
if(rowKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846390828
GPR[SPVAP]-1659846390828
GPR[EPVAP]-1659846392073
GPR[SPVATF]-1659846392073
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846393256
GPR[EPVS]-1659846393256
========
if(rowKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

========
GPR[SPVS]-1659846393257
GPR[SPVAP]-1659846393257
GPR[EPVAP]-1659846393960
GPR[EPVS]-1659846393960
GPR[ESUN]-1659846393963
GPR[SSUN]-1659846393963
org.jfree.data.KeyedObjects2D,282
GPR[ESUN]-1659846394458
GPR[SSUN]-1659846394458
org.jfree.data.KeyedObjects2D,283
GPR[ESUN]-1659846394824
GPR[SSUN]-1659846394824
org.jfree.data.KeyedObjects2D,284
GPR[ESUN]-1659846395144
GPR[SSUN]-1659846395144
org.jfree.data.KeyedObjects2D,286
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(rowKey);

========
GPR[SPVS]-1659846399193
GPR[SPVAP]-1659846399193
GPR[EPVAP]-1659846405786
GPR[SPVATF]-1659846405786
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846406952
GPR[EPVS]-1659846406952
========
if(columnIndex<0){
this.columnKeys.add(columnKey);
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846406953
GPR[SPVAP]-1659846406953
GPR[EPVAP]-1659846407679
GPR[EPVS]-1659846407679
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowIndex,rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846407680
GPR[SPVAP]-1659846407680
GPR[EPVAP]-1659846408979
GPR[SPVATF]-1659846408979
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846410157
GPR[EPVS]-1659846410157
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(row);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846410158
GPR[SPVAP]-1659846410158
GPR[EPVAP]-1659846410893
GPR[EPVS]-1659846410893
========
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846410895
GPR[SPVAP]-1659846410895
GPR[EPVAP]-1659846411605
GPR[EPVS]-1659846411605
========
if(rowIndex>0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846411606
GPR[SPVAP]-1659846411606
GPR[EPVAP]-1659846412844
GPR[SPVATF]-1659846412844
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846414044
GPR[EPVS]-1659846414044
========
if(n>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846414046
GPR[SPVAP]-1659846414046
GPR[EPVAP]-1659846414788
GPR[EPVS]-1659846414788
========
if(n>0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846414789
GPR[SPVAP]-1659846414789
GPR[EPVAP]-1659846415500
GPR[EPVS]-1659846415500
========
if(columnIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846415501
GPR[SPVAP]-1659846415501
GPR[EPVAP]-1659846416199
GPR[EPVS]-1659846416199
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846416201
GPR[SPVAP]-1659846416201
GPR[EPVAP]-1659846416899
GPR[EPVS]-1659846416899
========
if(position>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846416901
GPR[SPVAP]-1659846416901
GPR[EPVAP]-1659846417609
GPR[EPVS]-1659846417609
========
if(keyIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846417611
GPR[SPVAP]-1659846417611
GPR[EPVAP]-1659846418312
GPR[EPVS]-1659846418312
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(new KeyedObject(rowKey,object));
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846418313
GPR[SPVAP]-1659846418313
GPR[EPVAP]-1659846419581
GPR[SPVATF]-1659846419581
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846420721
GPR[EPVS]-1659846420721
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846420723
GPR[SPVAP]-1659846420723
GPR[EPVAP]-1659846421433
GPR[EPVS]-1659846421433
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846421434
GPR[SPVAP]-1659846421434
GPR[EPVAP]-1659846422146
GPR[EPVS]-1659846422146
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
clone.rows=new java.util.ArrayList(this.rows.size());
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846422147
GPR[SPVAP]-1659846422147
GPR[EPVAP]-1659846422866
GPR[EPVS]-1659846422866
========
if(autoIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846422867
GPR[SPVAP]-1659846422867
GPR[EPVAP]-1659846423587
GPR[EPVS]-1659846423587
========
if(tempWeek>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846423590
GPR[SPVAP]-1659846423590
GPR[EPVAP]-1659846424306
GPR[EPVS]-1659846424306
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.get(columnKey);

========
GPR[SPVS]-1659846424307
GPR[SPVAP]-1659846424307
GPR[EPVAP]-1659846425053
GPR[EPVS]-1659846425053
========
if(columnIndex<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846425054
GPR[SPVAP]-1659846425054
GPR[EPVAP]-1659846425758
GPR[EPVS]-1659846425758
========
if(row.getIndex(columnKey)>=0){
return row.getObject(index);
}else {
return null;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846425759
GPR[SPVAP]-1659846425759
GPR[EPVAP]-1659846426472
GPR[EPVS]-1659846426472
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(columnKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846426474
GPR[SPVAP]-1659846426474
GPR[EPVAP]-1659846427808
GPR[SPVATF]-1659846427808
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846428961
GPR[EPVS]-1659846428961
========
if(keyIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(columnKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846428963
GPR[SPVAP]-1659846428963
GPR[EPVAP]-1659846429664
GPR[EPVS]-1659846429664
========
if(pos>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846429666
GPR[SPVAP]-1659846429666
GPR[EPVAP]-1659846430400
GPR[EPVS]-1659846430400
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
rebuildIndex();
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846430401
GPR[SPVAP]-1659846430401
GPR[EPVAP]-1659846431103
GPR[EPVS]-1659846431103
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
rows.add(this.rowKey);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846431104
GPR[SPVAP]-1659846431104
GPR[EPVAP]-1659846431820
GPR[EPVS]-1659846431820
========
if((TaskSeries)this.columnKeys.get(rowIndex).get(columnKey.toString())!=null){
columnIndex=task.getSubtaskCount();
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846431822
GPR[SPVAP]-1659846431822
GPR[EPVAP]-1659846432520
GPR[EPVS]-1659846432520
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
if(System.getProperty("os.name").toLowerCase().startsWith("mac os x")){
rowIndex=InputEvent.ALT_MASK;
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846432522
GPR[SPVAP]-1659846432522
GPR[EPVAP]-1659846433253
GPR[EPVS]-1659846433253
========
this.rows.add(new PanHandler());
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846433254
GPR[SPVAP]-1659846433254
GPR[EPVAP]-1659846433960
GPR[EPVS]-1659846433960
========
this.columnIndex=new java.util.ArrayList();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846433961
GPR[SPVAP]-1659846433961
GPR[EPVAP]-1659846434688
GPR[EPVS]-1659846434688
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
double columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846434691
GPR[SPVAP]-1659846434691
GPR[EPVAP]-1659846435977
GPR[SPVATF]-1659846435977
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846437173
GPR[EPVS]-1659846437173
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
Collections.sort(rowKeys);
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846437175
GPR[SPVAP]-1659846437175
GPR[EPVAP]-1659846438429
GPR[SPVATF]-1659846438429
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846439603
GPR[EPVS]-1659846439603
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
Collections.sort(rowKeys);
row.setObject(columnKey,object);
double columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846439605
GPR[SPVAP]-1659846439605
GPR[EPVAP]-1659846440857
GPR[SPVATF]-1659846440857
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846441997
GPR[EPVS]-1659846441997
========
if(row>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846441999
GPR[SPVAP]-1659846441999
GPR[EPVAP]-1659846442705
GPR[EPVS]-1659846442705
========
if(!(this.columnKeys.contains(columnKey))){
throw new UnknownKeyException("Unrecognised columnKey: "+columnKey);
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846442707
GPR[SPVAP]-1659846442707
GPR[EPVAP]-1659846443942
GPR[SPVATF]-1659846443942
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846445096
GPR[EPVS]-1659846445096
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
long columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846445097
GPR[SPVAP]-1659846445097
GPR[EPVAP]-1659846446391
GPR[SPVATF]-1659846446391
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846447550
GPR[EPVS]-1659846447550
========
fireChangeEvent();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846447552
GPR[SPVAP]-1659846447552
GPR[EPVAP]-1659846448256
GPR[EPVS]-1659846448256
========
if(mapIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846448257
GPR[SPVAP]-1659846448257
GPR[EPVAP]-1659846448971
GPR[EPVS]-1659846448971
========
if(i>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846448973
GPR[SPVAP]-1659846448973
GPR[EPVAP]-1659846449695
GPR[EPVS]-1659846449695
========
Collections.sort(this.columnKeys);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846449698
GPR[SPVAP]-1659846449698
GPR[EPVAP]-1659846450939
GPR[SPVATF]-1659846450939
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846452132
GPR[EPVS]-1659846452132
========
if(count>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846452134
GPR[SPVAP]-1659846452134
GPR[EPVAP]-1659846452836
GPR[EPVS]-1659846452836
========
if(binIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846452838
GPR[SPVAP]-1659846452838
GPR[EPVAP]-1659846453598
GPR[EPVS]-1659846453598
========
new HashMap().put("key",rowKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846453599
GPR[SPVAP]-1659846453599
GPR[EPVAP]-1659846454300
GPR[EPVS]-1659846454300
========
new HashMap().put("bins",rowKeys);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846454301
GPR[SPVAP]-1659846454301
GPR[EPVAP]-1659846454992
GPR[EPVS]-1659846454992
========
new HashMap().put("values.length",new Integer(values.length));
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846454993
GPR[SPVAP]-1659846454993
GPR[EPVAP]-1659846455691
GPR[EPVS]-1659846455691
========
this.columnKeys.add(new HashMap());
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846455692
GPR[SPVAP]-1659846455692
GPR[EPVAP]-1659846456406
GPR[EPVS]-1659846456406
========
if(!Arrays.equals((double[][])this.rows.get(rowIndex)[0],(double[][])that.seriesList.get(rowIndex)[0])){
return false;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846456408
GPR[SPVAP]-1659846456408
GPR[EPVAP]-1659846457126
GPR[EPVS]-1659846457126
========
if(!Arrays.equals((double[][])this.rows.get(rowIndex)[1],(double[][])that.seriesList.get(rowIndex)[1])){
return false;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846457126
GPR[SPVAP]-1659846457126
GPR[EPVAP]-1659846457838
GPR[EPVS]-1659846457838
========
if(!Arrays.equals((double[][])this.rows.get(rowIndex)[0],(double[][])that.seriesList.get(rowIndex)[0])){
return false;
}
if(!Arrays.equals((double[][])this.rows.get(rowIndex)[1],(double[][])that.seriesList.get(rowIndex)[1])){
return false;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846457839
GPR[SPVAP]-1659846457839
GPR[EPVAP]-1659846458560
GPR[EPVS]-1659846458560
========
if(k>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846458561
GPR[SPVAP]-1659846458561
GPR[EPVAP]-1659846459266
GPR[EPVS]-1659846459266
========
columnIndex=lookupSectionOutlineStroke(columnKey,false);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846459268
GPR[SPVAP]-1659846459268
GPR[EPVAP]-1659846459968
GPR[EPVS]-1659846459968
========
if(fieldIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846459971
GPR[SPVAP]-1659846459971
GPR[EPVAP]-1659846460666
GPR[EPVS]-1659846460666
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
if(columnKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846460667
GPR[SPVAP]-1659846460667
GPR[EPVAP]-1659846461946
GPR[SPVATF]-1659846461946
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846463105
GPR[EPVS]-1659846463105
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
if(!this.rows.contains(columnKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846463106
GPR[SPVAP]-1659846463106
GPR[EPVAP]-1659846464368
GPR[SPVATF]-1659846464368
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846465518
GPR[EPVS]-1659846465518
========
this.rows.remove(columnKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846465519
GPR[SPVAP]-1659846465519
GPR[EPVAP]-1659846466842
GPR[SPVATF]-1659846466842
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846468000
GPR[EPVS]-1659846468000
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
if(columnKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
if(!this.rows.contains(columnKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846468002
GPR[SPVAP]-1659846468002
GPR[EPVAP]-1659846469268
GPR[SPVATF]-1659846469268
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846470436
GPR[EPVS]-1659846470436
========
this.rows.remove(columnKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
if(columnKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846470437
GPR[SPVAP]-1659846470437
GPR[EPVAP]-1659846471705
GPR[SPVATF]-1659846471705
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846474886
GPR[EPVS]-1659846474886
========
this.rows.remove(columnKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
if(!this.rows.contains(columnKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846474888
GPR[SPVAP]-1659846474888
GPR[EPVAP]-1659846476175
GPR[SPVATF]-1659846476175
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846477393
GPR[EPVS]-1659846477393
========
this.rows.remove(columnKey);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
if(columnKey==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
if(!this.rows.contains(columnKey)){
throw new UnknownKeyException("Unknown key: "+columnKey);
}
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846477394
GPR[SPVAP]-1659846477394
GPR[EPVAP]-1659846478651
GPR[SPVATF]-1659846478651
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846479820
GPR[EPVS]-1659846479820
========
Collections.sort(this.rows);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846479822
GPR[SPVAP]-1659846479822
GPR[EPVAP]-1659846481085
GPR[SPVATF]-1659846481085
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846482230
GPR[EPVS]-1659846482230
========
repaint();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846482233
GPR[SPVAP]-1659846482233
GPR[EPVAP]-1659846482947
GPR[EPVS]-1659846482947
========
fireOverlayChanged();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846482948
GPR[SPVAP]-1659846482948
GPR[EPVAP]-1659846483648
GPR[EPVS]-1659846483648
========
fireChartChanged();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846483649
GPR[SPVAP]-1659846483649
GPR[EPVAP]-1659846484348
GPR[EPVS]-1659846484348
========
if(subinterval>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846484350
GPR[SPVAP]-1659846484350
GPR[EPVAP]-1659846485046
GPR[EPVS]-1659846485046
========
if(item>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846485048
GPR[SPVAP]-1659846485048
GPR[EPVAP]-1659846485748
GPR[EPVS]-1659846485748
========
if(subplotIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846485750
GPR[SPVAP]-1659846485750
GPR[EPVAP]-1659846486450
GPR[EPVS]-1659846486450
========
if(rowKeys!=null){
columnIndex=tooltips.size();
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846486453
GPR[SPVAP]-1659846486453
GPR[EPVAP]-1659846487154
GPR[EPVS]-1659846487154
========
if(rowKeys!=null){
columnIndex=urls.size();
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846487155
GPR[SPVAP]-1659846487155
GPR[EPVAP]-1659846487850
GPR[EPVS]-1659846487850
========
if((BoxAndWhiskerItem)this.columnKeys.get(rowIndex)!=null){
rows=stats.getOutliers();
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846487851
GPR[SPVAP]-1659846487851
GPR[EPVAP]-1659846488575
GPR[EPVS]-1659846488575
========
if((KeyedObject)this.columnKeys.get(rowIndex)!=null){
object=kobj.getObject();
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846488576
GPR[SPVAP]-1659846488576
GPR[EPVAP]-1659846489275
GPR[EPVS]-1659846489275
========
if((KeyedObject)this.columnKeys.get(rowIndex)!=null){
columnKey=item.getKey();
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846489276
GPR[SPVAP]-1659846489276
GPR[EPVAP]-1659846490001
GPR[EPVS]-1659846490001
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
if(rows.isEmpty()){
return null;
}
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846490003
GPR[SPVAP]-1659846490003
GPR[EPVAP]-1659846490707
GPR[EPVS]-1659846490707
========
if(rowIndex>=columnIndex){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846490709
GPR[SPVAP]-1659846490709
GPR[EPVAP]-1659846491417
GPR[EPVS]-1659846491417
========
if(index>=columnIndex){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846491418
GPR[SPVAP]-1659846491418
GPR[EPVAP]-1659846492117
GPR[EPVS]-1659846492117
========
this.columnKeys=new java.util.ArrayList();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846492119
GPR[SPVAP]-1659846492119
GPR[EPVAP]-1659846493375
GPR[SPVATF]-1659846493375
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846494521
GPR[EPVS]-1659846494521
========
if(this.columnKeys.indexOf(columnKey)<0){
if(this.rowKey.equals(columnKey)){
result=0;
}
}else {
result=result+1;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846494522
GPR[SPVAP]-1659846494522
GPR[EPVAP]-1659846495230
GPR[EPVS]-1659846495230
========
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846495232
GPR[SPVAP]-1659846495232
GPR[EPVAP]-1659846495972
GPR[EPVS]-1659846495972
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
if(rowKey==null){
throw new IllegalArgumentException("Null \'subcategory\' axis.");
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846495974
GPR[SPVAP]-1659846495974
GPR[EPVAP]-1659846497227
GPR[SPVATF]-1659846497227
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846498392
GPR[EPVS]-1659846498392
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
this.columnKeys.add(rowKey);
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846498394
GPR[SPVAP]-1659846498394
GPR[EPVAP]-1659846499663
GPR[SPVATF]-1659846499663
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846500851
GPR[EPVS]-1659846500851
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
if(rowKey==null){
throw new IllegalArgumentException("Null \'subcategory\' axis.");
}
this.columnKeys.add(rowKey);
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846500853
GPR[SPVAP]-1659846500853
GPR[EPVAP]-1659846502104
GPR[SPVATF]-1659846502104
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846503283
GPR[EPVS]-1659846503283
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.setBorder(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846503285
GPR[SPVAP]-1659846503285
GPR[EPVAP]-1659846503982
GPR[EPVS]-1659846503982
========
if(columnKey!=null){
columnKey=group;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846503984
GPR[SPVAP]-1659846503985
GPR[EPVAP]-1659846504686
GPR[EPVS]-1659846504686
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
if((DialLayer)this.rows.get(rowIndex)!=null){
layer.removeChangeListener(this);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846504687
GPR[SPVAP]-1659846504687
GPR[EPVAP]-1659846505385
GPR[EPVS]-1659846505385
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
this.rows.remove(rowIndex);
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846505386
GPR[SPVAP]-1659846505386
GPR[EPVAP]-1659846506703
GPR[SPVATF]-1659846506703
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846507901
GPR[EPVS]-1659846507901
========
this.rows.remove(rowIndex);
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846507902
GPR[SPVAP]-1659846507902
GPR[EPVAP]-1659846509154
GPR[SPVATF]-1659846509154
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846510365
GPR[EPVS]-1659846510365
========
this.rows.remove(rowIndex);
fireChangeEvent();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846510366
GPR[SPVAP]-1659846510366
GPR[EPVAP]-1659846511072
GPR[EPVS]-1659846511072
========
fireChartChanged();
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846511074
GPR[SPVAP]-1659846511074
GPR[EPVAP]-1659846511815
GPR[EPVS]-1659846511815
========
fireDatasetChanged(new PieDatasetChangeInfo(PieDatasetChangeType.ADD,rowIndex,index));
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846511817
GPR[SPVAP]-1659846511817
GPR[EPVAP]-1659846512518
GPR[EPVS]-1659846512518
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
if(rows==null){
throw new IllegalArgumentException("Null \'categories\' argument.");
}
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846512520
GPR[SPVAP]-1659846512520
GPR[EPVAP]-1659846513762
GPR[SPVATF]-1659846513762
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846514940
GPR[EPVS]-1659846514940
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
if(rows==null){
throw new IllegalArgumentException("Null \'categories\' argument.");
}
int columnIndex=this.columnKeys.indexOf(rowKey);

========
GPR[SPVS]-1659846514941
GPR[SPVAP]-1659846514941
GPR[EPVAP]-1659846516199
GPR[SPVATF]-1659846516199
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846517358
GPR[EPVS]-1659846517358
========
if(r>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846517360
GPR[SPVAP]-1659846517360
GPR[EPVAP]-1659846518060
GPR[EPVS]-1659846518060
========
if(c>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846518061
GPR[SPVAP]-1659846518061
GPR[EPVAP]-1659846518757
GPR[EPVS]-1659846518757
========
if(rowIndex>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846518758
GPR[SPVAP]-1659846518758
GPR[EPVAP]-1659846519998
GPR[SPVATF]-1659846519999
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846521147
GPR[EPVS]-1659846521147
========
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=columnIndex){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846521148
GPR[SPVAP]-1659846521148
GPR[EPVAP]-1659846521863
GPR[EPVS]-1659846521863
========
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846521864
GPR[SPVAP]-1659846521864
GPR[EPVAP]-1659846522575
GPR[EPVS]-1659846522575
========
if(r>=columnIndex){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846522576
GPR[SPVAP]-1659846522576
GPR[EPVAP]-1659846523283
GPR[EPVS]-1659846523283
========
if(r>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846523284
GPR[SPVAP]-1659846523284
GPR[EPVAP]-1659846523988
GPR[EPVS]-1659846523988
========
fireDatasetChanged(new DatasetChangeInfo());
if(r>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846523989
GPR[SPVAP]-1659846523989
GPR[EPVAP]-1659846524716
GPR[EPVS]-1659846524716
========
if(c>=columnIndex){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846524717
GPR[SPVAP]-1659846524717
GPR[EPVAP]-1659846525426
GPR[EPVS]-1659846525426
========
if(c>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846525427
GPR[SPVAP]-1659846525427
GPR[EPVAP]-1659846526152
GPR[EPVS]-1659846526152
========
fireDatasetChanged(new DatasetChangeInfo());
if(c>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846526153
GPR[SPVAP]-1659846526153
GPR[EPVAP]-1659846526852
GPR[EPVS]-1659846526852
========
fireDatasetChanged(new DatasetChangeInfo());
if(r>=columnIndex){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846526853
GPR[SPVAP]-1659846526853
GPR[EPVAP]-1659846527596
GPR[EPVS]-1659846527596
========
fireDatasetChanged(new DatasetChangeInfo());
if(r>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846527597
GPR[SPVAP]-1659846527597
GPR[EPVAP]-1659846528328
GPR[EPVS]-1659846528328
========
fireDatasetChanged(new DatasetChangeInfo());
if(c>=columnIndex){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846528329
GPR[SPVAP]-1659846528329
GPR[EPVAP]-1659846529044
GPR[EPVS]-1659846529044
========
fireDatasetChanged(new DatasetChangeInfo());
if(c>=getColumnIndex(columnKey)){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846529045
GPR[SPVAP]-1659846529045
GPR[EPVAP]-1659846529773
GPR[EPVS]-1659846529773
========
fireSeriesChanged();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846529774
GPR[SPVAP]-1659846529774
GPR[EPVAP]-1659846530466
GPR[EPVS]-1659846530466
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
fireDatasetChanged(new DatasetChangeInfo());
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846530470
GPR[SPVAP]-1659846530470
GPR[EPVAP]-1659846531169
GPR[EPVS]-1659846531169
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
boolean columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846531171
GPR[SPVAP]-1659846531171
GPR[EPVAP]-1659846531871
GPR[EPVS]-1659846531871
========
(Block)rowKeys.get(0).setBounds(new Rectangle2D.Double(0.0,0.0,s.width,s.height));
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846531872
GPR[SPVAP]-1659846531872
GPR[EPVAP]-1659846532508
GPR[EPVS]-1659846532508
========
if(getDomainAxis()!=null){
axis.configure();
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846532511
GPR[SPVAP]-1659846532511
GPR[EPVAP]-1659846533211
GPR[EPVS]-1659846533211
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846533212
GPR[SPVAP]-1659846533212
GPR[EPVAP]-1659846534483
GPR[SPVATF]-1659846534483
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846535641
GPR[EPVS]-1659846535641
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" for that time period. Duplicates are not ");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846535642
GPR[SPVAP]-1659846535642
GPR[EPVAP]-1659846536964
GPR[SPVATF]-1659846536964
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846538115
GPR[EPVS]-1659846538115
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846538116
GPR[SPVAP]-1659846538116
GPR[EPVAP]-1659846539406
GPR[SPVATF]-1659846539406
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846540571
GPR[EPVS]-1659846540571
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846540572
GPR[SPVAP]-1659846540572
GPR[EPVAP]-1659846541880
GPR[SPVATF]-1659846541880
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846543040
GPR[EPVS]-1659846543040
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846543042
GPR[SPVAP]-1659846543042
GPR[EPVAP]-1659846543786
GPR[EPVS]-1659846543786
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" for that time period. Duplicates are not ");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846543787
GPR[SPVAP]-1659846543787
GPR[EPVAP]-1659846546212
GPR[EPVS]-1659846546212
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846546223
GPR[SPVAP]-1659846546223
GPR[EPVAP]-1659846547079
GPR[EPVS]-1659846547079
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846547080
GPR[SPVAP]-1659846547080
GPR[EPVAP]-1659846547787
GPR[EPVS]-1659846547787
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846547788
GPR[SPVAP]-1659846547788
GPR[EPVAP]-1659846549052
GPR[SPVATF]-1659846549052
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846550225
GPR[EPVS]-1659846550225
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846550226
GPR[SPVAP]-1659846550226
GPR[EPVAP]-1659846551509
GPR[SPVATF]-1659846551509
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846552660
GPR[EPVS]-1659846552660
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846552661
GPR[SPVAP]-1659846552661
GPR[EPVAP]-1659846553920
GPR[SPVATF]-1659846553920
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846555109
GPR[EPVS]-1659846555109
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846555110
GPR[SPVAP]-1659846555110
GPR[EPVAP]-1659846556366
GPR[SPVATF]-1659846556366
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846557552
GPR[EPVS]-1659846557552
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846557554
GPR[SPVAP]-1659846557554
GPR[EPVAP]-1659846558795
GPR[SPVATF]-1659846558795
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846560021
GPR[EPVS]-1659846560021
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846560022
GPR[SPVAP]-1659846560022
GPR[EPVAP]-1659846561342
GPR[SPVATF]-1659846561342
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846562518
GPR[EPVS]-1659846562518
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846562519
GPR[SPVAP]-1659846562519
GPR[EPVAP]-1659846563227
GPR[EPVS]-1659846563227
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846563229
GPR[SPVAP]-1659846563229
GPR[EPVAP]-1659846563937
GPR[EPVS]-1659846563937
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846563938
GPR[SPVAP]-1659846563938
GPR[EPVAP]-1659846564643
GPR[EPVS]-1659846564643
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846564645
GPR[SPVAP]-1659846564645
GPR[EPVAP]-1659846565353
GPR[EPVS]-1659846565353
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846565354
GPR[SPVAP]-1659846565354
GPR[EPVAP]-1659846566056
GPR[EPVS]-1659846566056
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846566058
GPR[SPVAP]-1659846566058
GPR[EPVAP]-1659846566763
GPR[EPVS]-1659846566763
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846566764
GPR[SPVAP]-1659846566764
GPR[EPVAP]-1659846568030
GPR[SPVATF]-1659846568030
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846569251
GPR[EPVS]-1659846569251
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846569253
GPR[SPVAP]-1659846569253
GPR[EPVAP]-1659846570598
GPR[SPVATF]-1659846570598
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846571748
GPR[EPVS]-1659846571748
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846571749
GPR[SPVAP]-1659846571749
GPR[EPVAP]-1659846573002
GPR[SPVATF]-1659846573002
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846574184
GPR[EPVS]-1659846574184
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846574185
GPR[SPVAP]-1659846574185
GPR[EPVAP]-1659846575444
GPR[SPVATF]-1659846575444
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846576601
GPR[EPVS]-1659846576601
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846576602
GPR[SPVAP]-1659846576602
GPR[EPVAP]-1659846577350
GPR[EPVS]-1659846577350
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846577351
GPR[SPVAP]-1659846577351
GPR[EPVAP]-1659846578067
GPR[EPVS]-1659846578067
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846578068
GPR[SPVAP]-1659846578068
GPR[EPVAP]-1659846578770
GPR[EPVS]-1659846578770
========
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846578772
GPR[SPVAP]-1659846578772
GPR[EPVAP]-1659846579515
GPR[EPVS]-1659846579515
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");
new StringBuffer().append(" but the series already contains an observation");
new StringBuffer().append(" for that time period. Duplicates are not ");
new StringBuffer().append("permitted.  Try using the addOrUpdate() method.");

this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846579516
GPR[SPVAP]-1659846579516
GPR[EPVAP]-1659846580753
GPR[SPVATF]-1659846580753
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846581928
GPR[EPVS]-1659846581928
========
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846581930
GPR[SPVAP]-1659846581930
GPR[EPVAP]-1659846582646
GPR[EPVS]-1659846582646
========
if(weight>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846582647
GPR[SPVAP]-1659846582647
GPR[EPVAP]-1659846583357
GPR[EPVS]-1659846583357
========
configureRangeAxes();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846583358
GPR[SPVAP]-1659846583358
GPR[EPVAP]-1659846584064
GPR[EPVS]-1659846584064
========
if(index>0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846584067
GPR[SPVAP]-1659846584067
GPR[EPVAP]-1659846584780
GPR[EPVS]-1659846584780
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
columnIndex=(XYDataItem)(XYDataItem)this.columnKeys.get(rowIndex).clone();
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846584782
GPR[SPVAP]-1659846584782
GPR[EPVAP]-1659846585480
GPR[EPVS]-1659846585480
========
configureDomainAxes();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846585483
GPR[SPVAP]-1659846585483
GPR[EPVAP]-1659846586200
GPR[EPVS]-1659846586200
========
if(getDomainAxis()!=null){
axis.configure();
}
fireChangeEvent();
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846586203
GPR[SPVAP]-1659846586203
GPR[EPVAP]-1659846586902
GPR[EPVS]-1659846586902
========
if(getRangeAxis()!=null){
axis.configure();
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846586903
GPR[SPVAP]-1659846586903
GPR[EPVAP]-1659846587599
GPR[EPVS]-1659846587599
========
if(rangeIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846587600
GPR[SPVAP]-1659846587600
GPR[EPVAP]-1659846588301
GPR[EPVS]-1659846588301
========
if(lineIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846588302
GPR[SPVAP]-1659846588302
GPR[EPVAP]-1659846589016
GPR[EPVS]-1659846589016
========
this.rows.remove(rowIndex);
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846589017
GPR[SPVAP]-1659846589017
GPR[EPVAP]-1659846589740
GPR[EPVS]-1659846589740
========
fireDatasetChanged(new DatasetChangeInfo());
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846589741
GPR[SPVAP]-1659846589741
GPR[EPVAP]-1659846590448
GPR[EPVS]-1659846590448
========
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846590449
GPR[SPVAP]-1659846590449
GPR[EPVAP]-1659846591156
GPR[EPVS]-1659846591156
========
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(series>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846591157
GPR[SPVAP]-1659846591157
GPR[EPVAP]-1659846591862
GPR[EPVS]-1659846591862
========
this.rows.remove(rowIndex);
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846591863
GPR[SPVAP]-1659846591863
GPR[EPVAP]-1659846592576
GPR[EPVS]-1659846592576
========
fireDatasetChanged(new DatasetChangeInfo());
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846592577
GPR[SPVAP]-1659846592577
GPR[EPVAP]-1659846593274
GPR[EPVS]-1659846593274
========
this.rows.remove(rowIndex);
fireDatasetChanged(new DatasetChangeInfo());
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846593274
GPR[SPVAP]-1659846593274
GPR[EPVAP]-1659846593987
GPR[EPVS]-1659846593987
========
if(columnIndex<0){
return null;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846593988
GPR[SPVAP]-1659846593988
GPR[EPVAP]-1659846594717
GPR[EPVS]-1659846594717
========
if(columnIndex<0){
return ;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846594718
GPR[SPVAP]-1659846594718
GPR[EPVAP]-1659846595418
GPR[EPVS]-1659846595418
========
if(columnIndex<0){
this.columnKeys.add(columnKey);
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(rowKey);

========
GPR[SPVS]-1659846595422
GPR[SPVAP]-1659846595422
GPR[EPVAP]-1659846596157
GPR[EPVS]-1659846596157
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
if(object==null){
val=RenderingHints.VALUE_ANTIALIAS_DEFAULT;
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846596159
GPR[SPVAP]-1659846596159
GPR[EPVAP]-1659846596875
GPR[EPVS]-1659846596875
========
if(seriesIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
fireDatasetChanged(new DatasetChangeInfo());
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846596879
GPR[SPVAP]-1659846596879
GPR[EPVAP]-1659846597579
GPR[EPVS]-1659846597579
========
if(columnIndex<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
if(row.getIndex(columnKey)>=0){
return row.getObject(index);
}else {
return null;
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846597581
GPR[SPVAP]-1659846597581
GPR[EPVAP]-1659846598290
GPR[EPVS]-1659846598290
========
if(rowKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846598291
GPR[SPVAP]-1659846598291
GPR[EPVAP]-1659846599538
GPR[SPVATF]-1659846599538
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846600717
GPR[EPVS]-1659846600717
========
if(rowKey==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
if(index>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);

========
GPR[SPVS]-1659846600718
GPR[SPVAP]-1659846600718
GPR[EPVAP]-1659846601415
GPR[EPVS]-1659846601415
GPR[ESUN]-1659846601417
GPR[SSUN]-1659846601417
org.jfree.data.KeyedObjects2D,287
========
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846604613
GPR[SPVAP]-1659846604613
GPR[EPVAP]-1659846609248
GPR[SPVATF]-1659846609248
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846610412
GPR[EPVS]-1659846610412
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(seriesIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846610414
GPR[SPVAP]-1659846610414
GPR[EPVAP]-1659846611124
GPR[EPVS]-1659846611124
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(column<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846611125
GPR[SPVAP]-1659846611125
GPR[EPVAP]-1659846611875
GPR[EPVS]-1659846611875
========
row.setObject(columnKey,object);
if(row<0){
throw new UnknownKeyException("Row key ("+rowKey);
}
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846611876
GPR[SPVAP]-1659846611876
GPR[EPVAP]-1659846612574
GPR[EPVS]-1659846612574
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(baseIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846612575
GPR[SPVAP]-1659846612575
GPR[EPVAP]-1659846613271
GPR[EPVS]-1659846613271
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
baseIndex=0;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846613272
GPR[SPVAP]-1659846613272
GPR[EPVAP]-1659846613980
GPR[EPVS]-1659846613980
========
row.setObject(object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846613982
GPR[SPVAP]-1659846613982
GPR[EPVAP]-1659846614708
GPR[EPVS]-1659846614708
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(index<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846614709
GPR[SPVAP]-1659846614709
GPR[EPVAP]-1659846615423
GPR[EPVS]-1659846615423
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<=0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846615425
GPR[SPVAP]-1659846615425
GPR[EPVAP]-1659846618778
GPR[SPVATF]-1659846618778
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846619924
GPR[EPVS]-1659846619924
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(position<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846619925
GPR[SPVAP]-1659846619925
GPR[EPVAP]-1659846620644
GPR[EPVS]-1659846620644
========
this.columnKeys.remove(columnKey);
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846620646
GPR[SPVAP]-1659846620646
GPR[EPVAP]-1659846621895
GPR[SPVATF]-1659846621895
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846623072
GPR[EPVS]-1659846623072
========
rowData.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846623073
GPR[SPVAP]-1659846623073
GPR[EPVAP]-1659846623775
GPR[EPVS]-1659846623775
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(keyIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846623777
GPR[SPVAP]-1659846623777
GPR[EPVAP]-1659846624492
GPR[EPVS]-1659846624492
========
row.setObject(columnKey,object);
double columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846624493
GPR[SPVAP]-1659846624493
GPR[EPVAP]-1659846625789
GPR[SPVATF]-1659846625789
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846626959
GPR[EPVS]-1659846626959
========
Collections.sort(rows);
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846626960
GPR[SPVAP]-1659846626960
GPR[EPVAP]-1659846628243
GPR[SPVATF]-1659846628243
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846629448
GPR[EPVS]-1659846629448
========
Collections.sort(rows);
row.setObject(columnKey,object);
double columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846629450
GPR[SPVAP]-1659846629450
GPR[EPVAP]-1659846630718
GPR[SPVATF]-1659846630718
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846631933
GPR[EPVS]-1659846631933
========
row.setObject(columnKey,object);
boolean columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846631936
GPR[SPVAP]-1659846631936
GPR[EPVAP]-1659846632659
GPR[EPVS]-1659846632659
========
row.setObject(columnKey,object);
columnKeys.add(this.rowKey);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846632661
GPR[SPVAP]-1659846632661
GPR[EPVAP]-1659846633369
GPR[EPVS]-1659846633369
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(newline<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846633370
GPR[SPVAP]-1659846633370
GPR[EPVAP]-1659846634080
GPR[EPVS]-1659846634080
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(result<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846634081
GPR[SPVAP]-1659846634081
GPR[EPVAP]-1659846634777
GPR[EPVS]-1659846634777
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(i<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846634786
GPR[SPVAP]-1659846634786
GPR[EPVAP]-1659846635490
GPR[EPVS]-1659846635490
========
row.setObject(columnKey,object);
if(columnKeys==null){
throw new IllegalArgumentException("Null \'categories\' argument.");
}
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846635491
GPR[SPVAP]-1659846635491
GPR[EPVAP]-1659846636744
GPR[SPVATF]-1659846636744
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846637952
GPR[EPVS]-1659846637952
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(c<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846637953
GPR[SPVAP]-1659846637953
GPR[EPVAP]-1659846638669
GPR[EPVS]-1659846638669
========
fireDatasetChanged(new PieDatasetChangeInfo(PieDatasetChangeType.ADD,columnIndex,index));
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846638671
GPR[SPVAP]-1659846638671
GPR[EPVAP]-1659846639372
GPR[EPVS]-1659846639372
========
this.columnKeys=new java.util.ArrayList();
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846639373
GPR[SPVAP]-1659846639374
GPR[EPVAP]-1659846640614
GPR[SPVATF]-1659846640614
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846641800
GPR[EPVS]-1659846641800
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(zoomInIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846641801
GPR[SPVAP]-1659846641801
GPR[EPVAP]-1659846642547
GPR[EPVS]-1659846642547
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(r<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846642548
GPR[SPVAP]-1659846642548
GPR[EPVAP]-1659846643257
GPR[EPVS]-1659846643257
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846643258
GPR[SPVAP]-1659846643258
GPR[EPVAP]-1659846644512
GPR[SPVATF]-1659846644512
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846645652
GPR[EPVS]-1659846645652
========
fireDatasetChanged(new DatasetChangeInfo());
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846645653
GPR[SPVAP]-1659846645653
GPR[EPVAP]-1659846646398
GPR[EPVS]-1659846646398
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(c<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846646399
GPR[SPVAP]-1659846646399
GPR[EPVAP]-1659846647100
GPR[EPVS]-1659846647100
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(r<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846647101
GPR[SPVAP]-1659846647101
GPR[EPVAP]-1659846647829
GPR[EPVS]-1659846647829
========
fireDatasetChanged(new DatasetChangeInfo());
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(r<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846647830
GPR[SPVAP]-1659846647830
GPR[EPVAP]-1659846648543
GPR[EPVS]-1659846648543
========
fireDatasetChanged(new DatasetChangeInfo());
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(c<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846648544
GPR[SPVAP]-1659846648544
GPR[EPVAP]-1659846649264
GPR[EPVS]-1659846649264
========
fireDatasetChanged(new DatasetChangeInfo());
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846649273
GPR[SPVAP]-1659846649273
GPR[EPVAP]-1659846649979
GPR[EPVS]-1659846649979
========
fireDatasetChanged(new DatasetChangeInfo());
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(r<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846649981
GPR[SPVAP]-1659846649981
GPR[EPVAP]-1659846650682
GPR[EPVS]-1659846650682
========
fireDatasetChanged(new DatasetChangeInfo());
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(c<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846650683
GPR[SPVAP]-1659846650683
GPR[EPVAP]-1659846651391
GPR[EPVS]-1659846651391
========
Collections.sort(this.columnKeys);
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846651395
GPR[SPVAP]-1659846651395
GPR[EPVAP]-1659846652669
GPR[SPVATF]-1659846652669
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846653826
GPR[EPVS]-1659846653826
========
fireChangeEvent();
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846653827
GPR[SPVAP]-1659846653827
GPR[EPVAP]-1659846654536
GPR[EPVS]-1659846654536
========
fireOverlayChanged();
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846654537
GPR[SPVAP]-1659846654537
GPR[EPVAP]-1659846655261
GPR[EPVS]-1659846655261
========
fireChartChanged();
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846655263
GPR[SPVAP]-1659846655263
GPR[EPVAP]-1659846655997
GPR[EPVS]-1659846655997
========
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(rangeIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846656000
GPR[SPVAP]-1659846656000
GPR[EPVAP]-1659846656712
GPR[EPVS]-1659846656712
========
if(rowIndex<0||index>getSubtitleCount()){
throw new IllegalArgumentException("The \'index\' argument is out of range.");
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846656732
GPR[SPVAP]-1659846656732
GPR[EPVAP]-1659846657438
GPR[EPVS]-1659846657438
========
if(columnKey==null){
throw new IllegalArgumentException("Null \'subcategory\' axis.");
}
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846657440
GPR[SPVAP]-1659846657440
GPR[EPVAP]-1659846658711
GPR[SPVATF]-1659846658711
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846659871
GPR[EPVS]-1659846659871
========
this.columnKeys.add(columnKey);
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846659872
GPR[SPVAP]-1659846659872
GPR[EPVAP]-1659846661151
GPR[SPVATF]-1659846661151
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846662361
GPR[EPVS]-1659846662361
========
if(columnKey==null){
throw new IllegalArgumentException("Null \'subcategory\' axis.");
}
this.columnKeys.add(columnKey);
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846662362
GPR[SPVAP]-1659846662362
GPR[EPVAP]-1659846663635
GPR[SPVATF]-1659846663635
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846664788
GPR[EPVS]-1659846664788
========
fireSeriesChanged();
row.setObject(columnKey,object);
int columnIndex=this.columnKeys.indexOf(columnKey);
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846664789
GPR[SPVAP]-1659846664789
GPR[EPVAP]-1659846665500
GPR[EPVS]-1659846665500
GPR[ESUN]-1659846665503
GPR[SSUN]-1659846665503
org.jfree.data.KeyedObjects2D,288
========
if(seriesIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846668364
GPR[SPVAP]-1659846668364
GPR[EPVAP]-1659846670780
GPR[EPVS]-1659846670780
========
if(index<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846670781
GPR[SPVAP]-1659846670781
GPR[EPVAP]-1659846671885
GPR[EPVS]-1659846671885
========
if(columnIndex<=0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846671887
GPR[SPVAP]-1659846671887
GPR[EPVAP]-1659846675377
GPR[SPVATF]-1659846675377
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846676544
GPR[EPVS]-1659846676544
========
if(position<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846676545
GPR[SPVAP]-1659846676545
GPR[EPVAP]-1659846677252
GPR[EPVS]-1659846677252
========
if(value<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846677253
GPR[SPVAP]-1659846677253
GPR[EPVAP]-1659846677971
GPR[EPVS]-1659846677971
========
if(total<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846677972
GPR[SPVAP]-1659846677972
GPR[EPVAP]-1659846678684
GPR[EPVS]-1659846678684
========
if(i<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846678685
GPR[SPVAP]-1659846678685
GPR[EPVAP]-1659846679426
GPR[EPVS]-1659846679426
========
if(columnIndex<rowIndex){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846679427
GPR[SPVAP]-1659846679427
GPR[EPVAP]-1659846680739
GPR[SPVATF]-1659846680739
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846681897
GPR[EPVS]-1659846681897
========
if(maxOutlier<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846681898
GPR[SPVAP]-1659846681898
GPR[EPVAP]-1659846682612
GPR[EPVS]-1659846682612
========
if(minOutlier<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846682613
GPR[SPVAP]-1659846682613
GPR[EPVAP]-1659846683339
GPR[EPVS]-1659846683339
========
if(baseIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846683341
GPR[SPVAP]-1659846683341
GPR[EPVAP]-1659846684060
GPR[EPVS]-1659846684060
========
if(columnIndex<0){
baseIndex=0;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846684061
GPR[SPVAP]-1659846684061
GPR[EPVAP]-1659846684778
GPR[EPVS]-1659846684778
========
if(currentTickValue<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846684780
GPR[SPVAP]-1659846684780
GPR[EPVAP]-1659846685492
GPR[EPVS]-1659846685492
========
if(columnIndex<0){
continue;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846685493
GPR[SPVAP]-1659846685493
GPR[EPVAP]-1659846686220
GPR[EPVS]-1659846686220
========
if(value<0){
continue;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846686221
GPR[SPVAP]-1659846686221
GPR[EPVAP]-1659846686940
GPR[EPVS]-1659846686940
========
if(pos<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846686941
GPR[SPVAP]-1659846686941
GPR[EPVAP]-1659846687648
GPR[EPVS]-1659846687648
========
if(rowIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846687649
GPR[SPVAP]-1659846687649
GPR[EPVAP]-1659846688914
GPR[SPVATF]-1659846688914
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846690068
GPR[EPVS]-1659846690068
========
if(columnIndex<0){
row=new KeyedObjects();
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846690069
GPR[SPVAP]-1659846690069
GPR[EPVAP]-1659846693258
GPR[SPVATF]-1659846693258
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846694464
GPR[EPVS]-1659846694464
========
if(columnIndex<0){
this.rows.add(row);
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846694465
GPR[SPVAP]-1659846694465
GPR[EPVAP]-1659846695728
GPR[SPVATF]-1659846695728
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846696924
GPR[EPVS]-1659846696924
========
if(columnIndex<0){
row=new KeyedObjects();
this.rows.add(row);

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846696925
GPR[SPVAP]-1659846696925
GPR[EPVAP]-1659846698188
GPR[SPVATF]-1659846698188
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846699387
GPR[EPVS]-1659846699387
========
if(rowIndex<0){
row=new KeyedObjects();
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846699388
GPR[SPVAP]-1659846699388
GPR[EPVAP]-1659846700680
GPR[SPVATF]-1659846700680
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846701858
GPR[EPVS]-1659846701858
========
if(rowIndex<0){
this.rows.add(row);
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846701859
GPR[SPVAP]-1659846701859
GPR[EPVAP]-1659846703104
GPR[SPVATF]-1659846703104
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846704283
GPR[EPVS]-1659846704283
========
if(rowIndex<0){
row=new KeyedObjects();
this.rows.add(row);

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846704284
GPR[SPVAP]-1659846704284
GPR[EPVAP]-1659846705546
GPR[SPVATF]-1659846705546
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846706695
GPR[EPVS]-1659846706695
========
if(columnIndex<0){
row=new KeyedObjects();
this.rows.add(row);
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846706696
GPR[SPVAP]-1659846706696
GPR[EPVAP]-1659846707936
GPR[SPVATF]-1659846707936
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846709115
GPR[EPVS]-1659846709115
========
if(columnIndex<0){
row=new KeyedObjects();
row=new KeyedObjects();
this.rows.add(row);

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846709116
GPR[SPVAP]-1659846709116
GPR[EPVAP]-1659846710376
GPR[SPVATF]-1659846710376
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846711572
GPR[EPVS]-1659846711572
========
if(columnIndex<0){
this.rows.add(row);
row=new KeyedObjects();
this.rows.add(row);

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846711573
GPR[SPVAP]-1659846711573
GPR[EPVAP]-1659846712848
GPR[SPVATF]-1659846712848
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846714044
GPR[EPVS]-1659846714044
========
if(rowIndex<0){
row=new KeyedObjects();
this.rows.add(row);
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846714045
GPR[SPVAP]-1659846714045
GPR[EPVAP]-1659846715296
GPR[SPVATF]-1659846715296
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846716454
GPR[EPVS]-1659846716454
========
if(rowIndex<0){
row=new KeyedObjects();
row=new KeyedObjects();
this.rows.add(row);

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846716455
GPR[SPVAP]-1659846716455
GPR[EPVAP]-1659846717747
GPR[SPVATF]-1659846717747
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846718898
GPR[EPVS]-1659846718898
========
if(rowIndex<0){
this.rows.add(row);
row=new KeyedObjects();
this.rows.add(row);

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846718899
GPR[SPVAP]-1659846718899
GPR[EPVAP]-1659846720162
GPR[SPVATF]-1659846720162
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846721346
GPR[EPVS]-1659846721346
========
if(columnIndex<0){
row=new KeyedObjects();
this.rows.add(row);
row=new KeyedObjects();
this.rows.add(row);

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846721348
GPR[SPVAP]-1659846721348
GPR[EPVAP]-1659846722613
GPR[SPVATF]-1659846722613
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846723783
GPR[EPVS]-1659846723783
========
if(rowIndex<0){
row=new KeyedObjects();
this.rows.add(row);
row=new KeyedObjects();
this.rows.add(row);

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846723783
GPR[SPVAP]-1659846723784
GPR[EPVAP]-1659846725041
GPR[SPVATF]-1659846725041
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846726251
GPR[EPVS]-1659846726251
========
if(fieldIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846726254
GPR[SPVAP]-1659846726254
GPR[EPVAP]-1659846726960
GPR[EPVS]-1659846726960
========
if(zoomInIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846726961
GPR[SPVAP]-1659846726961
GPR[EPVAP]-1659846727664
GPR[EPVS]-1659846727664
========
if(columnIndex<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846727665
GPR[SPVAP]-1659846727666
GPR[EPVAP]-1659846728915
GPR[SPVATF]-1659846728915
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846730081
GPR[EPVS]-1659846730081
========
if(columnIndex<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
if(rowIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846730082
GPR[SPVAP]-1659846730082
GPR[EPVAP]-1659846731330
GPR[SPVATF]-1659846731330
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846732461
GPR[EPVS]-1659846732461
========
if(keyIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846732463
GPR[SPVAP]-1659846732463
GPR[EPVAP]-1659846733180
GPR[EPVS]-1659846733180
========
if(columnIndex<0){
this.columnKeys.add(new KeyedObject(columnKey,object));
}

========
GPR[SPVS]-1659846733181
GPR[SPVAP]-1659846733181
GPR[EPVAP]-1659846734434
GPR[SPVATF]-1659846734434
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846735604
GPR[EPVS]-1659846735604
========
if(row<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846735606
GPR[SPVAP]-1659846735606
GPR[EPVAP]-1659846736308
GPR[EPVS]-1659846736308
========
if(this.columnKeys.indexOf(columnKey)<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846736309
GPR[SPVAP]-1659846736309
GPR[EPVAP]-1659846737575
GPR[SPVATF]-1659846737575
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846738725
GPR[EPVS]-1659846738725
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846738727
GPR[SPVAP]-1659846738727
GPR[EPVAP]-1659846739432
GPR[EPVS]-1659846739432
========
if(columnIndex<0){
this.internalMarkerWhenTicksOverlap=true;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846739433
GPR[SPVAP]-1659846739433
GPR[EPVAP]-1659846740141
GPR[EPVS]-1659846740141
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846740142
GPR[SPVAP]-1659846740142
GPR[EPVAP]-1659846740926
GPR[EPVS]-1659846740926
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846740927
GPR[SPVAP]-1659846740927
GPR[EPVAP]-1659846741649
GPR[EPVS]-1659846741649
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846741650
GPR[SPVAP]-1659846741651
GPR[EPVAP]-1659846742372
GPR[EPVS]-1659846742372
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846742373
GPR[SPVAP]-1659846742373
GPR[EPVAP]-1659846743081
GPR[EPVS]-1659846743081
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846743083
GPR[SPVAP]-1659846743083
GPR[EPVAP]-1659846743807
GPR[EPVS]-1659846743807
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.TOP_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846743808
GPR[SPVAP]-1659846743808
GPR[EPVAP]-1659846744535
GPR[EPVS]-1659846744535
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.TOP_LEFT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846744536
GPR[SPVAP]-1659846744536
GPR[EPVAP]-1659846745240
GPR[EPVS]-1659846745240
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.TOP_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846745241
GPR[SPVAP]-1659846745241
GPR[EPVAP]-1659846745967
GPR[EPVS]-1659846745967
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846745969
GPR[SPVAP]-1659846745969
GPR[EPVAP]-1659846746671
GPR[EPVS]-1659846746671
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846746672
GPR[SPVAP]-1659846746672
GPR[EPVAP]-1659846747392
GPR[EPVS]-1659846747392
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846747393
GPR[SPVAP]-1659846747393
GPR[EPVAP]-1659846748144
GPR[EPVS]-1659846748144
========
if(columnIndex<0){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846748145
GPR[SPVAP]-1659846748145
GPR[EPVAP]-1659846748853
GPR[EPVS]-1659846748853
========
if(columnIndex<0){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846748854
GPR[SPVAP]-1659846748854
GPR[EPVAP]-1659846749583
GPR[EPVS]-1659846749583
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846749585
GPR[SPVAP]-1659846749585
GPR[EPVAP]-1659846750292
GPR[EPVS]-1659846750292
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846750293
GPR[SPVAP]-1659846750293
GPR[EPVAP]-1659846751020
GPR[EPVS]-1659846751020
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846751021
GPR[SPVAP]-1659846751021
GPR[EPVAP]-1659846751744
GPR[EPVS]-1659846751744
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846751745
GPR[SPVAP]-1659846751745
GPR[EPVAP]-1659846752472
GPR[EPVS]-1659846752472
========
if(columnIndex<0){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846752473
GPR[SPVAP]-1659846752473
GPR[EPVAP]-1659846753206
GPR[EPVS]-1659846753206
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846753207
GPR[SPVAP]-1659846753207
GPR[EPVAP]-1659846753914
GPR[EPVS]-1659846753914
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846753915
GPR[SPVAP]-1659846753915
GPR[EPVAP]-1659846754640
GPR[EPVS]-1659846754640
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.internalMarkerWhenTicksOverlap=true;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846754641
GPR[SPVAP]-1659846754641
GPR[EPVAP]-1659846755346
GPR[EPVS]-1659846755346
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846755347
GPR[SPVAP]-1659846755347
GPR[EPVAP]-1659846756110
GPR[EPVS]-1659846756110
========
if(columnIndex<0){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846756111
GPR[SPVAP]-1659846756111
GPR[EPVAP]-1659846756825
GPR[EPVS]-1659846756825
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846756826
GPR[SPVAP]-1659846756826
GPR[EPVAP]-1659846757549
GPR[EPVS]-1659846757549
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846757550
GPR[SPVAP]-1659846757550
GPR[EPVAP]-1659846758270
GPR[EPVS]-1659846758270
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846758271
GPR[SPVAP]-1659846758271
GPR[EPVAP]-1659846758972
GPR[EPVS]-1659846758972
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846758973
GPR[SPVAP]-1659846758973
GPR[EPVAP]-1659846759697
GPR[EPVS]-1659846759697
========
if(columnIndex<0){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846759698
GPR[SPVAP]-1659846759698
GPR[EPVAP]-1659846760403
GPR[EPVS]-1659846760403
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846760405
GPR[SPVAP]-1659846760405
GPR[EPVAP]-1659846761120
GPR[EPVS]-1659846761120
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.TOP_LEFT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846761122
GPR[SPVAP]-1659846761122
GPR[EPVAP]-1659846761823
GPR[EPVS]-1659846761823
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.BOTTOM_LEFT;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846761825
GPR[SPVAP]-1659846761825
GPR[EPVAP]-1659846762559
GPR[EPVS]-1659846762559
========
if(columnIndex<0){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.TOP_LEFT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.BOTTOM_LEFT;

this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846762560
GPR[SPVAP]-1659846762560
GPR[EPVAP]-1659846763883
GPR[EPVS]-1659846763883
========
if(lineIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846763893
GPR[SPVAP]-1659846763893
GPR[EPVAP]-1659846765547
GPR[EPVS]-1659846765547
========
if(r<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846765550
GPR[SPVAP]-1659846765550
GPR[EPVAP]-1659846766278
GPR[EPVS]-1659846766278
========
if(c<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846766279
GPR[SPVAP]-1659846766279
GPR[EPVAP]-1659846766981
GPR[EPVS]-1659846766981
========
if(columnIndex<getRowIndex(rowKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846766982
GPR[SPVAP]-1659846766982
GPR[EPVAP]-1659846768244
GPR[SPVATF]-1659846768244
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846769438
GPR[EPVS]-1659846769438
========
if(columnIndex<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846769439
GPR[SPVAP]-1659846769439
GPR[EPVAP]-1659846770695
GPR[SPVATF]-1659846770695
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846771849
GPR[EPVS]-1659846771849
========
fireDatasetChanged(new DatasetChangeInfo());
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846771851
GPR[SPVAP]-1659846771851
GPR[EPVAP]-1659846772555
GPR[EPVS]-1659846772555
========
if(r<getRowIndex(rowKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846772556
GPR[SPVAP]-1659846772556
GPR[EPVAP]-1659846773273
GPR[EPVS]-1659846773273
========
if(r<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846773274
GPR[SPVAP]-1659846773274
GPR[EPVAP]-1659846773978
GPR[EPVS]-1659846773978
========
fireDatasetChanged(new DatasetChangeInfo());
if(r<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846773979
GPR[SPVAP]-1659846773979
GPR[EPVAP]-1659846774680
GPR[EPVS]-1659846774680
========
if(c<getRowIndex(rowKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846774681
GPR[SPVAP]-1659846774682
GPR[EPVAP]-1659846775383
GPR[EPVS]-1659846775383
========
if(c<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846775385
GPR[SPVAP]-1659846775385
GPR[EPVAP]-1659846776099
GPR[EPVS]-1659846776099
========
fireDatasetChanged(new DatasetChangeInfo());
if(c<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846776100
GPR[SPVAP]-1659846776100
GPR[EPVAP]-1659846776807
GPR[EPVS]-1659846776807
========
fireDatasetChanged(new DatasetChangeInfo());
if(columnIndex<getRowIndex(rowKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846776808
GPR[SPVAP]-1659846776808
GPR[EPVAP]-1659846777527
GPR[EPVS]-1659846777527
========
fireDatasetChanged(new DatasetChangeInfo());
if(columnIndex<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846777528
GPR[SPVAP]-1659846777528
GPR[EPVAP]-1659846778240
GPR[EPVS]-1659846778240
========
fireDatasetChanged(new DatasetChangeInfo());
if(r<getRowIndex(rowKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846778241
GPR[SPVAP]-1659846778241
GPR[EPVAP]-1659846778944
GPR[EPVS]-1659846778944
========
fireDatasetChanged(new DatasetChangeInfo());
if(r<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846778945
GPR[SPVAP]-1659846778945
GPR[EPVAP]-1659846779656
GPR[EPVS]-1659846779656
========
fireDatasetChanged(new DatasetChangeInfo());
if(c<getRowIndex(rowKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846779657
GPR[SPVAP]-1659846779657
GPR[EPVAP]-1659846780356
GPR[EPVS]-1659846780356
========
fireDatasetChanged(new DatasetChangeInfo());
if(c<getColumnIndex(columnKey)){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846780357
GPR[SPVAP]-1659846780357
GPR[EPVAP]-1659846781077
GPR[EPVS]-1659846781077
========
if(subinterval<0){
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846781078
GPR[SPVAP]-1659846781078
GPR[EPVAP]-1659846781791
GPR[EPVS]-1659846781791
========
if(baseIndex<0){
baseIndex=0;
this.columnKeys.add(columnKey);
}

========
GPR[SPVS]-1659846781793
GPR[SPVAP]-1659846781793
GPR[EPVAP]-1659846782489
GPR[EPVS]-1659846782489
GPR[ESUN]-1659846782490
GPR[SSUN]-1659846782490
org.jfree.data.KeyedObjects2D,289
GPR[ESUN]-1659846783005
GPR[SSUN]-1659846783005
org.jfree.data.KeyedObjects2D,292
Find no block!
GPR[SSUN]-1659846783357
org.jfree.data.KeyedObjects2D,73
Find no block!
GPR[SSUN]-1659846783695
org.jfree.data.KeyedObjects2D,74
GPR[ESUN]-1659846785706
GPR[SSUN]-1659846785706
org.jfree.data.KeyedObjects2D,75
GPR[ESUN]-1659846786037
GPR[SSUN]-1659846786037
org.jfree.data.KeyedObjects2D,76
GPR[ESUN]-1659846786327
GPR[SSUN]-1659846786327
org.jfree.data.KeyedObjects2D,77
Find no block!
GPR[SSUN]-1659846786621
org.jfree.chart.util.SortOrder,74
Find no block!
GPR[SSUN]-1659846786913
org.jfree.chart.util.SortOrder,75
========
if(name==null){
throw new IllegalArgumentException("Null \'name\' argument.");
}
this.name=name;

========
GPR[SPVS]-1659846788852
GPR[SPVAP]-1659846788852
GPR[EPVAP]-1659846793387
GPR[SPVATF]-1659846793387
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846794566
GPR[EPVS]-1659846794566
========
this.name=licenceText;

========
GPR[SPVS]-1659846794567
GPR[SPVAP]-1659846794567
GPR[EPVAP]-1659846795263
GPR[EPVS]-1659846795263
========
this.name=prefix;

========
GPR[SPVS]-1659846795264
GPR[SPVAP]-1659846795264
GPR[EPVAP]-1659846795992
GPR[EPVS]-1659846795992
GPR[ESUN]-1659846795992
GPR[SSUN]-1659846795992
org.jfree.chart.util.SortOrder,76
Find no block!
GPR[SSUN]-1659846796488
org.jfree.chart.util.SortOrder,59
Find no block!
GPR[SSUN]-1659846796852
org.jfree.chart.util.SortOrder,63
Find no block!
GPR[SSUN]-1659846797238
org.jfree.chart.plot.CategoryPlot,584
========
this.domainAxisLocations=new ObjectList();
super();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846799468
GPR[SPVAP]-1659846799468
GPR[EPVAP]-1659846801380
GPR[EPVS]-1659846801380
========
super();
this.orientation=PlotOrientation.VERTICAL;
this.weight=1;
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846801383
GPR[SPVAP]-1659846801383
GPR[EPVAP]-1659846805945
GPR[SPVATF]-1659846805945
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846807101
GPR[EPVS]-1659846807101
========
super();
this.orientation=PlotOrientation.VERTICAL;
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846807104
GPR[SPVAP]-1659846807104
GPR[EPVAP]-1659846808574
GPR[SPVATF]-1659846808574
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846809737
GPR[EPVS]-1659846809737
========
this.foregroundDomainMarkers=new HashMap();
super();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846809741
GPR[SPVAP]-1659846809741
GPR[EPVAP]-1659846810625
GPR[EPVS]-1659846810625
========
super();
this.orientation=PlotOrientation.VERTICAL;
this.weight=1;
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846810628
GPR[SPVAP]-1659846810628
GPR[EPVAP]-1659846812076
GPR[SPVATF]-1659846812076
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846813273
GPR[EPVS]-1659846813273
========
this.dataset=dataset;
super();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846813275
GPR[SPVAP]-1659846813275
GPR[EPVAP]-1659846814120
GPR[EPVS]-1659846814121
========
if(dataset!=null){
dataset.addChangeListener(this);
}
super();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846814123
GPR[SPVAP]-1659846814123
GPR[EPVAP]-1659846815049
GPR[EPVS]-1659846815049
========
super();
this.orientation=orientation;
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846815052
GPR[SPVAP]-1659846815052
GPR[EPVAP]-1659846816500
GPR[SPVATF]-1659846816500
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846817688
GPR[EPVS]-1659846817688
========
super();
if(orientation==null){
throw new IllegalArgumentException("Null \'orientation\' argument.");
}
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846817690
GPR[SPVAP]-1659846817690
GPR[EPVAP]-1659846819079
GPR[SPVATF]-1659846819079
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846820208
GPR[EPVS]-1659846820208
========
fireChangeEvent();
super();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846820210
GPR[SPVAP]-1659846820210
GPR[EPVAP]-1659846821051
GPR[EPVS]-1659846821051
========
super();
if(orientation==null){
throw new IllegalArgumentException("Null \'orientation\' argument.");
}
this.orientation=orientation;
this.domainAxes=new ObjectList();

========
GPR[SPVS]-1659846821055
GPR[SPVAP]-1659846821055
GPR[EPVAP]-1659846822460
GPR[SPVATF]-1659846822460
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846823600
GPR[EPVS]-1659846823600
GPR[ESUN]-1659846823607
GPR[SSUN]-1659846823607
org.jfree.chart.plot.CategoryPlot,361
Find no block!
GPR[SSUN]-1659846824137
org.jfree.chart.plot.CategoryPlot,368
Find no block!
GPR[SSUN]-1659846824518
org.jfree.chart.plot.CategoryPlot,374
Find no block!
GPR[SSUN]-1659846824864
org.jfree.chart.plot.CategoryPlot,509
Find no block!
GPR[SSUN]-1659846825221
org.jfree.chart.plot.CategoryPlot,586
GPR[ESUN]-1659846825595
GPR[SSUN]-1659846825595
org.jfree.chart.plot.CategoryPlot,589
========
this.rangeAxes=new ObjectList();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846827820
GPR[SPVAP]-1659846827820
GPR[EPVAP]-1659846832376
GPR[SPVATF]-1659846832376
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846833551
GPR[EPVS]-1659846833551
========
this.rangeAxisLocations=new ObjectList();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846833554
GPR[SPVAP]-1659846833554
GPR[EPVAP]-1659846835014
GPR[SPVATF]-1659846835014
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846838348
GPR[EPVS]-1659846838348
========
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846838351
GPR[SPVAP]-1659846838351
GPR[EPVAP]-1659846839747
GPR[SPVATF]-1659846839747
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846840917
GPR[EPVS]-1659846840917
========
this.foregroundDomainMarkers=new HashMap();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846840919
GPR[SPVAP]-1659846840919
GPR[EPVAP]-1659846842402
GPR[SPVATF]-1659846842402
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846843555
GPR[EPVS]-1659846843555
========
this.backgroundDomainMarkers=new HashMap();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846843557
GPR[SPVAP]-1659846843557
GPR[EPVAP]-1659846844984
GPR[SPVATF]-1659846844984
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846846117
GPR[EPVS]-1659846846117
========
this.foregroundDomainMarkers=new HashMap();
this.backgroundDomainMarkers=new HashMap();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846846119
GPR[SPVAP]-1659846846119
GPR[EPVAP]-1659846847492
GPR[SPVATF]-1659846847492
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846848649
GPR[EPVS]-1659846848649
========
this.orientation=orientation;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846848651
GPR[SPVAP]-1659846848651
GPR[EPVAP]-1659846850051
GPR[SPVATF]-1659846850051
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846851188
GPR[EPVS]-1659846851188
========
if(orientation==null){
throw new IllegalArgumentException("Null \'orientation\' argument.");
}
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846851191
GPR[SPVAP]-1659846851191
GPR[EPVAP]-1659846852610
GPR[SPVATF]-1659846852610
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846853781
GPR[EPVS]-1659846853781
========
fireChangeEvent();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846853783
GPR[SPVAP]-1659846853783
GPR[EPVAP]-1659846855239
GPR[SPVATF]-1659846855239
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846856425
GPR[EPVS]-1659846856425
========
if(orientation==null){
throw new IllegalArgumentException("Null \'orientation\' argument.");
}
this.orientation=orientation;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846856428
GPR[SPVAP]-1659846856428
GPR[EPVAP]-1659846857854
GPR[SPVATF]-1659846857854
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846858996
GPR[EPVS]-1659846858996
========
fireChangeEvent();
this.orientation=orientation;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846858998
GPR[SPVAP]-1659846858998
GPR[EPVAP]-1659846860416
GPR[SPVATF]-1659846860416
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846861564
GPR[EPVS]-1659846861564
========
if(orientation==null){
throw new IllegalArgumentException("Null \'orientation\' argument.");
}
fireChangeEvent();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846861566
GPR[SPVAP]-1659846861566
GPR[EPVAP]-1659846862978
GPR[SPVATF]-1659846862978
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846864143
GPR[EPVS]-1659846864143
========
if(orientation==null){
throw new IllegalArgumentException("Null \'orientation\' argument.");
}
fireChangeEvent();
this.orientation=orientation;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846864145
GPR[SPVAP]-1659846864145
GPR[EPVAP]-1659846865556
GPR[SPVATF]-1659846865556
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846866690
GPR[EPVS]-1659846866690
========
super();
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846866693
GPR[SPVAP]-1659846866693
GPR[EPVAP]-1659846867546
GPR[EPVS]-1659846867546
========
this.dataset=dataset;
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846867549
GPR[SPVAP]-1659846867549
GPR[EPVAP]-1659846868393
GPR[EPVS]-1659846868393
========
if(dataset!=null){
dataset.addChangeListener(this);
}
this.orientation=PlotOrientation.VERTICAL;
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846868395
GPR[SPVAP]-1659846868395
GPR[EPVAP]-1659846869801
GPR[SPVATF]-1659846869801
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846870941
GPR[EPVS]-1659846870941
GPR[ESUN]-1659846870949
GPR[SSUN]-1659846870949
org.jfree.chart.plot.CategoryPlot,590
========
this.rangeAxisLocations=new ObjectList();
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846873150
GPR[SPVAP]-1659846873150
GPR[EPVAP]-1659846877680
GPR[SPVATF]-1659846877681
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846878852
GPR[EPVS]-1659846878852
========
this.datasetToDomainAxesMap=new TreeMap();
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846878855
GPR[SPVAP]-1659846878855
GPR[EPVAP]-1659846880307
GPR[SPVATF]-1659846880307
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846881497
GPR[EPVS]-1659846881497
========
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846881500
GPR[SPVAP]-1659846881500
GPR[EPVAP]-1659846882937
GPR[SPVATF]-1659846882937
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846884121
GPR[EPVS]-1659846884121
========
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.foregroundDomainMarkers=new HashMap();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846884123
GPR[SPVAP]-1659846884123
GPR[EPVAP]-1659846885561
GPR[SPVATF]-1659846885561
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846886775
GPR[EPVS]-1659846886775
========
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.backgroundDomainMarkers=new HashMap();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846886777
GPR[SPVAP]-1659846886777
GPR[EPVAP]-1659846888225
GPR[SPVATF]-1659846888225
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846889437
GPR[EPVS]-1659846889437
========
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.foregroundDomainMarkers=new HashMap();
this.backgroundDomainMarkers=new HashMap();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846889440
GPR[SPVAP]-1659846889440
GPR[EPVAP]-1659846890872
GPR[SPVATF]-1659846890872
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846892050
GPR[EPVS]-1659846892050
========
this.domainAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846892053
GPR[SPVAP]-1659846892053
GPR[EPVAP]-1659846893493
GPR[SPVATF]-1659846893493
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846894657
GPR[EPVS]-1659846894657
========
this.rangeAxes.set(0,rangeAxis);
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846894659
GPR[SPVAP]-1659846894659
GPR[EPVAP]-1659846896102
GPR[SPVATF]-1659846896102
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846897250
GPR[EPVS]-1659846897250
========
this.mapDatasetToRangeAxis(0,0);
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846897253
GPR[SPVAP]-1659846897253
GPR[EPVAP]-1659846898703
GPR[SPVATF]-1659846898703
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846899853
GPR[EPVS]-1659846899853
========
this.rangeAxes.set(0,rangeAxis);
this.domainAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846899856
GPR[SPVAP]-1659846899856
GPR[EPVAP]-1659846901327
GPR[SPVATF]-1659846901327
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846902468
GPR[EPVS]-1659846902468
========
this.mapDatasetToRangeAxis(0,0);
this.domainAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846902471
GPR[SPVAP]-1659846902471
GPR[EPVAP]-1659846903902
GPR[SPVATF]-1659846903902
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846905064
GPR[EPVS]-1659846905064
========
this.rangeAxes.set(0,rangeAxis);
this.mapDatasetToRangeAxis(0,0);
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846905067
GPR[SPVAP]-1659846905067
GPR[EPVAP]-1659846906541
GPR[SPVATF]-1659846906541
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846908988
GPR[EPVS]-1659846908988
========
this.rangeAxes.set(0,rangeAxis);
this.mapDatasetToRangeAxis(0,0);
this.domainAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();

========
GPR[SPVS]-1659846908996
GPR[SPVAP]-1659846908996
GPR[EPVAP]-1659846911055
GPR[SPVATF]-1659846911055
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846912239
GPR[EPVS]-1659846912239
GPR[ESUN]-1659846912240
GPR[SSUN]-1659846912240
org.jfree.chart.plot.CategoryPlot,591
========
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846914509
GPR[SPVAP]-1659846914509
GPR[EPVAP]-1659846919162
GPR[SPVATF]-1659846919162
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846920338
GPR[EPVS]-1659846920338
========
this.datasetToDomainAxesMap=new TreeMap();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846920341
GPR[SPVAP]-1659846920341
GPR[EPVAP]-1659846921778
GPR[SPVATF]-1659846921778
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846922958
GPR[EPVS]-1659846922958
========
this.domainAxes=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846922961
GPR[SPVAP]-1659846922961
GPR[EPVAP]-1659846924370
GPR[SPVATF]-1659846924370
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846925539
GPR[EPVS]-1659846925539
========
this.domainAxisLocations=new ObjectList();
this.foregroundDomainMarkers=new HashMap();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846925542
GPR[SPVAP]-1659846925542
GPR[EPVAP]-1659846926989
GPR[SPVATF]-1659846926989
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846928193
GPR[EPVS]-1659846928193
========
this.domainAxisLocations=new ObjectList();
this.backgroundDomainMarkers=new HashMap();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846928195
GPR[SPVAP]-1659846928195
GPR[EPVAP]-1659846929668
GPR[SPVATF]-1659846929668
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846930822
GPR[EPVS]-1659846930822
========
this.domainAxisLocations=new ObjectList();
this.foregroundDomainMarkers=new HashMap();
this.backgroundDomainMarkers=new HashMap();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846930825
GPR[SPVAP]-1659846930825
GPR[EPVAP]-1659846932249
GPR[SPVATF]-1659846932249
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846933395
GPR[EPVS]-1659846933395
========
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846933398
GPR[SPVAP]-1659846933398
GPR[EPVAP]-1659846934799
GPR[SPVATF]-1659846934799
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846935972
GPR[EPVS]-1659846935972
========
this.rangeAxes.set(0,rangeAxis);
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846935975
GPR[SPVAP]-1659846935975
GPR[EPVAP]-1659846937377
GPR[SPVATF]-1659846937377
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846938519
GPR[EPVS]-1659846938519
========
this.mapDatasetToRangeAxis(0,0);
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846938521
GPR[SPVAP]-1659846938521
GPR[EPVAP]-1659846939927
GPR[SPVATF]-1659846939927
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846941101
GPR[EPVS]-1659846941101
========
this.rangeAxes.set(0,rangeAxis);
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846941103
GPR[SPVAP]-1659846941103
GPR[EPVAP]-1659846942513
GPR[SPVATF]-1659846942513
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846943678
GPR[EPVS]-1659846943678
========
this.mapDatasetToRangeAxis(0,0);
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846943683
GPR[SPVAP]-1659846943683
GPR[EPVAP]-1659846945081
GPR[SPVATF]-1659846945081
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846946219
GPR[EPVS]-1659846946219
========
this.rangeAxes.set(0,rangeAxis);
this.mapDatasetToRangeAxis(0,0);
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846946222
GPR[SPVAP]-1659846946222
GPR[EPVAP]-1659846947627
GPR[SPVATF]-1659846947627
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846948768
GPR[EPVS]-1659846948768
========
this.rangeAxes.set(0,rangeAxis);
this.mapDatasetToRangeAxis(0,0);
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.rangeAxisLocations=new ObjectList();

========
GPR[SPVS]-1659846948771
GPR[SPVAP]-1659846948771
GPR[EPVAP]-1659846950183
GPR[SPVATF]-1659846950183
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846951334
GPR[EPVS]-1659846951334
GPR[ESUN]-1659846951334
GPR[SSUN]-1659846951334
org.jfree.chart.plot.CategoryPlot,592
========
this.domainAxes=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846953514
GPR[SPVAP]-1659846953514
GPR[EPVAP]-1659846958128
GPR[SPVATF]-1659846958128
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846959292
GPR[EPVS]-1659846959292
========
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846959294
GPR[SPVAP]-1659846959294
GPR[EPVAP]-1659846960734
GPR[SPVATF]-1659846960734
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846961917
GPR[EPVS]-1659846961917
========
this.domainAxes=new ObjectList();
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846961919
GPR[SPVAP]-1659846961919
GPR[EPVAP]-1659846963333
GPR[SPVATF]-1659846963333
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846964504
GPR[EPVS]-1659846964504
========
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.foregroundDomainMarkers=new HashMap();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846964506
GPR[SPVAP]-1659846964506
GPR[EPVAP]-1659846965955
GPR[SPVATF]-1659846965955
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846967154
GPR[EPVS]-1659846967154
========
this.foregroundRangeMarkers=new HashMap();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846967156
GPR[SPVAP]-1659846967156
GPR[EPVAP]-1659846968638
GPR[SPVATF]-1659846968638
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846969816
GPR[EPVS]-1659846969816
========
this.foregroundRangeMarkers=new HashMap();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.foregroundDomainMarkers=new HashMap();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846969818
GPR[SPVAP]-1659846969818
GPR[EPVAP]-1659846971230
GPR[SPVATF]-1659846971230
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846972388
GPR[EPVS]-1659846972388
========
clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846972391
GPR[SPVAP]-1659846972391
GPR[EPVAP]-1659846973255
GPR[EPVS]-1659846973255
========
clone.datasetToRangeAxesMap=new TreeMap();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846973257
GPR[SPVAP]-1659846973257
GPR[EPVAP]-1659846974104
GPR[EPVS]-1659846974104
========
clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846974106
GPR[SPVAP]-1659846974106
GPR[EPVAP]-1659846974939
GPR[EPVS]-1659846974939
========
this.rangeAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846974942
GPR[SPVAP]-1659846974942
GPR[EPVAP]-1659846976373
GPR[SPVATF]-1659846976373
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846977521
GPR[EPVS]-1659846977521
========
this.rangeAxes.set(0,rangeAxis);
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846977523
GPR[SPVAP]-1659846977523
GPR[EPVAP]-1659846978967
GPR[SPVATF]-1659846978967
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846980135
GPR[EPVS]-1659846980135
========
this.mapDatasetToRangeAxis(0,0);
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846980138
GPR[SPVAP]-1659846980138
GPR[EPVAP]-1659846981588
GPR[SPVATF]-1659846981588
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846984993
GPR[EPVS]-1659846984993
========
this.rangeAxes.set(0,rangeAxis);
this.rangeAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846984996
GPR[SPVAP]-1659846984996
GPR[EPVAP]-1659846986431
GPR[SPVATF]-1659846986431
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846987612
GPR[EPVS]-1659846987612
========
this.mapDatasetToRangeAxis(0,0);
this.rangeAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846987614
GPR[SPVAP]-1659846987614
GPR[EPVAP]-1659846989020
GPR[SPVATF]-1659846989020
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846990165
GPR[EPVS]-1659846990165
========
this.rangeAxes.set(0,rangeAxis);
this.mapDatasetToRangeAxis(0,0);
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846990169
GPR[SPVAP]-1659846990169
GPR[EPVAP]-1659846991660
GPR[SPVATF]-1659846991660
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846992806
GPR[EPVS]-1659846992806
========
this.rangeAxes.set(0,rangeAxis);
this.mapDatasetToRangeAxis(0,0);
this.rangeAxes=new ObjectList();
if(domainAxis!=null){
domainAxis.setPlot(this);
domainAxis.addChangeListener(this);
}
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();

========
GPR[SPVS]-1659846992808
GPR[SPVAP]-1659846992808
GPR[EPVAP]-1659846994210
GPR[SPVATF]-1659846994210
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659846995343
GPR[EPVS]-1659846995343
GPR[ESUN]-1659846995343
GPR[SSUN]-1659846995343
org.jfree.chart.plot.CategoryPlot,594
========
this.domainAxisLocations=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();

========
GPR[SPVS]-1659846997583
GPR[SPVAP]-1659846997583
GPR[EPVAP]-1659847002183
GPR[SPVATF]-1659847002183
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847003348
GPR[EPVS]-1659847003348
========
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();

========
GPR[SPVS]-1659847003350
GPR[SPVAP]-1659847003350
GPR[EPVAP]-1659847004832
GPR[SPVATF]-1659847004832
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847006020
GPR[EPVS]-1659847006020
========
this.domainAxisLocations=new ObjectList();
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();

========
GPR[SPVS]-1659847006022
GPR[SPVAP]-1659847006022
GPR[EPVAP]-1659847007422
GPR[SPVATF]-1659847007422
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847008576
GPR[EPVS]-1659847008576
========
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);
this.datasetToRangeAxesMap=new TreeMap();

========
GPR[SPVS]-1659847008579
GPR[SPVAP]-1659847008579
GPR[EPVAP]-1659847009458
GPR[EPVS]-1659847009458
========
clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();

========
GPR[SPVS]-1659847009461
GPR[SPVAP]-1659847009461
GPR[EPVAP]-1659847010342
GPR[EPVS]-1659847010342
========
this.foregroundRangeMarkers=new HashMap();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();

========
GPR[SPVS]-1659847010344
GPR[SPVAP]-1659847010344
GPR[EPVAP]-1659847011818
GPR[SPVATF]-1659847011818
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847013014
GPR[EPVS]-1659847013014
========
this.backgroundRangeMarkers=new HashMap();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();

========
GPR[SPVS]-1659847013016
GPR[SPVAP]-1659847013016
GPR[EPVAP]-1659847014457
GPR[SPVATF]-1659847014457
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847015647
GPR[EPVS]-1659847015647
========
this.foregroundRangeMarkers=new HashMap();
this.backgroundRangeMarkers=new HashMap();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();

========
GPR[SPVS]-1659847015650
GPR[SPVAP]-1659847015650
GPR[EPVAP]-1659847017062
GPR[SPVATF]-1659847017062
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847018221
GPR[EPVS]-1659847018221
========
clone.datasets=(ObjectList)this.datasets.clone();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();

========
GPR[SPVS]-1659847018224
GPR[SPVAP]-1659847018224
GPR[EPVAP]-1659847019093
GPR[EPVS]-1659847019093
GPR[ESUN]-1659847019093
GPR[SSUN]-1659847019093
org.jfree.chart.plot.CategoryPlot,595
========
this.rangeAxes=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847021587
GPR[SPVAP]-1659847021588
GPR[EPVAP]-1659847026108
GPR[SPVATF]-1659847026108
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847027315
GPR[EPVS]-1659847027315
========
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847027317
GPR[SPVAP]-1659847027317
GPR[EPVAP]-1659847028811
GPR[SPVATF]-1659847028811
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847029989
GPR[EPVS]-1659847029989
========
this.rangeAxes=new ObjectList();
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847029992
GPR[SPVAP]-1659847029992
GPR[EPVAP]-1659847031409
GPR[SPVATF]-1659847031409
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847032577
GPR[EPVS]-1659847032577
========
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.backgroundRangeMarkers=new HashMap();
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847032579
GPR[SPVAP]-1659847032579
GPR[EPVAP]-1659847033998
GPR[SPVATF]-1659847033998
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847035196
GPR[EPVS]-1659847035196
========
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.datasets=new ObjectList();
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847035199
GPR[SPVAP]-1659847035199
GPR[EPVAP]-1659847036623
GPR[SPVATF]-1659847036623
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847037773
GPR[EPVS]-1659847037773
========
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.backgroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847037775
GPR[SPVAP]-1659847037775
GPR[EPVAP]-1659847039174
GPR[SPVATF]-1659847039174
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847040335
GPR[EPVS]-1659847040335
========
this.datasetToDomainAxesMap=new TreeMap();
clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847040337
GPR[SPVAP]-1659847040337
GPR[EPVAP]-1659847041169
GPR[EPVS]-1659847041169
========
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847041172
GPR[SPVAP]-1659847041172
GPR[EPVAP]-1659847042012
GPR[EPVS]-1659847042012
========
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847042014
GPR[SPVAP]-1659847042015
GPR[EPVAP]-1659847042874
GPR[EPVS]-1659847042874
========
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
clone.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();

========
GPR[SPVS]-1659847042876
GPR[SPVAP]-1659847042876
GPR[EPVAP]-1659847043736
GPR[EPVS]-1659847043736
GPR[ESUN]-1659847043737
GPR[SSUN]-1659847043737
org.jfree.chart.plot.CategoryPlot,597
========
this.rangeAxisLocations=new ObjectList();
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847045940
GPR[SPVAP]-1659847045940
GPR[EPVAP]-1659847050611
GPR[SPVATF]-1659847050611
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847051778
GPR[EPVS]-1659847051778
========
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847051780
GPR[SPVAP]-1659847051780
GPR[EPVAP]-1659847053210
GPR[SPVATF]-1659847053210
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847054360
GPR[EPVS]-1659847054360
========
this.rangeAxisLocations=new ObjectList();
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847054362
GPR[SPVAP]-1659847054362
GPR[EPVAP]-1659847057536
GPR[SPVATF]-1659847057536
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847058772
GPR[EPVS]-1659847058773
========
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.foregroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847058775
GPR[SPVAP]-1659847058775
GPR[EPVAP]-1659847060260
GPR[SPVATF]-1659847060260
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847061393
GPR[EPVS]-1659847061393
========
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.backgroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847061395
GPR[SPVAP]-1659847061395
GPR[EPVAP]-1659847062799
GPR[SPVATF]-1659847062799
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847063961
GPR[EPVS]-1659847063961
========
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.foregroundRangeMarkers=new HashMap();
this.backgroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847063963
GPR[SPVAP]-1659847063963
GPR[EPVAP]-1659847065362
GPR[SPVATF]-1659847065362
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847066530
GPR[EPVS]-1659847066530
========
if(dataset!=null){
setDataset(dataset);
}
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847066533
GPR[SPVAP]-1659847066533
GPR[EPVAP]-1659847067978
GPR[SPVATF]-1659847067978
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847069126
GPR[EPVS]-1659847069126
========
clone.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847069129
GPR[SPVAP]-1659847069129
GPR[EPVAP]-1659847069968
GPR[EPVS]-1659847069968
========
clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847069970
GPR[SPVAP]-1659847069970
GPR[EPVAP]-1659847070815
GPR[EPVS]-1659847070815
========
this.datasetToRangeAxesMap=new TreeMap();
clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847070817
GPR[SPVAP]-1659847070817
GPR[EPVAP]-1659847071709
GPR[EPVS]-1659847071709
========
this.datasetToRangeAxesMap=new TreeMap();
clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847071712
GPR[SPVAP]-1659847071712
GPR[EPVAP]-1659847072554
GPR[EPVS]-1659847072554
========
this.datasetToRangeAxesMap=new TreeMap();
clone.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847072557
GPR[SPVAP]-1659847072557
GPR[EPVAP]-1659847073396
GPR[EPVS]-1659847073396
========
this.datasets.set(0,dataset);
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847073400
GPR[SPVAP]-1659847073400
GPR[EPVAP]-1659847074873
GPR[SPVATF]-1659847074873
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847076068
GPR[EPVS]-1659847076068
========
if(dataset!=null){
dataset.addChangeListener(this);
}
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847076071
GPR[SPVAP]-1659847076071
GPR[EPVAP]-1659847077498
GPR[SPVATF]-1659847077498
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847078651
GPR[EPVS]-1659847078651
========
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();

========
GPR[SPVS]-1659847078654
GPR[SPVAP]-1659847078654
GPR[EPVAP]-1659847080052
GPR[SPVATF]-1659847080052
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847081256
GPR[EPVS]-1659847081256
GPR[ESUN]-1659847081257
GPR[SSUN]-1659847081257
org.jfree.chart.plot.CategoryPlot,599
========
this.datasetToDomainAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847083779
GPR[SPVAP]-1659847083779
GPR[EPVAP]-1659847088296
GPR[SPVATF]-1659847088296
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847089471
GPR[EPVS]-1659847089471
========
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847089474
GPR[SPVAP]-1659847089474
GPR[EPVAP]-1659847090928
GPR[SPVATF]-1659847090928
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847092121
GPR[EPVS]-1659847092121
========
this.datasetToDomainAxesMap=new TreeMap();
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847092123
GPR[SPVAP]-1659847092123
GPR[EPVAP]-1659847093527
GPR[SPVATF]-1659847093527
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847094685
GPR[EPVS]-1659847094685
========
this.renderers=new ObjectList();
this.foregroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847094688
GPR[SPVAP]-1659847094688
GPR[EPVAP]-1659847096151
GPR[SPVATF]-1659847096151
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847097331
GPR[EPVS]-1659847097331
========
this.renderers=new ObjectList();
this.backgroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847097334
GPR[SPVAP]-1659847097334
GPR[EPVAP]-1659847098768
GPR[SPVATF]-1659847098768
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847099937
GPR[EPVS]-1659847099937
========
this.renderers=new ObjectList();
this.foregroundRangeMarkers=new HashMap();
this.backgroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847099940
GPR[SPVAP]-1659847099940
GPR[EPVAP]-1659847101375
GPR[SPVATF]-1659847101375
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847102514
GPR[EPVS]-1659847102514
========
this.datasetToDomainAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.foregroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847102517
GPR[SPVAP]-1659847102517
GPR[EPVAP]-1659847103909
GPR[SPVATF]-1659847103909
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847105089
GPR[EPVS]-1659847105089
========
this.datasetToDomainAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.backgroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847105092
GPR[SPVAP]-1659847105092
GPR[EPVAP]-1659847106510
GPR[SPVATF]-1659847106510
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847107664
GPR[EPVS]-1659847107664
========
this.datasetToDomainAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.foregroundRangeMarkers=new HashMap();
this.backgroundRangeMarkers=new HashMap();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847107666
GPR[SPVAP]-1659847107666
GPR[EPVAP]-1659847109051
GPR[SPVATF]-1659847109051
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847110233
GPR[EPVS]-1659847110233
========
if(dataset!=null){
dataset.addChangeListener(this);
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847110236
GPR[SPVAP]-1659847110236
GPR[EPVAP]-1659847111650
GPR[SPVATF]-1659847111650
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847112806
GPR[EPVS]-1659847112806
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if((CategoryDataset)this.datasets.get(crosshairDatasetIndex)!=null){
existing.removeChangeListener(this);
}
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847112809
GPR[SPVAP]-1659847112809
GPR[EPVAP]-1659847113648
GPR[EPVS]-1659847113648
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if((ValueDataset)this.datasets.get(crosshairDatasetIndex)!=null){
existing.removeChangeListener(this);
}
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847113651
GPR[SPVAP]-1659847113651
GPR[EPVAP]-1659847114491
GPR[EPVS]-1659847114491
========
this.datasets.set(0,AxisLocation.BOTTOM_OR_LEFT);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847114494
GPR[SPVAP]-1659847114494
GPR[EPVAP]-1659847115889
GPR[SPVATF]-1659847115889
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847117051
GPR[EPVS]-1659847117051
========
this.rangeAxes.set(0,rangeAxis);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847117054
GPR[SPVAP]-1659847117054
GPR[EPVAP]-1659847118476
GPR[SPVATF]-1659847118476
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847119618
GPR[EPVS]-1659847119618
========
this.datasets.set(0,AxisLocation.BOTTOM_OR_LEFT);
this.rangeAxes.set(0,rangeAxis);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847119621
GPR[SPVAP]-1659847119621
GPR[EPVAP]-1659847121049
GPR[SPVATF]-1659847121049
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847122229
GPR[EPVS]-1659847122229
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,renderer);

========
GPR[SPVS]-1659847122231
GPR[SPVAP]-1659847122231
GPR[EPVAP]-1659847123649
GPR[SPVATF]-1659847123649
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847124825
GPR[EPVS]-1659847124825
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if((CategoryItemRenderer)this.renderers.get(crosshairDatasetIndex)!=null){
existing.removeChangeListener(this);
}
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847124827
GPR[SPVAP]-1659847124827
GPR[EPVAP]-1659847125703
GPR[EPVS]-1659847125703
========
this.datasets.set(0,renderer);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847125706
GPR[SPVAP]-1659847125706
GPR[EPVAP]-1659847129079
GPR[SPVATF]-1659847129079
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847130231
GPR[EPVS]-1659847130231
========
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847130233
GPR[SPVAP]-1659847130234
GPR[EPVAP]-1659847131634
GPR[SPVATF]-1659847131634
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847132791
GPR[EPVS]-1659847132791
========
this.datasets.set(0,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847132793
GPR[SPVAP]-1659847132793
GPR[EPVAP]-1659847134228
GPR[SPVATF]-1659847134228
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847135401
GPR[EPVS]-1659847135401
========
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,renderer);

========
GPR[SPVS]-1659847135405
GPR[SPVAP]-1659847135405
GPR[EPVAP]-1659847136808
GPR[SPVATF]-1659847136808
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847137977
GPR[EPVS]-1659847137977
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,DEFAULT_VALUE_LABEL_FONT);

========
GPR[SPVS]-1659847137980
GPR[SPVAP]-1659847137980
GPR[EPVAP]-1659847139402
GPR[SPVATF]-1659847139402
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847140585
GPR[EPVS]-1659847140585
========
fireChangeEvent();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847140587
GPR[SPVAP]-1659847140587
GPR[EPVAP]-1659847141983
GPR[SPVATF]-1659847141983
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847143136
GPR[EPVS]-1659847143136
========
fireChangeEvent();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,DEFAULT_VALUE_LABEL_FONT);

========
GPR[SPVS]-1659847143139
GPR[SPVAP]-1659847143139
GPR[EPVAP]-1659847144538
GPR[SPVATF]-1659847144538
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847145689
GPR[EPVS]-1659847145689
========
if(rangeCrosshairLockedOnData){
fireChangeEvent();
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847145691
GPR[SPVAP]-1659847145691
GPR[EPVAP]-1659847147124
GPR[SPVATF]-1659847147124
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847148309
GPR[EPVS]-1659847148309
========
if(rangeCrosshairLockedOnData){
fireChangeEvent();
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,DEFAULT_VALUE_LABEL_FONT);

========
GPR[SPVS]-1659847148312
GPR[SPVAP]-1659847148312
GPR[EPVAP]-1659847149684
GPR[SPVATF]-1659847149684
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847150802
GPR[EPVS]-1659847150802
========
if(rangeCrosshairLockedOnData){
notifyListeners(new RendererChangeEvent(this));
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847150806
GPR[SPVAP]-1659847150806
GPR[EPVAP]-1659847151676
GPR[EPVS]-1659847151676
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
super();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847151679
GPR[SPVAP]-1659847151679
GPR[EPVAP]-1659847152545
GPR[EPVS]-1659847152545
========
new PiePlot(null).setIgnoreNullValues(true);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847152547
GPR[SPVAP]-1659847152547
GPR[EPVAP]-1659847153976
GPR[SPVATF]-1659847153976
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847155136
GPR[EPVS]-1659847155136
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,(CategoryItemRenderer)(PublicCloneable)(CategoryItemRenderer)this.renderers.get(crosshairDatasetIndex).clone());

========
GPR[SPVS]-1659847155139
GPR[SPVAP]-1659847155139
GPR[EPVAP]-1659847155991
GPR[EPVS]-1659847155991
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,(XYItemRenderer)(PublicCloneable)(XYItemRenderer)this.renderers.get(crosshairDatasetIndex).clone());

========
GPR[SPVS]-1659847155994
GPR[SPVAP]-1659847155994
GPR[EPVAP]-1659847156872
GPR[EPVS]-1659847156872
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,(ValueAxis)rangeAxis.clone());

========
GPR[SPVS]-1659847156875
GPR[SPVAP]-1659847156875
GPR[EPVAP]-1659847157718
GPR[EPVS]-1659847157718
========
this.datasets.set(0,rangeAxis);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847157721
GPR[SPVAP]-1659847157721
GPR[EPVAP]-1659847159135
GPR[SPVATF]-1659847159135
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847160305
GPR[EPVS]-1659847160305
========
this.mapDatasetToRangeAxis(0,0);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847160307
GPR[SPVAP]-1659847160307
GPR[EPVAP]-1659847161723
GPR[SPVATF]-1659847161723
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847162896
GPR[EPVS]-1659847162896
========
this.datasets.set(0,rangeAxis);
this.mapDatasetToRangeAxis(0,0);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847162898
GPR[SPVAP]-1659847162898
GPR[EPVAP]-1659847164297
GPR[SPVATF]-1659847164297
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847165448
GPR[EPVS]-1659847165448
========
this.datasets.set(crosshairDatasetIndex,domainAxis);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847165450
GPR[SPVAP]-1659847165450
GPR[EPVAP]-1659847166847
GPR[SPVATF]-1659847166847
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847167996
GPR[EPVS]-1659847167996
========
if(domainAxis!=null){
axis.configure();
axis.addChangeListener(this);
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847167998
GPR[SPVAP]-1659847167998
GPR[EPVAP]-1659847168848
GPR[EPVS]-1659847168848
========
this.datasets.set(crosshairDatasetIndex,rangeAxis);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847168851
GPR[SPVAP]-1659847168851
GPR[EPVAP]-1659847170311
GPR[SPVATF]-1659847170311
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847171492
GPR[EPVS]-1659847171492
========
if(rangeAxis!=null){
axis.configure();
axis.addChangeListener(this);
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847171494
GPR[SPVAP]-1659847171494
GPR[EPVAP]-1659847172362
GPR[EPVS]-1659847172362
========
this.datasets.set(0,rangeAxis);
if(rangeAxis!=null){
axis.configure();
axis.addChangeListener(this);
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847172365
GPR[SPVAP]-1659847172365
GPR[EPVAP]-1659847173206
GPR[EPVS]-1659847173206
========
configureDomainAxes();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847173208
GPR[SPVAP]-1659847173208
GPR[EPVAP]-1659847174619
GPR[SPVATF]-1659847174619
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847175791
GPR[EPVS]-1659847175791
========
this.datasets.set(0,AxisLocation.BOTTOM_OR_LEFT);
configureDomainAxes();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847175794
GPR[SPVAP]-1659847175794
GPR[EPVAP]-1659847177208
GPR[SPVATF]-1659847177208
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847178351
GPR[EPVS]-1659847178351
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,domainAxis);

========
GPR[SPVS]-1659847178354
GPR[SPVAP]-1659847178354
GPR[EPVAP]-1659847179771
GPR[SPVATF]-1659847179771
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847180930
GPR[EPVS]-1659847180930
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847180933
GPR[SPVAP]-1659847180933
GPR[EPVAP]-1659847182381
GPR[SPVATF]-1659847182381
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847183533
GPR[EPVS]-1659847183533
========
this.mapDatasetToDomainAxis(0,0);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847183536
GPR[SPVAP]-1659847183536
GPR[EPVAP]-1659847184967
GPR[SPVATF]-1659847184967
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847186110
GPR[EPVS]-1659847186110
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
this.datasets.set(0,domainAxis);

========
GPR[SPVS]-1659847186113
GPR[SPVAP]-1659847186113
GPR[EPVAP]-1659847187560
GPR[SPVATF]-1659847187560
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847188698
GPR[EPVS]-1659847188698
========
this.mapDatasetToDomainAxis(0,0);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,domainAxis);

========
GPR[SPVS]-1659847188701
GPR[SPVAP]-1659847188701
GPR[EPVAP]-1659847190113
GPR[SPVATF]-1659847190113
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847191259
GPR[EPVS]-1659847191259
========
this.mapDatasetToDomainAxis(0,0);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847191261
GPR[SPVAP]-1659847191261
GPR[EPVAP]-1659847192693
GPR[SPVATF]-1659847192693
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847193839
GPR[EPVS]-1659847193839
========
this.mapDatasetToDomainAxis(0,0);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
this.datasets.set(0,domainAxis);

========
GPR[SPVS]-1659847193842
GPR[SPVAP]-1659847193842
GPR[EPVAP]-1659847195235
GPR[SPVATF]-1659847195235
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847196415
GPR[EPVS]-1659847196415
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if(dataset!=null){
dataset.addChangeListener(this);
}
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847196418
GPR[SPVAP]-1659847196418
GPR[EPVAP]-1659847197840
GPR[SPVATF]-1659847197840
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847200939
GPR[EPVS]-1659847200939
========
clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847200942
GPR[SPVAP]-1659847200942
GPR[EPVAP]-1659847201805
GPR[EPVS]-1659847201805
========
clone.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847201807
GPR[SPVAP]-1659847201807
GPR[EPVAP]-1659847202643
GPR[EPVS]-1659847202643
========
clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847202646
GPR[SPVAP]-1659847202646
GPR[EPVAP]-1659847203486
GPR[EPVS]-1659847203486
========
this.renderers=new ObjectList();
clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847203489
GPR[SPVAP]-1659847203489
GPR[EPVAP]-1659847204342
GPR[EPVS]-1659847204342
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847204345
GPR[SPVAP]-1659847204345
GPR[EPVAP]-1659847205179
GPR[EPVS]-1659847205179
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.dataset=dataset;
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847205181
GPR[SPVAP]-1659847205181
GPR[EPVAP]-1659847206091
GPR[EPVS]-1659847206091
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847206093
GPR[SPVAP]-1659847206093
GPR[EPVAP]-1659847207499
GPR[SPVATF]-1659847207499
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847208679
GPR[EPVS]-1659847208679
========
new CategoryPlot(dataset,domainAxis,rangeAxis,renderer).clearRangeMarkers();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847208682
GPR[SPVAP]-1659847208682
GPR[EPVAP]-1659847210105
GPR[SPVATF]-1659847210105
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847211279
GPR[EPVS]-1659847211279
========
new CategoryPlot(dataset,domainAxis,rangeAxis,renderer).setForegroundAlpha(0.75);
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847211282
GPR[SPVAP]-1659847211282
GPR[EPVAP]-1659847212130
GPR[EPVS]-1659847212130
========
anchorValue=rectY-anchorValue/2.0;
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847212133
GPR[SPVAP]-1659847212133
GPR[EPVAP]-1659847212983
GPR[EPVS]-1659847212983
========
renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator());
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847212986
GPR[SPVAP]-1659847212986
GPR[EPVAP]-1659847213832
GPR[EPVS]-1659847213832
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
this.dataset=dataset;
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847213837
GPR[SPVAP]-1659847213837
GPR[EPVAP]-1659847214688
GPR[EPVS]-1659847214688
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847214690
GPR[SPVAP]-1659847214690
GPR[EPVAP]-1659847215552
GPR[EPVS]-1659847215552
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.dataset=dataset;
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847215555
GPR[SPVAP]-1659847215555
GPR[EPVAP]-1659847216409
GPR[EPVS]-1659847216409
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
this.renderers=new ObjectList();
this.datasets=new ObjectList();
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
this.dataset=dataset;
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847216411
GPR[SPVAP]-1659847216411
GPR[EPVAP]-1659847217279
GPR[EPVS]-1659847217279
========
this.datasets.set(crosshairDatasetIndex,rangeAxis);
if(rangeAxis!=null){
axis.configure();
axis.addChangeListener(this);
}
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);

========
GPR[SPVS]-1659847217283
GPR[SPVAP]-1659847217283
GPR[EPVAP]-1659847218120
GPR[EPVS]-1659847218120
GPR[ESUN]-1659847218122
GPR[SSUN]-1659847218122
org.jfree.chart.plot.CategoryPlot,600
========
this.datasetToRangeAxesMap=new TreeMap();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847220692
GPR[SPVAP]-1659847220692
GPR[EPVAP]-1659847225227
GPR[SPVATF]-1659847225227
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847226381
GPR[EPVS]-1659847226381
========
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847226383
GPR[SPVAP]-1659847226383
GPR[EPVAP]-1659847227822
GPR[SPVATF]-1659847227822
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847229013
GPR[EPVS]-1659847229013
========
this.datasetToRangeAxesMap=new TreeMap();
this.renderers=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847229016
GPR[SPVAP]-1659847229016
GPR[EPVAP]-1659847230442
GPR[SPVATF]-1659847230442
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847231624
GPR[EPVS]-1659847231624
========
this.datasets=new ObjectList();
this.datasetToRangeAxesMap=new TreeMap();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847231627
GPR[SPVAP]-1659847231627
GPR[EPVAP]-1659847233046
GPR[SPVATF]-1659847233046
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847234254
GPR[EPVS]-1659847234254
========
this.datasets=new ObjectList();
this.annotations=new java.util.ArrayList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847234256
GPR[SPVAP]-1659847234256
GPR[EPVAP]-1659847235683
GPR[SPVATF]-1659847235683
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847236826
GPR[EPVS]-1659847236826
========
this.renderers.set(0,renderer);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847236829
GPR[SPVAP]-1659847236829
GPR[EPVAP]-1659847238252
GPR[SPVATF]-1659847238252
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847239408
GPR[EPVS]-1659847239408
========
this.datasets=new ObjectList();
this.datasetToRangeAxesMap=new TreeMap();
this.annotations=new java.util.ArrayList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847239410
GPR[SPVAP]-1659847239410
GPR[EPVAP]-1659847240811
GPR[SPVATF]-1659847240811
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847241977
GPR[EPVS]-1659847241977
========
this.renderers.set(0,renderer);
this.datasets=new ObjectList();
this.datasetToRangeAxesMap=new TreeMap();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847241979
GPR[SPVAP]-1659847241979
GPR[EPVAP]-1659847243385
GPR[SPVATF]-1659847243385
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847244570
GPR[EPVS]-1659847244570
========
this.renderers.set(0,renderer);
this.datasets=new ObjectList();
this.annotations=new java.util.ArrayList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847244573
GPR[SPVAP]-1659847244573
GPR[EPVAP]-1659847246018
GPR[SPVATF]-1659847246018
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847247231
GPR[EPVS]-1659847247231
========
this.renderers.set(0,renderer);
this.datasets=new ObjectList();
this.datasetToRangeAxesMap=new TreeMap();
this.annotations=new java.util.ArrayList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847247233
GPR[SPVAP]-1659847247233
GPR[EPVAP]-1659847248654
GPR[SPVATF]-1659847248654
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847249804
GPR[EPVS]-1659847249804
========
this.datasets=new ObjectList();
if((CategoryDataset)this.datasets.get(crosshairDatasetIndex)!=null){
existing.removeChangeListener(this);
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847249807
GPR[SPVAP]-1659847249807
GPR[EPVAP]-1659847250654
GPR[EPVS]-1659847250655
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847250657
GPR[SPVAP]-1659847250657
GPR[EPVAP]-1659847252096
GPR[SPVATF]-1659847252096
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847253260
GPR[EPVS]-1659847253260
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
this.dataset=dataset;
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847253262
GPR[SPVAP]-1659847253262
GPR[EPVAP]-1659847254105
GPR[EPVS]-1659847254105
========
this.rangeAxisLocations=new ObjectList();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847254107
GPR[SPVAP]-1659847254107
GPR[EPVAP]-1659847255535
GPR[SPVATF]-1659847255535
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847256716
GPR[EPVS]-1659847256716
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847256719
GPR[SPVAP]-1659847256719
GPR[EPVAP]-1659847258162
GPR[SPVATF]-1659847258162
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847259326
GPR[EPVS]-1659847259326
========
this.dataset=dataset;
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847259328
GPR[SPVAP]-1659847259328
GPR[EPVAP]-1659847260173
GPR[EPVS]-1659847260173
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(this.dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847260176
GPR[SPVAP]-1659847260176
GPR[EPVAP]-1659847261018
GPR[EPVS]-1659847261018
========
this.datasets=new ObjectList();
this.dataset=dataset;
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847261021
GPR[SPVAP]-1659847261021
GPR[EPVAP]-1659847261876
GPR[EPVS]-1659847261876
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(this.dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847261879
GPR[SPVAP]-1659847261879
GPR[EPVAP]-1659847262773
GPR[EPVS]-1659847262773
========
this.datasets=new ObjectList();
if(getDataset(crosshairDatasetIndex)!=null){
existing.removeChangeListener(this);
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847262775
GPR[SPVAP]-1659847262775
GPR[EPVAP]-1659847263615
GPR[EPVS]-1659847263615
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
this.drawSharedDomainAxis=false;
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847263618
GPR[SPVAP]-1659847263618
GPR[EPVAP]-1659847265006
GPR[SPVATF]-1659847265007
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847266193
GPR[EPVS]-1659847266193
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
this.datasets.set(0,rangeAxis);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847266196
GPR[SPVAP]-1659847266196
GPR[EPVAP]-1659847267577
GPR[SPVATF]-1659847267577
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847268752
GPR[EPVS]-1659847268752
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
this.mapDatasetToRangeAxis(0,0);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847268754
GPR[SPVAP]-1659847268754
GPR[EPVAP]-1659847270170
GPR[SPVATF]-1659847270170
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847271345
GPR[EPVS]-1659847271345
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
this.drawSharedDomainAxis=false;
this.datasets.set(0,rangeAxis);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847271347
GPR[SPVAP]-1659847271347
GPR[EPVAP]-1659847272814
GPR[SPVATF]-1659847272814
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847275722
GPR[EPVS]-1659847275722
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
this.drawSharedDomainAxis=false;
this.mapDatasetToRangeAxis(0,0);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847275724
GPR[SPVAP]-1659847275724
GPR[EPVAP]-1659847277133
GPR[SPVATF]-1659847277133
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847278284
GPR[EPVS]-1659847278284
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
this.datasets.set(0,rangeAxis);
this.mapDatasetToRangeAxis(0,0);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847278287
GPR[SPVAP]-1659847278287
GPR[EPVAP]-1659847279678
GPR[SPVATF]-1659847279678
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847280829
GPR[EPVS]-1659847280829
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
this.drawSharedDomainAxis=false;
this.datasets.set(0,rangeAxis);
this.mapDatasetToRangeAxis(0,0);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847280831
GPR[SPVAP]-1659847280831
GPR[EPVAP]-1659847282324
GPR[SPVATF]-1659847282324
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847283513
GPR[EPVS]-1659847283513
========
this.datasets=new ObjectList();
if((ValueDataset)this.datasets.get(crosshairDatasetIndex)!=null){
existing.removeChangeListener(this);
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847283515
GPR[SPVAP]-1659847283515
GPR[EPVAP]-1659847284355
GPR[EPVS]-1659847284355
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(this.dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847284357
GPR[SPVAP]-1659847284357
GPR[EPVAP]-1659847285192
GPR[EPVS]-1659847285192
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
rangeAxis.addChangeListener(this);
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847285196
GPR[SPVAP]-1659847285196
GPR[EPVAP]-1659847286582
GPR[SPVATF]-1659847286582
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847287733
GPR[EPVS]-1659847287733
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
this.datasets.set(0,rangeAxis);
if(dataset!=null){
rangeAxis.addChangeListener(this);
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847287735
GPR[SPVAP]-1659847287735
GPR[EPVAP]-1659847289180
GPR[SPVATF]-1659847289180
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847290328
GPR[EPVS]-1659847290328
========
this.datasets.set(crosshairDatasetIndex,domainAxis);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847290330
GPR[SPVAP]-1659847290330
GPR[EPVAP]-1659847291722
GPR[SPVATF]-1659847291722
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847292892
GPR[EPVS]-1659847292892
========
if(domainAxis!=null){
axis.configure();
axis.addChangeListener(this);
}
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847292895
GPR[SPVAP]-1659847292895
GPR[EPVAP]-1659847293767
GPR[EPVS]-1659847293767
========
this.datasets.set(crosshairDatasetIndex,rangeAxis);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847293770
GPR[SPVAP]-1659847293770
GPR[EPVAP]-1659847295190
GPR[SPVATF]-1659847295190
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847296338
GPR[EPVS]-1659847296338
========
if(rangeAxis!=null){
axis.configure();
axis.addChangeListener(this);
}
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847296341
GPR[SPVAP]-1659847296341
GPR[EPVAP]-1659847297182
GPR[EPVS]-1659847297182
========
this.datasets=new ObjectList();
this.datasets.set(0,renderer);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847297184
GPR[SPVAP]-1659847297184
GPR[EPVAP]-1659847298600
GPR[SPVATF]-1659847298600
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847299754
GPR[EPVS]-1659847299754
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
renderer.addChangeListener(this);
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847299757
GPR[SPVAP]-1659847299757
GPR[EPVAP]-1659847301202
GPR[SPVATF]-1659847301202
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847302363
GPR[EPVS]-1659847302363
========
this.datasets=new ObjectList();
if(renderer!=null){
existing.removeChangeListener(this);
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847302365
GPR[SPVAP]-1659847302365
GPR[EPVAP]-1659847303211
GPR[EPVS]-1659847303211
========
this.datasets=new ObjectList();
this.datasets.set(0,renderer);
if(dataset!=null){
renderer.addChangeListener(this);
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847303213
GPR[SPVAP]-1659847303213
GPR[EPVAP]-1659847304621
GPR[SPVATF]-1659847304621
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847305797
GPR[EPVS]-1659847305797
========
new MultiplePiePlot(dataset).setBackgroundPaint(null);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847305799
GPR[SPVAP]-1659847305799
GPR[EPVAP]-1659847307185
GPR[SPVATF]-1659847307185
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847308382
GPR[EPVS]-1659847308382
========
this.datasets=new ObjectList();
this.datasets.set(0,(ValueAxis)rangeAxis.clone());
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847308384
GPR[SPVAP]-1659847308384
GPR[EPVAP]-1659847309230
GPR[EPVS]-1659847309230
========
this.datasets=new ObjectList();
this.datasets.set(0,(CategoryItemRenderer)(PublicCloneable)renderer.clone());
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847309232
GPR[SPVAP]-1659847309232
GPR[EPVAP]-1659847310071
GPR[EPVS]-1659847310071
========
fireChangeEvent();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847310073
GPR[SPVAP]-1659847310073
GPR[EPVAP]-1659847311494
GPR[SPVATF]-1659847311494
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847312655
GPR[EPVS]-1659847312655
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
this.datasets[0]=dataset;
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847312658
GPR[SPVAP]-1659847312658
GPR[EPVAP]-1659847313511
GPR[EPVS]-1659847313511
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(clone.dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847313514
GPR[SPVAP]-1659847313514
GPR[EPVAP]-1659847314367
GPR[EPVS]-1659847314367
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
this.columnCount=dataset.getColumnCount();
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847314370
GPR[SPVAP]-1659847314370
GPR[EPVAP]-1659847315226
GPR[EPVS]-1659847315226
========
setSelectionState(this);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847315229
GPR[SPVAP]-1659847315229
GPR[EPVAP]-1659847316100
GPR[EPVS]-1659847316100
========
if(dataset.getRowCount()==0||dataset.getColumnCount()==0){
return true;
}
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847316103
GPR[SPVAP]-1659847316103
GPR[EPVAP]-1659847316935
GPR[EPVS]-1659847316935
========
this.datasets=new ObjectList();
this.anchorValue=0.8;
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847316938
GPR[SPVAP]-1659847316938
GPR[EPVAP]-1659847318359
GPR[SPVATF]-1659847318359
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847319550
GPR[EPVS]-1659847319550
========
this.domainCrosshairRowKey=rowKey;
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847319554
GPR[SPVAP]-1659847319554
GPR[EPVAP]-1659847320408
GPR[EPVS]-1659847320408
========
this.domainCrosshairRowKey=columnKey;
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847320410
GPR[SPVAP]-1659847320410
GPR[EPVAP]-1659847321273
GPR[EPVS]-1659847321273
========
this.dataset=dataset;
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847321276
GPR[SPVAP]-1659847321276
GPR[EPVAP]-1659847322122
GPR[EPVS]-1659847322122
========
if(super.findRangeBounds(dataset,rangeCrosshairLockedOnData)!=null){
if(this.rangeCrosshairLockedOnData){
result=Range.expandToInclude(result,this.anchorValue);
}
}
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847322125
GPR[SPVAP]-1659847322125
GPR[EPVAP]-1659847322987
GPR[EPVS]-1659847322987
========
this.datasets=new ObjectList();
this.datasets.set(0,DEFAULT_VALUE_LABEL_FONT);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847322989
GPR[SPVAP]-1659847322989
GPR[EPVAP]-1659847324416
GPR[SPVATF]-1659847324416
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847325562
GPR[EPVS]-1659847325562
========
if(rangeCrosshairLockedOnData){
fireChangeEvent();
}
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847325564
GPR[SPVAP]-1659847325564
GPR[EPVAP]-1659847326978
GPR[SPVATF]-1659847326978
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847328130
GPR[EPVS]-1659847328130
========
if(rangeCrosshairLockedOnData){
fireChangeEvent();
}
this.datasets=new ObjectList();
this.datasets.set(0,DEFAULT_VALUE_LABEL_FONT);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847328133
GPR[SPVAP]-1659847328133
GPR[EPVAP]-1659847329577
GPR[SPVATF]-1659847329577
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847330717
GPR[EPVS]-1659847330717
========
this.datasets=new ObjectList();
if(dataset.getValue(crosshairDatasetIndex,crosshairDatasetIndex)!=null){
anchorValue=anchorValue+n.doubleValue();
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847330720
GPR[SPVAP]-1659847330720
GPR[EPVAP]-1659847331580
GPR[EPVS]-1659847331580
========
if(rangeCrosshairLockedOnData){
notifyListeners(new RendererChangeEvent(this));
}
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847331583
GPR[SPVAP]-1659847331583
GPR[EPVAP]-1659847332501
GPR[EPVS]-1659847332501
========
fireChartChanged();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847332504
GPR[SPVAP]-1659847332504
GPR[EPVAP]-1659847333371
GPR[EPVS]-1659847333371
========
this.datasets=new ObjectList();
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'axis\' argument.");
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847333374
GPR[SPVAP]-1659847333374
GPR[EPVAP]-1659847334760
GPR[SPVATF]-1659847334760
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847335935
GPR[EPVS]-1659847335935
========
rangeAxis.setPlot(this);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847335938
GPR[SPVAP]-1659847335938
GPR[EPVAP]-1659847337334
GPR[SPVATF]-1659847337335
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847338508
GPR[EPVS]-1659847338508
========
rangeAxis.addChangeListener(this);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847338511
GPR[SPVAP]-1659847338511
GPR[EPVAP]-1659847339905
GPR[SPVATF]-1659847339905
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847341062
GPR[EPVS]-1659847341062
========
this.rangeAxis=rangeAxis;
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847341064
GPR[SPVAP]-1659847341064
GPR[EPVAP]-1659847341915
GPR[EPVS]-1659847341915
========
rangeAxis.setPlot(this);
this.datasets=new ObjectList();
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'axis\' argument.");
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847341917
GPR[SPVAP]-1659847341917
GPR[EPVAP]-1659847343321
GPR[SPVATF]-1659847343321
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847344464
GPR[EPVS]-1659847344464
========
rangeAxis.addChangeListener(this);
this.datasets=new ObjectList();
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'axis\' argument.");
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847344467
GPR[SPVAP]-1659847344467
GPR[EPVAP]-1659847347687
GPR[SPVATF]-1659847347687
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847348857
GPR[EPVS]-1659847348857
========
fireChangeEvent();
this.datasets=new ObjectList();
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'axis\' argument.");
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847348859
GPR[SPVAP]-1659847348859
GPR[EPVAP]-1659847350342
GPR[SPVATF]-1659847350342
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847351498
GPR[EPVS]-1659847351498
========
rangeAxis.setPlot(this);
rangeAxis.addChangeListener(this);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847351501
GPR[SPVAP]-1659847351501
GPR[EPVAP]-1659847352907
GPR[SPVATF]-1659847352907
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847354062
GPR[EPVS]-1659847354062
========
rangeAxis.setPlot(this);
fireChangeEvent();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847354065
GPR[SPVAP]-1659847354065
GPR[EPVAP]-1659847355489
GPR[SPVATF]-1659847355489
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847356677
GPR[EPVS]-1659847356677
========
rangeAxis.addChangeListener(this);
fireChangeEvent();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847356680
GPR[SPVAP]-1659847356680
GPR[EPVAP]-1659847358126
GPR[SPVATF]-1659847358126
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847359285
GPR[EPVS]-1659847359285
========
rangeAxis.setPlot(this);
rangeAxis.addChangeListener(this);
this.datasets=new ObjectList();
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'axis\' argument.");
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847359288
GPR[SPVAP]-1659847359288
GPR[EPVAP]-1659847360703
GPR[SPVATF]-1659847360703
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847361888
GPR[EPVS]-1659847361888
========
rangeAxis.setPlot(this);
fireChangeEvent();
this.datasets=new ObjectList();
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'axis\' argument.");
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847361891
GPR[SPVAP]-1659847361891
GPR[EPVAP]-1659847363322
GPR[SPVATF]-1659847363322
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847364492
GPR[EPVS]-1659847364492
========
rangeAxis.addChangeListener(this);
fireChangeEvent();
this.datasets=new ObjectList();
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'axis\' argument.");
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847364494
GPR[SPVAP]-1659847364494
GPR[EPVAP]-1659847365890
GPR[SPVATF]-1659847365890
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847367072
GPR[EPVS]-1659847367072
========
rangeAxis.setPlot(this);
rangeAxis.addChangeListener(this);
fireChangeEvent();
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847367078
GPR[SPVAP]-1659847367078
GPR[EPVAP]-1659847368532
GPR[SPVATF]-1659847368532
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847369676
GPR[EPVS]-1659847369676
========
rangeAxis.setPlot(this);
rangeAxis.addChangeListener(this);
fireChangeEvent();
this.datasets=new ObjectList();
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'axis\' argument.");
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847369679
GPR[SPVAP]-1659847369679
GPR[EPVAP]-1659847371112
GPR[SPVATF]-1659847371112
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847372269
GPR[EPVS]-1659847372269
========
this.rangeAxis=axis;
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847372272
GPR[SPVAP]-1659847372272
GPR[EPVAP]-1659847373111
GPR[EPVS]-1659847373111
========
this.rangeAxis.addChangeListener(this);
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847373114
GPR[SPVAP]-1659847373114
GPR[EPVAP]-1659847373976
GPR[EPVS]-1659847373976
========
notifyListeners(new TitleChangeEvent(this));
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847373979
GPR[SPVAP]-1659847373979
GPR[EPVAP]-1659847374863
GPR[EPVS]-1659847374863
========
fireDatasetChanged(new DatasetChangeInfo());
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847374867
GPR[SPVAP]-1659847374867
GPR[EPVAP]-1659847375744
GPR[EPVS]-1659847375744
========
this.datasets=new ObjectList();
if(crosshairDatasetIndex<0||index>getSubtitleCount()){
throw new IllegalArgumentException("The \'index\' argument is out of range.");
}
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847375747
GPR[SPVAP]-1659847375747
GPR[EPVAP]-1659847376596
GPR[EPVS]-1659847376596
========
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=crosshairDatasetIndex){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847376600
GPR[SPVAP]-1659847376600
GPR[EPVAP]-1659847377454
GPR[EPVS]-1659847377454
========
this.datasets.set(crosshairDatasetIndex,rangeAxis);
if(rangeAxis!=null){
axis.configure();
axis.addChangeListener(this);
}
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847377456
GPR[SPVAP]-1659847377457
GPR[EPVAP]-1659847378313
GPR[EPVS]-1659847378313
========
this.datasets=new ObjectList();
this.dataset=dataset;
this.datasets.set(0,dataset);
if(this.dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847378316
GPR[SPVAP]-1659847378316
GPR[EPVAP]-1659847379205
GPR[EPVS]-1659847379205
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
this.datasets=new ObjectList();
this.dataset=dataset;
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847379207
GPR[SPVAP]-1659847379207
GPR[EPVAP]-1659847380061
GPR[EPVS]-1659847380061
========
datasetChanged(new DatasetChangeEvent(this,dataset,new DatasetChangeInfo()));
this.datasets=new ObjectList();
this.dataset=dataset;
this.datasets.set(0,dataset);
if(this.dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847380064
GPR[SPVAP]-1659847380064
GPR[EPVAP]-1659847380918
GPR[EPVS]-1659847380918
========
if(annotations.size()==0){
throw new IllegalArgumentException("Empty list not permitted.");
}
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847380923
GPR[SPVAP]-1659847380923
GPR[EPVAP]-1659847382362
GPR[SPVATF]-1659847382362
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847383545
GPR[EPVS]-1659847383545
========
if(annotations.size()==0){
throw new IllegalArgumentException("Empty list not permitted.");
}
this.datasets=new ObjectList();
this.datasets.set(0,dataset);
if(dataset==null){
dataset.addChangeListener(this);
}

========
GPR[SPVS]-1659847383547
GPR[SPVAP]-1659847383547
GPR[EPVAP]-1659847384998
GPR[SPVATF]-1659847384999
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847386165
GPR[EPVS]-1659847386165
GPR[ESUN]-1659847386167
GPR[SSUN]-1659847386167
org.jfree.chart.plot.CategoryPlot,601
GPR[ESUN]-1659847386689
GPR[SSUN]-1659847386689
org.jfree.chart.plot.CategoryPlot,605
========
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);
if(dataset!=null){
dataset.addChangeListener(this);
}
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);

========
GPR[SPVS]-1659847388956
GPR[SPVAP]-1659847388956
GPR[EPVAP]-1659847393580
GPR[SPVATF]-1659847393580
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847394776
GPR[EPVS]-1659847394776
========
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(dataset!=null){
dataset.addChangeListener(this);
}
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);

========
GPR[SPVS]-1659847394778
GPR[SPVAP]-1659847394778
GPR[EPVAP]-1659847396228
GPR[SPVATF]-1659847396228
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847397397
GPR[EPVS]-1659847397397
========
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);
setRangeAxisLocation(AxisLocation.TOP_OR_LEFT,false);
if(dataset!=null){
dataset.addChangeListener(this);
}
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);

========
GPR[SPVS]-1659847397400
GPR[SPVAP]-1659847397400
GPR[EPVAP]-1659847398844
GPR[SPVATF]-1659847398844
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847400001
GPR[EPVS]-1659847400001
========
if(dataset==null){
dataset.addChangeListener(this);
}
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);

========
GPR[SPVS]-1659847400003
GPR[SPVAP]-1659847400003
GPR[EPVAP]-1659847401408
GPR[SPVATF]-1659847401408
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847402588
GPR[EPVS]-1659847402588
========
this.dataset=dataset;
if(dataset!=null){
dataset.addChangeListener(this);
}
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);

========
GPR[SPVS]-1659847402591
GPR[SPVAP]-1659847402591
GPR[EPVAP]-1659847403442
GPR[EPVS]-1659847403442
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);

========
GPR[SPVS]-1659847403445
GPR[SPVAP]-1659847403445
GPR[EPVAP]-1659847404851
GPR[SPVATF]-1659847404851
TESTING : org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660
GPR[EPVATF]-1659847406011
GPR[EPVS]-1659847406011
========
if(this.dataset!=null){
dataset.addChangeListener(this);
}
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);

========
GPR[SPVS]-1659847406014
GPR[SPVAP]-1659847406014
GPR[EPVAP]-1659847406898
GPR[EPVS]-1659847406898
========
if(this.dataset==null){
dataset.addChangeListener(this);
}
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);

========
GPR[SPVS]-1659847406901
GPR[SPVAP]-1659847406901
GPR[EPVAP]-1659847407766
GPR[EPVS]-1659847407766
========
if(dataset!=null){
this.datasets[0]=dataset;
dataset.addChangeListener(this);
}
this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);
setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);

========
GPR[SPVS]-1659847407769
GPR[SPVAP]-1659847407769
GPR[EPVAP]-1659847408631
GPR[EPVS]-1659847408631
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007fd84183fa20, pid=2503395, tid=140567101507328
#
# JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# J 5498 C2 cofix.core.parser.node.expr.InfixExpr.match(Lcofix/core/parser/node/Node;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)Z (1104 bytes) @ 0x00007fd84183fa20 [0x00007fd84183c3e0+0x3640]
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# script/workingdir/SimFix/chart/chart_1_buggy/hs_err_pid2503395.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#
End running Chart/1 results at /experiment_home///results/SimFix/Chart/1/seed_260/
\n\nNode: host-75\n
\n\nDate: Sat 06 Aug 2022 09:43:28 PM PDT\n
Removing checked out dir script/workingdir/SimFix/chart/chart_1_buggy
GPR[SSLE]-1659847408663
GPR[ESLE]-1659847468669
