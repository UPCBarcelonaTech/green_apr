Sleep 1m start
GPR[SSLI]-1659862550573
GPR[ESLI]-1659862610577
Running SimFix Math 73b
Timezone: America/Los_Angeles
Seed 261
Java 8: /experiment_home/jdk1.8.0_45/bin 
DEFECTS4J_HOME: /experiment_home/defects4j/
Creating out dir /experiment_home///results/SimFix/Math/73/seed_261/
Project lc: math
New out script/workingdir/SimFix/math/math_73_buggy
The file script/workingdir/SimFix/math/math_73_buggy does not exist!
script/workingdir/SimFix/math/math_73_buggy
Current directory: script/workingdir/SimFix/math/math_73_buggy
classpath:  script/workingdir/SimFix/math/math_73_buggy/target/classes:script/workingdir/SimFix/math/math_73_buggy/target/test-classes:/experiment_home/defects4j/framework/projects/lib/junit-4.11.jar:script/workingdir/SimFix/math/math_73_buggy/lib/junit-4.4.jar
Src java:  /src/main/java
Classes Java:  /target/classes
Src Test:  /src/test/java
Classes Test:  /target/test-classes
GPR[SSLB]-1659862625216
GPR[ESLB]-1659862685222
Calling SimFix: at script/workingdir/SimFix/math/math_73_buggy
build.xml
checkstyle.xml
d4j-info
defects4j.build.properties
doap_math.rdf
findbugs-exclude-filter.xml
license-header.txt
LICENSE.txt
NOTICE.txt
pom.xml
PROPOSAL.html
RELEASE-NOTES.txt
src
target
test-jar.xml
content current dir: build.xml checkstyle.xml d4j-info defects4j.build.properties doap_math.rdf findbugs-exclude-filter.xml license-header.txt LICENSE.txt NOTICE.txt pom.xml PROPOSAL.html RELEASE-NOTES.txt src target test-jar.xml
Node: host-67
Date init: Sun 07 Aug 2022 01:58:07 AM PDT
OAR_JOB_ID: 3720517
script/workingdir/SimFix/
GPR[SSUP]-1659862687437
=================================================
Project : math_73	start : 22/08/07 01:58

GPR[ESUP]-1659862689597
GPR[SFL]-1659862689977
GPR[EFL]-1659862690020
GPR[SFP]-1659862690020
TIMEOUT : 18000000
GPR[SSUN]-1659862690029
org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl,209
UNKNOWN ASTNode type : catch (ClassCastException cce) {
  throw MathRuntimeException.createIllegalArgumentException("function is not differentiable");
}

UNKNOWN ASTNode type : catch (ConvergenceException ex) {
  throw MathRuntimeException.createIllegalArgumentException("cannot convert given object to a fraction number: {0}",ex.getLocalizedMessage());
}

UNKNOWN ASTNode type : catch (ClassCastException ex) {
  throw MathRuntimeException.createIllegalArgumentException("instance of class {0} not comparable to existing values",v.getClass().getName());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException(UNSUPPORTED_METHOD_MESSAGE,percentileImpl.getClass().getName(),SET_QUANTILE_METHOD_NAME);
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException(ILLEGAL_ACCESS_MESSAGE,SET_QUANTILE_METHOD_NAME,percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException(ILLEGAL_ACCESS_MESSAGE,SET_QUANTILE_METHOD_NAME,percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
if(lower>upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862691561
GPR[SPVAP]-1659862691561
GPR[EPVAP]-1659862696594
GPR[SPVATF]-1659862696594
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862698386
GPR[EPVS]-1659862698386
========
if(x0>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862698387
GPR[SPVAP]-1659862698387
GPR[EPVAP]-1659862699411
GPR[EPVS]-1659862699411
========
if(lower>=x1){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862699413
GPR[SPVAP]-1659862699413
GPR[EPVAP]-1659862700419
GPR[EPVS]-1659862700419
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",lower,upper);
}

========
GPR[SPVS]-1659862700420
GPR[SPVAP]-1659862700420
GPR[EPVAP]-1659862702286
GPR[SPVATF]-1659862702286
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862704053
GPR[EPVS]-1659862704053
========
if(lower>upper){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",lower,upper);
}

========
GPR[SPVS]-1659862704054
GPR[SPVAP]-1659862704054
GPR[EPVAP]-1659862705925
GPR[SPVATF]-1659862705925
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862707744
GPR[EPVS]-1659862707744
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}

========
GPR[SPVS]-1659862707746
GPR[SPVAP]-1659862707746
GPR[EPVAP]-1659862709654
GPR[SPVATF]-1659862709654
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862711458
GPR[EPVS]-1659862711458
========
if(d>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862711461
GPR[SPVAP]-1659862711461
GPR[EPVAP]-1659862712478
GPR[EPVS]-1659862712478
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",upper,lower);
}

========
GPR[SPVS]-1659862712479
GPR[SPVAP]-1659862712479
GPR[EPVAP]-1659862714350
GPR[SPVATF]-1659862714350
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862716115
GPR[EPVS]-1659862716115
========
if(degreesOfFreedom>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862716117
GPR[SPVAP]-1659862716117
GPR[EPVAP]-1659862717162
GPR[EPVS]-1659862717162
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException(NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE,lower);
}

========
GPR[SPVS]-1659862717163
GPR[SPVAP]-1659862717163
GPR[EPVAP]-1659862718182
GPR[EPVS]-1659862718182
========
if(length>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862718184
GPR[SPVAP]-1659862718184
GPR[EPVAP]-1659862719212
GPR[EPVS]-1659862719212
========
if(dimensionSize.length>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862719214
GPR[SPVAP]-1659862719214
GPR[EPVAP]-1659862720230
GPR[EPVS]-1659862720230
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException(DIMENSION_MISMATCH_MESSAGE,0,dimensionSize.length);
}

========
GPR[SPVS]-1659862720231
GPR[SPVAP]-1659862720231
GPR[EPVAP]-1659862721252
GPR[EPVS]-1659862721252
========
if(length>upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862721253
GPR[SPVAP]-1659862721253
GPR[EPVAP]-1659862722250
GPR[EPVS]-1659862722250
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("expected array length = {0}, must be at least 2",expected.length);
}

========
GPR[SPVS]-1659862722252
GPR[SPVAP]-1659862722252
GPR[EPVAP]-1659862723263
GPR[EPVS]-1659862723263
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("observed array length = {0}, must be at least 2",observed1.length);
}

========
GPR[SPVS]-1659862723264
GPR[SPVAP]-1659862723264
GPR[EPVAP]-1659862724277
GPR[EPVS]-1659862724277
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension: {0} (must be at least 2)",in.length);
}

========
GPR[SPVS]-1659862724279
GPR[SPVAP]-1659862724279
GPR[EPVAP]-1659862725285
GPR[EPVS]-1659862725285
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("two or more values required in each category, one has {0}",array.length);
}

========
GPR[SPVS]-1659862725287
GPR[SPVAP]-1659862725287
GPR[EPVAP]-1659862726300
GPR[EPVS]-1659862726300
========
if(lower>=length){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862726302
GPR[SPVAP]-1659862726302
GPR[EPVAP]-1659862727314
GPR[EPVS]-1659862727314
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}

========
GPR[SPVS]-1659862727316
GPR[SPVAP]-1659862727316
GPR[EPVAP]-1659862729197
GPR[SPVATF]-1659862729197
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862730969
GPR[EPVS]-1659862730969
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException(WRONG_ORDER_ENDPOINTS_MESSAGE,lower,upper);
}

========
GPR[SPVS]-1659862730971
GPR[SPVAP]-1659862730971
GPR[EPVAP]-1659862731970
GPR[EPVS]-1659862731970
========
if(x0>upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862731972
GPR[SPVAP]-1659862731972
GPR[EPVAP]-1659862733002
GPR[EPVS]-1659862733002
========
if(lower>x1){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862733003
GPR[SPVAP]-1659862733003
GPR[EPVAP]-1659862734032
GPR[EPVS]-1659862734032
========
if(x0>=x1){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862734033
GPR[SPVAP]-1659862734033
GPR[EPVAP]-1659862735041
GPR[EPVS]-1659862735041
========
if(x0>x1){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862735043
GPR[SPVAP]-1659862735043
GPR[EPVAP]-1659862736046
GPR[EPVS]-1659862736046
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException(EMPTY_ARRAY_MESSAGE);
}

========
GPR[SPVS]-1659862736047
GPR[SPVAP]-1659862736047
GPR[EPVAP]-1659862737055
GPR[EPVS]-1659862737055
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException(AT_LEAST_ONE_ROW_MESSAGE);
}

========
GPR[SPVS]-1659862737056
GPR[SPVAP]-1659862737056
GPR[EPVAP]-1659862738071
GPR[EPVS]-1659862738071
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException(AT_LEAST_ONE_COLUMN_MESSAGE);
}

========
GPR[SPVS]-1659862738073
GPR[SPVAP]-1659862738073
GPR[EPVAP]-1659862739088
GPR[EPVS]-1659862739088
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}

========
GPR[SPVS]-1659862739089
GPR[SPVAP]-1659862739089
GPR[EPVAP]-1659862740955
GPR[SPVATF]-1659862740955
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862742742
GPR[EPVS]-1659862742742
========
if(lowerBound>=lowerBound){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862742750
GPR[SPVAP]-1659862742750
GPR[EPVAP]-1659862743777
GPR[EPVS]-1659862743777
========
if(upperBound>=upperBound){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862743779
GPR[SPVAP]-1659862743779
GPR[EPVAP]-1659862744805
GPR[EPVS]-1659862744805
========
if(initial>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862744806
GPR[SPVAP]-1659862744806
GPR[EPVAP]-1659862745810
GPR[EPVS]-1659862745810
========
if(lowerBound>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862745811
GPR[SPVAP]-1659862745811
GPR[EPVAP]-1659862746822
GPR[EPVS]-1659862746822
========
if(upperBound>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862746824
GPR[SPVAP]-1659862746824
GPR[EPVAP]-1659862747840
GPR[EPVS]-1659862747840
========
if(lower>=lowerBound){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862747841
GPR[SPVAP]-1659862747841
GPR[EPVAP]-1659862748851
GPR[EPVS]-1659862748851
========
if(lower>=upperBound){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862748852
GPR[SPVAP]-1659862748852
GPR[EPVAP]-1659862749868
GPR[EPVS]-1659862749868
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",lower,upper,result);
}

========
GPR[SPVS]-1659862749870
GPR[SPVAP]-1659862749870
GPR[EPVAP]-1659862751725
GPR[SPVATF]-1659862751725
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862753543
GPR[EPVS]-1659862753543
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("propagation direction mismatch");
}

========
GPR[SPVS]-1659862753545
GPR[SPVAP]-1659862753545
GPR[EPVAP]-1659862755433
GPR[SPVATF]-1659862755433
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862757252
GPR[EPVS]-1659862757252
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("spline partition must have at least {0} points, got {1}",2,knots.length);
}

========
GPR[SPVS]-1659862757254
GPR[SPVAP]-1659862757254
GPR[EPVAP]-1659862758278
GPR[EPVS]-1659862758278
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",2,x.length);
}

========
GPR[SPVS]-1659862758279
GPR[SPVAP]-1659862758279
GPR[EPVAP]-1659862759290
GPR[EPVS]-1659862759290
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",3,x.length);
}

========
GPR[SPVS]-1659862759291
GPR[SPVAP]-1659862759291
GPR[EPVAP]-1659862760306
GPR[EPVS]-1659862760306
========
if(lower*upper>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862760307
GPR[SPVAP]-1659862760307
GPR[EPVAP]-1659862762162
GPR[SPVATF]-1659862762162
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862763969
GPR[EPVS]-1659862763969
========
if(y0>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862763970
GPR[SPVAP]-1659862763970
GPR[EPVAP]-1659862764973
GPR[EPVS]-1659862764973
========
if(y1>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862764974
GPR[SPVAP]-1659862764974
GPR[EPVAP]-1659862766008
GPR[EPVS]-1659862766008
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs, "+"endpoints: [{0}, {1}], values: [{2}, {3}]",result,result,lower,upper);
}

========
GPR[SPVS]-1659862766009
GPR[SPVAP]-1659862766009
GPR[EPVAP]-1659862767884
GPR[SPVATF]-1659862767884
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862769670
GPR[EPVS]-1659862769670
========
if(lower*upper>=upper){
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs, "+"endpoints: [{0}, {1}], values: [{2}, {3}]",result,result,lower,upper);
}

========
GPR[SPVS]-1659862769672
GPR[SPVAP]-1659862769672
GPR[EPVAP]-1659862771529
GPR[SPVATF]-1659862771529
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862773315
GPR[EPVS]-1659862773315
========
if(r>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862773317
GPR[SPVAP]-1659862773317
GPR[EPVAP]-1659862774369
GPR[EPVS]-1659862774369
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("negative complex module {0}",lower);
}

========
GPR[SPVS]-1659862774370
GPR[SPVAP]-1659862774370
GPR[EPVAP]-1659862776233
GPR[SPVATF]-1659862776233
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862778018
GPR[EPVS]-1659862778018
========
if(p>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862778019
GPR[SPVAP]-1659862778019
GPR[EPVAP]-1659862779037
GPR[EPVS]-1659862779037
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("the Poisson mean must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862779038
GPR[SPVAP]-1659862779038
GPR[EPVAP]-1659862780886
GPR[SPVATF]-1659862780886
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862782689
GPR[EPVS]-1659862782689
========
if(alpha>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862782691
GPR[SPVAP]-1659862782691
GPR[EPVAP]-1659862783716
GPR[EPVS]-1659862783716
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("shape must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862783717
GPR[SPVAP]-1659862783717
GPR[EPVAP]-1659862785609
GPR[SPVATF]-1659862785609
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862787377
GPR[EPVS]-1659862787377
========
if(beta>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862787379
GPR[SPVAP]-1659862787379
GPR[EPVAP]-1659862788397
GPR[EPVS]-1659862788397
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("scale must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862788398
GPR[SPVAP]-1659862788398
GPR[EPVAP]-1659862790288
GPR[SPVATF]-1659862790288
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862792094
GPR[EPVS]-1659862792094
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("alpha must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862792096
GPR[SPVAP]-1659862792096
GPR[EPVAP]-1659862793977
GPR[SPVATF]-1659862793977
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862795769
GPR[EPVS]-1659862795769
========
if(alpha>=upper){
throw MathRuntimeException.createIllegalArgumentException("alpha must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862795770
GPR[SPVAP]-1659862795770
GPR[EPVAP]-1659862796786
GPR[EPVS]-1659862796786
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("beta must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862796787
GPR[SPVAP]-1659862796787
GPR[EPVAP]-1659862798662
GPR[SPVATF]-1659862798662
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862800447
GPR[EPVS]-1659862800447
========
if(beta>=upper){
throw MathRuntimeException.createIllegalArgumentException("beta must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862800448
GPR[SPVAP]-1659862800448
GPR[EPVAP]-1659862801487
GPR[EPVS]-1659862801487
========
if(mean>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862801488
GPR[SPVAP]-1659862801488
GPR[EPVAP]-1659862802497
GPR[EPVS]-1659862802497
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("mean must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862802499
GPR[SPVAP]-1659862802499
GPR[EPVAP]-1659862804381
GPR[SPVATF]-1659862804381
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862806165
GPR[EPVS]-1659862806165
========
if(sd>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862806166
GPR[SPVAP]-1659862806166
GPR[EPVAP]-1659862807178
GPR[EPVS]-1659862807178
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862807179
GPR[SPVAP]-1659862807179
GPR[EPVAP]-1659862809064
GPR[SPVATF]-1659862809064
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862810824
GPR[EPVS]-1659862810824
========
if(s>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862810826
GPR[SPVAP]-1659862810826
GPR[EPVAP]-1659862811838
GPR[EPVS]-1659862811838
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("degrees of freedom must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862811840
GPR[SPVAP]-1659862811840
GPR[EPVAP]-1659862813697
GPR[SPVATF]-1659862813697
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862815530
GPR[EPVS]-1659862815530
========
if(degreesOfFreedom>=upper){
throw MathRuntimeException.createIllegalArgumentException("degrees of freedom must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862815531
GPR[SPVAP]-1659862815531
GPR[EPVAP]-1659862816538
GPR[EPVS]-1659862816538
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("invalid exponent {0} (must be positive)",lower);
}

========
GPR[SPVS]-1659862816540
GPR[SPVAP]-1659862816540
GPR[EPVAP]-1659862818412
GPR[SPVATF]-1659862818412
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862820235
GPR[EPVS]-1659862820235
========
if(s>=upper){
throw MathRuntimeException.createIllegalArgumentException("invalid exponent {0} (must be positive)",lower);
}

========
GPR[SPVS]-1659862820236
GPR[SPVAP]-1659862820236
GPR[EPVAP]-1659862821239
GPR[EPVS]-1659862821239
========
if(mean>=upper){
throw MathRuntimeException.createIllegalArgumentException("the Poisson mean must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862821242
GPR[SPVAP]-1659862821242
GPR[EPVAP]-1659862822262
GPR[EPVS]-1659862822262
========
if(sigma>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862822264
GPR[SPVAP]-1659862822264
GPR[EPVAP]-1659862823266
GPR[EPVS]-1659862823266
========
if(x[i]>=x[i+1]){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862823268
GPR[SPVAP]-1659862823268
GPR[EPVAP]-1659862824302
GPR[EPVS]-1659862824302
========
if(p>=p){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862824303
GPR[SPVAP]-1659862824303
GPR[EPVAP]-1659862825310
GPR[EPVS]-1659862825310
========
if(lower>=p){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862825311
GPR[SPVAP]-1659862825311
GPR[EPVAP]-1659862826325
GPR[EPVS]-1659862826325
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("out of bounds quantile value: {0}, must be in (0, 100]",lower);
}

========
GPR[SPVS]-1659862826326
GPR[SPVAP]-1659862826326
GPR[EPVAP]-1659862828187
GPR[SPVATF]-1659862828187
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862829961
GPR[EPVS]-1659862829961
========
if(p>=upper){
throw MathRuntimeException.createIllegalArgumentException("out of bounds quantile value: {0}, must be in (0, 100]",lower);
}

========
GPR[SPVS]-1659862829963
GPR[SPVAP]-1659862829963
GPR[EPVAP]-1659862830971
GPR[EPVS]-1659862830971
========
if(lower>=p){
throw MathRuntimeException.createIllegalArgumentException("out of bounds quantile value: {0}, must be in (0, 100]",lower);
}

========
GPR[SPVS]-1659862830973
GPR[SPVAP]-1659862830973
GPR[EPVAP]-1659862832000
GPR[EPVS]-1659862832000
========
if(p>=p){
throw MathRuntimeException.createIllegalArgumentException("out of bounds quantile value: {0}, must be in (0, 100]",lower);
}

========
GPR[SPVS]-1659862832001
GPR[SPVAP]-1659862832001
GPR[EPVAP]-1659862833006
GPR[EPVS]-1659862833006
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException(OUT_OF_RANGE_POINT,lower,0.0,1.0);
}

========
GPR[SPVS]-1659862833007
GPR[SPVAP]-1659862833007
GPR[EPVAP]-1659862834037
GPR[EPVS]-1659862834037
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}

========
GPR[SPVS]-1659862834038
GPR[SPVAP]-1659862834038
GPR[EPVAP]-1659862835895
GPR[SPVATF]-1659862835895
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862837686
GPR[EPVS]-1659862837686
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in first observed array");
}

========
GPR[SPVS]-1659862837688
GPR[SPVAP]-1659862837688
GPR[EPVAP]-1659862839559
GPR[SPVATF]-1659862839560
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862841380
GPR[EPVS]-1659862841380
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in second observed array");
}

========
GPR[SPVS]-1659862841381
GPR[SPVAP]-1659862841381
GPR[EPVAP]-1659862843254
GPR[SPVATF]-1659862843255
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862845048
GPR[EPVS]-1659862845049
========
if(normProduct>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862845050
GPR[SPVAP]-1659862845050
GPR[EPVAP]-1659862846053
GPR[EPVS]-1659862846053
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("zero norm for rotation defining vector");
}

========
GPR[SPVS]-1659862846055
GPR[SPVAP]-1659862846055
GPR[EPVAP]-1659862847947
GPR[SPVATF]-1659862847947
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862849730
GPR[EPVS]-1659862849730
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}

========
GPR[SPVS]-1659862849731
GPR[SPVAP]-1659862849731
GPR[EPVAP]-1659862851664
GPR[SPVATF]-1659862851664
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862853442
GPR[EPVS]-1659862853442
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
GPR[SPVS]-1659862853443
GPR[SPVAP]-1659862853443
GPR[EPVAP]-1659862855364
GPR[SPVATF]-1659862855365
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862857194
GPR[EPVS]-1659862857194
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
GPR[SPVS]-1659862857196
GPR[SPVAP]-1659862857196
GPR[EPVAP]-1659862859075
GPR[SPVATF]-1659862859075
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862860914
GPR[EPVS]-1659862860914
========
if(u1u1>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862860915
GPR[SPVAP]-1659862860915
GPR[EPVAP]-1659862861929
GPR[EPVS]-1659862861929
========
if(lower>=u2u2){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862861930
GPR[SPVAP]-1659862861931
GPR[EPVAP]-1659862862962
GPR[EPVS]-1659862862962
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range",lower,0.0,1.0);
}

========
GPR[SPVS]-1659862862964
GPR[SPVAP]-1659862862964
GPR[EPVAP]-1659862864826
GPR[SPVATF]-1659862864826
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862866601
GPR[EPVS]-1659862866601
========
if(p>=upper){
throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range",lower,0.0,1.0);
}

========
GPR[SPVS]-1659862866603
GPR[SPVAP]-1659862866603
GPR[EPVAP]-1659862867622
GPR[EPVS]-1659862867622
========
if(lower>=p){
throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range",lower,0.0,1.0);
}

========
GPR[SPVS]-1659862867623
GPR[SPVAP]-1659862867623
GPR[EPVAP]-1659862868635
GPR[EPVS]-1659862868635
========
if(p>=p){
throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range",lower,0.0,1.0);
}

========
GPR[SPVS]-1659862868636
GPR[SPVAP]-1659862868636
GPR[EPVAP]-1659862869660
GPR[EPVS]-1659862869660
========
if(alpha>=alpha){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862869661
GPR[SPVAP]-1659862869661
GPR[EPVAP]-1659862870673
GPR[EPVS]-1659862870673
========
if(lower>=alpha){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862870674
GPR[SPVAP]-1659862870674
GPR[EPVAP]-1659862871694
GPR[EPVS]-1659862871694
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0.0,1.0);
}

========
GPR[SPVS]-1659862871695
GPR[SPVAP]-1659862871695
GPR[EPVAP]-1659862873550
GPR[SPVATF]-1659862873550
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862875318
GPR[EPVS]-1659862875318
========
if(alpha>=upper){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0.0,1.0);
}

========
GPR[SPVS]-1659862875320
GPR[SPVAP]-1659862875320
GPR[EPVAP]-1659862876336
GPR[EPVS]-1659862876336
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0,0.5);
}

========
GPR[SPVS]-1659862876338
GPR[SPVAP]-1659862876338
GPR[EPVAP]-1659862878213
GPR[SPVATF]-1659862878213
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862879979
GPR[EPVS]-1659862879979
========
if(alpha>=upper){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0,0.5);
}

========
GPR[SPVS]-1659862879981
GPR[SPVAP]-1659862879981
GPR[EPVAP]-1659862881002
GPR[EPVS]-1659862881002
========
if(lower>=alpha){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0,0.5);
}

========
GPR[SPVS]-1659862881003
GPR[SPVAP]-1659862881003
GPR[EPVAP]-1659862882010
GPR[EPVS]-1659862882010
========
if(alpha>=alpha){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0,0.5);
}

========
GPR[SPVS]-1659862882011
GPR[SPVAP]-1659862882011
GPR[EPVAP]-1659862883035
GPR[EPVS]-1659862883035
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0.0,0.5);
}

========
GPR[SPVS]-1659862883037
GPR[SPVAP]-1659862883037
GPR[EPVAP]-1659862884913
GPR[SPVATF]-1659862884913
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862886696
GPR[EPVS]-1659862886696
========
if(alpha>=upper){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0.0,0.5);
}

========
GPR[SPVS]-1659862886697
GPR[SPVAP]-1659862886697
GPR[EPVAP]-1659862887718
GPR[EPVS]-1659862887718
========
if(lower>=alpha){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0.0,0.5);
}

========
GPR[SPVS]-1659862887719
GPR[SPVAP]-1659862887719
GPR[EPVAP]-1659862888775
GPR[EPVS]-1659862888775
========
if(alpha>=alpha){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",lower,0.0,0.5);
}

========
GPR[SPVS]-1659862888776
GPR[SPVAP]-1659862888776
GPR[EPVAP]-1659862889840
GPR[EPVS]-1659862889840
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,64);
}

========
GPR[SPVS]-1659862889841
GPR[SPVAP]-1659862889841
GPR[EPVAP]-1659862891720
GPR[SPVATF]-1659862891720
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862893555
GPR[EPVS]-1659862893555
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,32);
}

========
GPR[SPVS]-1659862893557
GPR[SPVAP]-1659862893557
GPR[EPVAP]-1659862895455
GPR[SPVATF]-1659862895455
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862897238
GPR[EPVS]-1659862897238
========
if(lower>=result){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862897240
GPR[SPVAP]-1659862897240
GPR[EPVAP]-1659862899110
GPR[SPVATF]-1659862899111
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862900892
GPR[EPVS]-1659862900892
========
if(pos>=upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862900893
GPR[SPVAP]-1659862900893
GPR[EPVAP]-1659862901906
GPR[EPVS]-1659862901906
========
if(lower>=n){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862901908
GPR[SPVAP]-1659862901908
GPR[EPVAP]-1659862902926
GPR[EPVS]-1659862902926
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,getColumnDimension());
}

========
GPR[SPVS]-1659862902928
GPR[SPVAP]-1659862902928
GPR[EPVAP]-1659862903933
GPR[EPVS]-1659862903933
========
if(lower>=0.001*Math.abs(lower)){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862903935
GPR[SPVAP]-1659862903935
GPR[EPVAP]-1659862905791
GPR[SPVATF]-1659862905791
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862907614
GPR[EPVS]-1659862907614
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("{0} wide hole between models time ranges",Math.abs(upper));
}

========
GPR[SPVS]-1659862907616
GPR[SPVAP]-1659862907616
GPR[EPVAP]-1659862909477
GPR[SPVATF]-1659862909477
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862911259
GPR[EPVS]-1659862911259
========
if(lower>0.001*Math.abs(lower)){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862911260
GPR[SPVAP]-1659862911260
GPR[EPVAP]-1659862913185
GPR[SPVATF]-1659862913185
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862914965
GPR[EPVS]-1659862914965
========
if(lower>upper){
throw MathRuntimeException.createIllegalArgumentException("{0} wide hole between models time ranges",Math.abs(upper));
}

========
GPR[SPVS]-1659862914967
GPR[SPVAP]-1659862914967
GPR[EPVAP]-1659862916839
GPR[SPVATF]-1659862916839
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862918615
GPR[EPVS]-1659862918615
========
if(lower>=0.001*Math.abs(lower)){
throw MathRuntimeException.createIllegalArgumentException("{0} wide hole between models time ranges",Math.abs(upper));
}

========
GPR[SPVS]-1659862918617
GPR[SPVAP]-1659862918617
GPR[EPVAP]-1659862920475
GPR[SPVATF]-1659862920475
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862922234
GPR[EPVS]-1659862922234
========
if(lower>0.001*Math.abs(lower)){
throw MathRuntimeException.createIllegalArgumentException("{0} wide hole between models time ranges",Math.abs(upper));
}

========
GPR[SPVS]-1659862922236
GPR[SPVAP]-1659862922236
GPR[EPVAP]-1659862924109
GPR[SPVATF]-1659862924109
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862925955
GPR[EPVS]-1659862925955
========
if(upper>=lower){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862925959
GPR[SPVAP]-1659862925959
GPR[EPVAP]-1659862927841
GPR[SPVATF]-1659862927841
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862929626
GPR[EPVS]-1659862929626
========
if(lower>=upper){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",lower,upper);
}

========
GPR[SPVS]-1659862929627
GPR[SPVAP]-1659862929627
GPR[EPVAP]-1659862931505
GPR[SPVATF]-1659862931505
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862933280
GPR[EPVS]-1659862933280
========
if(upper>=lower){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",lower,upper);
}

========
GPR[SPVS]-1659862933282
GPR[SPVAP]-1659862933282
GPR[EPVAP]-1659862935196
GPR[SPVATF]-1659862935196
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862936993
GPR[EPVS]-1659862936993
========
if(degreesOfFreedom>=upper){
throw MathRuntimeException.createIllegalArgumentException(NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE,lower);
}

========
GPR[SPVS]-1659862936994
GPR[SPVAP]-1659862936994
GPR[EPVAP]-1659862938011
GPR[EPVS]-1659862938011
========
if(dimensionSize.length>upper){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",lower,upper);
}

========
GPR[SPVS]-1659862938014
GPR[SPVAP]-1659862938014
GPR[EPVAP]-1659862939029
GPR[EPVS]-1659862939029
========
if(lower>upper){
throw MathRuntimeException.createIllegalArgumentException(DIMENSION_MISMATCH_MESSAGE,0,dimensionSize.length);
}

========
GPR[SPVS]-1659862939030
GPR[SPVAP]-1659862939030
GPR[EPVAP]-1659862940068
GPR[EPVS]-1659862940068
========
if(dimensionSize.length>=upper){
throw MathRuntimeException.createIllegalArgumentException(DIMENSION_MISMATCH_MESSAGE,0,dimensionSize.length);
}

========
GPR[SPVS]-1659862940069
GPR[SPVAP]-1659862940069
GPR[EPVAP]-1659862941081
GPR[EPVS]-1659862941081
========
if(length>=upper){
throw MathRuntimeException.createIllegalArgumentException(DIMENSION_MISMATCH_MESSAGE,0,dimensionSize.length);
}

========
GPR[SPVS]-1659862941083
GPR[SPVAP]-1659862941083
GPR[EPVAP]-1659862942105
GPR[EPVS]-1659862942105
========
if(dimensionSize.length>upper){
throw MathRuntimeException.createIllegalArgumentException(DIMENSION_MISMATCH_MESSAGE,0,dimensionSize.length);
}

========
GPR[SPVS]-1659862942107
GPR[SPVAP]-1659862942107
GPR[EPVAP]-1659862943105
GPR[EPVS]-1659862943105
========
if(length>upper){
throw MathRuntimeException.createIllegalArgumentException(DIMENSION_MISMATCH_MESSAGE,0,dimensionSize.length);
}

========
GPR[SPVS]-1659862943106
GPR[SPVAP]-1659862943106
GPR[EPVAP]-1659862944140
GPR[EPVS]-1659862944140
========
if(mean>=upper){
throw MathRuntimeException.createIllegalArgumentException("mean must be positive ({0})",lower);
}

========
GPR[SPVS]-1659862944146
GPR[SPVAP]-1659862944146
GPR[EPVAP]-1659862945152
GPR[EPVS]-1659862945152
GPR[ESUN]-1659862945157
GPR[SSUN]-1659862945157
org.apache.commons.math.analysis.solvers.BrentSolver,138
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,initial,yInitial,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659862946631
GPR[SPVAP]-1659862946631
GPR[EPVAP]-1659862951560
GPR[SPVATF]-1659862951560
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862953336
GPR[EPVS]-1659862953336
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,initial,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659862953337
GPR[SPVAP]-1659862953337
GPR[EPVAP]-1659862955272
GPR[SPVATF]-1659862955272
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862957059
GPR[EPVS]-1659862957059
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yInitial,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659862957060
GPR[SPVAP]-1659862957060
GPR[EPVAP]-1659862958914
GPR[SPVATF]-1659862958914
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862960697
GPR[EPVS]-1659862960697
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,initial);

========
GPR[SPVS]-1659862960699
GPR[SPVAP]-1659862960699
GPR[EPVAP]-1659862962602
GPR[SPVATF]-1659862962602
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862964378
GPR[SPVATR]-1659862964378
TESTING : math_73
GPR[EPVATR]-1659862971844
GPR[EPVS]-1659862971844
GPR[PF]-1659862971844
sourceFile  script/workingdir/SimFix/math/math_73_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
location   script/workingdir/SimFix/math/math_73_buggy
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,initial,yMin);

========
GPR[SPVS]-1659862971854
GPR[SPVAP]-1659862971854
GPR[EPVAP]-1659862973743
GPR[SPVATF]-1659862973743
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862975523
GPR[SPVATR]-1659862975523
TESTING : math_73
GPR[EPVATR]-1659862983034
GPR[EPVS]-1659862983034
GPR[PF]-1659862983034
sourceFile  script/workingdir/SimFix/math/math_73_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
location   script/workingdir/SimFix/math/math_73_buggy
========
if(yInitial*yMin<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659862983041
GPR[SPVAP]-1659862983041
GPR[EPVAP]-1659862984892
GPR[SPVATF]-1659862984892
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862986727
GPR[EPVS]-1659862986727
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,min,yMin);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659862986728
GPR[SPVAP]-1659862986728
GPR[EPVAP]-1659862988637
GPR[SPVATF]-1659862988637
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862990407
GPR[EPVS]-1659862990407
========
if(yInitial*yMin<0){
return solve(f,initial,yInitial,max,yMax,min,yMin);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659862990408
GPR[SPVAP]-1659862990408
GPR[EPVAP]-1659862992286
GPR[SPVATF]-1659862992286
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862994104
GPR[EPVS]-1659862994104
========
verifySequence(min,initial,yMin);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659862994107
GPR[SPVAP]-1659862994107
GPR[EPVAP]-1659862996000
GPR[SPVATF]-1659862996000
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659862997794
GPR[SPVATR]-1659862997795
TESTING : math_73
GPR[EPVATR]-1659863005231
GPR[EPVS]-1659863005231
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
clearResult();
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863005234
GPR[SPVAP]-1659863005234
GPR[EPVAP]-1659863007114
GPR[SPVATF]-1659863007114
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863008892
GPR[EPVS]-1659863008892
========
verifyBracketing(min,yMin,f);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863008894
GPR[SPVAP]-1659863008894
GPR[EPVAP]-1659863010746
GPR[SPVATF]-1659863010746
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863012514
GPR[SPVATR]-1659863012515
TESTING : math_73
GPR[EPVATR]-1659863019934
GPR[EPVS]-1659863019934
========
if(y0*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863019937
GPR[SPVAP]-1659863019937
GPR[EPVAP]-1659863020956
GPR[EPVS]-1659863020956
========
if(yInitial*y1<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863020957
GPR[SPVAP]-1659863020957
GPR[EPVAP]-1659863021994
GPR[EPVS]-1659863021994
========
verifyInterval(min,yMin);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863021997
GPR[SPVAP]-1659863021997
GPR[EPVAP]-1659863023861
GPR[SPVATF]-1659863023861
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863025663
GPR[SPVATR]-1659863025663
TESTING : math_73
GPR[EPVATR]-1659863033015
GPR[EPVS]-1659863033015
========
if(fa*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863033017
GPR[SPVAP]-1659863033017
GPR[EPVAP]-1659863034035
GPR[EPVS]-1659863034035
========
if(yInitial*fb<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863034036
GPR[SPVAP]-1659863034036
GPR[EPVAP]-1659863035073
GPR[EPVS]-1659863035073
========
if(initial*initial<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863035075
GPR[SPVAP]-1659863035075
GPR[EPVAP]-1659863036959
GPR[SPVATF]-1659863036959
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863038755
GPR[EPVS]-1659863038755
========
if(initial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863038756
GPR[SPVAP]-1659863038756
GPR[EPVAP]-1659863040620
GPR[SPVATF]-1659863040621
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863042406
GPR[EPVS]-1659863042406
========
if(lowerBound*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863042407
GPR[SPVAP]-1659863042407
GPR[EPVAP]-1659863043430
GPR[EPVS]-1659863043430
========
if(yInitial*initial<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863043431
GPR[SPVAP]-1659863043431
GPR[EPVAP]-1659863045293
GPR[SPVATF]-1659863045293
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863047064
GPR[EPVS]-1659863047064
========
if(yInitial*upperBound<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863047066
GPR[SPVAP]-1659863047066
GPR[EPVAP]-1659863048122
GPR[EPVS]-1659863048122
========
if(yInitial*max<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863048124
GPR[SPVAP]-1659863048124
GPR[EPVAP]-1659863050006
GPR[SPVATF]-1659863050006
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863051792
GPR[EPVS]-1659863051792
========
if(yInitial*min<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
return solve(f,min,yMin,max,yMax,initial,yInitial);

========
GPR[SPVS]-1659863051797
GPR[SPVAP]-1659863051797
GPR[EPVAP]-1659863053698
GPR[SPVATF]-1659863053698
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863055475
GPR[EPVS]-1659863055475
GPR[ESUN]-1659863055478
GPR[SSUN]-1659863055478
org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl,196
GPR[ESUN]-1659863056683
GPR[SSUN]-1659863056683
org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl,225
UNKNOWN ASTNode type : catch (ClassCastException cce) {
  throw MathRuntimeException.createIllegalArgumentException("function is not differentiable");
}

UNKNOWN ASTNode type : catch (ConvergenceException ex) {
  throw MathRuntimeException.createIllegalArgumentException("cannot convert given object to a fraction number: {0}",ex.getLocalizedMessage());
}

UNKNOWN ASTNode type : catch (ClassCastException ex) {
  throw MathRuntimeException.createIllegalArgumentException("instance of class {0} not comparable to existing values",v.getClass().getName());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException(UNSUPPORTED_METHOD_MESSAGE,percentileImpl.getClass().getName(),SET_QUANTILE_METHOD_NAME);
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException(ILLEGAL_ACCESS_MESSAGE,SET_QUANTILE_METHOD_NAME,percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException(ILLEGAL_ACCESS_MESSAGE,SET_QUANTILE_METHOD_NAME,percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
if(!isSequence(lower,initial,upper)){
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs.  "+"Endpoints: [{0}, {1}], Values: [{2}, {3}]",lower,upper,f.value(lower),function.value(upper));
}

========
GPR[SPVS]-1659863057901
GPR[SPVAP]-1659863057901
GPR[EPVAP]-1659863059830
GPR[EPVS]-1659863059830
========
if(!isSequence(lower,initial,upper)){
throw MathRuntimeException.createIllegalArgumentException(NOT_POWER_OF_TWO_MESSAGE,d.length);
}

========
GPR[SPVS]-1659863059839
GPR[SPVAP]-1659863059839
GPR[EPVAP]-1659863061594
GPR[EPVS]-1659863061594
========
if(!isSequence(lower,initial,upper)){
throw MathRuntimeException.createIllegalArgumentException(NOT_POWER_OF_TWO_MESSAGE,o.length);
}

========
GPR[SPVS]-1659863061595
GPR[SPVAP]-1659863061595
GPR[EPVAP]-1659863063386
GPR[EPVS]-1659863063386
========
if(!isSequence(lower,initial,upper)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}

========
GPR[SPVS]-1659863063389
GPR[SPVAP]-1659863063389
GPR[EPVAP]-1659863068114
GPR[SPVATF]-1659863068114
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863069891
GPR[EPVS]-1659863069891
GPR[ESUN]-1659863069898
GPR[SSUN]-1659863069898
org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl,230
Find no block!
GPR[SSUN]-1659863070194
org.apache.commons.math.analysis.solvers.BrentSolver,102
========
verifyIterationCount();
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863071482
GPR[SPVAP]-1659863071482
GPR[EPVAP]-1659863073412
GPR[EPVS]-1659863073412
========
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(max);

========
GPR[SPVS]-1659863073413
GPR[SPVAP]-1659863073413
GPR[EPVAP]-1659863078269
GPR[SPVATF]-1659863078269
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863080034
GPR[EPVS]-1659863080034
========
if(f.value(initial)==0.0){
return max;
}
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863080036
GPR[SPVAP]-1659863080036
GPR[EPVAP]-1659863081985
GPR[SPVATF]-1659863081985
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863083787
GPR[EPVS]-1659863083787
========
if(isBracketing(min,initial,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,max);
}
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863083788
GPR[SPVAP]-1659863083788
GPR[EPVAP]-1659863084811
GPR[EPVS]-1659863084811
========
if(min==0.0){
return min;
}
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863084812
GPR[SPVAP]-1659863084812
GPR[EPVAP]-1659863086674
GPR[SPVATF]-1659863086674
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863088504
GPR[EPVS]-1659863088504
========
clearResult();
verifySequence(min,initial,max);
double yInitial=function.value(initial);

========
GPR[SPVS]-1659863088505
GPR[SPVAP]-1659863088505
GPR[EPVAP]-1659863089515
GPR[EPVS]-1659863089515
========
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(min);

========
GPR[SPVS]-1659863089516
GPR[SPVAP]-1659863089516
GPR[EPVAP]-1659863091358
GPR[SPVATF]-1659863091358
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863093175
GPR[EPVS]-1659863093175
========
clearResult();
verifySequence(min,initial,max);
double yInitial=f.abs(initial);

========
GPR[SPVS]-1659863093178
GPR[SPVAP]-1659863093178
GPR[EPVAP]-1659863094221
GPR[EPVS]-1659863094221
========
if(initial==0.0){
return max;
}
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863094223
GPR[SPVAP]-1659863094223
GPR[EPVAP]-1659863096085
GPR[SPVATF]-1659863096085
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863097854
GPR[EPVS]-1659863097854
========
clearResult();
verifySequence(min,initial,max);
double yInitial=f.sqrt(initial);

========
GPR[SPVS]-1659863097856
GPR[SPVAP]-1659863097856
GPR[EPVAP]-1659863098881
GPR[EPVS]-1659863098881
========
if(MathUtils.sign(min)+MathUtils.sign(f.value(initial))==0.0){
max=initial;
yInitial=ym;
}else {
max=xm;
y0=ym;
}
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863098883
GPR[SPVAP]-1659863098883
GPR[EPVAP]-1659863099944
GPR[EPVS]-1659863099944
========
clearResult();
verifySequence(min,initial,max);
int yInitial=f.value(initial);

========
GPR[SPVS]-1659863099948
GPR[SPVAP]-1659863099948
GPR[EPVAP]-1659863100985
GPR[EPVS]-1659863100985
========
clearResult();
verifySequence(min,initial,max);
double yInitial=FACTORY.value(initial);

========
GPR[SPVS]-1659863100989
GPR[SPVAP]-1659863100989
GPR[EPVAP]-1659863102025
GPR[EPVS]-1659863102025
========
if(f==null){
throw MathRuntimeException.createIllegalArgumentException("function is null");
}
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863102028
GPR[SPVAP]-1659863102028
GPR[EPVAP]-1659863103923
GPR[SPVATF]-1659863103923
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863105738
GPR[EPVS]-1659863105738
========
this.f=f;
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863105739
GPR[SPVAP]-1659863105739
GPR[EPVAP]-1659863107621
GPR[SPVATF]-1659863107621
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863109411
GPR[EPVS]-1659863109411
========
if(f==null){
throw MathRuntimeException.createIllegalArgumentException("function is null");
}
this.f=f;
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863109412
GPR[SPVAP]-1659863109412
GPR[EPVAP]-1659863111281
GPR[SPVATF]-1659863111281
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863113065
GPR[EPVS]-1659863113065
========
super.addValue(initial);
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863113067
GPR[SPVAP]-1659863113067
GPR[EPVAP]-1659863114093
GPR[EPVS]-1659863114093
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append('(');
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863114097
GPR[SPVAP]-1659863114097
GPR[EPVAP]-1659863115968
GPR[SPVATF]-1659863115968
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863117758
GPR[EPVS]-1659863117758
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append(min);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863117759
GPR[SPVAP]-1659863117759
GPR[EPVAP]-1659863119646
GPR[SPVATF]-1659863119646
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863121442
GPR[EPVS]-1659863121442
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append(')');
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863121443
GPR[SPVAP]-1659863121443
GPR[EPVAP]-1659863123312
GPR[SPVATF]-1659863123312
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863125124
GPR[EPVS]-1659863125124
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append('(');
int yInitial=f.value(initial);

========
GPR[SPVS]-1659863125125
GPR[SPVAP]-1659863125125
GPR[EPVAP]-1659863126141
GPR[EPVS]-1659863126141
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append(min);
int yInitial=f.value(initial);

========
GPR[SPVS]-1659863126143
GPR[SPVAP]-1659863126143
GPR[EPVAP]-1659863127166
GPR[EPVS]-1659863127166
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append(')');
int yInitial=f.value(initial);

========
GPR[SPVS]-1659863127168
GPR[SPVAP]-1659863127168
GPR[EPVAP]-1659863128182
GPR[EPVS]-1659863128182
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append('(');
new StringBuffer().append(min);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863128183
GPR[SPVAP]-1659863128183
GPR[EPVAP]-1659863130073
GPR[SPVATF]-1659863130073
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863131871
GPR[EPVS]-1659863131871
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append('(');
new StringBuffer().append(')');
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863131872
GPR[SPVAP]-1659863131872
GPR[EPVAP]-1659863133734
GPR[SPVATF]-1659863133734
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863135521
GPR[EPVS]-1659863135521
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append(min);
new StringBuffer().append(')');
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863135522
GPR[SPVAP]-1659863135522
GPR[EPVAP]-1659863137404
GPR[SPVATF]-1659863137404
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863139257
GPR[EPVS]-1659863139257
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append('(');
new StringBuffer().append(min);
int yInitial=f.value(initial);

========
GPR[SPVS]-1659863139259
GPR[SPVAP]-1659863139259
GPR[EPVAP]-1659863140269
GPR[EPVS]-1659863140269
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append('(');
new StringBuffer().append(')');
int yInitial=f.value(initial);

========
GPR[SPVS]-1659863140270
GPR[SPVAP]-1659863140270
GPR[EPVAP]-1659863141310
GPR[EPVS]-1659863141310
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append(min);
new StringBuffer().append(')');
int yInitial=f.value(initial);

========
GPR[SPVS]-1659863141312
GPR[SPVAP]-1659863141312
GPR[EPVAP]-1659863142331
GPR[EPVS]-1659863142331
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append('(');
new StringBuffer().append(min);
new StringBuffer().append(')');
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863142332
GPR[SPVAP]-1659863142332
GPR[EPVAP]-1659863144233
GPR[SPVATF]-1659863144233
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863146023
GPR[EPVS]-1659863146023
========
clearResult();
verifySequence(min,initial,max);
new StringBuffer().append('(');
new StringBuffer().append(min);
new StringBuffer().append(')');
int yInitial=f.value(initial);

========
GPR[SPVS]-1659863146024
GPR[SPVAP]-1659863146024
GPR[EPVAP]-1659863147056
GPR[EPVS]-1659863147056
========
clearResult();
verifySequence(min,initial,max);
double yInitial=f.get(initial);

========
GPR[SPVS]-1659863147058
GPR[SPVAP]-1659863147058
GPR[EPVAP]-1659863148096
GPR[EPVS]-1659863148096
========
clearResult();
verifySequence(min,initial,max);
double yInitial=f.floor(initial);

========
GPR[SPVS]-1659863148098
GPR[SPVAP]-1659863148098
GPR[EPVAP]-1659863149139
GPR[EPVS]-1659863149139
========
clearResult();
verifySequence(min,initial,max);
long yInitial=f.value(initial);

========
GPR[SPVS]-1659863149140
GPR[SPVAP]-1659863149140
GPR[EPVAP]-1659863150165
GPR[EPVS]-1659863150165
========
if((long)Math.floor(max)>yInitial){
throw new FractionConversionException(min,a0,1l);
}
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863150166
GPR[SPVAP]-1659863150166
GPR[EPVAP]-1659863151230
GPR[EPVS]-1659863151230
========
clearResult();
verifySequence(min,initial,max);
long yInitial=f.floor(initial);

========
GPR[SPVS]-1659863151232
GPR[SPVAP]-1659863151232
GPR[EPVAP]-1659863152248
GPR[EPVS]-1659863152248
========
if((long)Math.floor(max)>yInitial){
throw new FractionConversionException(min,a0,1l);
}
clearResult();
verifySequence(min,initial,max);
double yInitial=f.floor(initial);

========
GPR[SPVS]-1659863152249
GPR[SPVAP]-1659863152249
GPR[EPVAP]-1659863153274
GPR[EPVS]-1659863153274
========
if((long)Math.floor(max)>yInitial){
throw new FractionConversionException(min,a0,1l);
}
clearResult();
verifySequence(min,initial,max);
long yInitial=f.value(initial);

========
GPR[SPVS]-1659863153276
GPR[SPVAP]-1659863153276
GPR[EPVAP]-1659863154301
GPR[EPVS]-1659863154301
========
if((long)Math.floor(max)>yInitial){
throw new FractionConversionException(min,a0,1l);
}
clearResult();
verifySequence(min,initial,max);
long yInitial=f.floor(initial);

========
GPR[SPVS]-1659863154303
GPR[SPVAP]-1659863154303
GPR[EPVAP]-1659863155313
GPR[EPVS]-1659863155313
========
clearResult();
verifySequence(min,initial,max);
double yInitial=f.doubleToLongBits(initial);

========
GPR[SPVS]-1659863155315
GPR[SPVAP]-1659863155315
GPR[EPVAP]-1659863156338
GPR[EPVS]-1659863156338
========
clearResult();
verifySequence(min,initial,max);
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863156339
GPR[SPVAP]-1659863156339
GPR[EPVAP]-1659863158211
GPR[SPVATF]-1659863158211
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863160016
GPR[EPVS]-1659863160016
========
clearResult();
verifySequence(min,initial,max);
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
long yInitial=f.value(initial);

========
GPR[SPVS]-1659863160017
GPR[SPVAP]-1659863160017
GPR[EPVAP]-1659863161035
GPR[EPVS]-1659863161035
========
yInitial+=1;
clearResult();
verifySequence(min,initial,max);
double yInitial=f.value(initial);

========
GPR[SPVS]-1659863161042
GPR[SPVAP]-1659863161042
GPR[EPVAP]-1659863162066
GPR[EPVS]-1659863162066
GPR[ESUN]-1659863162068
GPR[SSUN]-1659863162068
org.apache.commons.math.analysis.solvers.BrentSolver,103
GPR[ESUN]-1659863162403
GPR[SSUN]-1659863162403
org.apache.commons.math.analysis.solvers.BrentSolver,106
========
verifySequence(min,initial,max);
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863164072
GPR[SPVAP]-1659863164072
GPR[EPVAP]-1659863169053
GPR[SPVATF]-1659863169053
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863170822
GPR[EPVS]-1659863170822
========
verifySequence(min,initial,max);
double yInitial=f.value(max);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863170824
GPR[SPVAP]-1659863170824
GPR[EPVAP]-1659863172725
GPR[SPVATF]-1659863172725
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863174507
GPR[EPVS]-1659863174507
========
verifySequence(min,initial,max);
double yInitial=f.value(min);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863174508
GPR[SPVAP]-1659863174508
GPR[EPVAP]-1659863176350
GPR[SPVATF]-1659863176350
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863178151
GPR[EPVS]-1659863178151
========
verifySequence(min,initial,max);
double yInitial=f.abs(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863178153
GPR[SPVAP]-1659863178153
GPR[EPVAP]-1659863179167
GPR[EPVS]-1659863179167
========
verifySequence(min,initial,max);
double yInitial=f.value(yInitial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863179169
GPR[SPVAP]-1659863179169
GPR[EPVAP]-1659863180178
GPR[EPVS]-1659863180178
========
if(f.value(max)==0.0){
return max;
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863180180
GPR[SPVAP]-1659863180180
GPR[EPVAP]-1659863182050
GPR[SPVATF]-1659863182050
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863183815
GPR[EPVS]-1659863183815
========
if(f.value(initial)==0.0){
return initial;
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863183816
GPR[SPVAP]-1659863183816
GPR[EPVAP]-1659863185686
GPR[SPVATF]-1659863185686
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863187467
GPR[EPVS]-1659863187467
========
if(isBracketing(min,initial,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,max);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863187468
GPR[SPVAP]-1659863187468
GPR[EPVAP]-1659863188502
GPR[EPVS]-1659863188502
========
if(f.value(max)==0.0){
return max;
}
if(f.value(initial)==0.0){
return initial;
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863188503
GPR[SPVAP]-1659863188503
GPR[EPVAP]-1659863190425
GPR[SPVATF]-1659863190425
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863192201
GPR[EPVS]-1659863192201
========
if(f.value(max)==0.0){
return max;
}
verifySequence(min,initial,max);
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863192203
GPR[SPVAP]-1659863192203
GPR[EPVAP]-1659863194097
GPR[SPVATF]-1659863194097
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863195867
GPR[EPVS]-1659863195867
========
if(f.value(initial)==0.0){
return initial;
}
verifySequence(min,initial,max);
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863195868
GPR[SPVAP]-1659863195868
GPR[EPVAP]-1659863197764
GPR[SPVATF]-1659863197764
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863199601
GPR[EPVS]-1659863199601
========
if(f.value(max)==0.0){
return max;
}
if(f.value(initial)==0.0){
return initial;
}
verifySequence(min,initial,max);
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863199603
GPR[SPVAP]-1659863199603
GPR[EPVAP]-1659863201492
GPR[SPVATF]-1659863201492
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863203311
GPR[EPVS]-1659863203311
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863203312
GPR[SPVAP]-1659863203312
GPR[EPVAP]-1659863205185
GPR[SPVATF]-1659863205185
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863206958
GPR[EPVS]-1659863206958
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
yInitial=UnivariateRealSolverUtils.midpoint(initial,max);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863206961
GPR[SPVAP]-1659863206961
GPR[EPVAP]-1659863208832
GPR[SPVATF]-1659863208832
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863210639
GPR[EPVS]-1659863210639
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
min=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863210640
GPR[SPVAP]-1659863210640
GPR[EPVAP]-1659863211670
GPR[EPVS]-1659863211670
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
functionValueAccuracy=f.value(yInitial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863211671
GPR[SPVAP]-1659863211671
GPR[EPVAP]-1659863213552
GPR[SPVATF]-1659863213552
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863215350
GPR[EPVS]-1659863215350
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
yInitial=UnivariateRealSolverUtils.midpoint(initial,max);
functionValueAccuracy=f.value(yInitial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863215351
GPR[SPVAP]-1659863215351
GPR[EPVAP]-1659863217259
GPR[SPVATF]-1659863217259
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863219056
GPR[EPVS]-1659863219056
========
if(f.value(initial)==0.0){
return min;
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863219057
GPR[SPVAP]-1659863219057
GPR[EPVAP]-1659863220924
GPR[SPVATF]-1659863220925
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863222710
GPR[EPVS]-1659863222710
========
if(f.value(initial)==0.0){
return min;
}
if(f.value(max)==0.0){
return max;
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863222711
GPR[SPVAP]-1659863222711
GPR[EPVAP]-1659863224599
GPR[SPVATF]-1659863224599
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863226406
GPR[EPVS]-1659863226406
========
verifySequence(min,initial,max);
verifyInterval(initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863226408
GPR[SPVAP]-1659863226409
GPR[EPVAP]-1659863228286
GPR[SPVATF]-1659863228286
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863230067
GPR[EPVS]-1659863230067
========
verifySequence(min,initial,max);
verifyInterval(initial,max);
double yInitial=f.value(yInitial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863230068
GPR[SPVAP]-1659863230068
GPR[EPVAP]-1659863231091
GPR[EPVS]-1659863231091
========
min=f.value(initial);
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863231093
GPR[SPVAP]-1659863231093
GPR[EPVAP]-1659863232110
GPR[EPVS]-1659863232110
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(functionValueAccuracy-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863232112
GPR[SPVAP]-1659863232112
GPR[EPVAP]-1659863233971
GPR[SPVATF]-1659863233971
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863235850
GPR[EPVS]-1659863235850
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863235852
GPR[SPVAP]-1659863235852
GPR[EPVAP]-1659863237723
GPR[SPVATF]-1659863237723
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863239481
GPR[EPVS]-1659863239481
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863239482
GPR[SPVAP]-1659863239482
GPR[EPVAP]-1659863241341
GPR[SPVATF]-1659863241341
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863243111
GPR[EPVS]-1659863243111
========
verifySequence(min,initial,max);
double yInitial=function.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863243112
GPR[SPVAP]-1659863243112
GPR[EPVAP]-1659863244130
GPR[EPVS]-1659863244130
========
verifySequence(min,initial,max);
double yInitial=f.value(functionValueAccuracy);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863244132
GPR[SPVAP]-1659863244132
GPR[EPVAP]-1659863246018
GPR[SPVATF]-1659863246018
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863247789
GPR[EPVS]-1659863247789
========
if(max+0.01*max<=0.0){
den=1.0;
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863247791
GPR[SPVAP]-1659863247791
GPR[EPVAP]-1659863248817
GPR[EPVS]-1659863248817
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}

========
GPR[SPVS]-1659863248820
GPR[SPVAP]-1659863248820
GPR[EPVAP]-1659863250685
GPR[SPVATF]-1659863250685
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863252463
GPR[EPVS]-1659863252463
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863252464
GPR[SPVAP]-1659863252464
GPR[EPVAP]-1659863254344
GPR[SPVATF]-1659863254344
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863256157
GPR[EPVS]-1659863256157
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(initial,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}

========
GPR[SPVS]-1659863256158
GPR[SPVAP]-1659863256158
GPR[EPVAP]-1659863258049
GPR[SPVATF]-1659863258049
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863259844
GPR[EPVS]-1659863259844
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(yInitial,0);
return result;
}

========
GPR[SPVS]-1659863259846
GPR[SPVAP]-1659863259846
GPR[EPVAP]-1659863261725
GPR[SPVATF]-1659863261725
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863263527
GPR[EPVS]-1659863263527
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
verifyInterval(initial,max);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863263528
GPR[SPVAP]-1659863263528
GPR[EPVAP]-1659863265402
GPR[SPVATF]-1659863265402
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863267194
GPR[EPVS]-1659863267194
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
verifyIterationCount();
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863267196
GPR[SPVAP]-1659863267196
GPR[EPVAP]-1659863268209
GPR[EPVS]-1659863268209
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
verifyInterval(initial,max);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(yInitial,0);
return result;
}

========
GPR[SPVS]-1659863268210
GPR[SPVAP]-1659863268210
GPR[EPVAP]-1659863270079
GPR[SPVATF]-1659863270079
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863271875
GPR[EPVS]-1659863271875
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(functionValueAccuracy)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863271877
GPR[SPVAP]-1659863271877
GPR[EPVAP]-1659863273737
GPR[SPVATF]-1659863273737
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863275534
GPR[EPVS]-1659863275534
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(functionValueAccuracy)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863275535
GPR[SPVAP]-1659863275535
GPR[EPVAP]-1659863277384
GPR[SPVATF]-1659863277384
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863279183
GPR[EPVS]-1659863279183
========
verifySequence(min,initial,max);
double yInitial=f.sqrt(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863279184
GPR[SPVAP]-1659863279184
GPR[EPVAP]-1659863280222
GPR[EPVS]-1659863280222
========
setResult(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863280223
GPR[SPVAP]-1659863280223
GPR[EPVAP]-1659863281246
GPR[EPVS]-1659863281246
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(isNaN()){
return Complex.NaN;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863281248
GPR[SPVAP]-1659863281248
GPR[EPVAP]-1659863282262
GPR[EPVS]-1659863282262
========
if(functionValueAccuracy>=0.0){
return createComplex(yInitial,initial/(2.0*t));
}else {
return createComplex(Math.abs(imaginary)/(2.0*t),MathUtils.indicator(imaginary)*t);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863282263
GPR[SPVAP]-1659863282263
GPR[EPVAP]-1659863283284
GPR[EPVS]-1659863283285
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
yInitial=Math.min(100.0*Math.abs(h),(Math.max(Math.sqrt(max),min)<1.0E-15)?Math.max(1.0E-6,0.001*Math.abs(yInitial)):Math.pow(0.01/maxInv2,1.0/functionValueAccuracy));
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863283286
GPR[SPVAP]-1659863283286
GPR[EPVAP]-1659863284315
GPR[EPVS]-1659863284315
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
yInitial=Math.max(h,1.0E-12*Math.abs(initial));
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863284316
GPR[SPVAP]-1659863284316
GPR[EPVAP]-1659863285358
GPR[EPVS]-1659863285358
========
if(MathUtils.sign(min)+MathUtils.sign(f.value(initial))==0.0){
max=initial;
yInitial=ym;
}else {
functionValueAccuracy=xm;
y0=ym;
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863285360
GPR[SPVAP]-1659863285360
GPR[EPVAP]-1659863286397
GPR[EPVS]-1659863286397
========
FastFourierTransformer.sample(f,min,max,functionValueAccuracy)[0]=0.0;
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863286403
GPR[SPVAP]-1659863286403
GPR[EPVAP]-1659863287426
GPR[EPVS]-1659863287426
========
yInitial=0;
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863287427
GPR[SPVAP]-1659863287427
GPR[EPVAP]-1659863288445
GPR[EPVS]-1659863288445
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=MathUtils.EPSILON*functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863288446
GPR[SPVAP]-1659863288446
GPR[EPVAP]-1659863289474
GPR[EPVS]-1659863289474
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<MathUtils.EPSILON*functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863289475
GPR[SPVAP]-1659863289475
GPR[EPVAP]-1659863290518
GPR[EPVS]-1659863290518
========
verifySequence(min,initial,max);
double yInitial=f.floor(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863290521
GPR[SPVAP]-1659863290521
GPR[EPVAP]-1659863291538
GPR[EPVS]-1659863291538
========
verifySequence(min,initial,max);
long yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863291539
GPR[SPVAP]-1659863291539
GPR[EPVAP]-1659863292564
GPR[EPVS]-1659863292564
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs((long)Math.floor(yInitial)-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863292565
GPR[SPVAP]-1659863292565
GPR[EPVAP]-1659863294437
GPR[SPVATF]-1659863294437
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863296234
GPR[EPVS]-1659863296234
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs((long)Math.floor(yInitial)-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863296235
GPR[SPVAP]-1659863296235
GPR[EPVAP]-1659863298097
GPR[SPVATF]-1659863298097
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863299882
GPR[EPVS]-1659863299882
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863299884
GPR[SPVAP]-1659863299884
GPR[EPVAP]-1659863300907
GPR[EPVS]-1659863300907
========
verifySequence(min,initial,max);
double yInitial=f.doubleToLongBits(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863300908
GPR[SPVAP]-1659863300908
GPR[EPVAP]-1659863301935
GPR[EPVS]-1659863301935
========
verifySequence(min,initial,max);
assert maxUlps > 0 && maxUlps < NAN_GAP;

double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863301936
GPR[SPVAP]-1659863301936
GPR[EPVAP]-1659863302973
GPR[EPVS]-1659863302973
========
if(Double.doubleToLongBits(min)<0){
xInt=SGN_MASK-xInt;
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863302974
GPR[SPVAP]-1659863302974
GPR[EPVAP]-1659863304002
GPR[EPVS]-1659863304002
========
if(Double.doubleToLongBits(max)<0){
yInt=SGN_MASK-yInt;
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863304004
GPR[SPVAP]-1659863304004
GPR[EPVAP]-1659863305037
GPR[EPVS]-1659863305038
========
verifySequence(min,initial,max);
int yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863305040
GPR[SPVAP]-1659863305040
GPR[EPVAP]-1659863306078
GPR[EPVS]-1659863306078
========
verifySequence(min,initial,max);
int yInitial=f.abs(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863306080
GPR[SPVAP]-1659863306080
GPR[EPVAP]-1659863307101
GPR[EPVS]-1659863307101
========
verifySequence(min,initial,max);
long yInitial=f.floor(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863307103
GPR[SPVAP]-1659863307103
GPR[EPVAP]-1659863308160
GPR[EPVS]-1659863308160
========
verifySequence(min,initial,max);
double yInitial=f.floor(initial);
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863308162
GPR[SPVAP]-1659863308162
GPR[EPVAP]-1659863309214
GPR[EPVS]-1659863309214
========
verifySequence(min,initial,max);
double yInitial=f.floor(initial);
if(Math.abs((long)Math.floor(yInitial)-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863309215
GPR[SPVAP]-1659863309215
GPR[EPVAP]-1659863310228
GPR[EPVS]-1659863310228
========
verifySequence(min,initial,max);
double yInitial=f.floor(initial);
if(Math.abs((long)Math.floor(yInitial)-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863310229
GPR[SPVAP]-1659863310229
GPR[EPVAP]-1659863311261
GPR[EPVS]-1659863311261
========
verifySequence(min,initial,max);
double yInitial=f.floor(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863311262
GPR[SPVAP]-1659863311262
GPR[EPVAP]-1659863312274
GPR[EPVS]-1659863312274
========
verifySequence(min,initial,max);
long yInitial=f.value(initial);
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863312275
GPR[SPVAP]-1659863312275
GPR[EPVAP]-1659863313307
GPR[EPVS]-1659863313307
========
verifySequence(min,initial,max);
long yInitial=f.value(initial);
if(Math.abs((long)Math.floor(yInitial)-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863313308
GPR[SPVAP]-1659863313308
GPR[EPVAP]-1659863314369
GPR[EPVS]-1659863314369
========
verifySequence(min,initial,max);
long yInitial=f.value(initial);
if(Math.abs((long)Math.floor(yInitial)-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863314370
GPR[SPVAP]-1659863314370
GPR[EPVAP]-1659863315434
GPR[EPVS]-1659863315434
========
verifySequence(min,initial,max);
long yInitial=f.value(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863315435
GPR[SPVAP]-1659863315435
GPR[EPVAP]-1659863316497
GPR[EPVS]-1659863316497
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863316498
GPR[SPVAP]-1659863316498
GPR[EPVAP]-1659863317530
GPR[EPVS]-1659863317530
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs((long)Math.floor(yInitial)-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863317531
GPR[SPVAP]-1659863317531
GPR[EPVAP]-1659863318546
GPR[EPVS]-1659863318546
========
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs((long)Math.floor(yInitial)-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863318547
GPR[SPVAP]-1659863318547
GPR[EPVAP]-1659863319544
GPR[EPVS]-1659863319544
========
verifySequence(min,initial,max);
long yInitial=f.floor(initial);
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863319546
GPR[SPVAP]-1659863319546
GPR[EPVAP]-1659863320577
GPR[EPVS]-1659863320577
========
verifySequence(min,initial,max);
long yInitial=f.floor(initial);
if(Math.abs((long)Math.floor(yInitial)-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863320578
GPR[SPVAP]-1659863320578
GPR[EPVAP]-1659863321608
GPR[EPVS]-1659863321608
========
verifySequence(min,initial,max);
long yInitial=f.floor(initial);
if(Math.abs((long)Math.floor(yInitial)-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863321609
GPR[SPVAP]-1659863321609
GPR[EPVAP]-1659863322630
GPR[EPVS]-1659863322630
========
verifySequence(min,initial,max);
long yInitial=f.floor(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863322632
GPR[SPVAP]-1659863322632
GPR[EPVAP]-1659863323672
GPR[EPVS]-1659863323672
========
verifySequence(min,initial,max);
double yInitial=f.floor(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863323673
GPR[SPVAP]-1659863323673
GPR[EPVAP]-1659863324706
GPR[EPVS]-1659863324706
========
verifySequence(min,initial,max);
double yInitial=f.floor(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs((long)Math.floor(yInitial)-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863324707
GPR[SPVAP]-1659863324707
GPR[EPVAP]-1659863325738
GPR[EPVS]-1659863325738
========
verifySequence(min,initial,max);
double yInitial=f.floor(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs((long)Math.floor(yInitial)-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863325739
GPR[SPVAP]-1659863325739
GPR[EPVAP]-1659863326762
GPR[EPVS]-1659863326762
========
verifySequence(min,initial,max);
long yInitial=f.value(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863326764
GPR[SPVAP]-1659863326764
GPR[EPVAP]-1659863327819
GPR[EPVS]-1659863327819
========
verifySequence(min,initial,max);
long yInitial=f.value(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs((long)Math.floor(yInitial)-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863327821
GPR[SPVAP]-1659863327821
GPR[EPVAP]-1659863328860
GPR[EPVS]-1659863328860
========
verifySequence(min,initial,max);
long yInitial=f.value(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs((long)Math.floor(yInitial)-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863328861
GPR[SPVAP]-1659863328861
GPR[EPVAP]-1659863329923
GPR[EPVS]-1659863329923
========
verifySequence(min,initial,max);
long yInitial=f.floor(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863329924
GPR[SPVAP]-1659863329924
GPR[EPVAP]-1659863330951
GPR[EPVS]-1659863330951
========
verifySequence(min,initial,max);
long yInitial=f.floor(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs((long)Math.floor(yInitial)-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863330952
GPR[SPVAP]-1659863330952
GPR[EPVAP]-1659863332018
GPR[EPVS]-1659863332018
========
verifySequence(min,initial,max);
long yInitial=f.floor(initial);
if((long)Math.floor(yInitial)>Integer.MAX_VALUE){
throw new FractionConversionException(min,a0,1l);
}
if(Math.abs((long)Math.floor(yInitial)-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863332019
GPR[SPVAP]-1659863332019
GPR[EPVAP]-1659863333058
GPR[EPVS]-1659863333058
========
if(initial<max||initial>min||lowerBound>=upperBound){
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",lowerBound,initial,upperBound);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863333060
GPR[SPVAP]-1659863333060
GPR[EPVAP]-1659863334126
GPR[EPVS]-1659863334126
========
verifySequence(min,initial,max);
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863334128
GPR[SPVAP]-1659863334128
GPR[EPVAP]-1659863336054
GPR[SPVATF]-1659863336054
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863337857
GPR[EPVS]-1659863337857
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863337859
GPR[SPVAP]-1659863337859
GPR[EPVAP]-1659863339712
GPR[SPVATF]-1659863339712
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863341507
GPR[EPVS]-1659863341507
========
verifySequence(min,initial,max);
long yInitial=f.abs(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863341508
GPR[SPVAP]-1659863341508
GPR[EPVAP]-1659863342573
GPR[EPVS]-1659863342573
========
verifySequence(min,initial,max);
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
double yInitial=f.abs(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863342574
GPR[SPVAP]-1659863342574
GPR[EPVAP]-1659863343609
GPR[EPVS]-1659863343609
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
verifySequence(min,initial,max);
double yInitial=f.abs(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863343610
GPR[SPVAP]-1659863343610
GPR[EPVAP]-1659863344626
GPR[EPVS]-1659863344626
========
verifySequence(min,initial,max);
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
long yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863344627
GPR[SPVAP]-1659863344627
GPR[EPVAP]-1659863345637
GPR[EPVS]-1659863345637
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
verifySequence(min,initial,max);
long yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863345638
GPR[SPVAP]-1659863345638
GPR[EPVAP]-1659863346648
GPR[EPVS]-1659863346648
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
verifySequence(min,initial,max);
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863346649
GPR[SPVAP]-1659863346649
GPR[EPVAP]-1659863348545
GPR[SPVATF]-1659863348545
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863350330
GPR[EPVS]-1659863350330
========
verifySequence(min,initial,max);
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
long yInitial=f.abs(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863350331
GPR[SPVAP]-1659863350331
GPR[EPVAP]-1659863351354
GPR[EPVS]-1659863351354
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
verifySequence(min,initial,max);
long yInitial=f.abs(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863351355
GPR[SPVAP]-1659863351355
GPR[EPVAP]-1659863352374
GPR[EPVS]-1659863352374
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
verifySequence(min,initial,max);
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
double yInitial=f.abs(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863352376
GPR[SPVAP]-1659863352376
GPR[EPVAP]-1659863353399
GPR[EPVS]-1659863353399
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
verifySequence(min,initial,max);
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
long yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863353400
GPR[SPVAP]-1659863353400
GPR[EPVAP]-1659863354409
GPR[EPVS]-1659863354409
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
verifySequence(min,initial,max);
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
long yInitial=f.abs(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863354410
GPR[SPVAP]-1659863354410
GPR[EPVAP]-1659863355431
GPR[EPVS]-1659863355431
========
new CombinedEventsManager().addEventHandler(new EndTimeChecker(initial),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(min),Math.abs(endTime))),100);
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863355432
GPR[SPVAP]-1659863355432
GPR[EPVAP]-1659863356442
GPR[EPVS]-1659863356442
========
verifySequence(min,initial,max);
double yInitial=FACTORY.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863356446
GPR[SPVAP]-1659863356446
GPR[EPVAP]-1659863357465
GPR[EPVS]-1659863357465
========
LazyHolder.FACTORY.newDefaultSolver().setAbsoluteAccuracy(yInitial);
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863357467
GPR[SPVAP]-1659863357467
GPR[EPVAP]-1659863358510
GPR[EPVS]-1659863358510
========
if(f.value(max)==0.0){
return max;
}
if(isBracketing(min,initial,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,max);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863358513
GPR[SPVAP]-1659863358513
GPR[EPVAP]-1659863359529
GPR[EPVS]-1659863359529
========
if(f.value(initial)==0.0){
return initial;
}
if(isBracketing(min,initial,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,max);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863359530
GPR[SPVAP]-1659863359530
GPR[EPVAP]-1659863360552
GPR[EPVS]-1659863360552
========
verifySequence(min,initial,max);
if(isBracketing(min,initial,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,max);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863360553
GPR[SPVAP]-1659863360553
GPR[EPVAP]-1659863361577
GPR[EPVS]-1659863361577
========
if(f.value(max)==0.0){
return max;
}
if(f.value(initial)==0.0){
return initial;
}
if(isBracketing(min,initial,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,max);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863361578
GPR[SPVAP]-1659863361578
GPR[EPVAP]-1659863362588
GPR[EPVS]-1659863362588
========
if(f.value(max)==0.0){
return max;
}
verifySequence(min,initial,max);
if(isBracketing(min,initial,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,max);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863362589
GPR[SPVAP]-1659863362589
GPR[EPVAP]-1659863363624
GPR[EPVS]-1659863363624
========
if(f.value(initial)==0.0){
return initial;
}
verifySequence(min,initial,max);
if(isBracketing(min,initial,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,max);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863363625
GPR[SPVAP]-1659863363625
GPR[EPVAP]-1659863364654
GPR[EPVS]-1659863364654
========
if(f.value(max)==0.0){
return max;
}
if(f.value(initial)==0.0){
return initial;
}
verifySequence(min,initial,max);
if(isBracketing(min,initial,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,max);
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863364655
GPR[SPVAP]-1659863364655
GPR[EPVAP]-1659863365668
GPR[EPVS]-1659863365668
========
if(f==null){
throw MathRuntimeException.createIllegalArgumentException("function is null");
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863365672
GPR[SPVAP]-1659863365672
GPR[EPVAP]-1659863367562
GPR[SPVATF]-1659863367562
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863369399
GPR[EPVS]-1659863369399
========
this.f=f;
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863369401
GPR[SPVAP]-1659863369401
GPR[EPVAP]-1659863371304
GPR[SPVATF]-1659863371304
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863373107
GPR[EPVS]-1659863373107
========
verifyIterationCount();
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863373108
GPR[SPVAP]-1659863373109
GPR[EPVAP]-1659863374133
GPR[EPVS]-1659863374133
========
if(f==null){
throw MathRuntimeException.createIllegalArgumentException("function is null");
}
this.f=f;
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863374135
GPR[SPVAP]-1659863374135
GPR[EPVAP]-1659863376014
GPR[SPVATF]-1659863376014
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863377819
GPR[EPVS]-1659863377819
========
verifySequence(min,initial,max);
double yInitial=f.getEntry(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863377820
GPR[SPVAP]-1659863377820
GPR[EPVAP]-1659863378834
GPR[EPVS]-1659863378834
========
verifySequence(min,initial,max);
double yInitial=f.get(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863378836
GPR[SPVAP]-1659863378836
GPR[EPVAP]-1659863379872
GPR[EPVS]-1659863379872
========
verifySequence(min,initial,max);
if(Double.isNaN(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863379875
GPR[SPVAP]-1659863379875
GPR[EPVAP]-1659863381772
GPR[SPVATF]-1659863381772
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863383567
GPR[EPVS]-1659863383567
========
verifySequence(min,initial,max);
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863383568
GPR[SPVAP]-1659863383568
GPR[EPVAP]-1659863385456
GPR[SPVATF]-1659863385456
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863387233
GPR[EPVS]-1659863387233
========
verifySequence(min,initial,max);
long yInitial=f.doubleToLongBits(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863387234
GPR[SPVAP]-1659863387234
GPR[EPVAP]-1659863388245
GPR[EPVS]-1659863388245
========
verifySequence(min,initial,max);
if(Double.isNaN(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
double yInitial=f.doubleToLongBits(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863388246
GPR[SPVAP]-1659863388246
GPR[EPVAP]-1659863389292
GPR[EPVS]-1659863389292
========
verifySequence(min,initial,max);
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yInitial=f.doubleToLongBits(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863389293
GPR[SPVAP]-1659863389293
GPR[EPVAP]-1659863390314
GPR[EPVS]-1659863390314
========
verifySequence(min,initial,max);
if(Double.isNaN(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
long yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863390315
GPR[SPVAP]-1659863390315
GPR[EPVAP]-1659863391346
GPR[EPVS]-1659863391346
========
verifySequence(min,initial,max);
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
long yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863391347
GPR[SPVAP]-1659863391347
GPR[EPVAP]-1659863392390
GPR[EPVS]-1659863392390
========
verifySequence(min,initial,max);
if(Double.isNaN(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863392391
GPR[SPVAP]-1659863392391
GPR[EPVAP]-1659863394272
GPR[SPVATF]-1659863394272
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863396056
GPR[EPVS]-1659863396056
========
verifySequence(min,initial,max);
if(Double.isNaN(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
long yInitial=f.doubleToLongBits(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863396057
GPR[SPVAP]-1659863396057
GPR[EPVAP]-1659863397088
GPR[EPVS]-1659863397088
========
verifySequence(min,initial,max);
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
long yInitial=f.doubleToLongBits(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863397089
GPR[SPVAP]-1659863397089
GPR[EPVAP]-1659863398109
GPR[EPVS]-1659863398109
========
verifySequence(min,initial,max);
if(Double.isNaN(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yInitial=f.doubleToLongBits(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863398110
GPR[SPVAP]-1659863398110
GPR[EPVAP]-1659863399130
GPR[EPVS]-1659863399130
========
verifySequence(min,initial,max);
if(Double.isNaN(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
long yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863399131
GPR[SPVAP]-1659863399131
GPR[EPVAP]-1659863400198
GPR[EPVS]-1659863400198
========
verifySequence(min,initial,max);
if(Double.isNaN(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
if(Double.isInfinite(initial)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
long yInitial=f.doubleToLongBits(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863400199
GPR[SPVAP]-1659863400199
GPR[EPVAP]-1659863401222
GPR[EPVS]-1659863401222
========
if(shouldContract()){
contract();
}
verifySequence(min,initial,max);
double yInitial=f.value(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863401227
GPR[SPVAP]-1659863401227
GPR[EPVAP]-1659863402246
GPR[EPVS]-1659863402246
GPR[ESUN]-1659863402250
GPR[SSUN]-1659863402250
org.apache.commons.math.analysis.solvers.BrentSolver,107
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(yInitial,0);
return result;
}

========
GPR[SPVS]-1659863403769
GPR[SPVAP]-1659863403769
GPR[EPVAP]-1659863408726
GPR[SPVATF]-1659863408726
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863410545
GPR[EPVS]-1659863410545
========
if(Math.abs(yInitial)<=functionValueAccuracy){
ret=initial;
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863410547
GPR[SPVAP]-1659863410547
GPR[EPVAP]-1659863411609
GPR[EPVS]-1659863411609
========
if(Math.abs(initial-functionValueAccuracy)<=min){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863411611
GPR[SPVAP]-1659863411611
GPR[EPVAP]-1659863413502
GPR[SPVATF]-1659863413502
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863415265
GPR[EPVS]-1659863415265
========
if(Math.abs(initial-functionValueAccuracy)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863415266
GPR[SPVAP]-1659863415266
GPR[EPVAP]-1659863417163
GPR[SPVATF]-1659863417163
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863418952
GPR[EPVS]-1659863418952
========
if(Math.abs(yInitial)<=min){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863418953
GPR[SPVAP]-1659863418953
GPR[EPVAP]-1659863420845
GPR[SPVATF]-1659863420845
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863422643
GPR[EPVS]-1659863422643
========
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863422645
GPR[SPVAP]-1659863422645
GPR[EPVAP]-1659863424532
GPR[SPVATF]-1659863424532
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863426347
GPR[EPVS]-1659863426347
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(min,0);
return result;
}

========
GPR[SPVS]-1659863426348
GPR[SPVAP]-1659863426348
GPR[EPVAP]-1659863428228
GPR[SPVATF]-1659863428228
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863430012
GPR[EPVS]-1659863430012
========
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(min,0);
return result;
}

========
GPR[SPVS]-1659863430013
GPR[SPVAP]-1659863430013
GPR[EPVAP]-1659863431989
GPR[SPVATF]-1659863431989
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863433838
GPR[EPVS]-1659863433838
========
if(Math.abs(initial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863433840
GPR[SPVAP]-1659863433840
GPR[EPVAP]-1659863435656
GPR[SPVATF]-1659863435656
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863437471
GPR[EPVS]-1659863437471
========
if(Math.abs(initial-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863437473
GPR[SPVAP]-1659863437473
GPR[EPVAP]-1659863439360
GPR[SPVATF]-1659863439360
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863441149
GPR[EPVS]-1659863441149
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return initial;
}

========
GPR[SPVS]-1659863441150
GPR[SPVAP]-1659863441150
GPR[EPVAP]-1659863443028
GPR[SPVATF]-1659863443028
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863444796
GPR[EPVS]-1659863444796
========
if(Math.abs(initial-min)<=functionValueAccuracy){
setResult(initial,0);
return initial;
}

========
GPR[SPVS]-1659863444797
GPR[SPVAP]-1659863444797
GPR[EPVAP]-1659863446664
GPR[SPVATF]-1659863446664
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863448470
GPR[EPVS]-1659863448470
========
if(Math.abs(initial)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863448472
GPR[SPVAP]-1659863448472
GPR[EPVAP]-1659863450370
GPR[SPVATF]-1659863450370
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863452164
GPR[EPVS]-1659863452164
========
if(Math.abs(yInitial-functionValueAccuracy)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863452167
GPR[SPVAP]-1659863452167
GPR[EPVAP]-1659863454038
GPR[SPVATF]-1659863454038
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863455867
GPR[EPVS]-1659863455867
========
if(Math.abs(max-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863455868
GPR[SPVAP]-1659863455868
GPR[EPVAP]-1659863457744
GPR[SPVATF]-1659863457744
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863459538
GPR[EPVS]-1659863459538
========
if(Math.abs(yInitial)<=functionValueAccuracy){
m=UnivariateRealSolverUtils.midpoint(min,max);
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863459539
GPR[SPVAP]-1659863459539
GPR[EPVAP]-1659863460579
GPR[EPVS]-1659863460579
========
if(Math.isNaN(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863460580
GPR[SPVAP]-1659863460580
GPR[EPVAP]-1659863461596
GPR[EPVS]-1659863461596
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}

========
GPR[SPVS]-1659863461598
GPR[SPVAP]-1659863461598
GPR[EPVAP]-1659863463490
GPR[SPVATF]-1659863463490
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863465275
GPR[EPVS]-1659863465275
========
if(Math.abs(yInitial)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863465276
GPR[SPVAP]-1659863465276
GPR[EPVAP]-1659863467137
GPR[SPVATF]-1659863467137
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863468934
GPR[EPVS]-1659863468934
========
if(Math.abs(yInitial)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(initial,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}

========
GPR[SPVS]-1659863468935
GPR[SPVAP]-1659863468935
GPR[EPVAP]-1659863470793
GPR[SPVATF]-1659863470793
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863472610
GPR[EPVS]-1659863472610
========
if(Math.abs(serialVersionUID-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863472614
GPR[SPVAP]-1659863472614
GPR[EPVAP]-1659863474497
GPR[SPVATF]-1659863474497
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863476298
GPR[EPVS]-1659863476298
========
if(Math.abs(serialVersionUID-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863476300
GPR[SPVAP]-1659863476300
GPR[EPVAP]-1659863478183
GPR[SPVATF]-1659863478183
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863479983
GPR[EPVS]-1659863479983
========
if(Math.abs(yInitial)<10*Double.MIN_VALUE){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863479984
GPR[SPVAP]-1659863479984
GPR[EPVAP]-1659863481862
GPR[SPVATF]-1659863481862
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863483679
GPR[EPVS]-1659863483679
========
if(Math.abs(yInitial)<=10*Double.MIN_VALUE){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863483681
GPR[SPVAP]-1659863483681
GPR[EPVAP]-1659863485557
GPR[SPVATF]-1659863485557
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863487331
GPR[EPVS]-1659863487331
========
if(Math.abs(yInitial)<=MathUtils.EPSILON*functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863487333
GPR[SPVAP]-1659863487333
GPR[EPVAP]-1659863488362
GPR[EPVS]-1659863488362
========
if(Math.abs(yInitial)<MathUtils.EPSILON*functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863488363
GPR[SPVAP]-1659863488363
GPR[EPVAP]-1659863489400
GPR[EPVS]-1659863489400
========
if(yInitial>=0.0){
return createComplex(Math.sqrt((Math.abs(yInitial)+abs())/2.0),min/(2.0*t));
}else {
return createComplex(Math.abs(imaginary)/(2.0*t),MathUtils.indicator(imaginary)*t);
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863489403
GPR[SPVAP]-1659863489403
GPR[EPVAP]-1659863490446
GPR[EPVS]-1659863490446
========
if(Math.abs(yInitial)<min){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863490448
GPR[SPVAP]-1659863490448
GPR[EPVAP]-1659863492301
GPR[SPVATF]-1659863492301
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863494108
GPR[EPVS]-1659863494108
========
if(Math.abs(yInitial)<=functionValueAccuracy){
hNew=initial;
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863494111
GPR[SPVAP]-1659863494111
GPR[EPVAP]-1659863495133
GPR[EPVS]-1659863495133
========
if(Math.abs(initial)<=functionValueAccuracy){
hNew=initial;
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863495138
GPR[SPVAP]-1659863495138
GPR[EPVAP]-1659863496189
GPR[EPVS]-1659863496189
GPR[ESUN]-1659863496190
GPR[SSUN]-1659863496190
org.apache.commons.math.analysis.solvers.BrentSolver,113
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863497678
GPR[SPVAP]-1659863497678
GPR[EPVAP]-1659863502650
GPR[SPVATF]-1659863502650
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863504443
GPR[EPVS]-1659863504443
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
return result;
}

========
GPR[SPVS]-1659863504444
GPR[SPVAP]-1659863504444
GPR[EPVAP]-1659863506364
GPR[SPVATF]-1659863506364
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863508141
GPR[EPVS]-1659863508141
========
if(Math.abs(yMin)<=functionValueAccuracy){
ret=min;
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863508142
GPR[SPVAP]-1659863508142
GPR[EPVAP]-1659863509172
GPR[EPVS]-1659863509172
========
if(Math.abs(yMin-functionValueAccuracy)<=min){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863509173
GPR[SPVAP]-1659863509173
GPR[EPVAP]-1659863511070
GPR[SPVATF]-1659863511070
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863512974
GPR[EPVS]-1659863512974
========
if(Math.abs(yMin-functionValueAccuracy)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863512976
GPR[SPVAP]-1659863512976
GPR[EPVAP]-1659863514842
GPR[SPVATF]-1659863514842
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863516613
GPR[EPVS]-1659863516613
========
if(Math.abs(yMin)<=min){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863516614
GPR[SPVAP]-1659863516614
GPR[EPVAP]-1659863518544
GPR[SPVATF]-1659863518544
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863520356
GPR[EPVS]-1659863520356
========
if(Math.abs(yMin)<functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863520357
GPR[SPVAP]-1659863520357
GPR[EPVAP]-1659863522249
GPR[SPVATF]-1659863522249
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863524058
GPR[EPVS]-1659863524058
========
if(Math.abs(min)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863524059
GPR[SPVAP]-1659863524059
GPR[EPVAP]-1659863526004
GPR[SPVATF]-1659863526004
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863527789
GPR[EPVS]-1659863527789
========
if(Math.abs(min)<functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863527790
GPR[SPVAP]-1659863527790
GPR[EPVAP]-1659863529704
GPR[SPVATF]-1659863529704
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863531517
GPR[EPVS]-1659863531517
========
if(Math.abs(result-min)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863531519
GPR[SPVAP]-1659863531519
GPR[EPVAP]-1659863533428
GPR[SPVATF]-1659863533428
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863535234
GPR[EPVS]-1659863535234
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(result,0);
return result;
}

========
GPR[SPVS]-1659863535235
GPR[SPVAP]-1659863535235
GPR[EPVAP]-1659863537132
GPR[SPVATF]-1659863537132
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863538927
GPR[EPVS]-1659863538927
========
if(Math.abs(result-min)<=functionValueAccuracy){
setResult(result,0);
return result;
}

========
GPR[SPVS]-1659863538928
GPR[SPVAP]-1659863538928
GPR[EPVAP]-1659863540794
GPR[SPVATF]-1659863540794
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863542580
GPR[EPVS]-1659863542580
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863542582
GPR[SPVAP]-1659863542582
GPR[EPVAP]-1659863544451
GPR[SPVATF]-1659863544451
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863546257
GPR[EPVS]-1659863546257
========
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863546258
GPR[SPVAP]-1659863546258
GPR[EPVAP]-1659863548109
GPR[SPVATF]-1659863548109
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863549925
GPR[EPVS]-1659863549925
========
if(Math.abs(functionValueAccuracy-yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863549927
GPR[SPVAP]-1659863549927
GPR[EPVAP]-1659863551841
GPR[SPVATF]-1659863551841
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863553621
GPR[EPVS]-1659863553621
========
if(Math.abs(max-min)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863553622
GPR[SPVAP]-1659863553622
GPR[EPVAP]-1659863555517
GPR[SPVATF]-1659863555517
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863557321
GPR[EPVS]-1659863557321
========
if(Math.abs(yMin)<=functionValueAccuracy){
m=UnivariateRealSolverUtils.midpoint(min,max);
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863557322
GPR[SPVAP]-1659863557322
GPR[EPVAP]-1659863558340
GPR[EPVS]-1659863558340
========
if(Math.abs(max-min)<=functionValueAccuracy){
setResult(result,0);
return result;
}

========
GPR[SPVS]-1659863558341
GPR[SPVAP]-1659863558341
GPR[EPVAP]-1659863560216
GPR[SPVATF]-1659863560216
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863561995
GPR[EPVS]-1659863561995
========
if(Math.isNaN(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863561997
GPR[SPVAP]-1659863561997
GPR[EPVAP]-1659863563053
GPR[EPVS]-1659863563053
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}

========
GPR[SPVS]-1659863563055
GPR[SPVAP]-1659863563055
GPR[EPVAP]-1659863564946
GPR[SPVATF]-1659863564946
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863566714
GPR[EPVS]-1659863566714
========
if(Math.abs(yMin)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863566716
GPR[SPVAP]-1659863566716
GPR[EPVAP]-1659863568593
GPR[SPVATF]-1659863568593
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863570396
GPR[EPVS]-1659863570396
========
if(Math.abs(yMin)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(yMin,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}

========
GPR[SPVS]-1659863570397
GPR[SPVAP]-1659863570397
GPR[EPVAP]-1659863572267
GPR[SPVATF]-1659863572267
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863574043
GPR[EPVS]-1659863574043
========
if(Math.abs(serialVersionUID-yMin)<functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863574046
GPR[SPVAP]-1659863574046
GPR[EPVAP]-1659863575909
GPR[SPVATF]-1659863575909
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863577690
GPR[EPVS]-1659863577690
========
if(Math.abs(serialVersionUID-yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863577691
GPR[SPVAP]-1659863577691
GPR[EPVAP]-1659863579586
GPR[SPVATF]-1659863579586
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863581373
GPR[EPVS]-1659863581373
========
if(Math.abs(yMin)<10*Double.MIN_VALUE){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863581374
GPR[SPVAP]-1659863581374
GPR[EPVAP]-1659863583236
GPR[SPVATF]-1659863583236
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863585041
GPR[EPVS]-1659863585041
========
if(Math.abs(yMin)<=10*Double.MIN_VALUE){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863585042
GPR[SPVAP]-1659863585042
GPR[EPVAP]-1659863586934
GPR[SPVATF]-1659863586934
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863588704
GPR[EPVS]-1659863588704
========
if(Math.abs(yMin)<=MathUtils.EPSILON*functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863588706
GPR[SPVAP]-1659863588706
GPR[EPVAP]-1659863589741
GPR[EPVS]-1659863589741
========
if(Math.abs(yMin)<MathUtils.EPSILON*functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863589742
GPR[SPVAP]-1659863589742
GPR[EPVAP]-1659863590775
GPR[EPVS]-1659863590775
========
if(Math.abs(functionValueAccuracy)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863590778
GPR[SPVAP]-1659863590778
GPR[EPVAP]-1659863592658
GPR[SPVATF]-1659863592658
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863594454
GPR[EPVS]-1659863594454
========
if(Math.abs(functionValueAccuracy)<functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863594456
GPR[SPVAP]-1659863594456
GPR[EPVAP]-1659863596340
GPR[SPVATF]-1659863596340
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863598137
GPR[EPVS]-1659863598137
========
if(functionValueAccuracy>=0.0){
return createComplex(Math.sqrt((Math.abs(functionValueAccuracy)+abs())/2.0),yMin/(2.0*t));
}else {
return createComplex(Math.abs(imaginary)/(2.0*t),MathUtils.indicator(imaginary)*t);
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863598139
GPR[SPVAP]-1659863598139
GPR[EPVAP]-1659863599167
GPR[EPVS]-1659863599167
========
if(Math.abs(yMin)<min){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863599168
GPR[SPVAP]-1659863599168
GPR[EPVAP]-1659863601043
GPR[SPVATF]-1659863601043
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863602815
GPR[EPVS]-1659863602815
========
if(Math.abs(serialVersionUID-min)<functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863602816
GPR[SPVAP]-1659863602816
GPR[EPVAP]-1659863604700
GPR[SPVATF]-1659863604700
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863606472
GPR[EPVS]-1659863606472
========
if(Math.abs(serialVersionUID-min)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863606473
GPR[SPVAP]-1659863606473
GPR[EPVAP]-1659863608334
GPR[SPVATF]-1659863608334
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863610102
GPR[EPVS]-1659863610102
========
yMin=Math.min(100.0*Math.abs(h),(Math.max(Math.sqrt(yInitial),yInitial)<1.0E-15)?Math.max(1.0E-6,0.001*Math.abs(yMin)):Math.pow(0.01/maxInv2,1.0/functionValueAccuracy));
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863610104
GPR[SPVAP]-1659863610104
GPR[EPVAP]-1659863611138
GPR[EPVS]-1659863611138
========
yMin=Math.max(h,1.0E-12*Math.abs(min));
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863611139
GPR[SPVAP]-1659863611139
GPR[EPVAP]-1659863612173
GPR[EPVS]-1659863612173
========
if(Math.abs(yMin)<=functionValueAccuracy){
hNew=yMin;
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863612175
GPR[SPVAP]-1659863612175
GPR[EPVAP]-1659863613194
GPR[EPVS]-1659863613194
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863613196
GPR[SPVAP]-1659863613196
GPR[EPVAP]-1659863615113
GPR[SPVATF]-1659863615113
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863616918
GPR[EPVS]-1659863616918
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(initial);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863618369
GPR[SPVAP]-1659863618369
GPR[EPVAP]-1659863620233
GPR[SPVATF]-1659863620233
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863622023
GPR[EPVS]-1659863622023
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863622024
GPR[SPVAP]-1659863622024
GPR[EPVAP]-1659863623044
GPR[EPVS]-1659863623044
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863623045
GPR[SPVAP]-1659863623045
GPR[EPVAP]-1659863624074
GPR[EPVS]-1659863624074
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863624075
GPR[SPVAP]-1659863624075
GPR[EPVAP]-1659863625093
GPR[EPVS]-1659863625093
========
if(Math.abs(yInitial)<=functionValueAccuracy){
ret=initial;
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863625094
GPR[SPVAP]-1659863625094
GPR[EPVAP]-1659863626131
GPR[EPVS]-1659863626132
========
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863626133
GPR[SPVAP]-1659863626133
GPR[EPVAP]-1659863628042
GPR[SPVATF]-1659863628042
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863629844
GPR[EPVS]-1659863629844
========
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(yMin,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863629844
GPR[SPVAP]-1659863629844
GPR[EPVAP]-1659863630864
GPR[EPVS]-1659863630864
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.abs(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863630865
GPR[SPVAP]-1659863630865
GPR[EPVAP]-1659863631882
GPR[EPVS]-1659863631882
========
if(Math.abs(initial-functionValueAccuracy)<=yMin){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863631884
GPR[SPVAP]-1659863631884
GPR[EPVAP]-1659863632895
GPR[EPVS]-1659863632895
========
if(Math.abs(initial-functionValueAccuracy)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863632896
GPR[SPVAP]-1659863632896
GPR[EPVAP]-1659863634753
GPR[SPVATF]-1659863634753
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863636545
GPR[EPVS]-1659863636545
========
if(Math.abs(yInitial)<=yMin){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863636546
GPR[SPVAP]-1659863636546
GPR[EPVAP]-1659863637560
GPR[EPVS]-1659863637560
========
if(Math.abs(functionValueAccuracy-yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863637563
GPR[SPVAP]-1659863637563
GPR[EPVAP]-1659863639442
GPR[SPVATF]-1659863639442
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863641210
GPR[EPVS]-1659863641210
========
if(Math.abs(initial-yMin)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863641211
GPR[SPVAP]-1659863641211
GPR[EPVAP]-1659863642242
GPR[EPVS]-1659863642242
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return initial;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863642243
GPR[SPVAP]-1659863642243
GPR[EPVAP]-1659863644096
GPR[SPVATF]-1659863644096
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863645886
GPR[EPVS]-1659863645886
========
if(Math.abs(initial-yMin)<=functionValueAccuracy){
setResult(initial,0);
return initial;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863645887
GPR[SPVAP]-1659863645887
GPR[EPVAP]-1659863646901
GPR[EPVS]-1659863646901
========
if(Math.abs(initial-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863646902
GPR[SPVAP]-1659863646902
GPR[EPVAP]-1659863648745
GPR[SPVATF]-1659863648745
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863650507
GPR[EPVS]-1659863650507
========
if(Math.abs(yInitial)<=functionValueAccuracy){
m=UnivariateRealSolverUtils.midpoint(min,initial);
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863650509
GPR[SPVAP]-1659863650509
GPR[EPVAP]-1659863651535
GPR[EPVS]-1659863651535
========
if(Math.abs(initial-min)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863651536
GPR[SPVAP]-1659863651536
GPR[EPVAP]-1659863652572
GPR[EPVS]-1659863652572
========
if(Math.abs(min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863652574
GPR[SPVAP]-1659863652574
GPR[EPVAP]-1659863654483
GPR[SPVATF]-1659863654483
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863656262
GPR[EPVS]-1659863656262
========
if(Math.abs(min)<functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863656263
GPR[SPVAP]-1659863656263
GPR[EPVAP]-1659863658149
GPR[SPVATF]-1659863658149
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863659978
GPR[EPVS]-1659863659978
========
if(yMin+0.01*yMin<=0.0){
den=1.0;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863659979
GPR[SPVAP]-1659863659979
GPR[EPVAP]-1659863661009
GPR[EPVS]-1659863661009
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863661012
GPR[SPVAP]-1659863661012
GPR[EPVAP]-1659863662930
GPR[SPVATF]-1659863662930
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863664726
GPR[EPVS]-1659863664726
========
if(Math.abs(yInitial)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863664727
GPR[SPVAP]-1659863664727
GPR[EPVAP]-1659863666597
GPR[SPVATF]-1659863666597
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863668367
GPR[EPVS]-1659863668367
========
if(Math.abs(yInitial)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(initial,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863668368
GPR[SPVAP]-1659863668368
GPR[EPVAP]-1659863670253
GPR[SPVATF]-1659863670253
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863672059
GPR[EPVS]-1659863672059
========
max=f.value(min);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863672063
GPR[SPVAP]-1659863672063
GPR[EPVAP]-1659863673089
GPR[EPVS]-1659863673089
========
if((max>0)==(max>0)){
max=max;
y2=max;
yInitial=min-x0;
yMin=delta;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863673090
GPR[SPVAP]-1659863673090
GPR[EPVAP]-1659863674123
GPR[EPVS]-1659863674123
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.sqrt(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863674124
GPR[SPVAP]-1659863674124
GPR[EPVAP]-1659863675138
GPR[EPVS]-1659863675139
========
if(isNaN()){
return Complex.NaN;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863675140
GPR[SPVAP]-1659863675140
GPR[EPVAP]-1659863676157
GPR[EPVS]-1659863676157
========
if(Math.abs(functionValueAccuracy)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863676158
GPR[SPVAP]-1659863676158
GPR[EPVAP]-1659863678034
GPR[SPVATF]-1659863678034
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863679837
GPR[EPVS]-1659863679837
========
if(Math.abs(functionValueAccuracy)<functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863679838
GPR[SPVAP]-1659863679838
GPR[EPVAP]-1659863681731
GPR[SPVATF]-1659863681731
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863683531
GPR[EPVS]-1659863683531
========
if(Math.abs(yMin)<functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863683532
GPR[SPVAP]-1659863683532
GPR[EPVAP]-1659863684558
GPR[EPVS]-1659863684558
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return yInitial;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863684559
GPR[SPVAP]-1659863684559
GPR[EPVAP]-1659863686418
GPR[SPVATF]-1659863686418
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863688201
GPR[EPVS]-1659863688201
========
if(f.value(yMin)==0.0){
return initial;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863688202
GPR[SPVAP]-1659863688202
GPR[EPVAP]-1659863689223
GPR[EPVS]-1659863689223
========
verifyBracketing(yInitial,initial,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863689224
GPR[SPVAP]-1659863689224
GPR[EPVAP]-1659863691101
GPR[SPVATF]-1659863691101
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863692891
GPR[SPVATR]-1659863692892
TESTING : math_73
GPR[EPVATR]-1659863700319
GPR[EPVS]-1659863700319
========
verifyBracketing(yInitial,initial,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return yInitial;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863700320
GPR[SPVAP]-1659863700320
GPR[EPVAP]-1659863702214
GPR[SPVATF]-1659863702214
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863704014
GPR[SPVATR]-1659863704015
TESTING : math_73
GPR[EPVATR]-1659863711459
GPR[EPVS]-1659863711459
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(yMin);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863711460
GPR[SPVAP]-1659863711460
GPR[EPVAP]-1659863712498
GPR[EPVS]-1659863712498
========
if(f.value(yMin)==0.0){
return initial;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return yInitial;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863712499
GPR[SPVAP]-1659863712499
GPR[EPVAP]-1659863713521
GPR[EPVS]-1659863713521
========
if(f.value(yMin)==0.0){
return initial;
}
verifyBracketing(yInitial,initial,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863713522
GPR[SPVAP]-1659863713522
GPR[EPVAP]-1659863714538
GPR[EPVS]-1659863714538
========
if(f.value(yMin)==0.0){
return initial;
}
verifyBracketing(yInitial,initial,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return yInitial;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863714540
GPR[SPVAP]-1659863714540
GPR[EPVAP]-1659863715569
GPR[EPVS]-1659863715569
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return yInitial;
}
double yMin=f.value(yMin);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863715570
GPR[SPVAP]-1659863715570
GPR[EPVAP]-1659863716589
GPR[EPVS]-1659863716589
========
if(f.value(yMin)==0.0){
return initial;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(yMin);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863716591
GPR[SPVAP]-1659863716591
GPR[EPVAP]-1659863717618
GPR[EPVS]-1659863717618
========
verifyBracketing(yInitial,initial,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(yMin);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863717619
GPR[SPVAP]-1659863717619
GPR[EPVAP]-1659863718656
GPR[EPVS]-1659863718656
========
if(f.value(yMin)==0.0){
return initial;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return yInitial;
}
double yMin=f.value(yMin);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863718658
GPR[SPVAP]-1659863718658
GPR[EPVAP]-1659863719707
GPR[EPVS]-1659863719707
========
verifyBracketing(yInitial,initial,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return yInitial;
}
double yMin=f.value(yMin);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863719709
GPR[SPVAP]-1659863719709
GPR[EPVAP]-1659863720729
GPR[EPVS]-1659863720729
========
if(f.value(yMin)==0.0){
return initial;
}
verifyBracketing(yInitial,initial,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(yMin);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863720730
GPR[SPVAP]-1659863720730
GPR[EPVAP]-1659863721746
GPR[EPVS]-1659863721746
========
if(f.value(yMin)==0.0){
return initial;
}
verifyBracketing(yInitial,initial,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return yInitial;
}
double yMin=f.value(yMin);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863721747
GPR[SPVAP]-1659863721747
GPR[EPVAP]-1659863722784
GPR[EPVS]-1659863722784
========
if(Math.abs(serialVersionUID-min)<functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863722786
GPR[SPVAP]-1659863722786
GPR[EPVAP]-1659863724674
GPR[SPVATF]-1659863724674
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863726488
GPR[EPVS]-1659863726488
========
if(Math.abs(serialVersionUID-min)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863726489
GPR[SPVAP]-1659863726489
GPR[EPVAP]-1659863728412
GPR[SPVATF]-1659863728412
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863730246
GPR[EPVS]-1659863730246
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
yMin=Math.sqrt(yDDotOnScale)/max;
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863730249
GPR[SPVAP]-1659863730249
GPR[EPVAP]-1659863731260
GPR[EPVS]-1659863731260
========
max=Math.min(100.0*Math.abs(h),initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863731262
GPR[SPVAP]-1659863731262
GPR[EPVAP]-1659863732286
GPR[EPVS]-1659863732286
========
max=Math.max(h,1.0E-12*Math.abs(yInitial));
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863732287
GPR[SPVAP]-1659863732287
GPR[EPVAP]-1659863733319
GPR[EPVS]-1659863733319
========
if(max<getMinStep()){
h=getMinStep();
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863733320
GPR[SPVAP]-1659863733320
GPR[EPVAP]-1659863734350
GPR[EPVS]-1659863734350
========
if(max>getMaxStep()){
h=getMaxStep();
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863734351
GPR[SPVAP]-1659863734351
GPR[EPVAP]-1659863735381
GPR[EPVS]-1659863735381
========
if(((Math.abs(yInitial)<=functionValueAccuracy)&&(yMin<=functionValueAccuracy))){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863735383
GPR[SPVAP]-1659863735383
GPR[EPVAP]-1659863736467
GPR[EPVS]-1659863736467
========
verifyIterationCount();
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863736468
GPR[SPVAP]-1659863736468
GPR[EPVAP]-1659863737493
GPR[EPVS]-1659863737493
========
if(Math.abs(yInitial)<10*Double.MIN_VALUE){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863737495
GPR[SPVAP]-1659863737495
GPR[EPVAP]-1659863739386
GPR[SPVATF]-1659863739386
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863741195
GPR[EPVS]-1659863741195
========
if(Math.abs(yInitial)<=10*Double.MIN_VALUE){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863741196
GPR[SPVAP]-1659863741196
GPR[EPVAP]-1659863743115
GPR[SPVATF]-1659863743115
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863744956
GPR[EPVS]-1659863744956
========
if(Math.abs(yInitial)<=MathUtils.EPSILON*functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863744959
GPR[SPVAP]-1659863744959
GPR[EPVAP]-1659863746042
GPR[EPVS]-1659863746042
========
if(Math.abs(yInitial)<MathUtils.EPSILON*functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863746044
GPR[SPVAP]-1659863746044
GPR[EPVAP]-1659863747069
GPR[EPVS]-1659863747069
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863747071
GPR[SPVAP]-1659863747071
GPR[EPVAP]-1659863748947
GPR[SPVATF]-1659863748947
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863750746
GPR[EPVS]-1659863750746
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<min){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863750747
GPR[SPVAP]-1659863750747
GPR[EPVAP]-1659863752618
GPR[SPVATF]-1659863752618
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863754420
GPR[EPVS]-1659863754420
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=min){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863754421
GPR[SPVAP]-1659863754421
GPR[EPVAP]-1659863756304
GPR[SPVATF]-1659863756304
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863758119
GPR[EPVS]-1659863758119
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
clearResult();
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863758121
GPR[SPVAP]-1659863758121
GPR[EPVAP]-1659863760006
GPR[SPVATF]-1659863760006
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863761799
GPR[EPVS]-1659863761799
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
verifyInterval(initial,max);
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863761800
GPR[SPVAP]-1659863761800
GPR[EPVAP]-1659863763671
GPR[SPVATF]-1659863763671
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863765465
GPR[EPVS]-1659863765465
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
clearResult();
verifyInterval(initial,max);
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863765466
GPR[SPVAP]-1659863765466
GPR[EPVAP]-1659863767376
GPR[SPVATF]-1659863767376
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863769188
GPR[EPVS]-1659863769188
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=function.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863769190
GPR[SPVAP]-1659863769190
GPR[EPVAP]-1659863770216
GPR[EPVS]-1659863770216
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863770218
GPR[SPVAP]-1659863770218
GPR[EPVAP]-1659863771254
GPR[EPVS]-1659863771254
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863771255
GPR[SPVAP]-1659863771255
GPR[EPVAP]-1659863773158
GPR[SPVATF]-1659863773158
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863774993
GPR[EPVS]-1659863774993
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863774994
GPR[SPVAP]-1659863774994
GPR[EPVAP]-1659863776026
GPR[EPVS]-1659863776026
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(f.value(min)==0.0){
return min;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863776027
GPR[SPVAP]-1659863776027
GPR[EPVAP]-1659863777928
GPR[SPVATF]-1659863777928
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863779730
GPR[EPVS]-1659863779730
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863779731
GPR[SPVAP]-1659863779731
GPR[EPVAP]-1659863780751
GPR[EPVS]-1659863780751
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(f.value(min)==0.0){
return min;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863780752
GPR[SPVAP]-1659863780752
GPR[EPVAP]-1659863782645
GPR[SPVATF]-1659863782645
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863784421
GPR[EPVS]-1659863784421
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.doubleToLongBits(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863784423
GPR[SPVAP]-1659863784423
GPR[EPVAP]-1659863785478
GPR[EPVS]-1659863785478
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
long yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863785479
GPR[SPVAP]-1659863785479
GPR[EPVAP]-1659863786500
GPR[EPVS]-1659863786500
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
assert maxUlps > 0 && maxUlps < NAN_GAP;

double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863786501
GPR[SPVAP]-1659863786501
GPR[EPVAP]-1659863787529
GPR[EPVS]-1659863787529
========
if(Double.doubleToLongBits(min)<0){
xInt=SGN_MASK-xInt;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863787531
GPR[SPVAP]-1659863787531
GPR[EPVAP]-1659863788588
GPR[EPVS]-1659863788588
========
if(Double.doubleToLongBits(yInitial)<0){
yInt=SGN_MASK-yInt;
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863788589
GPR[SPVAP]-1659863788589
GPR[EPVAP]-1659863789677
GPR[EPVS]-1659863789677
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
int yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863789678
GPR[SPVAP]-1659863789678
GPR[EPVAP]-1659863790710
GPR[EPVS]-1659863790710
========
if(Math.abs(yInitial)<=functionValueAccuracy){
hNew=min;
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863790711
GPR[SPVAP]-1659863790711
GPR[EPVAP]-1659863791745
GPR[EPVS]-1659863791745
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863791746
GPR[SPVAP]-1659863791746
GPR[EPVAP]-1659863792771
GPR[EPVS]-1659863792771
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(f.value(min)==0.0){
return min;
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863792772
GPR[SPVAP]-1659863792772
GPR[EPVAP]-1659863793798
GPR[EPVS]-1659863793798
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863793799
GPR[SPVAP]-1659863793799
GPR[EPVAP]-1659863794841
GPR[EPVS]-1659863794841
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863794842
GPR[SPVAP]-1659863794842
GPR[EPVAP]-1659863795864
GPR[EPVS]-1659863795864
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(f.value(min)==0.0){
return min;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863795865
GPR[SPVAP]-1659863795865
GPR[EPVAP]-1659863796882
GPR[EPVS]-1659863796882
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(f.value(min)==0.0){
return min;
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863796883
GPR[SPVAP]-1659863796883
GPR[EPVAP]-1659863797914
GPR[EPVS]-1659863797914
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863797915
GPR[SPVAP]-1659863797915
GPR[EPVAP]-1659863798958
GPR[EPVS]-1659863798958
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(f.value(min)==0.0){
return min;
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863798959
GPR[SPVAP]-1659863798959
GPR[EPVAP]-1659863800010
GPR[EPVS]-1659863800010
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(f.value(min)==0.0){
return min;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863800011
GPR[SPVAP]-1659863800011
GPR[EPVAP]-1659863801042
GPR[EPVS]-1659863801042
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(f.value(min)==0.0){
return min;
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863801043
GPR[SPVAP]-1659863801043
GPR[EPVAP]-1659863802073
GPR[EPVS]-1659863802073
========
if(Math.abs((long)Math.floor(yMin)-yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863802074
GPR[SPVAP]-1659863802074
GPR[EPVAP]-1659863803132
GPR[EPVS]-1659863803132
========
if(Math.abs((long)Math.floor(yMin)-yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863803133
GPR[SPVAP]-1659863803133
GPR[EPVAP]-1659863804138
GPR[EPVS]-1659863804138
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.floor(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863804139
GPR[SPVAP]-1659863804139
GPR[EPVAP]-1659863805161
GPR[EPVS]-1659863805161
========
if((long)Math.floor(yMin)>Integer.MAX_VALUE){
throw new FractionConversionException(yInitial,a0,1l);
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863805162
GPR[SPVAP]-1659863805162
GPR[EPVAP]-1659863806200
GPR[EPVS]-1659863806200
========
if(Math.abs(yInitial)<functionValueAccuracy){
setResult(initial,0);
return result;
}
long yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863806201
GPR[SPVAP]-1659863806201
GPR[EPVAP]-1659863807228
GPR[EPVS]-1659863807228
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
int yMin=f.abs(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863807230
GPR[SPVAP]-1659863807230
GPR[EPVAP]-1659863808302
GPR[EPVS]-1659863808302
========
if(Math.abs(mulAndCheck(functionValueAccuracy/gcd(a,serialVersionUID),b))==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",functionValueAccuracy,serialVersionUID);
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863808303
GPR[SPVAP]-1659863808303
GPR[EPVAP]-1659863809330
GPR[EPVS]-1659863809330
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
long yMin=f.abs(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863809331
GPR[SPVAP]-1659863809331
GPR[EPVAP]-1659863810374
GPR[EPVS]-1659863810374
========
max=df(max,max,yMin,initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863810376
GPR[SPVAP]-1659863810376
GPR[EPVAP]-1659863811402
GPR[EPVS]-1659863811402
========
verifyInterval(functionValueAccuracy,yInitial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863811405
GPR[SPVAP]-1659863811405
GPR[EPVAP]-1659863813289
GPR[SPVATF]-1659863813289
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863815099
GPR[EPVS]-1659863815099
========
if(Math.sign(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863815101
GPR[SPVAP]-1659863815101
GPR[EPVAP]-1659863816125
GPR[EPVS]-1659863816125
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
if(isNaN()){
result.add(Complex.NaN);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863816126
GPR[SPVAP]-1659863816126
GPR[EPVAP]-1659863817172
GPR[EPVS]-1659863817172
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
if(isInfinite()){
result.add(Complex.INF);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863817173
GPR[SPVAP]-1659863817173
GPR[EPVAP]-1659863818197
GPR[EPVS]-1659863818197
========
yMin=0;
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863818200
GPR[SPVAP]-1659863818200
GPR[EPVAP]-1659863819230
GPR[EPVS]-1659863819230
========
if(Math.doubleToLongBits(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863819233
GPR[SPVAP]-1659863819233
GPR[EPVAP]-1659863820271
GPR[EPVS]-1659863820271
========
FastFourierTransformer.sample(f,min,yInitial,functionValueAccuracy)[0]=0.0;
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863820273
GPR[SPVAP]-1659863820273
GPR[EPVAP]-1659863821298
GPR[EPVS]-1659863821298
========
if(f==null){
throw MathRuntimeException.createIllegalArgumentException(NULL_FUNCTION_MESSAGE);
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863821301
GPR[SPVAP]-1659863821301
GPR[EPVAP]-1659863822340
GPR[EPVS]-1659863822340
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=FACTORY.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863822341
GPR[SPVAP]-1659863822341
GPR[EPVAP]-1659863823381
GPR[EPVS]-1659863823381
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
setup(f);
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863823382
GPR[SPVAP]-1659863823382
GPR[EPVAP]-1659863824410
GPR[EPVS]-1659863824410
========
LazyHolder.FACTORY.newDefaultSolver().setAbsoluteAccuracy(initial);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863824411
GPR[SPVAP]-1659863824411
GPR[EPVAP]-1659863825452
GPR[EPVS]-1659863825452
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863825456
GPR[SPVAP]-1659863825456
GPR[EPVAP]-1659863826484
GPR[EPVS]-1659863826484
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863826485
GPR[SPVAP]-1659863826485
GPR[EPVAP]-1659863827527
GPR[EPVS]-1659863827527
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(f.value(min)==0.0){
return min;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863827529
GPR[SPVAP]-1659863827529
GPR[EPVAP]-1659863828565
GPR[EPVS]-1659863828565
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863828566
GPR[SPVAP]-1659863828566
GPR[EPVAP]-1659863829600
GPR[EPVS]-1659863829600
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863829601
GPR[SPVAP]-1659863829601
GPR[EPVAP]-1659863830634
GPR[EPVS]-1659863830634
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(f.value(min)==0.0){
return min;
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863830635
GPR[SPVAP]-1659863830635
GPR[EPVAP]-1659863831666
GPR[EPVS]-1659863831666
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863831667
GPR[SPVAP]-1659863831667
GPR[EPVAP]-1659863832701
GPR[EPVS]-1659863832701
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(f.value(min)==0.0){
return min;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863832703
GPR[SPVAP]-1659863832703
GPR[EPVAP]-1659863833762
GPR[EPVS]-1659863833762
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863833763
GPR[SPVAP]-1659863833763
GPR[EPVAP]-1659863834796
GPR[EPVS]-1659863834796
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(f.value(min)==0.0){
return min;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863834797
GPR[SPVAP]-1659863834797
GPR[EPVAP]-1659863835830
GPR[EPVS]-1659863835830
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(f.value(min)==0.0){
return min;
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863835831
GPR[SPVAP]-1659863835831
GPR[EPVAP]-1659863836860
GPR[EPVS]-1659863836860
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863836861
GPR[SPVAP]-1659863836861
GPR[EPVAP]-1659863837888
GPR[EPVS]-1659863837888
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(f.value(min)==0.0){
return min;
}
if(Math.value(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863837889
GPR[SPVAP]-1659863837889
GPR[EPVAP]-1659863838906
GPR[EPVS]-1659863838906
========
verifyBracketing(min,yMin,f);
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(!(f instanceof PolynomialFunction)){
throw MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
}
if(f.value(min)==0.0){
return min;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return yMin;
}

========
GPR[SPVS]-1659863838907
GPR[SPVAP]-1659863838907
GPR[EPVAP]-1659863839982
GPR[EPVS]-1659863839982
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.isNaN(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863839986
GPR[SPVAP]-1659863839986
GPR[EPVAP]-1659863841015
GPR[EPVS]-1659863841015
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.getEntry(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863841016
GPR[SPVAP]-1659863841016
GPR[EPVAP]-1659863842051
GPR[EPVS]-1659863842051
========
if(Math.abs(min)<=functionValueAccuracy){
hNew=min;
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863842052
GPR[SPVAP]-1659863842052
GPR[EPVAP]-1659863843078
GPR[EPVS]-1659863843078
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setEntry(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863843080
GPR[SPVAP]-1659863843080
GPR[EPVAP]-1659863844122
GPR[EPVS]-1659863844122
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
if(Double.isNaN(yMin)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863844124
GPR[SPVAP]-1659863844124
GPR[EPVAP]-1659863845154
GPR[EPVS]-1659863845154
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
if(Double.isInfinite(yMin)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863845155
GPR[SPVAP]-1659863845155
GPR[EPVAP]-1659863846197
GPR[EPVS]-1659863846197
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
long yMin=f.doubleToLongBits(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863846198
GPR[SPVAP]-1659863846198
GPR[EPVAP]-1659863847219
GPR[EPVS]-1659863847219
========
if(Math.compareTo(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863847221
GPR[SPVAP]-1659863847221
GPR[EPVAP]-1659863848242
GPR[EPVS]-1659863848242
========
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.get(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863848244
GPR[SPVAP]-1659863848244
GPR[EPVAP]-1659863849263
GPR[EPVS]-1659863849263
========
if(shouldContract()){
contract();
}
if(Math.abs(yInitial)<=functionValueAccuracy){
setResult(initial,0);
return result;
}
double yMin=f.value(min);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863849265
GPR[SPVAP]-1659863849265
GPR[EPVAP]-1659863850300
GPR[EPVS]-1659863850300
GPR[ESUN]-1659863850305
GPR[SSUN]-1659863850306
org.apache.commons.math.analysis.solvers.BrentSolver,114
GPR[ESUN]-1659863850669
GPR[SSUN]-1659863850669
org.apache.commons.math.analysis.solvers.BrentSolver,120
========
if(yInitial*yMax<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863851777
GPR[SPVAP]-1659863851777
GPR[EPVAP]-1659863853757
GPR[EPVS]-1659863853757
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,initial,yInitial);
}

========
GPR[SPVS]-1659863853759
GPR[SPVAP]-1659863853759
GPR[EPVAP]-1659863858552
GPR[SPVATF]-1659863858552
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863860346
GPR[EPVS]-1659863860346
========
if(Math.abs(yMin)<=max){
setResult(yMin,0);
return max;
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863860348
GPR[SPVAP]-1659863860348
GPR[EPVAP]-1659863862234
GPR[SPVATF]-1659863862234
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863864011
GPR[EPVS]-1659863864011
========
verifyBracketing(initial,min,f);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863864013
GPR[SPVAP]-1659863864013
GPR[EPVAP]-1659863865868
GPR[SPVATF]-1659863865868
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863867662
GPR[SPVATR]-1659863867662
TESTING : math_73
GPR[EPVATR]-1659863875223
GPR[EPVS]-1659863875223
========
if(y0*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863875226
GPR[SPVAP]-1659863875226
GPR[EPVAP]-1659863876274
GPR[EPVS]-1659863876274
========
if(yInitial*y1<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863876275
GPR[SPVAP]-1659863876275
GPR[EPVAP]-1659863877296
GPR[EPVS]-1659863877296
========
if(fm*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863877297
GPR[SPVAP]-1659863877297
GPR[EPVAP]-1659863878315
GPR[EPVS]-1659863878315
========
if(yInitial*fmin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863878316
GPR[SPVAP]-1659863878316
GPR[EPVAP]-1659863879341
GPR[EPVS]-1659863879341
========
yMin=f.value(initial);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863879342
GPR[SPVAP]-1659863879342
GPR[EPVAP]-1659863881263
GPR[SPVATF]-1659863881263
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863883095
GPR[EPVS]-1659863883095
========
yInitial=f.value(yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863883096
GPR[SPVAP]-1659863883096
GPR[EPVAP]-1659863884988
GPR[SPVATF]-1659863884988
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863886836
GPR[EPVS]-1659863886836
========
yMin=f.value(initial);
yInitial=f.value(yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863886837
GPR[SPVAP]-1659863886837
GPR[EPVAP]-1659863888743
GPR[SPVATF]-1659863888743
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863890516
GPR[EPVS]-1659863890516
========
if(yInitial*min<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863890517
GPR[SPVAP]-1659863890517
GPR[EPVAP]-1659863892391
GPR[SPVATF]-1659863892391
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863894182
GPR[EPVS]-1659863894182
========
verifyInterval(initial,max);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863894183
GPR[SPVAP]-1659863894183
GPR[EPVAP]-1659863896057
GPR[SPVATF]-1659863896057
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863897847
GPR[EPVS]-1659863897847
========
if(fa*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863897850
GPR[SPVAP]-1659863897850
GPR[EPVAP]-1659863898868
GPR[EPVS]-1659863898868
========
if(yInitial*fb<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863898869
GPR[SPVAP]-1659863898869
GPR[EPVAP]-1659863899890
GPR[EPVS]-1659863899890
========
yInitial=yMin-(f.value(x0)/f.value(x0));
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863899891
GPR[SPVAP]-1659863899891
GPR[EPVAP]-1659863900902
GPR[EPVS]-1659863900902
========
if(initial*initial<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863900903
GPR[SPVAP]-1659863900903
GPR[EPVAP]-1659863902762
GPR[SPVATF]-1659863902762
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863904528
GPR[EPVS]-1659863904528
========
if(initial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863904529
GPR[SPVAP]-1659863904529
GPR[EPVAP]-1659863906411
GPR[SPVATF]-1659863906411
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863908195
GPR[EPVS]-1659863908195
========
if(lowerBound*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863908196
GPR[SPVAP]-1659863908196
GPR[EPVAP]-1659863909217
GPR[EPVS]-1659863909217
========
if(yInitial*initial<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863909218
GPR[SPVAP]-1659863909218
GPR[EPVAP]-1659863911118
GPR[SPVATF]-1659863911118
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863912917
GPR[EPVS]-1659863912917
========
if(yInitial*upperBound<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863912918
GPR[SPVAP]-1659863912918
GPR[EPVAP]-1659863913954
GPR[EPVS]-1659863913954
========
yMin=f.value(yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}

========
GPR[SPVS]-1659863913961
GPR[SPVAP]-1659863913961
GPR[EPVAP]-1659863915858
GPR[SPVATF]-1659863915858
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863917650
GPR[EPVS]-1659863917650
GPR[ESUN]-1659863917650
GPR[SSUN]-1659863917650
org.apache.commons.math.analysis.solvers.BrentSolver,125
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659863919094
GPR[SPVAP]-1659863919094
GPR[EPVAP]-1659863924093
GPR[SPVATF]-1659863924093
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863925870
GPR[EPVS]-1659863925870
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863925871
GPR[SPVAP]-1659863925871
GPR[EPVAP]-1659863927768
GPR[SPVATF]-1659863927768
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863929545
GPR[EPVS]-1659863929545
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(min,0);
return result;
}

========
GPR[SPVS]-1659863929546
GPR[SPVAP]-1659863929546
GPR[EPVAP]-1659863931454
GPR[SPVATF]-1659863931454
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863933276
GPR[EPVS]-1659863933276
========
if(Math.abs(yMax)<=functionValueAccuracy){
ret=min;
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863933277
GPR[SPVAP]-1659863933277
GPR[EPVAP]-1659863934305
GPR[EPVS]-1659863934305
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
return result;
}

========
GPR[SPVS]-1659863934306
GPR[SPVAP]-1659863934306
GPR[EPVAP]-1659863936189
GPR[SPVATF]-1659863936189
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863937977
GPR[EPVS]-1659863937977
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return result;
}

========
GPR[SPVS]-1659863937979
GPR[SPVAP]-1659863937979
GPR[EPVAP]-1659863939866
GPR[SPVATF]-1659863939866
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863941699
GPR[EPVS]-1659863941699
========
if(Math.abs(yMax-functionValueAccuracy)<=yMin){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863941700
GPR[SPVAP]-1659863941700
GPR[EPVAP]-1659863943590
GPR[SPVATF]-1659863943590
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863945400
GPR[EPVS]-1659863945400
========
if(Math.abs(yMax-functionValueAccuracy)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863945402
GPR[SPVAP]-1659863945402
GPR[EPVAP]-1659863947267
GPR[SPVATF]-1659863947267
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863949051
GPR[EPVS]-1659863949051
========
if(Math.abs(yMax)<=yMin){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863949052
GPR[SPVAP]-1659863949052
GPR[EPVAP]-1659863950939
GPR[SPVATF]-1659863950939
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863952710
GPR[EPVS]-1659863952710
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863952711
GPR[SPVAP]-1659863952711
GPR[EPVAP]-1659863954586
GPR[SPVATF]-1659863954586
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863956368
GPR[EPVS]-1659863956368
========
if(Math.abs(yMin)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863956370
GPR[SPVAP]-1659863956370
GPR[EPVAP]-1659863958234
GPR[SPVATF]-1659863958234
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863960028
GPR[EPVS]-1659863960028
========
if(Math.abs(result-yMin)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863960030
GPR[SPVAP]-1659863960030
GPR[EPVAP]-1659863961909
GPR[SPVATF]-1659863961910
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863963742
GPR[EPVS]-1659863963742
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(result,0);
return result;
}

========
GPR[SPVS]-1659863963743
GPR[SPVAP]-1659863963743
GPR[EPVAP]-1659863965621
GPR[SPVATF]-1659863965621
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863967403
GPR[EPVS]-1659863967403
========
if(Math.abs(result-yMin)<=functionValueAccuracy){
setResult(result,0);
return result;
}

========
GPR[SPVS]-1659863967404
GPR[SPVAP]-1659863967404
GPR[EPVAP]-1659863969290
GPR[SPVATF]-1659863969290
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863971101
GPR[EPVS]-1659863971101
========
if(Math.abs(functionValueAccuracy-yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863971103
GPR[SPVAP]-1659863971103
GPR[EPVAP]-1659863972993
GPR[SPVATF]-1659863972993
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863974786
GPR[EPVS]-1659863974786
========
if(Math.abs(max-min)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863974787
GPR[SPVAP]-1659863974787
GPR[EPVAP]-1659863976661
GPR[SPVATF]-1659863976661
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863978448
GPR[EPVS]-1659863978448
========
if(Math.abs(yMax)<=functionValueAccuracy){
m=UnivariateRealSolverUtils.midpoint(min,max);
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863978450
GPR[SPVAP]-1659863978450
GPR[EPVAP]-1659863979474
GPR[EPVS]-1659863979474
========
if(Math.abs(max-min)<=functionValueAccuracy){
setResult(result,0);
return result;
}

========
GPR[SPVS]-1659863979475
GPR[SPVAP]-1659863979475
GPR[EPVAP]-1659863981351
GPR[SPVATF]-1659863981351
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863983139
GPR[EPVS]-1659863983139
========
if(Math.isNaN(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863983140
GPR[SPVAP]-1659863983140
GPR[EPVAP]-1659863984170
GPR[EPVS]-1659863984170
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}

========
GPR[SPVS]-1659863984171
GPR[SPVAP]-1659863984171
GPR[EPVAP]-1659863986038
GPR[SPVATF]-1659863986038
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863987851
GPR[EPVS]-1659863987851
========
if(Math.abs(yMax)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863987852
GPR[SPVAP]-1659863987852
GPR[EPVAP]-1659863989728
GPR[SPVATF]-1659863989728
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863991506
GPR[EPVS]-1659863991506
========
if(Math.abs(yMax)<=functionValueAccuracy){
if((functionValueAccuracy==Long.MIN_VALUE)||(serialVersionUID==Long.MIN_VALUE)){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
setResult(yMax,0);
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
}

========
GPR[SPVS]-1659863991508
GPR[SPVAP]-1659863991508
GPR[EPVAP]-1659863993376
GPR[SPVATF]-1659863993376
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863995155
GPR[EPVS]-1659863995155
========
if(Math.abs(serialVersionUID-yMin)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863995158
GPR[SPVAP]-1659863995158
GPR[EPVAP]-1659863997021
GPR[SPVATF]-1659863997021
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659863998786
GPR[EPVS]-1659863998786
========
if(Math.abs(serialVersionUID-yMin)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659863998787
GPR[SPVAP]-1659863998787
GPR[EPVAP]-1659864000676
GPR[SPVATF]-1659864000676
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864002445
GPR[EPVS]-1659864002445
========
if(Math.abs(yMax)<10*Double.MIN_VALUE){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864002447
GPR[SPVAP]-1659864002447
GPR[EPVAP]-1659864004350
GPR[SPVATF]-1659864004350
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864006130
GPR[EPVS]-1659864006130
========
if(Math.abs(yMax)<=10*Double.MIN_VALUE){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864006131
GPR[SPVAP]-1659864006131
GPR[EPVAP]-1659864008000
GPR[SPVATF]-1659864008000
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864009806
GPR[EPVS]-1659864009806
========
if(Math.abs(yMax)<=MathUtils.EPSILON*functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864009808
GPR[SPVAP]-1659864009808
GPR[EPVAP]-1659864010829
GPR[EPVS]-1659864010829
========
if(Math.abs(yMax)<MathUtils.EPSILON*functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864010830
GPR[SPVAP]-1659864010830
GPR[EPVAP]-1659864011861
GPR[EPVS]-1659864011861
========
if(Math.abs(functionValueAccuracy)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864011863
GPR[SPVAP]-1659864011863
GPR[EPVAP]-1659864013725
GPR[SPVATF]-1659864013725
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864015537
GPR[EPVS]-1659864015537
========
if(Math.abs(functionValueAccuracy)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864015538
GPR[SPVAP]-1659864015538
GPR[EPVAP]-1659864017396
GPR[SPVATF]-1659864017396
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864019213
GPR[EPVS]-1659864019213
========
if(functionValueAccuracy>=0.0){
return createComplex(Math.sqrt((Math.abs(functionValueAccuracy)+abs())/2.0),yMax/(2.0*t));
}else {
return createComplex(Math.abs(imaginary)/(2.0*t),MathUtils.indicator(imaginary)*t);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864019214
GPR[SPVAP]-1659864019214
GPR[EPVAP]-1659864020242
GPR[EPVS]-1659864020242
========
if(Math.abs(yMax)<min){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864020243
GPR[SPVAP]-1659864020243
GPR[EPVAP]-1659864022118
GPR[SPVATF]-1659864022119
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864023890
GPR[EPVS]-1659864023890
========
if(Math.abs(yMax)<=min){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864023891
GPR[SPVAP]-1659864023891
GPR[EPVAP]-1659864025769
GPR[SPVATF]-1659864025769
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864027548
GPR[EPVS]-1659864027548
========
yMax=Math.min(100.0*Math.abs(h),(Math.max(Math.sqrt(yMin),yMin)<1.0E-15)?Math.max(1.0E-6,0.001*Math.abs(yMax)):Math.pow(0.01/maxInv2,1.0/functionValueAccuracy));
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864027551
GPR[SPVAP]-1659864027551
GPR[EPVAP]-1659864028581
GPR[EPVS]-1659864028581
========
yMax=Math.max(h,1.0E-12*Math.abs(yMin));
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864028582
GPR[SPVAP]-1659864028582
GPR[EPVAP]-1659864029607
GPR[EPVS]-1659864029607
========
if(Math.abs(yMax)<=functionValueAccuracy){
hNew=yMax;
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864029609
GPR[SPVAP]-1659864029609
GPR[EPVAP]-1659864030642
GPR[EPVS]-1659864030642
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864030644
GPR[SPVAP]-1659864030644
GPR[EPVAP]-1659864032526
GPR[SPVATF]-1659864032526
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864034333
GPR[EPVS]-1659864034333
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864035813
GPR[SPVAP]-1659864035813
GPR[EPVAP]-1659864037688
GPR[SPVATF]-1659864037688
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864039463
GPR[EPVS]-1659864039463
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864039464
GPR[SPVAP]-1659864039464
GPR[EPVAP]-1659864040484
GPR[EPVS]-1659864040484
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(min,0);
return result;
}

========
GPR[SPVS]-1659864040485
GPR[SPVAP]-1659864040485
GPR[EPVAP]-1659864042349
GPR[SPVATF]-1659864042349
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864044119
GPR[EPVS]-1659864044119
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
ret=min;
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864044120
GPR[SPVAP]-1659864044120
GPR[EPVAP]-1659864045146
GPR[EPVS]-1659864045146
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(yMax);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864045147
GPR[SPVAP]-1659864045147
GPR[EPVAP]-1659864046167
GPR[EPVS]-1659864046168
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(max)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864046169
GPR[SPVAP]-1659864046169
GPR[EPVAP]-1659864048054
GPR[SPVATF]-1659864048054
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864049850
GPR[EPVS]-1659864049850
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(f.value(yMax))<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864049852
GPR[SPVAP]-1659864049852
GPR[EPVAP]-1659864051756
GPR[SPVATF]-1659864051756
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864053538
GPR[EPVS]-1659864053538
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(yMax);
if(Math.abs(f.value(yMax))<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864053540
GPR[SPVAP]-1659864053540
GPR[EPVAP]-1659864054557
GPR[EPVS]-1659864054557
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(initial)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864054559
GPR[SPVAP]-1659864054559
GPR[EPVAP]-1659864056430
GPR[SPVATF]-1659864056430
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864058215
GPR[EPVS]-1659864058215
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864058217
GPR[SPVAP]-1659864058217
GPR[EPVAP]-1659864059239
GPR[EPVS]-1659864059239
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864059241
GPR[SPVAP]-1659864059241
GPR[EPVAP]-1659864061136
GPR[SPVATF]-1659864061136
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864062929
GPR[EPVS]-1659864062929
========
verifyBracketing(min,yMin,f);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864062930
GPR[SPVAP]-1659864062930
GPR[EPVAP]-1659864064794
GPR[SPVATF]-1659864064794
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864066567
GPR[SPVATR]-1659864066567
TESTING : math_73
GPR[EPVATR]-1659864074018
GPR[EPVS]-1659864074018
========
verifySequence(min,yMax,yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864074019
GPR[SPVAP]-1659864074019
GPR[EPVAP]-1659864075042
GPR[EPVS]-1659864075042
========
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864075043
GPR[SPVAP]-1659864075043
GPR[EPVAP]-1659864076074
GPR[EPVS]-1659864076074
========
verifyBracketing(min,yMin,f);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864076075
GPR[SPVAP]-1659864076075
GPR[EPVAP]-1659864077955
GPR[SPVATF]-1659864077955
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864079739
GPR[SPVATR]-1659864079740
TESTING : math_73
GPR[EPVATR]-1659864087093
GPR[EPVS]-1659864087093
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659864087095
GPR[SPVAP]-1659864087095
GPR[EPVAP]-1659864088976
GPR[SPVATF]-1659864088976
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864090776
GPR[EPVS]-1659864090776
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(max)<=functionValueAccuracy){
setResult(initial,0);
return result;
}

========
GPR[SPVS]-1659864090777
GPR[SPVAP]-1659864090777
GPR[EPVAP]-1659864092641
GPR[SPVATF]-1659864092641
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864094406
GPR[EPVS]-1659864094406
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
return result;
}

========
GPR[SPVS]-1659864094407
GPR[SPVAP]-1659864094407
GPR[EPVAP]-1659864096335
GPR[SPVATF]-1659864096335
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864098121
GPR[EPVS]-1659864098121
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(initial)<=functionValueAccuracy){
setResult(max,0);
return result;
}

========
GPR[SPVS]-1659864098122
GPR[SPVAP]-1659864098122
GPR[EPVAP]-1659864100010
GPR[SPVATF]-1659864100010
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864101791
GPR[EPVS]-1659864101791
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.abs(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864101793
GPR[SPVAP]-1659864101793
GPR[EPVAP]-1659864102807
GPR[EPVS]-1659864102807
========
if(y0*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864102809
GPR[SPVAP]-1659864102809
GPR[EPVAP]-1659864103836
GPR[EPVS]-1659864103836
========
if(yInitial*y1<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864103837
GPR[SPVAP]-1659864103837
GPR[EPVAP]-1659864104866
GPR[EPVS]-1659864104866
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(initial);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864104867
GPR[SPVAP]-1659864104867
GPR[EPVAP]-1659864106781
GPR[SPVATF]-1659864106781
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864108577
GPR[EPVS]-1659864108577
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
verifyInterval(min,yMax);
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864108579
GPR[SPVAP]-1659864108579
GPR[EPVAP]-1659864109614
GPR[EPVS]-1659864109614
========
if(u*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864109615
GPR[SPVAP]-1659864109615
GPR[EPVAP]-1659864110652
GPR[EPVS]-1659864110652
========
if(a*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864110653
GPR[SPVAP]-1659864110653
GPR[EPVAP]-1659864111714
GPR[EPVS]-1659864111714
========
if(yInitial*t2<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864111715
GPR[SPVAP]-1659864111715
GPR[EPVAP]-1659864112742
GPR[EPVS]-1659864112742
========
yInitial=yMin+((Math.abs(yMin)>yMin)?d:((d>0)?tol:-tol));
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864112743
GPR[SPVAP]-1659864112743
GPR[EPVAP]-1659864113813
GPR[EPVS]-1659864113813
========
yMax=f.value(yInitial);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864113815
GPR[SPVAP]-1659864113815
GPR[EPVAP]-1659864114853
GPR[EPVS]-1659864114853
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=function.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864114857
GPR[SPVAP]-1659864114857
GPR[EPVAP]-1659864115881
GPR[EPVS]-1659864115881
========
if(p*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864115882
GPR[SPVAP]-1659864115882
GPR[EPVAP]-1659864116914
GPR[EPVS]-1659864116914
========
if(yInitial*dx<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864116915
GPR[SPVAP]-1659864116915
GPR[EPVAP]-1659864117939
GPR[EPVS]-1659864117939
========
verifyInterval(min,max);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864117941
GPR[SPVAP]-1659864117941
GPR[EPVAP]-1659864119810
GPR[SPVATF]-1659864119810
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864121593
GPR[EPVS]-1659864121593
========
if(yMin+0.01*yMin<=0.0){
den=1.0;
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864121595
GPR[SPVAP]-1659864121595
GPR[EPVAP]-1659864122631
GPR[EPVS]-1659864122631
========
min=min;
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864122636
GPR[SPVAP]-1659864122636
GPR[EPVAP]-1659864123650
GPR[EPVS]-1659864123650
========
yInitial=x1+functionValueAccuracy;
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864123652
GPR[SPVAP]-1659864123652
GPR[EPVAP]-1659864124682
GPR[EPVS]-1659864124682
========
min=f.value(yInitial);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864124683
GPR[SPVAP]-1659864124683
GPR[EPVAP]-1659864125709
GPR[EPVS]-1659864125709
========
yMax=min-yInitial;
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864125710
GPR[SPVAP]-1659864125710
GPR[EPVAP]-1659864126730
GPR[EPVS]-1659864126730
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864126733
GPR[SPVAP]-1659864126733
GPR[EPVAP]-1659864128606
GPR[SPVATF]-1659864128606
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864130398
GPR[EPVS]-1659864130398
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(functionValueAccuracy)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864130399
GPR[SPVAP]-1659864130399
GPR[EPVAP]-1659864132266
GPR[SPVATF]-1659864132266
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864134053
GPR[EPVS]-1659864134053
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(functionValueAccuracy)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864134054
GPR[SPVAP]-1659864134054
GPR[EPVAP]-1659864135928
GPR[SPVATF]-1659864135928
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864137718
GPR[EPVS]-1659864137718
========
if(real*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864137720
GPR[SPVAP]-1659864137720
GPR[EPVAP]-1659864138771
GPR[EPVS]-1659864138771
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.sqrt(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864138772
GPR[SPVAP]-1659864138772
GPR[EPVAP]-1659864139810
GPR[EPVS]-1659864139810
========
if(isNaN()){
return Complex.NaN;
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864139811
GPR[SPVAP]-1659864139811
GPR[EPVAP]-1659864140868
GPR[EPVS]-1659864140868
========
if(yInitial>=0.0){
return createComplex(yMax,yMin/(2.0*t));
}else {
return createComplex(Math.abs(imaginary)/(2.0*t),MathUtils.indicator(imaginary)*t);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864140869
GPR[SPVAP]-1659864140869
GPR[EPVAP]-1659864141892
GPR[EPVS]-1659864141892
========
if(MathUtils.sign(initial)+MathUtils.sign(f.value(max))==0.0){
yInitial=max;
yMax=ym;
}else {
functionValueAccuracy=xm;
y0=ym;
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864141894
GPR[SPVAP]-1659864141894
GPR[EPVAP]-1659864142940
GPR[EPVS]-1659864142940
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=FACTORY.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864142942
GPR[SPVAP]-1659864142942
GPR[EPVAP]-1659864143982
GPR[EPVS]-1659864143982
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
setup(f);
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864143984
GPR[SPVAP]-1659864143984
GPR[EPVAP]-1659864145007
GPR[EPVS]-1659864145007
========
LazyHolder.FACTORY.newDefaultSolver().setAbsoluteAccuracy(yInitial);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864145008
GPR[SPVAP]-1659864145008
GPR[EPVAP]-1659864146100
GPR[EPVS]-1659864146100
========
FastFourierTransformer.sample(f,initial,max,functionValueAccuracy)[0]=0.0;
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864146101
GPR[SPVAP]-1659864146101
GPR[EPVAP]-1659864147129
GPR[EPVS]-1659864147129
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
checkVectorDimensions(v.length);
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864147131
GPR[SPVAP]-1659864147131
GPR[EPVAP]-1659864148157
GPR[EPVS]-1659864148157
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
checkVectorDimensions(v.length);
double yMax=f.abs(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864148158
GPR[SPVAP]-1659864148158
GPR[EPVAP]-1659864149170
GPR[EPVS]-1659864149170
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(initial)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864149172
GPR[SPVAP]-1659864149172
GPR[EPVAP]-1659864151093
GPR[SPVATF]-1659864151093
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864152892
GPR[EPVS]-1659864152892
========
if(yInitial*epsilon<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864152895
GPR[SPVAP]-1659864152895
GPR[EPVAP]-1659864153919
GPR[EPVS]-1659864153919
========
if(yInitial*yMin<functionValueAccuracy){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864153922
GPR[SPVAP]-1659864153922
GPR[EPVAP]-1659864155776
GPR[SPVATF]-1659864155776
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864157560
GPR[EPVS]-1659864157560
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=MathUtils.EPSILON*functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864157562
GPR[SPVAP]-1659864157562
GPR[EPVAP]-1659864158587
GPR[EPVS]-1659864158587
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<MathUtils.EPSILON*functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864158589
GPR[SPVAP]-1659864158589
GPR[EPVAP]-1659864159606
GPR[EPVS]-1659864159606
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
yMax=Math.sqrt(yDDotOnScale)/yMin;
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864159607
GPR[SPVAP]-1659864159607
GPR[EPVAP]-1659864160640
GPR[EPVS]-1659864160640
========
yMin=Math.min(100.0*Math.abs(h),yInitial);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864160641
GPR[SPVAP]-1659864160641
GPR[EPVAP]-1659864161670
GPR[EPVS]-1659864161670
========
yMin=Math.max(h,1.0E-12*Math.abs(max));
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864161671
GPR[SPVAP]-1659864161671
GPR[EPVAP]-1659864162702
GPR[EPVS]-1659864162702
========
if(yMin>getMaxStep()){
h=getMaxStep();
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864162703
GPR[SPVAP]-1659864162703
GPR[EPVAP]-1659864163736
GPR[EPVS]-1659864163736
========
if(yInitial*delta<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864163739
GPR[SPVAP]-1659864163739
GPR[EPVAP]-1659864164744
GPR[EPVS]-1659864164744
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.floor(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864164746
GPR[SPVAP]-1659864164746
GPR[EPVAP]-1659864165757
GPR[EPVS]-1659864165757
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864165758
GPR[SPVAP]-1659864165758
GPR[EPVAP]-1659864166774
GPR[EPVS]-1659864166774
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs((long)Math.floor(yMax)-initial)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864166775
GPR[SPVAP]-1659864166775
GPR[EPVAP]-1659864168672
GPR[SPVATF]-1659864168672
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864170487
GPR[EPVS]-1659864170487
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs((long)Math.floor(yMax)-initial)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864170488
GPR[SPVAP]-1659864170488
GPR[EPVAP]-1659864172379
GPR[SPVATF]-1659864172379
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864174184
GPR[EPVS]-1659864174184
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.getEntry(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864174186
GPR[SPVAP]-1659864174186
GPR[EPVAP]-1659864175226
GPR[EPVS]-1659864175226
========
yMax=0;
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864175227
GPR[SPVAP]-1659864175227
GPR[EPVAP]-1659864176250
GPR[EPVS]-1659864176250
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.doubleToLongBits(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864176252
GPR[SPVAP]-1659864176252
GPR[EPVAP]-1659864177286
GPR[EPVS]-1659864177286
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
assert maxUlps > 0 && maxUlps < NAN_GAP;

double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864177287
GPR[SPVAP]-1659864177287
GPR[EPVAP]-1659864178324
GPR[EPVS]-1659864178324
========
if(Double.doubleToLongBits(initial)<0){
xInt=SGN_MASK-xInt;
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864178325
GPR[SPVAP]-1659864178325
GPR[EPVAP]-1659864179352
GPR[EPVS]-1659864179352
========
if(Double.doubleToLongBits(max)<0){
yInt=SGN_MASK-yInt;
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864179353
GPR[SPVAP]-1659864179353
GPR[EPVAP]-1659864180377
GPR[EPVS]-1659864180377
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
int yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864180378
GPR[SPVAP]-1659864180378
GPR[EPVAP]-1659864181397
GPR[EPVS]-1659864181397
========
if(v*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864181400
GPR[SPVAP]-1659864181400
GPR[EPVAP]-1659864182438
GPR[EPVS]-1659864182438
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.floor(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864182448
GPR[SPVAP]-1659864182448
GPR[EPVAP]-1659864183466
GPR[EPVS]-1659864183466
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.floor(max);
if(Math.abs(yMax)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864183467
GPR[SPVAP]-1659864183467
GPR[EPVAP]-1659864184475
GPR[EPVS]-1659864184476
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.floor(max);
if(Math.abs((long)Math.floor(yMax)-initial)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864184477
GPR[SPVAP]-1659864184477
GPR[EPVAP]-1659864185510
GPR[EPVS]-1659864185510
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.floor(max);
if(Math.abs((long)Math.floor(yMax)-initial)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864185511
GPR[SPVAP]-1659864185511
GPR[EPVAP]-1659864186541
GPR[EPVS]-1659864186541
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.value(max);
if(Math.abs(yMax)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864186542
GPR[SPVAP]-1659864186542
GPR[EPVAP]-1659864187568
GPR[EPVS]-1659864187568
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.value(max);
if(Math.abs((long)Math.floor(yMax)-initial)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864187569
GPR[SPVAP]-1659864187569
GPR[EPVAP]-1659864188588
GPR[EPVS]-1659864188588
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.value(max);
if(Math.abs((long)Math.floor(yMax)-initial)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864188589
GPR[SPVAP]-1659864188589
GPR[EPVAP]-1659864189614
GPR[EPVS]-1659864189614
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.floor(max);
if(Math.abs(yMax)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864189616
GPR[SPVAP]-1659864189616
GPR[EPVAP]-1659864190646
GPR[EPVS]-1659864190646
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.floor(max);
if(Math.abs((long)Math.floor(yMax)-initial)<functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864190647
GPR[SPVAP]-1659864190647
GPR[EPVAP]-1659864191686
GPR[EPVS]-1659864191686
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.floor(max);
if(Math.abs((long)Math.floor(yMax)-initial)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864191687
GPR[SPVAP]-1659864191687
GPR[EPVAP]-1659864192718
GPR[EPVS]-1659864192718
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
int yMax=f.abs(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864192721
GPR[SPVAP]-1659864192721
GPR[EPVAP]-1659864193746
GPR[EPVS]-1659864193746
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864193748
GPR[SPVAP]-1659864193748
GPR[EPVAP]-1659864195634
GPR[SPVATF]-1659864195634
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864197417
GPR[EPVS]-1659864197417
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.abs(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864197418
GPR[SPVAP]-1659864197418
GPR[EPVAP]-1659864198462
GPR[EPVS]-1659864198462
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.abs(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864198463
GPR[SPVAP]-1659864198463
GPR[EPVAP]-1659864199493
GPR[EPVS]-1659864199493
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864199495
GPR[SPVAP]-1659864199495
GPR[EPVAP]-1659864200530
GPR[EPVS]-1659864200530
========
if(result==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.abs(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864200531
GPR[SPVAP]-1659864200531
GPR[EPVAP]-1659864201558
GPR[EPVS]-1659864201558
========
if(yInitial*yMin<this.getRowDimension()){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864201560
GPR[SPVAP]-1659864201560
GPR[EPVAP]-1659864202598
GPR[EPVS]-1659864202598
========
if(yInitial*min<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864202603
GPR[SPVAP]-1659864202603
GPR[EPVAP]-1659864204482
GPR[SPVATF]-1659864204482
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864206286
GPR[EPVS]-1659864206286
========
if(fa*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864206289
GPR[SPVAP]-1659864206289
GPR[EPVAP]-1659864207338
GPR[EPVS]-1659864207338
========
if(yInitial*fb<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864207340
GPR[SPVAP]-1659864207340
GPR[EPVAP]-1659864208401
GPR[EPVS]-1659864208401
========
if(yInitial*max<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864208402
GPR[SPVAP]-1659864208402
GPR[EPVAP]-1659864210270
GPR[SPVATF]-1659864210270
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864212096
GPR[EPVS]-1659864212096
========
if(yInitial*length<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864212099
GPR[SPVAP]-1659864212099
GPR[EPVAP]-1659864213125
GPR[EPVS]-1659864213125
========
if(yInitial*yMin<sample1.length){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864213126
GPR[SPVAP]-1659864213126
GPR[EPVAP]-1659864214160
GPR[EPVS]-1659864214160
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864214163
GPR[SPVAP]-1659864214163
GPR[EPVAP]-1659864215213
GPR[EPVS]-1659864215213
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864215214
GPR[SPVAP]-1659864215214
GPR[EPVAP]-1659864216235
GPR[EPVS]-1659864216235
========
verifyBracketing(min,yMin,f);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864216236
GPR[SPVAP]-1659864216236
GPR[EPVAP]-1659864217262
GPR[EPVS]-1659864217262
========
verifySequence(min,yMax,yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864217263
GPR[SPVAP]-1659864217263
GPR[EPVAP]-1659864218288
GPR[EPVS]-1659864218288
========
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864218290
GPR[SPVAP]-1659864218290
GPR[EPVAP]-1659864219320
GPR[EPVS]-1659864219320
========
verifySequence(min,yMax,yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864219321
GPR[SPVAP]-1659864219321
GPR[EPVAP]-1659864220354
GPR[EPVS]-1659864220354
========
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864220355
GPR[SPVAP]-1659864220355
GPR[EPVAP]-1659864221385
GPR[EPVS]-1659864221385
========
verifyBracketing(min,yMin,f);
verifySequence(min,yMax,yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864221386
GPR[SPVAP]-1659864221386
GPR[EPVAP]-1659864222430
GPR[EPVS]-1659864222430
========
verifyBracketing(min,yMin,f);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864222432
GPR[SPVAP]-1659864222432
GPR[EPVAP]-1659864223490
GPR[EPVS]-1659864223490
========
verifySequence(min,yMax,yMin);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864223490
GPR[SPVAP]-1659864223490
GPR[EPVAP]-1659864224516
GPR[EPVS]-1659864224516
========
verifyBracketing(min,yMin,f);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864224517
GPR[SPVAP]-1659864224517
GPR[EPVAP]-1659864225542
GPR[EPVS]-1659864225542
========
verifySequence(min,yMax,yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864225543
GPR[SPVAP]-1659864225543
GPR[EPVAP]-1659864226570
GPR[EPVS]-1659864226570
========
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864226571
GPR[SPVAP]-1659864226571
GPR[EPVAP]-1659864227612
GPR[EPVS]-1659864227612
========
verifyBracketing(min,yMin,f);
verifySequence(min,yMax,yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864227613
GPR[SPVAP]-1659864227613
GPR[EPVAP]-1659864228654
GPR[EPVS]-1659864228654
========
verifyBracketing(min,yMin,f);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864228655
GPR[SPVAP]-1659864228655
GPR[EPVAP]-1659864229682
GPR[EPVS]-1659864229682
========
verifySequence(min,yMax,yMin);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864229683
GPR[SPVAP]-1659864229683
GPR[EPVAP]-1659864230767
GPR[EPVS]-1659864230767
========
verifyBracketing(min,yMin,f);
verifySequence(min,yMax,yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864230768
GPR[SPVAP]-1659864230768
GPR[EPVAP]-1659864231789
GPR[EPVS]-1659864231789
========
verifyBracketing(min,yMin,f);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864231790
GPR[SPVAP]-1659864231790
GPR[EPVAP]-1659864232828
GPR[EPVS]-1659864232828
========
verifySequence(min,yMax,yMin);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864232829
GPR[SPVAP]-1659864232829
GPR[EPVAP]-1659864233868
GPR[EPVS]-1659864233868
========
verifyBracketing(min,yMin,f);
verifySequence(min,yMax,yMin);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864233869
GPR[SPVAP]-1659864233869
GPR[EPVAP]-1659864234901
GPR[EPVS]-1659864234901
========
verifyBracketing(min,yMin,f);
verifySequence(min,yMax,yMin);
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864234903
GPR[SPVAP]-1659864234903
GPR[EPVAP]-1659864235930
GPR[EPVS]-1659864235930
========
verifyBracketing(min,yMin,f);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864235931
GPR[SPVAP]-1659864235931
GPR[EPVAP]-1659864236956
GPR[EPVS]-1659864236956
========
verifySequence(min,yMax,yMin);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864236957
GPR[SPVAP]-1659864236957
GPR[EPVAP]-1659864237978
GPR[EPVS]-1659864237978
========
verifyBracketing(min,yMin,f);
verifySequence(min,yMax,yMin);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.value(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864237979
GPR[SPVAP]-1659864237979
GPR[EPVAP]-1659864238990
GPR[EPVS]-1659864238990
========
verifyBracketing(min,yMin,f);
verifySequence(min,yMax,yMin);
if(isBracketing(min,yMax,f)){
return solve(f,min,initial);
}else {
return solve(f,initial,yMin);
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return yMax;
}

========
GPR[SPVS]-1659864238991
GPR[SPVAP]-1659864238991
GPR[EPVAP]-1659864240014
GPR[EPVS]-1659864240014
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.get(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864240020
GPR[SPVAP]-1659864240020
GPR[EPVAP]-1659864241078
GPR[EPVS]-1659864241078
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isNaN(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864241080
GPR[SPVAP]-1659864241080
GPR[EPVAP]-1659864242952
GPR[SPVATF]-1659864242952
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864244727
GPR[EPVS]-1659864244727
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isInfinite(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864244728
GPR[SPVAP]-1659864244728
GPR[EPVAP]-1659864246595
GPR[SPVATF]-1659864246595
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864248383
GPR[EPVS]-1659864248383
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
long yMax=f.doubleToLongBits(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864248384
GPR[SPVAP]-1659864248384
GPR[EPVAP]-1659864249407
GPR[EPVS]-1659864249407
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isNaN(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
double yMax=f.doubleToLongBits(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864249408
GPR[SPVAP]-1659864249408
GPR[EPVAP]-1659864250444
GPR[EPVS]-1659864250444
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isInfinite(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yMax=f.doubleToLongBits(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864250445
GPR[SPVAP]-1659864250445
GPR[EPVAP]-1659864251478
GPR[EPVS]-1659864251478
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isNaN(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
long yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864251479
GPR[SPVAP]-1659864251479
GPR[EPVAP]-1659864252513
GPR[EPVS]-1659864252514
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isInfinite(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
long yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864252514
GPR[SPVAP]-1659864252514
GPR[EPVAP]-1659864253552
GPR[EPVS]-1659864253552
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isNaN(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
if(Double.isInfinite(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864253553
GPR[SPVAP]-1659864253553
GPR[EPVAP]-1659864255456
GPR[SPVATF]-1659864255456
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864257239
GPR[EPVS]-1659864257239
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isNaN(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
long yMax=f.doubleToLongBits(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864257240
GPR[SPVAP]-1659864257240
GPR[EPVAP]-1659864258270
GPR[EPVS]-1659864258270
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isInfinite(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
long yMax=f.doubleToLongBits(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864258271
GPR[SPVAP]-1659864258271
GPR[EPVAP]-1659864259289
GPR[EPVS]-1659864259289
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isNaN(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
if(Double.isInfinite(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
double yMax=f.doubleToLongBits(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864259291
GPR[SPVAP]-1659864259291
GPR[EPVAP]-1659864260306
GPR[EPVS]-1659864260306
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isNaN(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
if(Double.isInfinite(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
long yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864260307
GPR[SPVAP]-1659864260307
GPR[EPVAP]-1659864261338
GPR[EPVS]-1659864261338
========
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
if(Double.isNaN(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert NaN value");
}
if(Double.isInfinite(min)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
long yMax=f.doubleToLongBits(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864261339
GPR[SPVAP]-1659864261339
GPR[EPVAP]-1659864262358
GPR[EPVS]-1659864262358
========
if(shouldContract()){
contract();
}
if(yInitial*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864262361
GPR[SPVAP]-1659864262361
GPR[EPVAP]-1659864263388
GPR[EPVS]-1659864263388
========
if(d*yMin<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864263389
GPR[SPVAP]-1659864263389
GPR[EPVAP]-1659864264434
GPR[EPVS]-1659864264434
========
if(yInitial*value<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864264435
GPR[SPVAP]-1659864264435
GPR[EPVAP]-1659864265470
GPR[EPVS]-1659864265470
========
if(d*value<0){
return solve(f,min,yMin,initial,yInitial,min,yMin);
}
double yMax=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return result;
}

========
GPR[SPVS]-1659864265472
GPR[SPVAP]-1659864265472
GPR[EPVAP]-1659864266503
GPR[EPVS]-1659864266503
GPR[ESUN]-1659864266509
GPR[SSUN]-1659864266509
org.apache.commons.math.analysis.solvers.BrentSolver,126
GPR[ESUN]-1659864266905
GPR[SSUN]-1659864266905
org.apache.commons.math.analysis.solvers.BrentSolver,132
========
if(yInitial*yMin<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864268042
GPR[SPVAP]-1659864268042
GPR[EPVAP]-1659864273000
GPR[SPVATF]-1659864273000
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864274782
GPR[EPVS]-1659864274782
========
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,min,yMin);
}

========
GPR[SPVS]-1659864274783
GPR[SPVAP]-1659864274783
GPR[EPVAP]-1659864276701
GPR[SPVATF]-1659864276701
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864278490
GPR[EPVS]-1659864278490
========
if(yInitial*yMin<0){
return solve(f,initial,yInitial,max,yMax,min,yMin);
}

========
GPR[SPVS]-1659864278491
GPR[SPVAP]-1659864278491
GPR[EPVAP]-1659864280377
GPR[SPVATF]-1659864280377
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864282215
GPR[EPVS]-1659864282215
========
if(Math.abs(yInitial)<=yMax){
setResult(yMin,0);
return yMin;
}
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864282217
GPR[SPVAP]-1659864282217
GPR[EPVAP]-1659864284093
GPR[SPVATF]-1659864284093
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864285917
GPR[EPVS]-1659864285917
========
verifyBracketing(initial,max,f);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864285919
GPR[SPVAP]-1659864285919
GPR[EPVAP]-1659864287808
GPR[SPVATF]-1659864287808
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864289579
GPR[SPVATR]-1659864289579
TESTING : math_73
GPR[EPVATR]-1659864297017
GPR[EPVS]-1659864297017
GPR[PF]-1659864297017
sourceFile  script/workingdir/SimFix/math/math_73_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
location   script/workingdir/SimFix/math/math_73_buggy
========
verifySequence(initial,yInitial,max);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864297024
GPR[SPVAP]-1659864297024
GPR[EPVAP]-1659864298894
GPR[SPVATF]-1659864298894
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864300663
GPR[SPVATR]-1659864300663
TESTING : math_73
GPR[EPVATR]-1659864308037
GPR[EPVS]-1659864308037
========
verifyBracketing(max,initial,f);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864308039
GPR[SPVAP]-1659864308039
GPR[EPVAP]-1659864309909
GPR[SPVATF]-1659864309909
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864311689
GPR[SPVATR]-1659864311690
TESTING : math_73
GPR[EPVATR]-1659864319050
GPR[EPVS]-1659864319050
========
if(fa*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864319052
GPR[SPVAP]-1659864319052
GPR[EPVAP]-1659864320073
GPR[EPVS]-1659864320074
========
if(yInitial*fb<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864320075
GPR[SPVAP]-1659864320075
GPR[EPVAP]-1659864321111
GPR[EPVS]-1659864321111
========
if(y0*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864321113
GPR[SPVAP]-1659864321113
GPR[EPVAP]-1659864322134
GPR[EPVS]-1659864322134
========
if(yInitial*y1<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864322135
GPR[SPVAP]-1659864322135
GPR[EPVAP]-1659864323169
GPR[EPVS]-1659864323169
========
if(initial*initial<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864323171
GPR[SPVAP]-1659864323171
GPR[EPVAP]-1659864325052
GPR[SPVATF]-1659864325052
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864326859
GPR[EPVS]-1659864326859
========
if(initial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864326860
GPR[SPVAP]-1659864326860
GPR[EPVAP]-1659864328755
GPR[SPVATF]-1659864328755
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864330561
GPR[EPVS]-1659864330561
========
if(lowerBound*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864330562
GPR[SPVAP]-1659864330562
GPR[EPVAP]-1659864331599
GPR[EPVS]-1659864331600
========
if(yInitial*initial<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864331601
GPR[SPVAP]-1659864331601
GPR[EPVAP]-1659864333484
GPR[SPVATF]-1659864333484
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864335270
GPR[EPVS]-1659864335270
========
if(yInitial*upperBound<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864335271
GPR[SPVAP]-1659864335271
GPR[EPVAP]-1659864336298
GPR[EPVS]-1659864336298
========
if(fm*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864336299
GPR[SPVAP]-1659864336299
GPR[EPVAP]-1659864337323
GPR[EPVS]-1659864337323
========
if(yInitial*fmin<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864337324
GPR[SPVAP]-1659864337324
GPR[EPVAP]-1659864338348
GPR[EPVS]-1659864338348
========
yMin=f.value(max);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864338349
GPR[SPVAP]-1659864338349
GPR[EPVAP]-1659864340218
GPR[SPVATF]-1659864340218
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864342023
GPR[EPVS]-1659864342023
========
yMax=f.value(yMin);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864342024
GPR[SPVAP]-1659864342024
GPR[EPVAP]-1659864343910
GPR[SPVATF]-1659864343910
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864345695
GPR[EPVS]-1659864345695
========
yMin=f.value(max);
yMax=f.value(yMin);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864345696
GPR[SPVAP]-1659864345696
GPR[EPVAP]-1659864347579
GPR[SPVATF]-1659864347579
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864349351
GPR[EPVS]-1659864349351
========
if(yInitial*max<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864349353
GPR[SPVAP]-1659864349353
GPR[EPVAP]-1659864351236
GPR[SPVATF]-1659864351236
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864353031
GPR[EPVS]-1659864353031
========
verifyInterval(min,max);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864353033
GPR[SPVAP]-1659864353033
GPR[EPVAP]-1659864354921
GPR[SPVATF]-1659864354921
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864356697
GPR[EPVS]-1659864356697
========
yMax=yInitial-(f.value(x0)/f.value(x0));
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864356699
GPR[SPVAP]-1659864356699
GPR[EPVAP]-1659864357726
GPR[EPVS]-1659864357726
========
yMin=f.value(yMin);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864357728
GPR[SPVAP]-1659864357728
GPR[EPVAP]-1659864359617
GPR[SPVATF]-1659864359617
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864361384
GPR[EPVS]-1659864361384
========
verifyBracketing(initial,max,f);
verifySequence(initial,yInitial,max);
if(yInitial*yMax<0){
return solve(f,initial,yInitial,max,yMax,initial,yInitial);
}

========
GPR[SPVS]-1659864361386
GPR[SPVAP]-1659864361386
GPR[EPVAP]-1659864363290
GPR[SPVATF]-1659864363290
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864365079
GPR[SPVATR]-1659864365080
TESTING : math_73
GPR[EPVATR]-1659864372498
GPR[EPVS]-1659864372498
GPR[ESUN]-1659864372498
GPR[SSUN]-1659864372498
org.apache.commons.math.analysis.solvers.BrentSolver,184
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864374312
GPR[SPVAP]-1659864374312
GPR[EPVAP]-1659864379280
GPR[SPVATF]-1659864379280
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864381107
GPR[EPVS]-1659864381107
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864381109
GPR[SPVAP]-1659864381109
GPR[EPVAP]-1659864382998
GPR[SPVATF]-1659864382998
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864384777
GPR[EPVS]-1659864384777
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(max,0);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864384778
GPR[SPVAP]-1659864384778
GPR[EPVAP]-1659864386638
GPR[SPVATF]-1659864386638
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864388443
GPR[EPVS]-1659864388443
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return ret;
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864388444
GPR[SPVAP]-1659864388444
GPR[EPVAP]-1659864390349
GPR[SPVATF]-1659864390349
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864392127
GPR[EPVS]-1659864392127
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864392128
GPR[SPVAP]-1659864392128
GPR[EPVAP]-1659864394020
GPR[SPVATF]-1659864394020
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864395847
GPR[EPVS]-1659864395847
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(max,0);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864395848
GPR[SPVAP]-1659864395848
GPR[EPVAP]-1659864397706
GPR[SPVATF]-1659864397706
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864399491
GPR[EPVS]-1659864399491
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return ret;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864399492
GPR[SPVAP]-1659864399492
GPR[EPVAP]-1659864401382
GPR[SPVATF]-1659864401382
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864403167
GPR[EPVS]-1659864403167
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(max,0);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864403168
GPR[SPVAP]-1659864403168
GPR[EPVAP]-1659864405057
GPR[SPVATF]-1659864405057
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864406815
GPR[EPVS]-1659864406815
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return ret;
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864406817
GPR[SPVAP]-1659864406817
GPR[EPVAP]-1659864408685
GPR[SPVATF]-1659864408685
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864410463
GPR[EPVS]-1659864410463
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return ret;
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(max,0);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864410464
GPR[SPVAP]-1659864410464
GPR[EPVAP]-1659864412353
GPR[SPVATF]-1659864412353
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864414152
GPR[EPVS]-1659864414152
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(max,0);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864414153
GPR[SPVAP]-1659864414153
GPR[EPVAP]-1659864416029
GPR[SPVATF]-1659864416029
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864417836
GPR[EPVS]-1659864417836
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return ret;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864417837
GPR[SPVAP]-1659864417837
GPR[EPVAP]-1659864419731
GPR[SPVATF]-1659864419731
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864421495
GPR[EPVS]-1659864421495
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return ret;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(max,0);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864421496
GPR[SPVAP]-1659864421496
GPR[EPVAP]-1659864423386
GPR[SPVATF]-1659864423386
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864425167
GPR[EPVS]-1659864425167
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return ret;
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(max,0);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864425168
GPR[SPVAP]-1659864425168
GPR[EPVAP]-1659864427050
GPR[SPVATF]-1659864427050
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864428859
GPR[EPVS]-1659864428859
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return ret;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(max,0);
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(max,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864428860
GPR[SPVAP]-1659864428860
GPR[EPVAP]-1659864430746
GPR[SPVATF]-1659864430746
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864432533
GPR[EPVS]-1659864432533
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864432534
GPR[SPVAP]-1659864432534
GPR[EPVAP]-1659864434396
GPR[SPVATF]-1659864434396
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864436175
GPR[EPVS]-1659864436175
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864436176
GPR[SPVAP]-1659864436176
GPR[EPVAP]-1659864438070
GPR[SPVATF]-1659864438070
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864439895
GPR[EPVS]-1659864439895
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(yMax,0);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864439896
GPR[SPVAP]-1659864439896
GPR[EPVAP]-1659864441772
GPR[SPVATF]-1659864441772
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864443566
GPR[EPVS]-1659864443566
========
if(ret*yMax<0){
return solve(f,ret,yInitial,max,yMax,initial,yInitial);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864443567
GPR[SPVAP]-1659864443567
GPR[EPVAP]-1659864444584
GPR[EPVS]-1659864444584
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864444585
GPR[SPVAP]-1659864444585
GPR[EPVAP]-1659864446455
GPR[SPVATF]-1659864446455
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864448239
GPR[EPVS]-1659864448239
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
setResult(yMax,0);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864448240
GPR[SPVAP]-1659864448240
GPR[EPVAP]-1659864450097
GPR[SPVATF]-1659864450098
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864451879
GPR[EPVS]-1659864451879
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(yMax,0);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864451880
GPR[SPVAP]-1659864451880
GPR[EPVAP]-1659864453772
GPR[SPVATF]-1659864453772
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864455585
GPR[EPVS]-1659864455585
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
setResult(yMax,0);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864455586
GPR[SPVAP]-1659864455586
GPR[EPVAP]-1659864457498
GPR[SPVATF]-1659864457498
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864459311
GPR[EPVS]-1659864459311
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("{0} wide hole between models time ranges",Math.abs(yMax));
}

========
GPR[SPVS]-1659864459312
GPR[SPVAP]-1659864459312
GPR[EPVAP]-1659864461212
GPR[SPVATF]-1659864461212
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864463002
GPR[EPVS]-1659864463002
========
if(Math.abs(max-min)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864463004
GPR[SPVAP]-1659864463004
GPR[EPVAP]-1659864464888
GPR[SPVATF]-1659864464888
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864466719
GPR[EPVS]-1659864466719
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(ret,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864466720
GPR[SPVAP]-1659864466720
GPR[EPVAP]-1659864468594
GPR[SPVATF]-1659864468594
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864470380
GPR[EPVS]-1659864470380
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
m=UnivariateRealSolverUtils.midpoint(min,max);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864470381
GPR[SPVAP]-1659864470381
GPR[EPVAP]-1659864471409
GPR[EPVS]-1659864471409
========
if(Math.abs(max-min)<=functionValueAccuracy){
setResult(ret,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864471410
GPR[SPVAP]-1659864471410
GPR[EPVAP]-1659864473290
GPR[SPVATF]-1659864473291
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864475119
GPR[EPVS]-1659864475119
========
if(Math.abs(ret)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864475120
GPR[SPVAP]-1659864475120
GPR[EPVAP]-1659864477018
GPR[SPVATF]-1659864477018
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864478818
GPR[EPVS]-1659864478818
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864478819
GPR[SPVAP]-1659864478819
GPR[EPVAP]-1659864480693
GPR[SPVATF]-1659864480693
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864482546
GPR[EPVS]-1659864482546
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864482548
GPR[SPVAP]-1659864482548
GPR[EPVAP]-1659864484423
GPR[SPVATF]-1659864484423
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864486192
GPR[EPVS]-1659864486192
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(max==0.0){
return Math.abs(yMax);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864486193
GPR[SPVAP]-1659864486193
GPR[EPVAP]-1659864488082
GPR[SPVATF]-1659864488082
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864489939
GPR[EPVS]-1659864489939
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
return Math.abs(max)*Math.sqrt(1+yMax/max*q);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864489940
GPR[SPVAP]-1659864489940
GPR[EPVAP]-1659864491033
GPR[EPVS]-1659864491033
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864491034
GPR[SPVAP]-1659864491034
GPR[EPVAP]-1659864492940
GPR[SPVATF]-1659864492940
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864494753
GPR[EPVS]-1659864494753
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(max==0.0){
return Math.abs(yMax);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864494755
GPR[SPVAP]-1659864494755
GPR[EPVAP]-1659864496638
GPR[SPVATF]-1659864496638
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864498415
GPR[EPVS]-1659864498415
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(max==0.0){
return Math.abs(yMax);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864498416
GPR[SPVAP]-1659864498416
GPR[EPVAP]-1659864500298
GPR[SPVATF]-1659864500298
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864502089
GPR[EPVS]-1659864502089
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(max==0.0){
return Math.abs(yMax);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864502090
GPR[SPVAP]-1659864502090
GPR[EPVAP]-1659864504044
GPR[SPVATF]-1659864504044
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864505817
GPR[EPVS]-1659864505817
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(min,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864505820
GPR[SPVAP]-1659864505820
GPR[EPVAP]-1659864507696
GPR[SPVATF]-1659864507696
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864509487
GPR[EPVS]-1659864509487
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864509488
GPR[SPVAP]-1659864509488
GPR[EPVAP]-1659864511360
GPR[SPVATF]-1659864511360
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864513134
GPR[EPVS]-1659864513134
========
if(Math.abs(yMin)<functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864513135
GPR[SPVAP]-1659864513135
GPR[EPVAP]-1659864514999
GPR[SPVATF]-1659864514999
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864516787
GPR[EPVS]-1659864516787
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864516787
GPR[SPVAP]-1659864516787
GPR[EPVAP]-1659864518671
GPR[SPVATF]-1659864518671
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864520459
GPR[EPVS]-1659864520459
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864520460
GPR[SPVAP]-1659864520460
GPR[EPVAP]-1659864522393
GPR[SPVATF]-1659864522393
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864524195
GPR[EPVS]-1659864524195
========
if(Math.abs(yMin)<functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864524196
GPR[SPVAP]-1659864524196
GPR[EPVAP]-1659864526105
GPR[SPVATF]-1659864526105
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864527947
GPR[EPVS]-1659864527947
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if((Math.abs(min-yMin)>(ret*functionValueAccuracy))&&(difference>yMax)){
return false;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864527948
GPR[SPVAP]-1659864527948
GPR[EPVAP]-1659864528966
GPR[EPVS]-1659864528966
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if((yMin>(ret*functionValueAccuracy))&&(difference>yMin)){
return false;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864528967
GPR[SPVAP]-1659864528967
GPR[EPVAP]-1659864530010
GPR[EPVS]-1659864530010
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(Math.abs(yMin-yMax)>(Math.max(Math.abs(mij),Math.abs(mji))*functionValueAccuracy)){
return false;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864530011
GPR[SPVAP]-1659864530011
GPR[EPVAP]-1659864531050
GPR[EPVS]-1659864531050
========
if(Math.abs(min-ret)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864531052
GPR[SPVAP]-1659864531052
GPR[EPVAP]-1659864532913
GPR[SPVATF]-1659864532913
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864534726
GPR[EPVS]-1659864534726
========
if(Math.abs(min-ret)<=functionValueAccuracy){
setResult(min,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864534728
GPR[SPVAP]-1659864534728
GPR[EPVAP]-1659864536622
GPR[SPVATF]-1659864536622
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864538437
GPR[EPVS]-1659864538437
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
largest=Math.abs(yMax);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864538439
GPR[SPVAP]-1659864538439
GPR[EPVAP]-1659864539472
GPR[EPVS]-1659864539472
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864539474
GPR[SPVAP]-1659864539474
GPR[EPVAP]-1659864540504
GPR[EPVS]-1659864540504
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864540505
GPR[SPVAP]-1659864540505
GPR[EPVAP]-1659864541541
GPR[EPVS]-1659864541541
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864541542
GPR[SPVAP]-1659864541542
GPR[EPVAP]-1659864542571
GPR[EPVS]-1659864542571
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864542572
GPR[SPVAP]-1659864542572
GPR[EPVAP]-1659864543606
GPR[EPVS]-1659864543606
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864543607
GPR[SPVAP]-1659864543607
GPR[EPVAP]-1659864544630
GPR[EPVS]-1659864544630
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864544631
GPR[SPVAP]-1659864544631
GPR[EPVAP]-1659864545657
GPR[EPVS]-1659864545657
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864545658
GPR[SPVAP]-1659864545658
GPR[EPVAP]-1659864546692
GPR[EPVS]-1659864546692
========
if(Math.abs(yMin-functionValueAccuracy)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864546694
GPR[SPVAP]-1659864546694
GPR[EPVAP]-1659864548614
GPR[SPVATF]-1659864548614
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864550396
GPR[EPVS]-1659864550396
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw new IntegratorException("too small integration interval: length = {0}",Math.abs(yMin-functionValueAccuracy));
}

========
GPR[SPVS]-1659864550397
GPR[SPVAP]-1659864550397
GPR[EPVAP]-1659864551438
GPR[EPVS]-1659864551438
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=delta;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864551439
GPR[SPVAP]-1659864551439
GPR[EPVAP]-1659864552476
GPR[EPVS]-1659864552476
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
delta=0.5*yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864552477
GPR[SPVAP]-1659864552477
GPR[EPVAP]-1659864553502
GPR[EPVS]-1659864553502
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
hNew=Math.abs(yMax);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864553503
GPR[SPVAP]-1659864553503
GPR[EPVAP]-1659864554528
GPR[EPVS]-1659864554528
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
resultComputed=true;
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864554530
GPR[SPVAP]-1659864554530
GPR[EPVAP]-1659864556418
GPR[SPVATF]-1659864556418
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864558202
GPR[EPVS]-1659864558202
========
verifyInterval(min,yMin);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864558204
GPR[SPVAP]-1659864558204
GPR[EPVAP]-1659864560078
GPR[SPVATF]-1659864560078
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864561868
GPR[EPVS]-1659864561868
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}

========
GPR[SPVS]-1659864561871
GPR[SPVAP]-1659864561871
GPR[EPVAP]-1659864563797
GPR[SPVATF]-1659864563797
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864565588
GPR[EPVS]-1659864565588
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
return (Math.abs(functionValueAccuracy)+Math.abs(serialVersionUID));
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864565589
GPR[SPVAP]-1659864565589
GPR[EPVAP]-1659864566658
GPR[EPVS]-1659864566658
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs, "+"endpoints: [{0}, {1}], values: [{2}, {3}]",min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864566660
GPR[SPVAP]-1659864566660
GPR[EPVAP]-1659864568530
GPR[SPVATF]-1659864568530
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864570313
GPR[EPVS]-1659864570313
========
clearResult();
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864570315
GPR[SPVAP]-1659864570315
GPR[EPVAP]-1659864572190
GPR[SPVATF]-1659864572190
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864574011
GPR[EPVS]-1659864574011
========
verifyInterval(min,max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864574012
GPR[SPVAP]-1659864574012
GPR[EPVAP]-1659864575903
GPR[SPVATF]-1659864575903
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864577694
GPR[EPVS]-1659864577694
========
clearResult();
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs, "+"endpoints: [{0}, {1}], values: [{2}, {3}]",min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864577695
GPR[SPVAP]-1659864577695
GPR[EPVAP]-1659864579581
GPR[SPVATF]-1659864579581
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864581402
GPR[EPVS]-1659864581402
========
verifyInterval(min,max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs, "+"endpoints: [{0}, {1}], values: [{2}, {3}]",min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864581403
GPR[SPVAP]-1659864581403
GPR[EPVAP]-1659864583290
GPR[SPVATF]-1659864583290
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864585083
GPR[EPVS]-1659864585083
========
clearResult();
verifyInterval(min,max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864585084
GPR[SPVAP]-1659864585084
GPR[EPVAP]-1659864586983
GPR[SPVATF]-1659864586983
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864588767
GPR[EPVS]-1659864588767
========
clearResult();
verifyInterval(min,max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs, "+"endpoints: [{0}, {1}], values: [{2}, {3}]",min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864588768
GPR[SPVAP]-1659864588768
GPR[EPVAP]-1659864590650
GPR[SPVATF]-1659864590650
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864592443
GPR[EPVS]-1659864592443
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864592444
GPR[SPVAP]-1659864592444
GPR[EPVAP]-1659864594324
GPR[SPVATF]-1659864594324
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864596117
GPR[EPVS]-1659864596117
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(yMin,1);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864596118
GPR[SPVAP]-1659864596118
GPR[EPVAP]-1659864597997
GPR[SPVATF]-1659864597997
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864599792
GPR[EPVS]-1659864599792
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
ret=max;
}else {
setResult(yMin,1);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864599793
GPR[SPVAP]-1659864599793
GPR[EPVAP]-1659864601665
GPR[SPVATF]-1659864601665
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864603459
GPR[EPVS]-1659864603459
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}

========
GPR[SPVS]-1659864603464
GPR[SPVAP]-1659864603464
GPR[EPVAP]-1659864605346
GPR[SPVATF]-1659864605346
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864607111
GPR[EPVS]-1659864607111
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=dplus;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864607115
GPR[SPVAP]-1659864607115
GPR[EPVAP]-1659864608144
GPR[EPVS]-1659864608144
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=dminus;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864608145
GPR[SPVAP]-1659864608145
GPR[EPVAP]-1659864609192
GPR[EPVS]-1659864609192
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}

========
GPR[SPVS]-1659864609194
GPR[SPVAP]-1659864609194
GPR[EPVAP]-1659864611067
GPR[SPVATF]-1659864611068
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864612855
GPR[EPVS]-1659864612855
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",min,functionValueAccuracy,yMin);
}

========
GPR[SPVS]-1659864612856
GPR[SPVAP]-1659864612856
GPR[EPVAP]-1659864614735
GPR[SPVATF]-1659864614735
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864616514
GPR[EPVS]-1659864616514
========
if(Math.abs(serialVersionUID-yMin)<functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864616516
GPR[SPVAP]-1659864616516
GPR[EPVAP]-1659864618410
GPR[SPVATF]-1659864618411
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864620209
GPR[EPVS]-1659864620209
========
if(Math.abs(serialVersionUID-yMin)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864620210
GPR[SPVAP]-1659864620210
GPR[EPVAP]-1659864622072
GPR[SPVATF]-1659864622072
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864623859
GPR[EPVS]-1659864623859
========
if(Math.abs(yMax)<=functionValueAccuracy){
this.denominator=1;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864623860
GPR[SPVAP]-1659864623860
GPR[EPVAP]-1659864624878
GPR[EPVS]-1659864624878
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
this.numerator=(int)serialVersionUID;
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864624880
GPR[SPVAP]-1659864624880
GPR[EPVAP]-1659864625916
GPR[EPVS]-1659864625916
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
this.denominator=1;
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864625917
GPR[SPVAP]-1659864625917
GPR[EPVAP]-1659864626958
GPR[EPVS]-1659864626958
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
this.numerator=(int)serialVersionUID;
this.denominator=1;

throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864626959
GPR[SPVAP]-1659864626959
GPR[EPVAP]-1659864627998
GPR[EPVS]-1659864627998
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(EMPTY_ARRAY_MESSAGE);
}

========
GPR[SPVS]-1659864627999
GPR[SPVAP]-1659864627999
GPR[EPVAP]-1659864629022
GPR[EPVS]-1659864629022
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864629025
GPR[SPVAP]-1659864629025
GPR[EPVAP]-1659864630037
GPR[EPVS]-1659864630037
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864630038
GPR[SPVAP]-1659864630038
GPR[EPVAP]-1659864631072
GPR[EPVS]-1659864631072
========
if(Math.abs(yMax)<=functionValueAccuracy){
q1=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864631073
GPR[SPVAP]-1659864631073
GPR[EPVAP]-1659864632102
GPR[EPVS]-1659864632102
========
if(Math.abs(yMax)<=functionValueAccuracy){
a0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864632103
GPR[SPVAP]-1659864632103
GPR[EPVAP]-1659864633135
GPR[EPVS]-1659864633135
========
if(Math.abs(yMax)<=functionValueAccuracy){
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864633136
GPR[SPVAP]-1659864633136
GPR[EPVAP]-1659864634157
GPR[EPVS]-1659864634157
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864634158
GPR[SPVAP]-1659864634158
GPR[EPVAP]-1659864635169
GPR[EPVS]-1659864635169
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864635171
GPR[SPVAP]-1659864635171
GPR[EPVAP]-1659864636196
GPR[EPVS]-1659864636196
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q1=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864636197
GPR[SPVAP]-1659864636197
GPR[EPVAP]-1659864637220
GPR[EPVS]-1659864637220
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
a0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864637221
GPR[SPVAP]-1659864637221
GPR[EPVAP]-1659864638258
GPR[EPVS]-1659864638258
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864638259
GPR[SPVAP]-1659864638259
GPR[EPVAP]-1659864639295
GPR[EPVS]-1659864639295
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864639297
GPR[SPVAP]-1659864639297
GPR[EPVAP]-1659864640385
GPR[EPVS]-1659864640385
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
q1=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864640387
GPR[SPVAP]-1659864640387
GPR[EPVAP]-1659864641421
GPR[EPVS]-1659864641421
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
a0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864641422
GPR[SPVAP]-1659864641422
GPR[EPVAP]-1659864642446
GPR[EPVS]-1659864642446
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864642447
GPR[SPVAP]-1659864642447
GPR[EPVAP]-1659864643489
GPR[EPVS]-1659864643489
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864643490
GPR[SPVAP]-1659864643490
GPR[EPVAP]-1659864644518
GPR[EPVS]-1659864644518
========
if(Math.abs(yMax)<=functionValueAccuracy){
q1=serialVersionUID;
a0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864644518
GPR[SPVAP]-1659864644518
GPR[EPVAP]-1659864645570
GPR[EPVS]-1659864645570
========
if(Math.abs(yMax)<=functionValueAccuracy){
q1=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864645571
GPR[SPVAP]-1659864645571
GPR[EPVAP]-1659864646602
GPR[EPVS]-1659864646602
========
if(Math.abs(yMax)<=functionValueAccuracy){
q1=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864646603
GPR[SPVAP]-1659864646603
GPR[EPVAP]-1659864647634
GPR[EPVS]-1659864647634
========
if(Math.abs(yMax)<=functionValueAccuracy){
a0=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864647635
GPR[SPVAP]-1659864647635
GPR[EPVAP]-1659864648658
GPR[EPVS]-1659864648658
========
if(Math.abs(yMax)<=functionValueAccuracy){
a0=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864648659
GPR[SPVAP]-1659864648659
GPR[EPVAP]-1659864649691
GPR[EPVS]-1659864649691
========
if(Math.abs(yMax)<=functionValueAccuracy){
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864649692
GPR[SPVAP]-1659864649692
GPR[EPVAP]-1659864650708
GPR[EPVS]-1659864650708
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864650709
GPR[SPVAP]-1659864650709
GPR[EPVAP]-1659864651756
GPR[EPVS]-1659864651756
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
a0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864651757
GPR[SPVAP]-1659864651757
GPR[EPVAP]-1659864652796
GPR[EPVS]-1659864652796
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864652797
GPR[SPVAP]-1659864652797
GPR[EPVAP]-1659864653823
GPR[EPVS]-1659864653823
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864653824
GPR[SPVAP]-1659864653824
GPR[EPVAP]-1659864654838
GPR[EPVS]-1659864654838
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864654839
GPR[SPVAP]-1659864654839
GPR[EPVAP]-1659864655902
GPR[EPVS]-1659864655902
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q1=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864655903
GPR[SPVAP]-1659864655903
GPR[EPVAP]-1659864656926
GPR[EPVS]-1659864656926
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q1=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864656927
GPR[SPVAP]-1659864656927
GPR[EPVAP]-1659864657965
GPR[EPVS]-1659864657965
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864657966
GPR[SPVAP]-1659864657966
GPR[EPVAP]-1659864658990
GPR[EPVS]-1659864658990
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
a0=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864658991
GPR[SPVAP]-1659864658991
GPR[EPVAP]-1659864660022
GPR[EPVS]-1659864660022
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864660023
GPR[SPVAP]-1659864660023
GPR[EPVAP]-1659864661081
GPR[EPVS]-1659864661081
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864661082
GPR[SPVAP]-1659864661082
GPR[EPVAP]-1659864662121
GPR[EPVS]-1659864662121
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
q1=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864662122
GPR[SPVAP]-1659864662122
GPR[EPVAP]-1659864663161
GPR[EPVS]-1659864663162
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
q1=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864663162
GPR[SPVAP]-1659864663162
GPR[EPVAP]-1659864664189
GPR[EPVS]-1659864664189
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
a0=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864664190
GPR[SPVAP]-1659864664190
GPR[EPVAP]-1659864665219
GPR[EPVS]-1659864665219
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
a0=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864665220
GPR[SPVAP]-1659864665220
GPR[EPVAP]-1659864666247
GPR[EPVS]-1659864666247
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864666248
GPR[SPVAP]-1659864666248
GPR[EPVAP]-1659864667276
GPR[EPVS]-1659864667276
========
if(Math.abs(yMax)<=functionValueAccuracy){
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864667277
GPR[SPVAP]-1659864667277
GPR[EPVAP]-1659864668285
GPR[EPVS]-1659864668285
========
if(Math.abs(yMax)<=functionValueAccuracy){
q1=serialVersionUID;
a0=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864668286
GPR[SPVAP]-1659864668286
GPR[EPVAP]-1659864669320
GPR[EPVS]-1659864669320
========
if(Math.abs(yMax)<=functionValueAccuracy){
q1=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864669321
GPR[SPVAP]-1659864669321
GPR[EPVAP]-1659864670352
GPR[EPVS]-1659864670352
========
if(Math.abs(yMax)<=functionValueAccuracy){
a0=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864670353
GPR[SPVAP]-1659864670353
GPR[EPVAP]-1659864671401
GPR[EPVS]-1659864671401
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864671401
GPR[SPVAP]-1659864671401
GPR[EPVAP]-1659864672436
GPR[EPVS]-1659864672436
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864672437
GPR[SPVAP]-1659864672437
GPR[EPVAP]-1659864673481
GPR[EPVS]-1659864673481
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864673482
GPR[SPVAP]-1659864673482
GPR[EPVAP]-1659864674515
GPR[EPVS]-1659864674515
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
a0=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864674516
GPR[SPVAP]-1659864674516
GPR[EPVAP]-1659864675535
GPR[EPVS]-1659864675535
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
a0=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864675536
GPR[SPVAP]-1659864675536
GPR[EPVAP]-1659864676536
GPR[EPVS]-1659864676536
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q0=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864676538
GPR[SPVAP]-1659864676538
GPR[EPVAP]-1659864677558
GPR[EPVS]-1659864677558
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864677559
GPR[SPVAP]-1659864677559
GPR[EPVAP]-1659864678598
GPR[EPVS]-1659864678598
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864678599
GPR[SPVAP]-1659864678599
GPR[EPVAP]-1659864679625
GPR[EPVS]-1659864679625
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
q1=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864679626
GPR[SPVAP]-1659864679626
GPR[EPVAP]-1659864680644
GPR[EPVS]-1659864680644
========
if(Math.abs(yMax)<=functionValueAccuracy){
p1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864680645
GPR[SPVAP]-1659864680645
GPR[EPVAP]-1659864681671
GPR[EPVS]-1659864681671
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864681672
GPR[SPVAP]-1659864681672
GPR[EPVAP]-1659864682706
GPR[EPVS]-1659864682706
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864682707
GPR[SPVAP]-1659864682707
GPR[EPVAP]-1659864683737
GPR[EPVS]-1659864683737
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
q1=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864683738
GPR[SPVAP]-1659864683738
GPR[EPVAP]-1659864684775
GPR[EPVS]-1659864684775
========
if(Math.abs(yMax)<=functionValueAccuracy){
q0=serialVersionUID;
a0=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864684776
GPR[SPVAP]-1659864684776
GPR[EPVAP]-1659864685790
GPR[EPVS]-1659864685790
========
if(Math.abs(yMax)<=functionValueAccuracy){
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;
p1=serialVersionUID;
q0=serialVersionUID;
q1=serialVersionUID;
a0=serialVersionUID;
r0=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864685791
GPR[SPVAP]-1659864685791
GPR[EPVAP]-1659864686802
GPR[EPVS]-1659864686802
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(Math.abs(yMax)<Math.abs(ret)){
double ret/yMax=c/d;
double ret*ret/yMax+yMax=c*q+d;
return createComplex((ret*q+ret)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864686804
GPR[SPVAP]-1659864686804
GPR[EPVAP]-1659864687728
GPR[EPVS]-1659864687728
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("propagation direction mismatch");
}

========
GPR[SPVS]-1659864687730
GPR[SPVAP]-1659864687730
GPR[EPVAP]-1659864689675
GPR[SPVATF]-1659864689675
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864691459
GPR[EPVS]-1659864691459
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
singular=true;
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864691461
GPR[SPVAP]-1659864691461
GPR[EPVAP]-1659864692491
GPR[EPVS]-1659864692491
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ratio=functionValueAccuracy/yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864692493
GPR[SPVAP]-1659864692493
GPR[EPVAP]-1659864693519
GPR[EPVS]-1659864693519
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(((Math.abs(yMin)<=ret)&&(ret<=costRelativeTolerance))||(ret<=ret*functionValueAccuracy)){
return ;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864693521
GPR[SPVAP]-1659864693521
GPR[EPVAP]-1659864694548
GPR[EPVS]-1659864694549
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NULL_FUNCTION_MESSAGE);
}

========
GPR[SPVS]-1659864694550
GPR[SPVAP]-1659864694550
GPR[EPVAP]-1659864695572
GPR[EPVS]-1659864695572
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NULL_FRACTION);
}

========
GPR[SPVS]-1659864695573
GPR[SPVAP]-1659864695573
GPR[EPVAP]-1659864696595
GPR[EPVS]-1659864696595
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(AT_LEAST_ONE_ROW_MESSAGE);
}

========
GPR[SPVS]-1659864696597
GPR[SPVAP]-1659864696597
GPR[EPVAP]-1659864697634
GPR[EPVS]-1659864697634
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(AT_LEAST_ONE_COLUMN_MESSAGE);
}

========
GPR[SPVS]-1659864697635
GPR[SPVAP]-1659864697635
GPR[EPVAP]-1659864698668
GPR[EPVS]-1659864698668
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}

========
GPR[SPVS]-1659864698669
GPR[SPVAP]-1659864698669
GPR[EPVAP]-1659864700565
GPR[SPVATF]-1659864700565
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864702343
GPR[EPVS]-1659864702343
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(functionValueAccuracy==0.0){
return min;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864702345
GPR[SPVAP]-1659864702345
GPR[EPVAP]-1659864704228
GPR[SPVATF]-1659864704228
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864706081
GPR[EPVS]-1659864706081
========
if(yMax==0.0){
return max;
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864706082
GPR[SPVAP]-1659864706082
GPR[EPVAP]-1659864707946
GPR[SPVATF]-1659864707946
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864709731
GPR[EPVS]-1659864709731
========
verifyBracketing(min,max,f);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864709733
GPR[SPVAP]-1659864709733
GPR[EPVAP]-1659864711620
GPR[SPVATF]-1659864711620
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864713410
GPR[EPVS]-1659864713410
========
if(yMax==0.0){
return max;
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(functionValueAccuracy==0.0){
return min;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864713411
GPR[SPVAP]-1659864713411
GPR[EPVAP]-1659864715273
GPR[SPVATF]-1659864715273
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864717075
GPR[EPVS]-1659864717075
========
verifyBracketing(min,max,f);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(functionValueAccuracy==0.0){
return min;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864717076
GPR[SPVAP]-1659864717076
GPR[EPVAP]-1659864718969
GPR[SPVATF]-1659864718969
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864720752
GPR[EPVS]-1659864720752
========
if(yMax==0.0){
return max;
}
verifyBracketing(min,max,f);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864720753
GPR[SPVAP]-1659864720753
GPR[EPVAP]-1659864722681
GPR[SPVATF]-1659864722681
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864724494
GPR[EPVS]-1659864724494
========
if(yMax==0.0){
return max;
}
verifyBracketing(min,max,f);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(functionValueAccuracy==0.0){
return min;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864724495
GPR[SPVAP]-1659864724495
GPR[EPVAP]-1659864726381
GPR[SPVATF]-1659864726381
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864728196
GPR[EPVS]-1659864728196
========
if(Math.abs(yMax)<=MathUtils.EPSILON*functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864728198
GPR[SPVAP]-1659864728198
GPR[EPVAP]-1659864729221
GPR[EPVS]-1659864729221
========
if(Math.abs(yMax)<MathUtils.EPSILON*functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864729223
GPR[SPVAP]-1659864729223
GPR[EPVAP]-1659864730244
GPR[EPVS]-1659864730244
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=x;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864730246
GPR[SPVAP]-1659864730246
GPR[EPVAP]-1659864731268
GPR[EPVS]-1659864731268
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=v;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864731269
GPR[SPVAP]-1659864731269
GPR[EPVAP]-1659864732298
GPR[EPVS]-1659864732298
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=q;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864732299
GPR[SPVAP]-1659864732299
GPR[EPVAP]-1659864733320
GPR[EPVS]-1659864733320
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=w;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864733321
GPR[SPVAP]-1659864733321
GPR[EPVAP]-1659864734358
GPR[EPVS]-1659864734358
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=r;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864734359
GPR[SPVAP]-1659864734359
GPR[EPVAP]-1659864735375
GPR[EPVS]-1659864735375
========
if(Math.abs(yMax)<=functionValueAccuracy){
if(yMin>0){
p=-ret;
}else {
q=-yMin;
}
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864735376
GPR[SPVAP]-1659864735376
GPR[EPVAP]-1659864736401
GPR[EPVS]-1659864736401
========
if(Math.abs(yMax)<=functionValueAccuracy){
r=max;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864736402
GPR[SPVAP]-1659864736402
GPR[EPVAP]-1659864737431
GPR[EPVS]-1659864737431
========
if(Math.abs(yMax)<=functionValueAccuracy){
e=yMin;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864737432
GPR[SPVAP]-1659864737432
GPR[EPVAP]-1659864738456
GPR[EPVS]-1659864738456
========
if(Math.abs(yMax)<=functionValueAccuracy){
if(yMin>0){
p=-ret;
}else {
q=-yMin;
}
r=max;
e=yMin;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864738457
GPR[SPVAP]-1659864738457
GPR[EPVAP]-1659864739492
GPR[EPVS]-1659864739492
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(yMin==0.0&&yMax==0.0){
return createComplex(0.0,0.0);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864739493
GPR[SPVAP]-1659864739493
GPR[EPVAP]-1659864740535
GPR[EPVS]-1659864740535
========
if(isNaN()){
return Complex.NaN;
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864740536
GPR[SPVAP]-1659864740536
GPR[EPVAP]-1659864741586
GPR[EPVS]-1659864741586
========
if(yMin>=0.0){
return createComplex(Math.sqrt((Math.abs(yMin)+abs())/2.0),yMax/(2.0*t));
}else {
return createComplex(Math.abs(imaginary)/(2.0*t),MathUtils.indicator(imaginary)*t);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864741587
GPR[SPVAP]-1659864741587
GPR[EPVAP]-1659864742646
GPR[EPVS]-1659864742646
========
if(Math.abs(yMax)<min){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864742647
GPR[SPVAP]-1659864742647
GPR[EPVAP]-1659864744510
GPR[SPVATF]-1659864744510
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864746327
GPR[EPVS]-1659864746327
========
if(Math.abs(yMax)<=min){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864746328
GPR[SPVAP]-1659864746328
GPR[EPVAP]-1659864748195
GPR[SPVATF]-1659864748195
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864750018
GPR[EPVS]-1659864750018
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=minStep;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864750019
GPR[SPVAP]-1659864750019
GPR[EPVAP]-1659864751046
GPR[EPVS]-1659864751046
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw new IntegratorException("minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}",min,Math.abs(yMax));
}

========
GPR[SPVS]-1659864751048
GPR[SPVAP]-1659864751048
GPR[EPVAP]-1659864752075
GPR[EPVS]-1659864752075
========
if(Math.abs(serialVersionUID-min)<functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864752076
GPR[SPVAP]-1659864752076
GPR[EPVAP]-1659864753928
GPR[SPVATF]-1659864753928
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864755713
GPR[EPVS]-1659864755713
========
if(Math.abs(serialVersionUID-min)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864755714
GPR[SPVAP]-1659864755714
GPR[EPVAP]-1659864757583
GPR[SPVATF]-1659864757583
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864759355
GPR[EPVS]-1659864759355
========
if(Math.abs(yMax)<=functionValueAccuracy){
denominator=BigInteger.ONE;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864759356
GPR[SPVAP]-1659864759356
GPR[EPVAP]-1659864760398
GPR[EPVS]-1659864760398
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
numerator=BigInteger.valueOf(serialVersionUID);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864760399
GPR[SPVAP]-1659864760399
GPR[EPVAP]-1659864761423
GPR[EPVS]-1659864761423
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
denominator=BigInteger.ONE;
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864761425
GPR[SPVAP]-1659864761425
GPR[EPVAP]-1659864762458
GPR[EPVS]-1659864762458
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
numerator=BigInteger.valueOf(serialVersionUID);
denominator=BigInteger.ONE;

throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864762460
GPR[SPVAP]-1659864762460
GPR[EPVAP]-1659864763486
GPR[EPVS]-1659864763486
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if((Math.abs(yMax)<=0.1*ret)||((ret==0)&&(fp<=functionValueAccuracy))){
return ;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864763489
GPR[SPVAP]-1659864763489
GPR[EPVAP]-1659864764510
GPR[EPVS]-1659864764510
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(functionValueAccuracy==0.0){
return max;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864764512
GPR[SPVAP]-1659864764512
GPR[EPVAP]-1659864766374
GPR[SPVATF]-1659864766374
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864768162
GPR[EPVS]-1659864768162
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("{0} method needs at least one previous point",NON_BRACKETING_MESSAGE);
}

========
GPR[SPVS]-1659864768165
GPR[SPVAP]-1659864768165
GPR[EPVAP]-1659864770017
GPR[SPVATF]-1659864770017
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864771826
GPR[EPVS]-1659864771826
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
GPR[SPVS]-1659864771828
GPR[SPVAP]-1659864771828
GPR[EPVAP]-1659864773678
GPR[SPVATF]-1659864773678
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864775463
GPR[EPVS]-1659864775463
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
GPR[SPVS]-1659864775464
GPR[SPVAP]-1659864775464
GPR[EPVAP]-1659864777361
GPR[SPVATF]-1659864777361
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864779152
GPR[EPVS]-1659864779152
========
max=UnivariateRealSolverUtils.midpoint(yMax,ret);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864779155
GPR[SPVAP]-1659864779155
GPR[EPVAP]-1659864780186
GPR[EPVS]-1659864780186
========
yMin=f.value(yMax);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864780187
GPR[SPVAP]-1659864780187
GPR[EPVAP]-1659864782056
GPR[SPVATF]-1659864782056
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864783882
GPR[EPVS]-1659864783882
========
functionValueAccuracy=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864783883
GPR[SPVAP]-1659864783883
GPR[EPVAP]-1659864785768
GPR[SPVATF]-1659864785768
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864787558
GPR[EPVS]-1659864787558
========
yMin=f.value(yMax);
functionValueAccuracy=f.value(max);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864787559
GPR[SPVAP]-1659864787559
GPR[EPVAP]-1659864789478
GPR[SPVATF]-1659864789478
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864791260
GPR[EPVS]-1659864791260
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=xDev;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864791261
GPR[SPVAP]-1659864791261
GPR[EPVAP]-1659864792286
GPR[EPVS]-1659864792286
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=yDev;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864792287
GPR[SPVAP]-1659864792287
GPR[EPVAP]-1659864793310
GPR[EPVS]-1659864793310
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=result;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864793311
GPR[SPVAP]-1659864793311
GPR[EPVAP]-1659864795177
GPR[SPVATF]-1659864795177
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864796975
GPR[EPVS]-1659864796975
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
GPR[SPVS]-1659864796978
GPR[SPVAP]-1659864796978
GPR[EPVAP]-1659864798847
GPR[SPVATF]-1659864798847
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864800677
GPR[EPVS]-1659864800677
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("no data");
}

========
GPR[SPVS]-1659864800679
GPR[SPVAP]-1659864800679
GPR[EPVAP]-1659864802614
GPR[SPVATF]-1659864802614
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864804403
GPR[EPVS]-1659864804403
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864804404
GPR[SPVAP]-1659864804404
GPR[EPVAP]-1659864806273
GPR[SPVATF]-1659864806273
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864808062
GPR[EPVS]-1659864808062
========
if(Math.abs(mulAndCheck(serialVersionUID/gcd(a,serialVersionUID),b))==Long.MIN_VALUE){
throw MathRuntimeException.createArithmeticException("overflow: lcm({0}, {1}) is 2^63",serialVersionUID,serialVersionUID);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864808064
GPR[SPVAP]-1659864808064
GPR[EPVAP]-1659864809083
GPR[EPVS]-1659864809083
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("function is null");
}

========
GPR[SPVS]-1659864809084
GPR[SPVAP]-1659864809084
GPR[EPVAP]-1659864810982
GPR[SPVATF]-1659864810982
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864812829
GPR[EPVS]-1659864812829
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("null imaginary format");
}

========
GPR[SPVS]-1659864812831
GPR[SPVAP]-1659864812831
GPR[EPVAP]-1659864814703
GPR[SPVATF]-1659864814703
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864816505
GPR[EPVS]-1659864816505
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("null real format");
}

========
GPR[SPVS]-1659864816506
GPR[SPVAP]-1659864816506
GPR[EPVAP]-1659864818381
GPR[SPVATF]-1659864818381
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864820178
GPR[EPVS]-1659864820178
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("whole format can not be null");
}

========
GPR[SPVS]-1659864820179
GPR[SPVAP]-1659864820179
GPR[EPVAP]-1659864822070
GPR[SPVATF]-1659864822070
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864823852
GPR[EPVS]-1659864823852
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("denominator format can not be null");
}

========
GPR[SPVS]-1659864823854
GPR[SPVAP]-1659864823854
GPR[EPVAP]-1659864825706
GPR[SPVATF]-1659864825706
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864827497
GPR[EPVS]-1659864827497
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("numerator format can not be null");
}

========
GPR[SPVS]-1659864827498
GPR[SPVAP]-1659864827498
GPR[EPVAP]-1659864829410
GPR[SPVATF]-1659864829410
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864831189
GPR[EPVS]-1659864831189
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("covariance matrix is null");
}

========
GPR[SPVS]-1659864831190
GPR[SPVAP]-1659864831190
GPR[EPVAP]-1659864833064
GPR[SPVATF]-1659864833064
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864834849
GPR[EPVS]-1659864834849
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}

========
GPR[SPVS]-1659864834850
GPR[SPVAP]-1659864834850
GPR[EPVAP]-1659864836754
GPR[SPVATF]-1659864836754
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864838571
GPR[EPVS]-1659864838571
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("input weights array is null");
}

========
GPR[SPVS]-1659864838572
GPR[SPVAP]-1659864838572
GPR[EPVAP]-1659864840444
GPR[SPVATF]-1659864840444
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864842227
GPR[EPVS]-1659864842227
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in first observed array");
}

========
GPR[SPVS]-1659864842228
GPR[SPVAP]-1659864842228
GPR[EPVAP]-1659864844096
GPR[SPVATF]-1659864844096
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864845878
GPR[EPVS]-1659864845878
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in second observed array");
}

========
GPR[SPVS]-1659864845880
GPR[SPVAP]-1659864845880
GPR[EPVAP]-1659864847738
GPR[SPVATF]-1659864847738
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864849530
GPR[EPVS]-1659864849530
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("zero norm for rotation defining vector");
}

========
GPR[SPVS]-1659864849531
GPR[SPVAP]-1659864849531
GPR[EPVAP]-1659864851412
GPR[SPVATF]-1659864851412
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864853191
GPR[EPVS]-1659864853191
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}

========
GPR[SPVS]-1659864853192
GPR[SPVAP]-1659864853192
GPR[EPVAP]-1659864855069
GPR[SPVATF]-1659864855069
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864856865
GPR[EPVS]-1659864856865
========
if(Math.isNaN(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864856869
GPR[SPVAP]-1659864856869
GPR[EPVAP]-1659864857884
GPR[EPVS]-1659864857884
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=MAX_VALUE;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864857886
GPR[SPVAP]-1659864857886
GPR[EPVAP]-1659864858920
GPR[EPVS]-1659864858920
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,64);
}

========
GPR[SPVS]-1659864858922
GPR[SPVAP]-1659864858922
GPR[EPVAP]-1659864860793
GPR[SPVATF]-1659864860793
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864862571
GPR[EPVS]-1659864862571
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,32);
}

========
GPR[SPVS]-1659864862573
GPR[SPVAP]-1659864862573
GPR[EPVAP]-1659864864443
GPR[SPVATF]-1659864864443
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864866221
GPR[EPVS]-1659864866221
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=ret;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864866223
GPR[SPVAP]-1659864866223
GPR[EPVAP]-1659864868107
GPR[SPVATF]-1659864868107
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864869912
GPR[EPVS]-1659864869912
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=p;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864869914
GPR[SPVAP]-1659864869914
GPR[EPVAP]-1659864870943
GPR[EPVS]-1659864870943
========
if(ret*yMax<0){
return solve(f,ret,yInitial,max,yMax,initial,yInitial);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864870944
GPR[SPVAP]-1659864870944
GPR[EPVAP]-1659864871965
GPR[EPVS]-1659864871965
========
if(ret*yMax<0){
return solve(f,ret,yInitial,max,yMax,initial,yInitial);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864871966
GPR[SPVAP]-1659864871966
GPR[EPVAP]-1659864872995
GPR[EPVS]-1659864872995
========
if(ret*yMax<0){
return solve(f,ret,yInitial,max,yMax,initial,yInitial);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(yMax,0);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864872996
GPR[SPVAP]-1659864872996
GPR[EPVAP]-1659864874027
GPR[EPVS]-1659864874027
========
if(ret*yMax<0){
return solve(f,ret,yInitial,max,yMax,initial,yInitial);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864874028
GPR[SPVAP]-1659864874028
GPR[EPVAP]-1659864875050
GPR[EPVS]-1659864875050
========
if(ret*yMax<0){
return solve(f,ret,yInitial,max,yMax,initial,yInitial);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
setResult(yMax,0);
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864875051
GPR[SPVAP]-1659864875051
GPR[EPVAP]-1659864876086
GPR[EPVS]-1659864876086
========
if(ret*yMax<0){
return solve(f,ret,yInitial,max,yMax,initial,yInitial);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
setResult(yMax,0);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864876087
GPR[SPVAP]-1659864876087
GPR[EPVAP]-1659864877098
GPR[EPVS]-1659864877098
========
if(ret*yMax<0){
return solve(f,ret,yInitial,max,yMax,initial,yInitial);
}
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
ret=max;
}else {
setResult(yMax,0);
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
return ret;
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864877099
GPR[SPVAP]-1659864877099
GPR[EPVAP]-1659864878131
GPR[EPVS]-1659864878131
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",functionValueAccuracy,serialVersionUID);
}

========
GPR[SPVS]-1659864878136
GPR[SPVAP]-1659864878136
GPR[EPVAP]-1659864880013
GPR[SPVATF]-1659864880013
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659864881806
GPR[EPVS]-1659864881806
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864881814
GPR[SPVAP]-1659864881814
GPR[EPVAP]-1659864882858
GPR[EPVS]-1659864882858
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864882859
GPR[SPVAP]-1659864882859
GPR[EPVAP]-1659864883891
GPR[EPVS]-1659864883891
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864883892
GPR[SPVAP]-1659864883892
GPR[EPVAP]-1659864884924
GPR[EPVS]-1659864884924
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864884925
GPR[SPVAP]-1659864884925
GPR[EPVAP]-1659864885945
GPR[EPVS]-1659864885945
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864885946
GPR[SPVAP]-1659864885946
GPR[EPVAP]-1659864886976
GPR[EPVS]-1659864886976
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864886977
GPR[SPVAP]-1659864886977
GPR[EPVAP]-1659864888004
GPR[EPVS]-1659864888004
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864888005
GPR[SPVAP]-1659864888005
GPR[EPVAP]-1659864889009
GPR[EPVS]-1659864889009
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864889010
GPR[SPVAP]-1659864889010
GPR[EPVAP]-1659864890027
GPR[EPVS]-1659864890027
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864890028
GPR[SPVAP]-1659864890028
GPR[EPVAP]-1659864891052
GPR[EPVS]-1659864891052
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864891053
GPR[SPVAP]-1659864891053
GPR[EPVAP]-1659864892076
GPR[EPVS]-1659864892076
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864892078
GPR[SPVAP]-1659864892078
GPR[EPVAP]-1659864893148
GPR[EPVS]-1659864893148
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864893149
GPR[SPVAP]-1659864893149
GPR[EPVAP]-1659864894174
GPR[EPVS]-1659864894174
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864894176
GPR[SPVAP]-1659864894176
GPR[EPVAP]-1659864895228
GPR[EPVS]-1659864895228
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864895229
GPR[SPVAP]-1659864895229
GPR[EPVAP]-1659864896295
GPR[EPVS]-1659864896295
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864896296
GPR[SPVAP]-1659864896296
GPR[EPVAP]-1659864897361
GPR[EPVS]-1659864897361
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864897363
GPR[SPVAP]-1659864897363
GPR[EPVAP]-1659864898415
GPR[EPVS]-1659864898415
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864898416
GPR[SPVAP]-1659864898416
GPR[EPVAP]-1659864899480
GPR[EPVS]-1659864899480
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864899481
GPR[SPVAP]-1659864899481
GPR[EPVAP]-1659864900543
GPR[EPVS]-1659864900543
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864900545
GPR[SPVAP]-1659864900545
GPR[EPVAP]-1659864901589
GPR[EPVS]-1659864901589
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864901591
GPR[SPVAP]-1659864901591
GPR[EPVAP]-1659864902645
GPR[EPVS]-1659864902645
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864902647
GPR[SPVAP]-1659864902647
GPR[EPVAP]-1659864903710
GPR[EPVS]-1659864903710
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864903712
GPR[SPVAP]-1659864903712
GPR[EPVAP]-1659864904773
GPR[EPVS]-1659864904773
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864904775
GPR[SPVAP]-1659864904775
GPR[EPVAP]-1659864905815
GPR[EPVS]-1659864905815
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864905817
GPR[SPVAP]-1659864905817
GPR[EPVAP]-1659864906912
GPR[EPVS]-1659864906912
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864906913
GPR[SPVAP]-1659864906913
GPR[EPVAP]-1659864907948
GPR[EPVS]-1659864907948
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864907949
GPR[SPVAP]-1659864907949
GPR[EPVAP]-1659864908994
GPR[EPVS]-1659864908994
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864908995
GPR[SPVAP]-1659864908995
GPR[EPVAP]-1659864910061
GPR[EPVS]-1659864910061
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864910061
GPR[SPVAP]-1659864910061
GPR[EPVAP]-1659864911107
GPR[EPVS]-1659864911107
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864911108
GPR[SPVAP]-1659864911108
GPR[EPVAP]-1659864912157
GPR[EPVS]-1659864912157
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864912158
GPR[SPVAP]-1659864912158
GPR[EPVAP]-1659864913211
GPR[EPVS]-1659864913211
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864913212
GPR[SPVAP]-1659864913212
GPR[EPVAP]-1659864914266
GPR[EPVS]-1659864914266
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864914267
GPR[SPVAP]-1659864914267
GPR[EPVAP]-1659864915306
GPR[EPVS]-1659864915306
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864915307
GPR[SPVAP]-1659864915307
GPR[EPVAP]-1659864916361
GPR[EPVS]-1659864916361
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864916362
GPR[SPVAP]-1659864916362
GPR[EPVAP]-1659864917400
GPR[EPVS]-1659864917400
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864917402
GPR[SPVAP]-1659864917402
GPR[EPVAP]-1659864918453
GPR[EPVS]-1659864918453
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864918455
GPR[SPVAP]-1659864918455
GPR[EPVAP]-1659864919522
GPR[EPVS]-1659864919523
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864919524
GPR[SPVAP]-1659864919524
GPR[EPVAP]-1659864920584
GPR[EPVS]-1659864920584
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864920585
GPR[SPVAP]-1659864920585
GPR[EPVAP]-1659864921631
GPR[EPVS]-1659864921631
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864921633
GPR[SPVAP]-1659864921633
GPR[EPVAP]-1659864922673
GPR[EPVS]-1659864922673
========
if(Math.abs(max)<functionValueAccuracy){
y1=max;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864922674
GPR[SPVAP]-1659864922675
GPR[EPVAP]-1659864923730
GPR[EPVS]-1659864923730
========
if(Math.abs(max)<functionValueAccuracy){
y2=ret;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864923731
GPR[SPVAP]-1659864923731
GPR[EPVAP]-1659864924802
GPR[EPVS]-1659864924802
========
if(Math.abs(max)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864924804
GPR[SPVAP]-1659864924804
GPR[EPVAP]-1659864925859
GPR[EPVS]-1659864925859
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864925860
GPR[SPVAP]-1659864925860
GPR[EPVAP]-1659864926915
GPR[EPVS]-1659864926915
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864926916
GPR[SPVAP]-1659864926916
GPR[EPVAP]-1659864927975
GPR[EPVS]-1659864927975
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864927976
GPR[SPVAP]-1659864927976
GPR[EPVAP]-1659864929050
GPR[EPVS]-1659864929050
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864929052
GPR[SPVAP]-1659864929052
GPR[EPVAP]-1659864930126
GPR[EPVS]-1659864930126
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864930127
GPR[SPVAP]-1659864930127
GPR[EPVAP]-1659864931173
GPR[EPVS]-1659864931174
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864931174
GPR[SPVAP]-1659864931174
GPR[EPVAP]-1659864932251
GPR[EPVS]-1659864932251
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864932253
GPR[SPVAP]-1659864932253
GPR[EPVAP]-1659864933309
GPR[EPVS]-1659864933309
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864933310
GPR[SPVAP]-1659864933310
GPR[EPVAP]-1659864934346
GPR[EPVS]-1659864934346
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864934347
GPR[SPVAP]-1659864934347
GPR[EPVAP]-1659864935396
GPR[EPVS]-1659864935396
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864935398
GPR[SPVAP]-1659864935398
GPR[EPVAP]-1659864936478
GPR[EPVS]-1659864936478
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864936479
GPR[SPVAP]-1659864936479
GPR[EPVAP]-1659864937533
GPR[EPVS]-1659864937533
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864937534
GPR[SPVAP]-1659864937534
GPR[EPVAP]-1659864938593
GPR[EPVS]-1659864938593
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864938595
GPR[SPVAP]-1659864938595
GPR[EPVAP]-1659864939669
GPR[EPVS]-1659864939669
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864939670
GPR[SPVAP]-1659864939670
GPR[EPVAP]-1659864940722
GPR[EPVS]-1659864940722
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864940724
GPR[SPVAP]-1659864940724
GPR[EPVAP]-1659864941810
GPR[EPVS]-1659864941810
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864941811
GPR[SPVAP]-1659864941811
GPR[EPVAP]-1659864942873
GPR[EPVS]-1659864942873
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864942875
GPR[SPVAP]-1659864942875
GPR[EPVAP]-1659864943935
GPR[EPVS]-1659864943935
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864943936
GPR[SPVAP]-1659864943936
GPR[EPVAP]-1659864945034
GPR[EPVS]-1659864945034
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864945035
GPR[SPVAP]-1659864945035
GPR[EPVAP]-1659864946089
GPR[EPVS]-1659864946089
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864946091
GPR[SPVAP]-1659864946091
GPR[EPVAP]-1659864947173
GPR[EPVS]-1659864947173
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864947174
GPR[SPVAP]-1659864947174
GPR[EPVAP]-1659864948234
GPR[EPVS]-1659864948234
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864948235
GPR[SPVAP]-1659864948235
GPR[EPVAP]-1659864949297
GPR[EPVS]-1659864949297
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864949298
GPR[SPVAP]-1659864949298
GPR[EPVAP]-1659864950360
GPR[EPVS]-1659864950360
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864950361
GPR[SPVAP]-1659864950361
GPR[EPVAP]-1659864951448
GPR[EPVS]-1659864951448
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864951449
GPR[SPVAP]-1659864951449
GPR[EPVAP]-1659864952554
GPR[EPVS]-1659864952554
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864952555
GPR[SPVAP]-1659864952555
GPR[EPVAP]-1659864953591
GPR[EPVS]-1659864953591
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864953592
GPR[SPVAP]-1659864953592
GPR[EPVAP]-1659864954670
GPR[EPVS]-1659864954670
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864954672
GPR[SPVAP]-1659864954672
GPR[EPVAP]-1659864955714
GPR[EPVS]-1659864955714
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864955716
GPR[SPVAP]-1659864955716
GPR[EPVAP]-1659864956756
GPR[EPVS]-1659864956756
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864956757
GPR[SPVAP]-1659864956757
GPR[EPVAP]-1659864957826
GPR[EPVS]-1659864957826
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864957827
GPR[SPVAP]-1659864957827
GPR[EPVAP]-1659864958884
GPR[EPVS]-1659864958884
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864958885
GPR[SPVAP]-1659864958885
GPR[EPVAP]-1659864959946
GPR[EPVS]-1659864959946
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864959946
GPR[SPVAP]-1659864959946
GPR[EPVAP]-1659864960984
GPR[EPVS]-1659864960984
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864960985
GPR[SPVAP]-1659864960985
GPR[EPVAP]-1659864962035
GPR[EPVS]-1659864962036
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864962037
GPR[SPVAP]-1659864962037
GPR[EPVAP]-1659864963080
GPR[EPVS]-1659864963080
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864963081
GPR[SPVAP]-1659864963081
GPR[EPVAP]-1659864964124
GPR[EPVS]-1659864964124
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864964126
GPR[SPVAP]-1659864964126
GPR[EPVAP]-1659864965199
GPR[EPVS]-1659864965199
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864965201
GPR[SPVAP]-1659864965201
GPR[EPVAP]-1659864966280
GPR[EPVS]-1659864966280
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864966281
GPR[SPVAP]-1659864966281
GPR[EPVAP]-1659864967369
GPR[EPVS]-1659864967369
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864967371
GPR[SPVAP]-1659864967371
GPR[EPVAP]-1659864968451
GPR[EPVS]-1659864968452
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864968453
GPR[SPVAP]-1659864968453
GPR[EPVAP]-1659864969530
GPR[EPVS]-1659864969530
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864969531
GPR[SPVAP]-1659864969531
GPR[EPVAP]-1659864970575
GPR[EPVS]-1659864970575
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864970577
GPR[SPVAP]-1659864970577
GPR[EPVAP]-1659864971673
GPR[EPVS]-1659864971673
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864971680
GPR[SPVAP]-1659864971680
GPR[EPVAP]-1659864972755
GPR[EPVS]-1659864972755
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864972756
GPR[SPVAP]-1659864972756
GPR[EPVAP]-1659864973825
GPR[EPVS]-1659864973825
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864973827
GPR[SPVAP]-1659864973827
GPR[EPVAP]-1659864974910
GPR[EPVS]-1659864974910
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864974912
GPR[SPVAP]-1659864974912
GPR[EPVAP]-1659864975985
GPR[EPVS]-1659864975985
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x1=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864975986
GPR[SPVAP]-1659864975986
GPR[EPVAP]-1659864977038
GPR[EPVS]-1659864977038
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864977039
GPR[SPVAP]-1659864977039
GPR[EPVAP]-1659864978092
GPR[EPVS]-1659864978092
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864978093
GPR[SPVAP]-1659864978093
GPR[EPVAP]-1659864979154
GPR[EPVS]-1659864979154
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864979155
GPR[SPVAP]-1659864979155
GPR[EPVAP]-1659864980247
GPR[EPVS]-1659864980247
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864980249
GPR[SPVAP]-1659864980249
GPR[EPVAP]-1659864981329
GPR[EPVS]-1659864981329
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864981332
GPR[SPVAP]-1659864981332
GPR[EPVAP]-1659864982391
GPR[EPVS]-1659864982391
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864982392
GPR[SPVAP]-1659864982392
GPR[EPVAP]-1659864983437
GPR[EPVS]-1659864983437
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864983438
GPR[SPVAP]-1659864983438
GPR[EPVAP]-1659864984485
GPR[EPVS]-1659864984485
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864984487
GPR[SPVAP]-1659864984487
GPR[EPVAP]-1659864985539
GPR[EPVS]-1659864985539
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864985540
GPR[SPVAP]-1659864985540
GPR[EPVAP]-1659864986602
GPR[EPVS]-1659864986602
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864986604
GPR[SPVAP]-1659864986604
GPR[EPVAP]-1659864987681
GPR[EPVS]-1659864987681
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864987683
GPR[SPVAP]-1659864987683
GPR[EPVAP]-1659864988768
GPR[EPVS]-1659864988768
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864988770
GPR[SPVAP]-1659864988770
GPR[EPVAP]-1659864989862
GPR[EPVS]-1659864989862
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864989863
GPR[SPVAP]-1659864989863
GPR[EPVAP]-1659864990942
GPR[EPVS]-1659864990942
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864990943
GPR[SPVAP]-1659864990943
GPR[EPVAP]-1659864992012
GPR[EPVS]-1659864992012
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864992013
GPR[SPVAP]-1659864992013
GPR[EPVAP]-1659864993083
GPR[EPVS]-1659864993083
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864993084
GPR[SPVAP]-1659864993084
GPR[EPVAP]-1659864994137
GPR[EPVS]-1659864994137
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864994138
GPR[SPVAP]-1659864994138
GPR[EPVAP]-1659864995214
GPR[EPVS]-1659864995214
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864995216
GPR[SPVAP]-1659864995216
GPR[EPVAP]-1659864996279
GPR[EPVS]-1659864996279
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864996281
GPR[SPVAP]-1659864996281
GPR[EPVAP]-1659864997348
GPR[EPVS]-1659864997348
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864997349
GPR[SPVAP]-1659864997349
GPR[EPVAP]-1659864998422
GPR[EPVS]-1659864998422
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864998423
GPR[SPVAP]-1659864998423
GPR[EPVAP]-1659864999490
GPR[EPVS]-1659864999490
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659864999492
GPR[SPVAP]-1659864999492
GPR[EPVAP]-1659865000566
GPR[EPVS]-1659865000566
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865000567
GPR[SPVAP]-1659865000567
GPR[EPVAP]-1659865001618
GPR[EPVS]-1659865001618
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865001620
GPR[SPVAP]-1659865001620
GPR[EPVAP]-1659865002691
GPR[EPVS]-1659865002691
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865002693
GPR[SPVAP]-1659865002693
GPR[EPVAP]-1659865003753
GPR[EPVS]-1659865003753
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865003755
GPR[SPVAP]-1659865003755
GPR[EPVAP]-1659865004839
GPR[EPVS]-1659865004839
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865004840
GPR[SPVAP]-1659865004840
GPR[EPVAP]-1659865005882
GPR[EPVS]-1659865005882
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865005883
GPR[SPVAP]-1659865005883
GPR[EPVAP]-1659865006946
GPR[EPVS]-1659865006946
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865006947
GPR[SPVAP]-1659865006947
GPR[EPVAP]-1659865007995
GPR[EPVS]-1659865007995
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865007996
GPR[SPVAP]-1659865007996
GPR[EPVAP]-1659865009030
GPR[EPVS]-1659865009030
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865009031
GPR[SPVAP]-1659865009031
GPR[EPVAP]-1659865010115
GPR[EPVS]-1659865010115
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865010117
GPR[SPVAP]-1659865010117
GPR[EPVAP]-1659865011166
GPR[EPVS]-1659865011166
========
if(Math.abs(max)<functionValueAccuracy){
y1=max;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865011167
GPR[SPVAP]-1659865011167
GPR[EPVAP]-1659865012213
GPR[EPVS]-1659865012213
========
if(Math.abs(max)<functionValueAccuracy){
y2=ret;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865012214
GPR[SPVAP]-1659865012214
GPR[EPVAP]-1659865013290
GPR[EPVS]-1659865013290
========
if(Math.abs(max)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865013292
GPR[SPVAP]-1659865013292
GPR[EPVAP]-1659865014377
GPR[EPVS]-1659865014377
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865014379
GPR[SPVAP]-1659865014379
GPR[EPVAP]-1659865015444
GPR[EPVS]-1659865015444
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865015445
GPR[SPVAP]-1659865015445
GPR[EPVAP]-1659865016501
GPR[EPVS]-1659865016501
========
if(Math.abs(max)<functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865016502
GPR[SPVAP]-1659865016502
GPR[EPVAP]-1659865017535
GPR[EPVS]-1659865017535
========
if(Math.abs(max)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865017537
GPR[SPVAP]-1659865017537
GPR[EPVAP]-1659865018662
GPR[EPVS]-1659865018662
========
if(Math.abs(max)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865018664
GPR[SPVAP]-1659865018664
GPR[EPVAP]-1659865019764
GPR[EPVS]-1659865019764
========
if(Math.abs(max)<functionValueAccuracy){
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865019765
GPR[SPVAP]-1659865019765
GPR[EPVAP]-1659865020862
GPR[EPVS]-1659865020862
========
if(Math.abs(max)<functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865020863
GPR[SPVAP]-1659865020863
GPR[EPVAP]-1659865021946
GPR[EPVS]-1659865021946
========
if(Math.abs(max)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865021947
GPR[SPVAP]-1659865021947
GPR[EPVAP]-1659865023025
GPR[EPVS]-1659865023025
========
if(Math.abs(max)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865023026
GPR[SPVAP]-1659865023026
GPR[EPVAP]-1659865024133
GPR[EPVS]-1659865024133
========
if(Math.abs(max)<functionValueAccuracy){
y1=max;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865024134
GPR[SPVAP]-1659865024134
GPR[EPVAP]-1659865025232
GPR[EPVS]-1659865025232
========
if(Math.abs(max)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865025233
GPR[SPVAP]-1659865025233
GPR[EPVAP]-1659865026344
GPR[EPVS]-1659865026344
========
if(Math.abs(max)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865026345
GPR[SPVAP]-1659865026345
GPR[EPVAP]-1659865027422
GPR[EPVS]-1659865027422
========
if(Math.abs(max)<functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865027424
GPR[SPVAP]-1659865027424
GPR[EPVAP]-1659865028495
GPR[EPVS]-1659865028495
========
if(Math.abs(max)<functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865028496
GPR[SPVAP]-1659865028496
GPR[EPVAP]-1659865029566
GPR[EPVS]-1659865029566
========
if(Math.abs(max)<functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865029568
GPR[SPVAP]-1659865029568
GPR[EPVAP]-1659865030641
GPR[EPVS]-1659865030641
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865030642
GPR[SPVAP]-1659865030642
GPR[EPVAP]-1659865031695
GPR[EPVS]-1659865031695
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865031696
GPR[SPVAP]-1659865031696
GPR[EPVAP]-1659865032746
GPR[EPVS]-1659865032746
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865032748
GPR[SPVAP]-1659865032748
GPR[EPVAP]-1659865033798
GPR[EPVS]-1659865033798
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865033799
GPR[SPVAP]-1659865033799
GPR[EPVAP]-1659865034902
GPR[EPVS]-1659865034902
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865034903
GPR[SPVAP]-1659865034903
GPR[EPVAP]-1659865035942
GPR[EPVS]-1659865035942
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x1=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865035943
GPR[SPVAP]-1659865035943
GPR[EPVAP]-1659865037010
GPR[EPVS]-1659865037010
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865037011
GPR[SPVAP]-1659865037011
GPR[EPVAP]-1659865038106
GPR[EPVS]-1659865038106
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865038107
GPR[SPVAP]-1659865038107
GPR[EPVAP]-1659865039162
GPR[EPVS]-1659865039162
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865039163
GPR[SPVAP]-1659865039163
GPR[EPVAP]-1659865040207
GPR[EPVS]-1659865040207
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865040208
GPR[SPVAP]-1659865040208
GPR[EPVAP]-1659865041280
GPR[EPVS]-1659865041280
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865041281
GPR[SPVAP]-1659865041281
GPR[EPVAP]-1659865042347
GPR[EPVS]-1659865042347
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865042348
GPR[SPVAP]-1659865042348
GPR[EPVAP]-1659865043383
GPR[EPVS]-1659865043383
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865043394
GPR[SPVAP]-1659865043394
GPR[EPVAP]-1659865044440
GPR[EPVS]-1659865044440
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865044441
GPR[SPVAP]-1659865044441
GPR[EPVAP]-1659865045498
GPR[EPVS]-1659865045498
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865045500
GPR[SPVAP]-1659865045500
GPR[EPVAP]-1659865046578
GPR[EPVS]-1659865046579
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865046580
GPR[SPVAP]-1659865046580
GPR[EPVAP]-1659865047629
GPR[EPVS]-1659865047629
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865047631
GPR[SPVAP]-1659865047631
GPR[EPVAP]-1659865048687
GPR[EPVS]-1659865048687
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865048688
GPR[SPVAP]-1659865048688
GPR[EPVAP]-1659865049763
GPR[EPVS]-1659865049763
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865049764
GPR[SPVAP]-1659865049764
GPR[EPVAP]-1659865050867
GPR[EPVS]-1659865050867
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865050868
GPR[SPVAP]-1659865050868
GPR[EPVAP]-1659865051922
GPR[EPVS]-1659865051922
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865051923
GPR[SPVAP]-1659865051923
GPR[EPVAP]-1659865053013
GPR[EPVS]-1659865053014
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865053021
GPR[SPVAP]-1659865053021
GPR[EPVAP]-1659865054089
GPR[EPVS]-1659865054089
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865054091
GPR[SPVAP]-1659865054091
GPR[EPVAP]-1659865055163
GPR[EPVS]-1659865055163
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865055164
GPR[SPVAP]-1659865055164
GPR[EPVAP]-1659865056247
GPR[EPVS]-1659865056247
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865056248
GPR[SPVAP]-1659865056248
GPR[EPVAP]-1659865057339
GPR[EPVS]-1659865057339
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865057340
GPR[SPVAP]-1659865057340
GPR[EPVAP]-1659865058389
GPR[EPVS]-1659865058390
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865058391
GPR[SPVAP]-1659865058391
GPR[EPVAP]-1659865059488
GPR[EPVS]-1659865059488
========
if(Math.abs(yMax)<functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865059489
GPR[SPVAP]-1659865059489
GPR[EPVAP]-1659865060545
GPR[EPVS]-1659865060545
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865060546
GPR[SPVAP]-1659865060546
GPR[EPVAP]-1659865061608
GPR[EPVS]-1659865061608
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865061609
GPR[SPVAP]-1659865061609
GPR[EPVAP]-1659865062675
GPR[EPVS]-1659865062675
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865062676
GPR[SPVAP]-1659865062676
GPR[EPVAP]-1659865063730
GPR[EPVS]-1659865063730
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865063731
GPR[SPVAP]-1659865063731
GPR[EPVAP]-1659865064783
GPR[EPVS]-1659865064783
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865064784
GPR[SPVAP]-1659865064784
GPR[EPVAP]-1659865065837
GPR[EPVS]-1659865065837
========
if(Math.abs(yMax)<functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865065838
GPR[SPVAP]-1659865065838
GPR[EPVAP]-1659865066862
GPR[EPVS]-1659865066862
========
if(Math.abs(yMax)<functionValueAccuracy){
y1=max;
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865067473
GPR[SPVAP]-1659865067473
GPR[EPVAP]-1659865068519
GPR[EPVS]-1659865068519
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865068528
GPR[SPVAP]-1659865068528
GPR[EPVAP]-1659865069594
GPR[EPVS]-1659865069594
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865069596
GPR[SPVAP]-1659865069596
GPR[EPVAP]-1659865070660
GPR[EPVS]-1659865070660
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865070662
GPR[SPVAP]-1659865070662
GPR[EPVAP]-1659865071863
GPR[EPVS]-1659865071863
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865071865
GPR[SPVAP]-1659865071865
GPR[EPVAP]-1659865072934
GPR[EPVS]-1659865072934
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865072936
GPR[SPVAP]-1659865072936
GPR[EPVAP]-1659865073982
GPR[EPVS]-1659865073982
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x1=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865073983
GPR[SPVAP]-1659865073983
GPR[EPVAP]-1659865075089
GPR[EPVS]-1659865075089
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865075091
GPR[SPVAP]-1659865075091
GPR[EPVAP]-1659865076138
GPR[EPVS]-1659865076138
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865076139
GPR[SPVAP]-1659865076139
GPR[EPVAP]-1659865077207
GPR[EPVS]-1659865077207
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865077208
GPR[SPVAP]-1659865077208
GPR[EPVAP]-1659865078269
GPR[EPVS]-1659865078269
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865078270
GPR[SPVAP]-1659865078270
GPR[EPVAP]-1659865079345
GPR[EPVS]-1659865079345
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865079347
GPR[SPVAP]-1659865079347
GPR[EPVAP]-1659865080430
GPR[EPVS]-1659865080430
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865080431
GPR[SPVAP]-1659865080431
GPR[EPVAP]-1659865081476
GPR[EPVS]-1659865081476
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865081477
GPR[SPVAP]-1659865081477
GPR[EPVAP]-1659865082550
GPR[EPVS]-1659865082550
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865082552
GPR[SPVAP]-1659865082552
GPR[EPVAP]-1659865083642
GPR[EPVS]-1659865083642
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865083644
GPR[SPVAP]-1659865083644
GPR[EPVAP]-1659865084704
GPR[EPVS]-1659865084704
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865084705
GPR[SPVAP]-1659865084705
GPR[EPVAP]-1659865085798
GPR[EPVS]-1659865085798
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865085799
GPR[SPVAP]-1659865085799
GPR[EPVAP]-1659865086898
GPR[EPVS]-1659865086898
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865086900
GPR[SPVAP]-1659865086900
GPR[EPVAP]-1659865088005
GPR[EPVS]-1659865088005
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865088006
GPR[SPVAP]-1659865088006
GPR[EPVAP]-1659865089085
GPR[EPVS]-1659865089085
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865089087
GPR[SPVAP]-1659865089087
GPR[EPVAP]-1659865090179
GPR[EPVS]-1659865090179
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865090181
GPR[SPVAP]-1659865090181
GPR[EPVAP]-1659865091253
GPR[EPVS]-1659865091253
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865091255
GPR[SPVAP]-1659865091255
GPR[EPVAP]-1659865092339
GPR[EPVS]-1659865092339
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865092341
GPR[SPVAP]-1659865092341
GPR[EPVAP]-1659865093690
GPR[EPVS]-1659865093690
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865093691
GPR[SPVAP]-1659865093691
GPR[EPVAP]-1659865094788
GPR[EPVS]-1659865094788
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865094789
GPR[SPVAP]-1659865094789
GPR[EPVAP]-1659865095839
GPR[EPVS]-1659865095839
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865095841
GPR[SPVAP]-1659865095841
GPR[EPVAP]-1659865096898
GPR[EPVS]-1659865096898
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865096899
GPR[SPVAP]-1659865096899
GPR[EPVAP]-1659865097955
GPR[EPVS]-1659865097955
========
if(Math.abs(max)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865097956
GPR[SPVAP]-1659865097956
GPR[EPVAP]-1659865098996
GPR[EPVS]-1659865098996
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865098998
GPR[SPVAP]-1659865098998
GPR[EPVAP]-1659865100040
GPR[EPVS]-1659865100040
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865100041
GPR[SPVAP]-1659865100041
GPR[EPVAP]-1659865101115
GPR[EPVS]-1659865101115
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865101116
GPR[SPVAP]-1659865101116
GPR[EPVAP]-1659865102160
GPR[EPVS]-1659865102160
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865102161
GPR[SPVAP]-1659865102161
GPR[EPVAP]-1659865103190
GPR[EPVS]-1659865103190
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865103191
GPR[SPVAP]-1659865103191
GPR[EPVAP]-1659865104290
GPR[EPVS]-1659865104290
========
if(Math.abs(max)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865104292
GPR[SPVAP]-1659865104292
GPR[EPVAP]-1659865105398
GPR[EPVS]-1659865105398
========
if(Math.abs(max)<=functionValueAccuracy){
y1=max;
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865105400
GPR[SPVAP]-1659865105400
GPR[EPVAP]-1659865106471
GPR[EPVS]-1659865106471
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
x0=yMin;
x1=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865106473
GPR[SPVAP]-1659865106473
GPR[EPVAP]-1659865107568
GPR[EPVS]-1659865107569
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865107570
GPR[SPVAP]-1659865107570
GPR[EPVAP]-1659865108658
GPR[EPVS]-1659865108658
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865108660
GPR[SPVAP]-1659865108660
GPR[EPVAP]-1659865109719
GPR[EPVS]-1659865109719
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865109720
GPR[SPVAP]-1659865109720
GPR[EPVAP]-1659865110833
GPR[EPVS]-1659865110833
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865110835
GPR[SPVAP]-1659865110835
GPR[EPVAP]-1659865111947
GPR[EPVS]-1659865111947
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865111948
GPR[SPVAP]-1659865111948
GPR[EPVAP]-1659865112986
GPR[EPVS]-1659865112986
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865112987
GPR[SPVAP]-1659865112987
GPR[EPVAP]-1659865114102
GPR[EPVS]-1659865114102
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865114104
GPR[SPVAP]-1659865114104
GPR[EPVAP]-1659865115233
GPR[EPVS]-1659865115233
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865115235
GPR[SPVAP]-1659865115235
GPR[EPVAP]-1659865116304
GPR[EPVS]-1659865116304
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865116305
GPR[SPVAP]-1659865116305
GPR[EPVAP]-1659865117367
GPR[EPVS]-1659865117367
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x1=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865117368
GPR[SPVAP]-1659865117368
GPR[EPVAP]-1659865118440
GPR[EPVS]-1659865118440
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x1=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865118442
GPR[SPVAP]-1659865118442
GPR[EPVAP]-1659865119550
GPR[EPVS]-1659865119550
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865119552
GPR[SPVAP]-1659865119552
GPR[EPVAP]-1659865120638
GPR[EPVS]-1659865120638
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865120640
GPR[SPVAP]-1659865120640
GPR[EPVAP]-1659865121757
GPR[EPVS]-1659865121757
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865121759
GPR[SPVAP]-1659865121759
GPR[EPVAP]-1659865122854
GPR[EPVS]-1659865122854
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865122856
GPR[SPVAP]-1659865122856
GPR[EPVAP]-1659865123957
GPR[EPVS]-1659865123957
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865123958
GPR[SPVAP]-1659865123958
GPR[EPVAP]-1659865125082
GPR[EPVS]-1659865125082
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865125084
GPR[SPVAP]-1659865125084
GPR[EPVAP]-1659865126154
GPR[EPVS]-1659865126154
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865126155
GPR[SPVAP]-1659865126155
GPR[EPVAP]-1659865127205
GPR[EPVS]-1659865127205
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
ret=y1;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865127206
GPR[SPVAP]-1659865127206
GPR[EPVAP]-1659865128308
GPR[EPVS]-1659865128308
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
setResult(max,0);
x0=yMin;
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865128309
GPR[SPVAP]-1659865128309
GPR[EPVAP]-1659865129377
GPR[EPVS]-1659865129377
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
setResult(max,0);
x0=yMin;
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865129379
GPR[SPVAP]-1659865129379
GPR[EPVAP]-1659865130424
GPR[EPVS]-1659865130424
========
if(Math.abs(yMax)<=functionValueAccuracy){
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865130426
GPR[SPVAP]-1659865130426
GPR[EPVAP]-1659865131514
GPR[EPVS]-1659865131514
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865131515
GPR[SPVAP]-1659865131515
GPR[EPVAP]-1659865132564
GPR[EPVS]-1659865132564
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865132565
GPR[SPVAP]-1659865132565
GPR[EPVAP]-1659865133619
GPR[EPVS]-1659865133619
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865133621
GPR[SPVAP]-1659865133621
GPR[EPVAP]-1659865134713
GPR[EPVS]-1659865134713
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865134714
GPR[SPVAP]-1659865134714
GPR[EPVAP]-1659865135817
GPR[EPVS]-1659865135817
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865135818
GPR[SPVAP]-1659865135818
GPR[EPVAP]-1659865136872
GPR[EPVS]-1659865136872
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865136874
GPR[SPVAP]-1659865136874
GPR[EPVAP]-1659865137946
GPR[EPVS]-1659865137946
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x0=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865137947
GPR[SPVAP]-1659865137947
GPR[EPVAP]-1659865139036
GPR[EPVS]-1659865139036
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865139038
GPR[SPVAP]-1659865139038
GPR[EPVAP]-1659865140192
GPR[EPVS]-1659865140192
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865140193
GPR[SPVAP]-1659865140193
GPR[EPVAP]-1659865141295
GPR[EPVS]-1659865141295
========
if(Math.abs(yMax)<=functionValueAccuracy){
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865141297
GPR[SPVAP]-1659865141297
GPR[EPVAP]-1659865142420
GPR[EPVS]-1659865142420
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x1=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865142422
GPR[SPVAP]-1659865142422
GPR[EPVAP]-1659865143472
GPR[EPVS]-1659865143472
========
if(Math.abs(yMax)<=functionValueAccuracy){
y1=max;
y2=ret;
x0=yMin;
x1=yMin;
x2=yMin;
y1=max;
y2=ret;

setResult(max,0);
x2=yMin;
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865143473
GPR[SPVAP]-1659865143473
GPR[EPVAP]-1659865144497
GPR[EPVS]-1659865144497
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,functionValueAccuracy);
}

========
GPR[SPVS]-1659865144500
GPR[SPVAP]-1659865144500
GPR[EPVAP]-1659865146397
GPR[SPVATF]-1659865146397
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865148234
GPR[EPVS]-1659865148234
GPR[ESUN]-1659865148239
GPR[SSUN]-1659865148239
org.apache.commons.math.analysis.solvers.BrentSolver,176
========
if(Math.abs(yMin)<functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865150111
GPR[SPVAP]-1659865150111
GPR[EPVAP]-1659865155063
GPR[SPVATF]-1659865155063
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865156842
GPR[EPVS]-1659865156842
========
if(Math.abs(max)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865156843
GPR[SPVAP]-1659865156843
GPR[EPVAP]-1659865158751
GPR[SPVATF]-1659865158751
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865160586
GPR[EPVS]-1659865160586
========
if(Math.abs(max)<functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865160587
GPR[SPVAP]-1659865160587
GPR[EPVAP]-1659865162446
GPR[SPVATF]-1659865162446
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865164254
GPR[EPVS]-1659865164254
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865164255
GPR[SPVAP]-1659865164255
GPR[EPVAP]-1659865166137
GPR[SPVATF]-1659865166137
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865167907
GPR[EPVS]-1659865167907
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(yMax==0.0){
return Math.abs(yMin);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865167909
GPR[SPVAP]-1659865167909
GPR[EPVAP]-1659865169789
GPR[SPVATF]-1659865169789
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865171582
GPR[EPVS]-1659865171582
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865171583
GPR[SPVAP]-1659865171583
GPR[EPVAP]-1659865173460
GPR[SPVATF]-1659865173460
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865175259
GPR[EPVS]-1659865175259
========
if(Math.abs(yMin)<functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(yMax==0.0){
return Math.abs(yMin);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865175260
GPR[SPVAP]-1659865175260
GPR[EPVAP]-1659865177171
GPR[SPVATF]-1659865177171
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865178962
GPR[EPVS]-1659865178962
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(yMax==0.0){
return Math.abs(yMin);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865178962
GPR[SPVAP]-1659865178963
GPR[EPVAP]-1659865180848
GPR[SPVATF]-1659865180848
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865182651
GPR[EPVS]-1659865182651
========
if(Math.abs(yMax)<functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
if(yMax==0.0){
return Math.abs(yMin);
}
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865182652
GPR[SPVAP]-1659865182652
GPR[EPVAP]-1659865184542
GPR[SPVATF]-1659865184542
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865186322
GPR[EPVS]-1659865186322
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMin,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865186324
GPR[SPVAP]-1659865186324
GPR[EPVAP]-1659865188185
GPR[SPVATF]-1659865188185
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865189996
GPR[EPVS]-1659865189996
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMin,0);
return ret;
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865189997
GPR[SPVAP]-1659865189997
GPR[EPVAP]-1659865191876
GPR[SPVATF]-1659865191876
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865193659
GPR[EPVS]-1659865193659
========
if(yMin*yMax<0){
return solve(f,max,yMin,min,yInitial,min,yMin);
}
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865193660
GPR[SPVAP]-1659865193660
GPR[EPVAP]-1659865194669
GPR[EPVS]-1659865194669
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=gb;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865194671
GPR[SPVAP]-1659865194671
GPR[EPVAP]-1659865195689
GPR[EPVS]-1659865195689
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.isNaN(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865195690
GPR[SPVAP]-1659865195690
GPR[EPVAP]-1659865196727
GPR[EPVS]-1659865196727
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ta=max;
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865196727
GPR[SPVAP]-1659865196727
GPR[EPVAP]-1659865197756
GPR[EPVS]-1659865197756
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
pendingEventTime=yMin;
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865197757
GPR[SPVAP]-1659865197757
GPR[EPVAP]-1659865198786
GPR[EPVS]-1659865198786
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
pendingEvent=true;
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865198787
GPR[SPVAP]-1659865198787
GPR[EPVAP]-1659865199815
GPR[EPVS]-1659865199815
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
return true;
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865199817
GPR[SPVAP]-1659865199817
GPR[EPVAP]-1659865200848
GPR[EPVS]-1659865200848
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
pendingEventTime=yMin;
pendingEvent=true;
return true;

throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865200849
GPR[SPVAP]-1659865200849
GPR[EPVAP]-1659865201910
GPR[EPVS]-1659865201910
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(yMax,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865201911
GPR[SPVAP]-1659865201911
GPR[EPVAP]-1659865203805
GPR[SPVATF]-1659865203805
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865205587
GPR[EPVS]-1659865205587
========
if(Math.abs(yMax)<=functionValueAccuracy){
setResult(yMax,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865205588
GPR[SPVAP]-1659865205588
GPR[EPVAP]-1659865207477
GPR[SPVATF]-1659865207477
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865209255
GPR[EPVS]-1659865209255
========
if(Math.abs(max-min)<=functionValueAccuracy){
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865209257
GPR[SPVAP]-1659865209257
GPR[EPVAP]-1659865211168
GPR[SPVATF]-1659865211168
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865213000
GPR[EPVS]-1659865213000
========
if(Math.abs(yMin)<=functionValueAccuracy){
setResult(ret,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865213001
GPR[SPVAP]-1659865213001
GPR[EPVAP]-1659865214891
GPR[SPVATF]-1659865214891
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865216706
GPR[EPVS]-1659865216706
========
if(Math.abs(yMin)<=functionValueAccuracy){
m=UnivariateRealSolverUtils.midpoint(min,max);
setResult(min,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865216707
GPR[SPVAP]-1659865216707
GPR[EPVAP]-1659865217732
GPR[EPVS]-1659865217732
========
if(Math.abs(max-min)<=functionValueAccuracy){
setResult(ret,0);
ret=min;
}else if(Math.abs(yMax)<=functionValueAccuracy){
setResult(max,0);
ret=max;
}else {
throw MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,min,max,yMin,yMax);
}

========
GPR[SPVS]-1659865217732
GPR[SPVAP]-1659865217732
GPR[EPVAP]-1659865219607
GPR[SPVATF]-1659865219607
TESTING : org.apache.commons.math.analysis.solvers.BrentSolverTest::testBadEndpoints
GPR[EPVATF]-1659865221399
GPR[EPVS]-1659865221399
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f26fe239bd4, pid=1995930, tid=139805811664640
#
# JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# J 5230 C2 cofix.core.parser.node.expr.InfixExpr.match(Lcofix/core/parser/node/Node;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)Z (1104 bytes) @ 0x00007f26fe239bd4 [0x00007f26fe237b80+0x2054]
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# script/workingdir/SimFix/math/math_73_buggy/hs_err_pid1995930.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#
End running Math/73 results at /experiment_home///results/SimFix/Math/73/seed_261/
\n\nNode: host-67\n
\n\nDate: Sun 07 Aug 2022 02:40:21 AM PDT\n
Removing checked out dir script/workingdir/SimFix/math/math_73_buggy
GPR[SSLE]-1659865221433
GPR[ESLE]-1659865281437
