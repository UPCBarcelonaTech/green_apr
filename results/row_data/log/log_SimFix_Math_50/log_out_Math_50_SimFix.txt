Sleep 1m start
GPR[SSLI]-1661301313914
GPR[ESLI]-1661301373917
Running SimFix Math 50b
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
Timezone: America/Los_Angeles
Seed 282
Java 8: /experiment_home/jdk1.8.0_45/bin 
DEFECTS4J_HOME: /experiment_home/defects4j/
Killing all java process
Creating out dir /experiment_home///results/SimFix/Math/50/seed_282/
Project lc: math
New out script/workingdir/SimFix/math/math_50_buggy
The file script/workingdir/SimFix/math/math_50_buggy does not exist!
script/workingdir/SimFix/math/math_50_buggy
Current directory: script/workingdir/SimFix/math/math_50_buggy
classpath:  script/workingdir/SimFix/math/math_50_buggy/target/classes:script/workingdir/SimFix/math/math_50_buggy/target/test-classes:/experiment_home/defects4j/framework/projects/lib/junit-4.11.jar:script/workingdir/SimFix/math/math_50_buggy/lib/junit-4.8.2.jar
Src java:  /src/main/java
Classes Java:  /target/classes
Src Test:  /src/test/java
Classes Test:  /target/test-classes
GPR[SSLB]-1661301389806
GPR[ESLB]-1661301449810
Calling SimFix: at script/workingdir/SimFix/math/math_50_buggy
build.xml
checkstyle.xml
d4j-info
defects4j.build.properties
doap_math.rdf
findbugs-exclude-filter.xml
license-header.txt
LICENSE.txt
math-pre-RC.sh
math-RC.sh
NOTICE.txt
pom.xml
PROPOSAL.html
RELEASE-NOTES.txt
siteMods
src
target
test-jar.xml
content current dir: build.xml checkstyle.xml d4j-info defects4j.build.properties doap_math.rdf findbugs-exclude-filter.xml license-header.txt LICENSE.txt math-pre-RC.sh math-RC.sh NOTICE.txt pom.xml PROPOSAL.html RELEASE-NOTES.txt siteMods src target test-jar.xml
Node: host-58
Date init: Tue 23 Aug 2022 05:37:31 PM PDT
OAR_JOB_ID: 3743711
script/workingdir/SimFix/
GPR[SSUP]-1661301451931
=================================================
Project : math_50	start : 22/08/23 17:37

Field type inconsistancy 'SUPER' with types : MathIllegalStateException and MathException
GPR[ESUP]-1661301454416
GPR[SFL]-1661301454918
GPR[EFL]-1661301454960
GPR[SFP]-1661301454960
TIMEOUT : 18000000
GPR[SSUN]-1661301454971
org.apache.commons.math.analysis.solvers.BaseSecantSolver,188
========
if(f0==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301457791
GPR[SPVAP]-1661301457791
GPR[EPVAP]-1661301463152
GPR[SPVATF]-1661301463152
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301465033
GPR[SPVATR]-1661301465033
TESTING : math_50
GPR[EPVATR]-1661301492665
GPR[EPVS]-1661301492665
GPR[PF]-1661301492665
sourceFile  script/workingdir/SimFix/math/math_50_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
location   script/workingdir/SimFix/math/math_50_buggy
========
if(tolerance==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301492678
GPR[SPVAP]-1661301492678
GPR[EPVAP]-1661301493731
GPR[EPVS]-1661301493731
========
if(x==functionValueAccuracy){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301493733
GPR[SPVAP]-1661301493733
GPR[EPVAP]-1661301494769
GPR[EPVS]-1661301494769
========
x0=x1;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301494770
GPR[SPVAP]-1661301494770
GPR[EPVAP]-1661301496680
GPR[SPVATF]-1661301496680
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301498597
GPR[EPVS]-1661301498597
========
f0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301498599
GPR[SPVAP]-1661301498599
GPR[EPVAP]-1661301500517
GPR[SPVATF]-1661301500517
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301502422
GPR[SPVATR]-1661301502423
TESTING : math_50
GPR[EPVATR]-1661301530233
GPR[EPVS]-1661301530233
========
x0=x1;
f0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301530235
GPR[SPVAP]-1661301530235
GPR[EPVAP]-1661301532175
GPR[SPVATF]-1661301532175
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301534089
GPR[SPVATR]-1661301534090
TESTING : math_50
GPR[EPVATR]-1661301561609
GPR[EPVS]-1661301561609
========
if(x==absoluteAccuracy){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301561612
GPR[SPVAP]-1661301561612
GPR[EPVAP]-1661301562655
GPR[EPVS]-1661301562655
========
if(x==ftol){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301562657
GPR[SPVAP]-1661301562657
GPR[EPVAP]-1661301564598
GPR[SPVATF]-1661301564598
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301566462
GPR[SPVATR]-1661301566463
TESTING : math_50
GPR[EPVATR]-1661301594083
GPR[EPVS]-1661301594083
GPR[PF]-1661301594083
sourceFile  script/workingdir/SimFix/math/math_50_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
location   script/workingdir/SimFix/math/math_50_buggy
========
f0=x0;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301594092
GPR[SPVAP]-1661301594092
GPR[EPVAP]-1661301596005
GPR[SPVATF]-1661301596005
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301597889
GPR[EPVS]-1661301597889
========
x1=x;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301597890
GPR[SPVAP]-1661301597890
GPR[EPVAP]-1661301599791
GPR[SPVATF]-1661301599791
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301601707
GPR[EPVS]-1661301601707
========
x0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301601708
GPR[SPVAP]-1661301601708
GPR[EPVAP]-1661301603604
GPR[SPVATF]-1661301603604
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301605484
GPR[SPVATR]-1661301605484
TESTING : math_50
GPR[EPVATR]-1661301632747
GPR[EPVS]-1661301632747
========
x0=x1;
f0=x0;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301632749
GPR[SPVAP]-1661301632749
GPR[EPVAP]-1661301634666
GPR[SPVATF]-1661301634666
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301636550
GPR[EPVS]-1661301636550
========
x0=x1;
x1=x;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301636551
GPR[SPVAP]-1661301636551
GPR[EPVAP]-1661301638453
GPR[SPVATF]-1661301638453
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301640330
GPR[EPVS]-1661301640330
========
x0=x1;
x0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301640331
GPR[SPVAP]-1661301640331
GPR[EPVAP]-1661301642239
GPR[SPVATF]-1661301642239
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301644118
GPR[SPVATR]-1661301644118
TESTING : math_50
GPR[EPVATR]-1661301671601
GPR[EPVS]-1661301671601
========
f0=x0;
x1=x;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301671602
GPR[SPVAP]-1661301671602
GPR[EPVAP]-1661301673506
GPR[SPVATF]-1661301673506
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301675377
GPR[EPVS]-1661301675377
========
f0=x0;
x0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301675378
GPR[SPVAP]-1661301675378
GPR[EPVAP]-1661301677295
GPR[SPVATF]-1661301677295
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301679199
GPR[SPVATR]-1661301679200
TESTING : math_50
GPR[EPVATR]-1661301706780
GPR[EPVS]-1661301706780
========
x1=x;
x0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301706782
GPR[SPVAP]-1661301706782
GPR[EPVAP]-1661301708709
GPR[SPVATF]-1661301708709
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301710587
GPR[SPVATR]-1661301710588
TESTING : math_50
GPR[EPVATR]-1661301738142
GPR[EPVS]-1661301738142
========
x0=x1;
f0=x0;
x1=x;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301738143
GPR[SPVAP]-1661301738143
GPR[EPVAP]-1661301740041
GPR[SPVATF]-1661301740042
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301741917
GPR[EPVS]-1661301741917
========
x0=x1;
f0=x0;
x0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301741918
GPR[SPVAP]-1661301741918
GPR[EPVAP]-1661301743842
GPR[SPVATF]-1661301743842
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301745745
GPR[SPVATR]-1661301745745
TESTING : math_50
GPR[EPVATR]-1661301773206
GPR[EPVS]-1661301773206
========
x0=x1;
x1=x;
x0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301773207
GPR[SPVAP]-1661301773207
GPR[EPVAP]-1661301775110
GPR[SPVATF]-1661301775110
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301777001
GPR[SPVATR]-1661301777001
TESTING : math_50
GPR[EPVATR]-1661301804573
GPR[EPVS]-1661301804573
========
f0=x0;
x1=x;
x0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301804575
GPR[SPVAP]-1661301804575
GPR[EPVAP]-1661301806555
GPR[SPVATF]-1661301806556
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301808450
GPR[SPVATR]-1661301808450
TESTING : math_50
GPR[EPVATR]-1661301836050
GPR[EPVS]-1661301836050
========
x0=x1;
f0=x0;
x1=x;
x0=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301836052
GPR[SPVAP]-1661301836052
GPR[EPVAP]-1661301837958
GPR[SPVATF]-1661301837958
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301839829
GPR[SPVATR]-1661301839829
TESTING : math_50
GPR[EPVATR]-1661301865627
GPR[EPVS]-1661301865627
========
if(y1==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301865629
GPR[SPVAP]-1661301865629
GPR[EPVAP]-1661301866668
GPR[EPVS]-1661301866668
========
if(delta==delta){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301866680
GPR[SPVAP]-1661301866680
GPR[EPVAP]-1661301867706
GPR[EPVS]-1661301867706
========
if(x==x0){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301867707
GPR[SPVAP]-1661301867707
GPR[EPVAP]-1661301869660
GPR[SPVATF]-1661301869660
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301871569
GPR[SPVATR]-1661301871570
TESTING : math_50
GPR[EPVATR]-1661301897632
GPR[EPVS]-1661301897632
GPR[PF]-1661301897632
sourceFile  script/workingdir/SimFix/math/math_50_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
location   script/workingdir/SimFix/math/math_50_buggy
========
if(delta==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301897639
GPR[SPVAP]-1661301897639
GPR[EPVAP]-1661301898669
GPR[EPVS]-1661301898669
========
if(x==delta){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301898670
GPR[SPVAP]-1661301898670
GPR[EPVAP]-1661301899699
GPR[EPVS]-1661301899699
========
if(x==maxDelta){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301899701
GPR[SPVAP]-1661301899701
GPR[EPVAP]-1661301900732
GPR[EPVS]-1661301900732
========
if(x==eps){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301900734
GPR[SPVAP]-1661301900734
GPR[EPVAP]-1661301901759
GPR[EPVS]-1661301901759
========
if(y0==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301901760
GPR[SPVAP]-1661301901760
GPR[EPVAP]-1661301902782
GPR[EPVS]-1661301902782
========
if(x==tol1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301902784
GPR[SPVAP]-1661301902784
GPR[EPVAP]-1661301903827
GPR[EPVS]-1661301903827
========
if(difference==difference){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301903830
GPR[SPVAP]-1661301903830
GPR[EPVAP]-1661301904855
GPR[EPVS]-1661301904855
========
if(difference==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301904856
GPR[SPVAP]-1661301904856
GPR[EPVAP]-1661301905873
GPR[EPVS]-1661301905873
========
if(size==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301905874
GPR[SPVAP]-1661301905874
GPR[EPVAP]-1661301906891
GPR[EPVS]-1661301906891
========
if(x==difference){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301906893
GPR[SPVAP]-1661301906893
GPR[EPVAP]-1661301907929
GPR[EPVS]-1661301907929
========
if(x==convergence){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301907931
GPR[SPVAP]-1661301907931
GPR[EPVAP]-1661301908968
GPR[EPVS]-1661301908968
========
if(p==p){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301908971
GPR[SPVAP]-1661301908971
GPR[EPVAP]-1661301910005
GPR[EPVS]-1661301910005
========
if(p==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301910006
GPR[SPVAP]-1661301910006
GPR[EPVAP]-1661301911025
GPR[EPVS]-1661301911025
========
if(m==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301911026
GPR[SPVAP]-1661301911026
GPR[EPVAP]-1661301912049
GPR[EPVS]-1661301912049
========
if(x==p){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301912050
GPR[SPVAP]-1661301912050
GPR[EPVAP]-1661301913075
GPR[EPVS]-1661301913076
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
d=fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301913077
GPR[SPVAP]-1661301913077
GPR[EPVAP]-1661301914094
GPR[EPVS]-1661301914094
========
if(s==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301914097
GPR[SPVAP]-1661301914097
GPR[EPVAP]-1661301915122
GPR[EPVS]-1661301915122
========
if(ratio==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301915124
GPR[SPVAP]-1661301915125
GPR[EPVAP]-1661301916191
GPR[EPVS]-1661301916191
========
if(x==x1){
delta=Math.max(x0,x1);
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301916192
GPR[SPVAP]-1661301916192
GPR[EPVAP]-1661301917213
GPR[EPVS]-1661301917213
========
if(x==x1){
delta=Math.max(x0,atol);
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301917214
GPR[SPVAP]-1661301917214
GPR[EPVAP]-1661301918249
GPR[EPVS]-1661301918249
========
if(x==largest){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301918251
GPR[SPVAP]-1661301918251
GPR[EPVAP]-1661301919276
GPR[EPVS]-1661301919277
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
largest=FastMath.abs(atol);
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301919278
GPR[SPVAP]-1661301919278
GPR[EPVAP]-1661301920306
GPR[EPVS]-1661301920306
========
if(x==x1){
vlag=atol;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301920307
GPR[SPVAP]-1661301920307
GPR[EPVAP]-1661301921333
GPR[EPVS]-1661301921333
========
f0=computeObjectiveValue(x0);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301921335
GPR[SPVAP]-1661301921335
GPR[EPVAP]-1661301923260
GPR[SPVATF]-1661301923260
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301925143
GPR[SPVATR]-1661301925143
TESTING : math_50
GPR[EPVATR]-1661301952986
GPR[EPVS]-1661301952986
========
f0=computeObjectiveValue(x0);
if(m==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301952988
GPR[SPVAP]-1661301952988
GPR[EPVAP]-1661301954029
GPR[EPVS]-1661301954029
========
if(x==maxAbsoluteValue){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301954031
GPR[SPVAP]-1661301954031
GPR[EPVAP]-1661301955097
GPR[EPVS]-1661301955097
========
if(sigma==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301955099
GPR[SPVAP]-1661301955099
GPR[EPVAP]-1661301956146
GPR[EPVS]-1661301956146
========
if(x==stopTolX){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301956147
GPR[SPVAP]-1661301956147
GPR[EPVAP]-1661301957177
GPR[EPVS]-1661301957177
========
if(f1==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301957179
GPR[SPVAP]-1661301957179
GPR[EPVAP]-1661301959078
GPR[SPVATF]-1661301959078
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301960943
GPR[SPVATR]-1661301960943
TESTING : math_50
GPR[EPVATR]-1661301986469
GPR[EPVS]-1661301986469
GPR[PF]-1661301986469
sourceFile  script/workingdir/SimFix/math/math_50_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
location   script/workingdir/SimFix/math/math_50_buggy
========
verifyBracketing(atol,x0);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301986478
GPR[SPVAP]-1661301986478
GPR[EPVAP]-1661301988445
GPR[SPVATF]-1661301988445
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301990334
GPR[EPVS]-1661301990334
========
if(x0==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661301990336
GPR[SPVAP]-1661301990336
GPR[EPVAP]-1661301992285
GPR[SPVATF]-1661301992285
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661301994150
GPR[SPVATR]-1661301994150
TESTING : math_50
GPR[EPVATR]-1661302021771
GPR[EPVS]-1661302021771
GPR[PF]-1661302021771
sourceFile  script/workingdir/SimFix/math/math_50_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
location   script/workingdir/SimFix/math/math_50_buggy
========
if(fp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302021782
GPR[SPVAP]-1661302021782
GPR[EPVAP]-1661302022807
GPR[EPVS]-1661302022807
========
atol=FastMath.max(f0,lmPar+x);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302022808
GPR[SPVAP]-1661302022808
GPR[EPVAP]-1661302023845
GPR[EPVS]-1661302023845
========
if(fm==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302023846
GPR[SPVAP]-1661302023846
GPR[EPVAP]-1661302024881
GPR[EPVS]-1661302024881
========
if(fmin==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302024882
GPR[SPVAP]-1661302024882
GPR[EPVAP]-1661302025904
GPR[EPVS]-1661302025904
========
x0=UnivariateRealSolverUtils.midpoint(atol,f0);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302025905
GPR[SPVAP]-1661302025905
GPR[EPVAP]-1661302027809
GPR[SPVATF]-1661302027809
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302029730
GPR[SPVATR]-1661302029730
TESTING : math_50
GPR[EPVATR]-1661302057187
GPR[EPVS]-1661302057187
========
rtol=computeObjectiveValue(atol);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302057188
GPR[SPVAP]-1661302057188
GPR[EPVAP]-1661302058237
GPR[EPVS]-1661302058237
========
x=computeObjectiveValue(x0);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302058238
GPR[SPVAP]-1661302058238
GPR[EPVAP]-1661302059293
GPR[EPVS]-1661302059293
========
if(yInitial==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302059295
GPR[SPVAP]-1661302059295
GPR[EPVAP]-1661302060313
GPR[EPVS]-1661302060313
========
if(yMin==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302060314
GPR[SPVAP]-1661302060314
GPR[EPVAP]-1661302061336
GPR[EPVS]-1661302061336
========
if(FastMath.abs(f0)<=x){
return fx;
}
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302061337
GPR[SPVAP]-1661302061337
GPR[EPVAP]-1661302063242
GPR[SPVATF]-1661302063242
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302065130
GPR[EPVS]-1661302065130
========
if(FastMath.abs(f0)<=x){
return fx;
}
if(yInitial==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302065131
GPR[SPVAP]-1661302065131
GPR[EPVAP]-1661302066141
GPR[EPVS]-1661302066141
========
if(FastMath.abs(f0)<=x){
return fx;
}
if(yMin==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302066142
GPR[SPVAP]-1661302066142
GPR[EPVAP]-1661302067177
GPR[EPVS]-1661302067177
========
verifySequence(atol,fx,x1);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302067178
GPR[SPVAP]-1661302067178
GPR[EPVAP]-1661302069063
GPR[SPVATF]-1661302069063
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302070965
GPR[EPVS]-1661302070965
========
verifySequence(atol,fx,x1);
if(x==functionValueAccuracy){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302070966
GPR[SPVAP]-1661302070966
GPR[EPVAP]-1661302071984
GPR[EPVS]-1661302071984
========
verifySequence(fx,atol,x1);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302071986
GPR[SPVAP]-1661302071986
GPR[EPVAP]-1661302073880
GPR[SPVATF]-1661302073880
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302075766
GPR[EPVS]-1661302075766
========
verifySequence(fx,atol,x1);
if(x==functionValueAccuracy){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302075767
GPR[SPVAP]-1661302075767
GPR[EPVAP]-1661302076829
GPR[EPVS]-1661302076829
========
if(x==tolerance){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302076830
GPR[SPVAP]-1661302076830
GPR[EPVAP]-1661302077850
GPR[EPVS]-1661302077851
========
if(x==null){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302077852
GPR[SPVAP]-1661302077852
GPR[EPVAP]-1661302078887
GPR[EPVS]-1661302078887
========
if(x==AllowedSolution.ANY_SIDE){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302078889
GPR[SPVAP]-1661302078889
GPR[EPVAP]-1661302079963
GPR[EPVS]-1661302079963
========
if(x==ANY_SIDE){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302079964
GPR[SPVAP]-1661302079964
GPR[EPVAP]-1661302081003
GPR[EPVS]-1661302081003
========
if(x==x1){
sin=1.0/FastMath.sqrt(1.0+fx*cotan);
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302081005
GPR[SPVAP]-1661302081005
GPR[EPVAP]-1661302082030
GPR[EPVS]-1661302082030
========
if(x==x1){
sin=x0*fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302082031
GPR[SPVAP]-1661302082031
GPR[EPVAP]-1661302083068
GPR[EPVS]-1661302083068
========
if(x==x1){
c=fx/x1;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302083070
GPR[SPVAP]-1661302083070
GPR[EPVAP]-1661302084090
GPR[EPVS]-1661302084090
========
if(x==x1){
e[i+1]=x1*x0;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302084092
GPR[SPVAP]-1661302084092
GPR[EPVAP]-1661302085128
GPR[EPVS]-1661302085128
========
if(x==x1){
s=1.0/x0;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302085129
GPR[SPVAP]-1661302085129
GPR[EPVAP]-1661302086173
GPR[EPVS]-1661302086173
========
if(x==x1){
c=fx/x1;
e[i+1]=x1*x0;
s=1.0/x0;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302086175
GPR[SPVAP]-1661302086175
GPR[EPVAP]-1661302087227
GPR[EPVS]-1661302087227
========
if(x==x1){
s=x1/fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302087228
GPR[SPVAP]-1661302087228
GPR[EPVAP]-1661302088278
GPR[EPVS]-1661302088278
========
if(x==x1){
e[i+1]=fx*x0;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302088279
GPR[SPVAP]-1661302088279
GPR[EPVAP]-1661302089313
GPR[EPVS]-1661302089313
========
if(x==x1){
c=1.0/x0;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302089314
GPR[SPVAP]-1661302089314
GPR[EPVAP]-1661302090344
GPR[EPVS]-1661302090344
========
if(x==x1){
s=x1/fx;
e[i+1]=fx*x0;
c=1.0/x0;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302090345
GPR[SPVAP]-1661302090345
GPR[EPVAP]-1661302091383
GPR[EPVS]-1661302091383
========
if(absX==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302091384
GPR[SPVAP]-1661302091384
GPR[EPVAP]-1661302092417
GPR[EPVS]-1661302092417
========
if(x==HALF){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302092419
GPR[SPVAP]-1661302092419
GPR[EPVAP]-1661302093447
GPR[EPVS]-1661302093448
========
if(x==stopTolFun){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302093450
GPR[SPVAP]-1661302093450
GPR[EPVAP]-1661302094464
GPR[EPVS]-1661302094464
========
if(x==epsilon){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302094469
GPR[SPVAP]-1661302094469
GPR[EPVAP]-1661302095492
GPR[EPVS]-1661302095492
========
if(x==TINY){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302095494
GPR[SPVAP]-1661302095494
GPR[EPVAP]-1661302096559
GPR[EPVS]-1661302096559
========
if(x==EPS){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302096561
GPR[SPVAP]-1661302096561
GPR[EPVAP]-1661302097591
GPR[EPVS]-1661302097591
========
if(x==t){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302097593
GPR[SPVAP]-1661302097593
GPR[EPVAP]-1661302098633
GPR[EPVS]-1661302098633
========
if(temp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302098635
GPR[SPVAP]-1661302098635
GPR[EPVAP]-1661302099683
GPR[EPVS]-1661302099683
========
if(den==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302099684
GPR[SPVAP]-1661302099684
GPR[EPVAP]-1661302100709
GPR[EPVS]-1661302100709
========
if(x==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302100710
GPR[SPVAP]-1661302100710
GPR[EPVAP]-1661302101749
GPR[EPVS]-1661302101749
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302101751
GPR[SPVAP]-1661302101751
GPR[EPVAP]-1661302102781
GPR[EPVS]-1661302102781
========
if(x==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302102782
GPR[SPVAP]-1661302102782
GPR[EPVAP]-1661302103821
GPR[EPVS]-1661302103821
========
if(x==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302103823
GPR[SPVAP]-1661302103823
GPR[EPVAP]-1661302104865
GPR[EPVS]-1661302104865
========
x0=x1*d__3;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302104866
GPR[SPVAP]-1661302104866
GPR[EPVAP]-1661302105914
GPR[EPVS]-1661302105914
========
rtol=Math.max(atol,x0);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302105915
GPR[SPVAP]-1661302105915
GPR[EPVAP]-1661302106966
GPR[EPVS]-1661302106966
========
if(x==threshold){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302106968
GPR[SPVAP]-1661302106968
GPR[EPVAP]-1661302107993
GPR[EPVS]-1661302107993
========
if(x==x1){
r0=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302107996
GPR[SPVAP]-1661302107996
GPR[EPVAP]-1661302109021
GPR[EPVS]-1661302109021
========
if(epsilon==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302109024
GPR[SPVAP]-1661302109024
GPR[EPVAP]-1661302110063
GPR[EPVS]-1661302110063
========
if(x==EPSILON){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302110066
GPR[SPVAP]-1661302110066
GPR[EPVAP]-1661302111093
GPR[EPVS]-1661302111093
========
if(x==temp){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302111095
GPR[SPVAP]-1661302111095
GPR[EPVAP]-1661302112125
GPR[EPVS]-1661302112125
========
if(x==rho){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302112126
GPR[SPVAP]-1661302112126
GPR[EPVAP]-1661302113168
GPR[EPVS]-1661302113168
========
if(x==singularityThreshold){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302113171
GPR[SPVAP]-1661302113171
GPR[EPVAP]-1661302114203
GPR[EPVS]-1661302114203
========
if(x==accuracy){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302114205
GPR[SPVAP]-1661302114205
GPR[EPVAP]-1661302115221
GPR[EPVS]-1661302115221
========
if(costRelativeTolerance==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302115222
GPR[SPVAP]-1661302115222
GPR[EPVAP]-1661302116247
GPR[EPVS]-1661302116247
========
if(preRed==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302116248
GPR[SPVAP]-1661302116248
GPR[EPVAP]-1661302117276
GPR[EPVS]-1661302117276
========
if(x==parRelativeTolerance){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302117277
GPR[SPVAP]-1661302117277
GPR[EPVAP]-1661302118307
GPR[EPVS]-1661302118307
========
if(x==xNorm){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302118308
GPR[SPVAP]-1661302118308
GPR[EPVAP]-1661302119338
GPR[EPVS]-1661302119338
========
if(ratio==delta){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302119339
GPR[SPVAP]-1661302119339
GPR[EPVAP]-1661302120368
GPR[EPVS]-1661302120368
========
if(boundaries==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302120369
GPR[SPVAP]-1661302120369
GPR[EPVAP]-1661302121402
GPR[EPVS]-1661302121402
========
if(yA==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302121404
GPR[SPVAP]-1661302121404
GPR[EPVAP]-1661302122438
GPR[EPVS]-1661302122438
========
if(yB==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302122439
GPR[SPVAP]-1661302122439
GPR[EPVAP]-1661302123520
GPR[EPVS]-1661302123520
========
if(g0==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302123521
GPR[SPVAP]-1661302123521
GPR[EPVAP]-1661302124553
GPR[EPVS]-1661302124553
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=valueOf(x0);
}

========
GPR[SPVS]-1661302124555
GPR[SPVAP]-1661302124555
GPR[EPVAP]-1661302125607
GPR[EPVS]-1661302125607
========
if(x==x1){
denominator=BigInteger.ONE;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302125608
GPR[SPVAP]-1661302125608
GPR[EPVAP]-1661302126645
GPR[EPVS]-1661302126645
========
if(x==(array.length-1)){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302126648
GPR[SPVAP]-1661302126648
GPR[EPVAP]-1661302127674
GPR[EPVS]-1661302127674
========
if(x==length){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302127675
GPR[SPVAP]-1661302127675
GPR[EPVAP]-1661302128711
GPR[EPVS]-1661302128711
========
if(x==x1){
g0Positive=inverted;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302128713
GPR[SPVAP]-1661302128713
GPR[EPVAP]-1661302129736
GPR[EPVS]-1661302129736
========
if(x==parl){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302129738
GPR[SPVAP]-1661302129738
GPR[EPVAP]-1661302130781
GPR[EPVS]-1661302130781
========
if(x==fp){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302130782
GPR[SPVAP]-1661302130782
GPR[EPVAP]-1661302131797
GPR[EPVS]-1661302131797
========
if(x==previousFP){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302131798
GPR[SPVAP]-1661302131798
GPR[EPVAP]-1661302132825
GPR[EPVS]-1661302132825
========
if(x==SIXTEEN){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302132826
GPR[SPVAP]-1661302132826
GPR[EPVAP]-1661302133850
GPR[EPVS]-1661302133850
========
x0=Math.max(delta,atol);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302133852
GPR[SPVAP]-1661302133852
GPR[EPVAP]-1661302134883
GPR[EPVS]-1661302134883
========
if(!inverted)f1=-f;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302134884
GPR[SPVAP]-1661302134884
GPR[EPVAP]-1661302135924
GPR[EPVS]-1661302135924
========
if(dnorm==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302135925
GPR[SPVAP]-1661302135925
GPR[EPVAP]-1661302136965
GPR[EPVS]-1661302136965
========
fx=Math.abs(atol);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302136966
GPR[SPVAP]-1661302136966
GPR[EPVAP]-1661302138010
GPR[EPVS]-1661302138010
========
x0=fx;
if(x==rho){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302138012
GPR[SPVAP]-1661302138012
GPR[EPVAP]-1661302139051
GPR[EPVS]-1661302139051
========
if(x==standardDeviation){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302139052
GPR[SPVAP]-1661302139052
GPR[EPVAP]-1661302140083
GPR[EPVS]-1661302140083
========
if(x==x1){
array[j++]=null;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302140085
GPR[SPVAP]-1661302140085
GPR[EPVAP]-1661302141112
GPR[EPVS]-1661302141112
========
if(tol==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302141114
GPR[SPVAP]-1661302141114
GPR[EPVAP]-1661302142149
GPR[EPVS]-1661302142149
========
if(length==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302142152
GPR[SPVAP]-1661302142152
GPR[EPVAP]-1661302143185
GPR[EPVS]-1661302143185
========
if(x==limit){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302143187
GPR[SPVAP]-1661302143187
GPR[EPVAP]-1661302144221
GPR[EPVS]-1661302144221
========
f0=atol;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302144222
GPR[SPVAP]-1661302144222
GPR[EPVAP]-1661302146144
GPR[SPVATF]-1661302146144
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302148037
GPR[EPVS]-1661302148037
========
f0=atol;
if(x==delta){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302148038
GPR[SPVAP]-1661302148038
GPR[EPVAP]-1661302149111
GPR[EPVS]-1661302149111
========
if(deltaNorm==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302149113
GPR[SPVAP]-1661302149113
GPR[EPVAP]-1661302150144
GPR[EPVS]-1661302150144
========
if(ZERO==ZERO){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302150146
GPR[SPVAP]-1661302150146
GPR[EPVAP]-1661302151165
GPR[EPVS]-1661302151165
========
if(tempa==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302151166
GPR[SPVAP]-1661302151166
GPR[EPVAP]-1661302152207
GPR[EPVS]-1661302152207
========
if(ZERO==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302152208
GPR[SPVAP]-1661302152208
GPR[EPVAP]-1661302153255
GPR[EPVS]-1661302153255
========
if(x==tempb){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302153256
GPR[SPVAP]-1661302153256
GPR[EPVAP]-1661302154274
GPR[EPVS]-1661302154274
========
if(x==ZERO){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302154275
GPR[SPVAP]-1661302154275
GPR[EPVAP]-1661302155320
GPR[EPVS]-1661302155320
========
if(subd==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302155322
GPR[SPVAP]-1661302155322
GPR[EPVAP]-1661302156405
GPR[EPVS]-1661302156405
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
subd=Math.max(x0,atol);
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302156406
GPR[SPVAP]-1661302156406
GPR[EPVAP]-1661302157453
GPR[EPVS]-1661302157453
========
if(subd==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
subd=Math.max(x0,atol);
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302157455
GPR[SPVAP]-1661302157455
GPR[EPVAP]-1661302158488
GPR[EPVS]-1661302158488
========
if(temp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
subd=Math.max(x0,atol);
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302158489
GPR[SPVAP]-1661302158489
GPR[EPVAP]-1661302159518
GPR[EPVS]-1661302159518
========
if(real==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302159520
GPR[SPVAP]-1661302159520
GPR[EPVAP]-1661302160544
GPR[EPVS]-1661302160544
========
verifyBracketing(fx,fx);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302160549
GPR[SPVAP]-1661302160549
GPR[EPVAP]-1661302162466
GPR[SPVATF]-1661302162466
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302164371
GPR[EPVS]-1661302164371
========
if(isBracketing(fx,fx)){
return solve(min,initial,x0,x1);
}else {
return solve(initial,fx,fInitial,atol);
}
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302164373
GPR[SPVAP]-1661302164373
GPR[EPVAP]-1661302165405
GPR[EPVS]-1661302165405
========
verifyBracketing(fx,fx);
if(x==functionValueAccuracy){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302165406
GPR[SPVAP]-1661302165406
GPR[EPVAP]-1661302166446
GPR[EPVS]-1661302166446
========
if(x==max){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302166448
GPR[SPVAP]-1661302166448
GPR[EPVAP]-1661302167481
GPR[EPVS]-1661302167481
========
if(x==ztest){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302167483
GPR[SPVAP]-1661302167483
GPR[EPVAP]-1661302168501
GPR[EPVS]-1661302168501
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=exp(x0);
}

========
GPR[SPVS]-1661302168503
GPR[SPVAP]-1661302168503
GPR[EPVAP]-1661302169521
GPR[EPVS]-1661302169521
========
if(x==m){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302169523
GPR[SPVAP]-1661302169523
GPR[EPVAP]-1661302170557
GPR[EPVS]-1661302170557
========
if(x==lambda){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302170559
GPR[SPVAP]-1661302170559
GPR[EPVAP]-1661302171586
GPR[EPVS]-1661302171586
========
x0=f0*FastMath.sqrt(fx+rtol)-0.5;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302171587
GPR[SPVAP]-1661302171587
GPR[EPVAP]-1661302173546
GPR[SPVATF]-1661302173546
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302175439
GPR[SPVATR]-1661302175439
TESTING : math_50
GPR[EPVATR]-1661302202876
GPR[EPVS]-1661302202876
========
x0=f0*FastMath.sqrt(fx+rtol)-0.5;
if(delta==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302202878
GPR[SPVAP]-1661302202878
GPR[EPVAP]-1661302203901
GPR[EPVS]-1661302203902
========
if(x==a){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302203903
GPR[SPVAP]-1661302203903
GPR[EPVAP]-1661302204939
GPR[EPVS]-1661302204939
========
if(y==y){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302204942
GPR[SPVAP]-1661302204942
GPR[EPVAP]-1661302205972
GPR[EPVS]-1661302205972
========
if(y==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302205973
GPR[SPVAP]-1661302205973
GPR[EPVAP]-1661302207013
GPR[EPVS]-1661302207013
========
if(x==y){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302207014
GPR[SPVAP]-1661302207014
GPR[EPVAP]-1661302208041
GPR[EPVS]-1661302208041
========
if(lo==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302208043
GPR[SPVAP]-1661302208043
GPR[EPVAP]-1661302209079
GPR[EPVS]-1661302209079
========
if(x==hi){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302209080
GPR[SPVAP]-1661302209080
GPR[EPVAP]-1661302210113
GPR[EPVS]-1661302210113
========
if(delta==xNorm){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302210114
GPR[SPVAP]-1661302210114
GPR[EPVAP]-1661302211130
GPR[EPVS]-1661302211130
========
if(u==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302211131
GPR[SPVAP]-1661302211131
GPR[EPVAP]-1661302212160
GPR[EPVS]-1661302212160
========
if(x==p1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302212161
GPR[SPVAP]-1661302212161
GPR[EPVAP]-1661302213169
GPR[EPVS]-1661302213169
========
if(x==p2){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302213170
GPR[SPVAP]-1661302213170
GPR[EPVAP]-1661302214189
GPR[EPVS]-1661302214189
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
y=FastMath.ceil(x0);
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302214190
GPR[SPVAP]-1661302214190
GPR[EPVAP]-1661302215243
GPR[EPVS]-1661302215243
========
x0+=x;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302215245
GPR[SPVAP]-1661302215245
GPR[EPVAP]-1661302217164
GPR[SPVATF]-1661302217164
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302219049
GPR[SPVATR]-1661302219050
TESTING : math_50
GPR[EPVATR]-1661302246438
GPR[EPVS]-1661302246438
========
f0+=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302246440
GPR[SPVAP]-1661302246440
GPR[EPVAP]-1661302248344
GPR[SPVATF]-1661302248344
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302250213
GPR[EPVS]-1661302250213
========
x0+=x;
f0+=fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302250214
GPR[SPVAP]-1661302250214
GPR[EPVAP]-1661302252120
GPR[SPVATF]-1661302252120
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302253988
GPR[SPVATR]-1661302253989
TESTING : math_50
GPR[EPVATR]-1661302280096
GPR[EPVS]-1661302280096
========
if(u2==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302280098
GPR[SPVAP]-1661302280098
GPR[EPVAP]-1661302281137
GPR[EPVS]-1661302281137
========
if(v==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302281139
GPR[SPVAP]-1661302281139
GPR[EPVAP]-1661302282161
GPR[EPVS]-1661302282161
========
fx=x/rtol;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302282162
GPR[SPVAP]-1661302282162
GPR[EPVAP]-1661302283197
GPR[EPVS]-1661302283197
========
x0=x1+fx;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302283198
GPR[SPVAP]-1661302283198
GPR[EPVAP]-1661302285108
GPR[SPVATF]-1661302285108
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302287002
GPR[SPVATR]-1661302287003
TESTING : math_50
GPR[EPVATR]-1661302314483
GPR[EPVS]-1661302314483
========
x0=x1+fx;
if(x==m){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302314484
GPR[SPVAP]-1661302314484
GPR[EPVAP]-1661302315515
GPR[EPVS]-1661302315515
========
if(fu==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302315516
GPR[SPVAP]-1661302315516
GPR[EPVAP]-1661302316551
GPR[EPVS]-1661302316551
========
if(fv==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302316553
GPR[SPVAP]-1661302316553
GPR[EPVAP]-1661302317579
GPR[EPVS]-1661302317579
========
if(x==x1){
fv=rtol;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302317580
GPR[SPVAP]-1661302317580
GPR[EPVAP]-1661302318612
GPR[EPVS]-1661302318612
========
if(x!=x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302318614
GPR[SPVAP]-1661302318614
GPR[EPVAP]-1661302320516
GPR[SPVATF]-1661302320516
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302322417
GPR[SPVATR]-1661302322417
TESTING : math_50
GPR[EPVATR]-1661302351898
GPR[EPVS]-1661302351898
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=log(x0);
}

========
GPR[SPVS]-1661302351900
GPR[SPVAP]-1661302351900
GPR[EPVAP]-1661302352933
GPR[EPVS]-1661302352933
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
sum=fx+LANCZOS[0];
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302352934
GPR[SPVAP]-1661302352934
GPR[EPVAP]-1661302353962
GPR[EPVS]-1661302353962
========
if(x==x1){
xa=-x;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302353964
GPR[SPVAP]-1661302353964
GPR[EPVAP]-1661302354996
GPR[EPVS]-1661302354997
========
if(fl==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302354998
GPR[SPVAP]-1661302354998
GPR[EPVAP]-1661302356025
GPR[EPVS]-1661302356025
========
if(x==S_LIMIT){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302356027
GPR[SPVAP]-1661302356027
GPR[EPVAP]-1661302357059
GPR[EPVS]-1661302357059
========
if(z==z){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302357060
GPR[SPVAP]-1661302357060
GPR[EPVAP]-1661302358093
GPR[EPVS]-1661302358093
========
if(z==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302358094
GPR[SPVAP]-1661302358094
GPR[EPVAP]-1661302359117
GPR[EPVS]-1661302359117
========
if(x==z){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302359118
GPR[SPVAP]-1661302359118
GPR[EPVAP]-1661302360156
GPR[EPVS]-1661302360156
========
if(threshold==threshold){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302360158
GPR[SPVAP]-1661302360158
GPR[EPVAP]-1661302361201
GPR[EPVS]-1661302361201
========
if(threshold==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302361203
GPR[SPVAP]-1661302361203
GPR[EPVAP]-1661302362227
GPR[EPVS]-1661302362227
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
x=-x;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302362228
GPR[SPVAP]-1661302362228
GPR[EPVAP]-1661302363283
GPR[EPVS]-1661302363283
========
if(x==x1){
xa=-fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302363285
GPR[SPVAP]-1661302363285
GPR[EPVAP]-1661302364324
GPR[EPVS]-1661302364324
========
fx=x;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302364326
GPR[SPVAP]-1661302364326
GPR[EPVAP]-1661302365367
GPR[EPVS]-1661302365367
========
x0=floor(x1);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302365369
GPR[SPVAP]-1661302365369
GPR[EPVAP]-1661302366405
GPR[EPVS]-1661302366405
========
if(x0==x1){
return y;
}
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302366406
GPR[SPVAP]-1661302366406
GPR[EPVAP]-1661302367433
GPR[EPVS]-1661302367433
========
if(lo==hi){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302367434
GPR[SPVAP]-1661302367434
GPR[EPVAP]-1661302368468
GPR[EPVS]-1661302368468
========
if(beta==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302368469
GPR[SPVAP]-1661302368469
GPR[EPVAP]-1661302369500
GPR[EPVS]-1661302369500
========
if(TWO_POWER_52==TWO_POWER_52){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302369502
GPR[SPVAP]-1661302369502
GPR[EPVAP]-1661302370552
GPR[EPVS]-1661302370552
========
if(TWO_POWER_52==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302370553
GPR[SPVAP]-1661302370553
GPR[EPVAP]-1661302371601
GPR[EPVS]-1661302371601
========
if(x==TWO_POWER_52){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302371602
GPR[SPVAP]-1661302371602
GPR[EPVAP]-1661302372643
GPR[EPVS]-1661302372643
========
if(x==x1){
nans=QNAN;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302372645
GPR[SPVAP]-1661302372645
GPR[EPVAP]-1661302373673
GPR[EPVS]-1661302373673
========
if(yMax==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302373677
GPR[SPVAP]-1661302373677
GPR[EPVAP]-1661302374704
GPR[EPVS]-1661302374704
========
if(temp==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302374706
GPR[SPVAP]-1661302374706
GPR[EPVAP]-1661302375747
GPR[EPVS]-1661302375747
========
if(temp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302375748
GPR[SPVAP]-1661302375748
GPR[EPVAP]-1661302376782
GPR[EPVS]-1661302376782
========
if(temp==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302376783
GPR[SPVAP]-1661302376784
GPR[EPVAP]-1661302377815
GPR[EPVS]-1661302377815
========
if(temp==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302377816
GPR[SPVAP]-1661302377816
GPR[EPVAP]-1661302378837
GPR[EPVS]-1661302378837
========
x0=x1*d__3;
if(temp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302378838
GPR[SPVAP]-1661302378838
GPR[EPVAP]-1661302379877
GPR[EPVS]-1661302379877
========
rtol=Math.max(atol,x0);
if(temp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302379878
GPR[SPVAP]-1661302379878
GPR[EPVAP]-1661302380924
GPR[EPVS]-1661302380924
========
if(den==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302380925
GPR[SPVAP]-1661302380925
GPR[EPVAP]-1661302381959
GPR[EPVS]-1661302381959
========
if(den==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302381960
GPR[SPVAP]-1661302381960
GPR[EPVAP]-1661302382999
GPR[EPVS]-1661302382999
========
if(den==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302383000
GPR[SPVAP]-1661302383000
GPR[EPVAP]-1661302384033
GPR[EPVS]-1661302384033
========
if(den==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302384034
GPR[SPVAP]-1661302384034
GPR[EPVAP]-1661302385075
GPR[EPVS]-1661302385075
========
x0=x1*d__3;
if(den==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302385076
GPR[SPVAP]-1661302385076
GPR[EPVAP]-1661302386116
GPR[EPVS]-1661302386116
========
rtol=Math.max(atol,x0);
if(den==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302386117
GPR[SPVAP]-1661302386117
GPR[EPVAP]-1661302387160
GPR[EPVS]-1661302387160
========
if(x==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302387161
GPR[SPVAP]-1661302387161
GPR[EPVAP]-1661302388189
GPR[EPVS]-1661302388189
========
if(x==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302388191
GPR[SPVAP]-1661302388191
GPR[EPVAP]-1661302389217
GPR[EPVS]-1661302389217
========
if(x==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302389218
GPR[SPVAP]-1661302389218
GPR[EPVAP]-1661302390252
GPR[EPVS]-1661302390252
========
x0=x1*d__3;
if(x==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302390254
GPR[SPVAP]-1661302390254
GPR[EPVAP]-1661302391301
GPR[EPVS]-1661302391301
========
rtol=Math.max(atol,x0);
if(x==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302391303
GPR[SPVAP]-1661302391303
GPR[EPVAP]-1661302392332
GPR[EPVS]-1661302392332
========
if(x==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302392333
GPR[SPVAP]-1661302392333
GPR[EPVAP]-1661302393363
GPR[EPVS]-1661302393363
========
if(x==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302393364
GPR[SPVAP]-1661302393364
GPR[EPVAP]-1661302394398
GPR[EPVS]-1661302394398
========
x0=x1*d__3;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302394400
GPR[SPVAP]-1661302394400
GPR[EPVAP]-1661302395449
GPR[EPVS]-1661302395449
========
rtol=Math.max(atol,x0);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302395451
GPR[SPVAP]-1661302395451
GPR[EPVAP]-1661302396481
GPR[EPVS]-1661302396481
========
if(x==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302396482
GPR[SPVAP]-1661302396482
GPR[EPVAP]-1661302397536
GPR[EPVS]-1661302397536
========
x0=x1*d__3;
if(x==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302397537
GPR[SPVAP]-1661302397537
GPR[EPVAP]-1661302398592
GPR[EPVS]-1661302398592
========
rtol=Math.max(atol,x0);
if(x==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302398593
GPR[SPVAP]-1661302398593
GPR[EPVAP]-1661302399618
GPR[EPVS]-1661302399618
========
x0=x1*d__3;
if(x==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302399619
GPR[SPVAP]-1661302399619
GPR[EPVAP]-1661302400651
GPR[EPVS]-1661302400651
========
rtol=Math.max(atol,x0);
if(x==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302400652
GPR[SPVAP]-1661302400652
GPR[EPVAP]-1661302401675
GPR[EPVS]-1661302401675
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302401676
GPR[SPVAP]-1661302401676
GPR[EPVAP]-1661302402709
GPR[EPVS]-1661302402709
========
if(temp==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302402710
GPR[SPVAP]-1661302402710
GPR[EPVAP]-1661302403744
GPR[EPVS]-1661302403744
========
if(temp==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302403745
GPR[SPVAP]-1661302403745
GPR[EPVAP]-1661302404780
GPR[EPVS]-1661302404780
========
if(temp==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302404781
GPR[SPVAP]-1661302404781
GPR[EPVAP]-1661302405800
GPR[EPVS]-1661302405800
========
x0=x1*d__3;
if(temp==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302405801
GPR[SPVAP]-1661302405801
GPR[EPVAP]-1661302406849
GPR[EPVS]-1661302406849
========
rtol=Math.max(atol,x0);
if(temp==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302406850
GPR[SPVAP]-1661302406850
GPR[EPVAP]-1661302407885
GPR[EPVS]-1661302407885
========
if(temp==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302407886
GPR[SPVAP]-1661302407886
GPR[EPVAP]-1661302408919
GPR[EPVS]-1661302408919
========
if(temp==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302408920
GPR[SPVAP]-1661302408920
GPR[EPVAP]-1661302409949
GPR[EPVS]-1661302409949
========
x0=x1*d__3;
if(temp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302409950
GPR[SPVAP]-1661302409950
GPR[EPVAP]-1661302410981
GPR[EPVS]-1661302410981
========
rtol=Math.max(atol,x0);
if(temp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302410983
GPR[SPVAP]-1661302410983
GPR[EPVAP]-1661302412021
GPR[EPVS]-1661302412021
========
if(temp==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302412022
GPR[SPVAP]-1661302412022
GPR[EPVAP]-1661302413063
GPR[EPVS]-1661302413063
========
x0=x1*d__3;
if(temp==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302413064
GPR[SPVAP]-1661302413064
GPR[EPVAP]-1661302414090
GPR[EPVS]-1661302414090
========
rtol=Math.max(atol,x0);
if(temp==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302414091
GPR[SPVAP]-1661302414091
GPR[EPVAP]-1661302415120
GPR[EPVS]-1661302415120
========
x0=x1*d__3;
if(temp==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302415121
GPR[SPVAP]-1661302415121
GPR[EPVAP]-1661302416147
GPR[EPVS]-1661302416147
========
rtol=Math.max(atol,x0);
if(temp==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302416148
GPR[SPVAP]-1661302416148
GPR[EPVAP]-1661302417196
GPR[EPVS]-1661302417196
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(temp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302417197
GPR[SPVAP]-1661302417197
GPR[EPVAP]-1661302418236
GPR[EPVS]-1661302418236
========
if(den==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302418237
GPR[SPVAP]-1661302418237
GPR[EPVAP]-1661302419271
GPR[EPVS]-1661302419271
========
if(den==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302419272
GPR[SPVAP]-1661302419272
GPR[EPVAP]-1661302420336
GPR[EPVS]-1661302420336
========
if(den==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302420338
GPR[SPVAP]-1661302420338
GPR[EPVAP]-1661302421397
GPR[EPVS]-1661302421397
========
x0=x1*d__3;
if(den==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302421398
GPR[SPVAP]-1661302421398
GPR[EPVAP]-1661302422477
GPR[EPVS]-1661302422477
========
rtol=Math.max(atol,x0);
if(den==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302422478
GPR[SPVAP]-1661302422478
GPR[EPVAP]-1661302423513
GPR[EPVS]-1661302423513
========
if(den==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302423514
GPR[SPVAP]-1661302423514
GPR[EPVAP]-1661302424555
GPR[EPVS]-1661302424555
========
if(den==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302424556
GPR[SPVAP]-1661302424556
GPR[EPVAP]-1661302425581
GPR[EPVS]-1661302425581
========
x0=x1*d__3;
if(den==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302425582
GPR[SPVAP]-1661302425582
GPR[EPVAP]-1661302426606
GPR[EPVS]-1661302426606
========
rtol=Math.max(atol,x0);
if(den==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302426607
GPR[SPVAP]-1661302426607
GPR[EPVAP]-1661302427646
GPR[EPVS]-1661302427646
========
if(den==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302427647
GPR[SPVAP]-1661302427647
GPR[EPVAP]-1661302428666
GPR[EPVS]-1661302428666
========
x0=x1*d__3;
if(den==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302428667
GPR[SPVAP]-1661302428667
GPR[EPVAP]-1661302429716
GPR[EPVS]-1661302429716
========
rtol=Math.max(atol,x0);
if(den==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302429718
GPR[SPVAP]-1661302429718
GPR[EPVAP]-1661302430755
GPR[EPVS]-1661302430755
========
x0=x1*d__3;
if(den==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302430757
GPR[SPVAP]-1661302430757
GPR[EPVAP]-1661302431780
GPR[EPVS]-1661302431780
========
rtol=Math.max(atol,x0);
if(den==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302431781
GPR[SPVAP]-1661302431781
GPR[EPVAP]-1661302432804
GPR[EPVS]-1661302432804
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(den==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302432805
GPR[SPVAP]-1661302432805
GPR[EPVAP]-1661302433836
GPR[EPVS]-1661302433836
========
if(x==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302433838
GPR[SPVAP]-1661302433838
GPR[EPVAP]-1661302434880
GPR[EPVS]-1661302434880
========
if(x==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302434881
GPR[SPVAP]-1661302434881
GPR[EPVAP]-1661302435897
GPR[EPVS]-1661302435897
========
x0=x1*d__3;
if(x==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302435899
GPR[SPVAP]-1661302435899
GPR[EPVAP]-1661302436921
GPR[EPVS]-1661302436921
========
rtol=Math.max(atol,x0);
if(x==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302436922
GPR[SPVAP]-1661302436922
GPR[EPVAP]-1661302437948
GPR[EPVS]-1661302437948
========
if(x==scaden){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302437949
GPR[SPVAP]-1661302437949
GPR[EPVAP]-1661302438987
GPR[EPVS]-1661302438987
========
x0=x1*d__3;
if(x==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302438988
GPR[SPVAP]-1661302438988
GPR[EPVAP]-1661302440008
GPR[EPVS]-1661302440008
========
rtol=Math.max(atol,x0);
if(x==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302440009
GPR[SPVAP]-1661302440009
GPR[EPVAP]-1661302441041
GPR[EPVS]-1661302441041
========
x0=x1*d__3;
if(x==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302441042
GPR[SPVAP]-1661302441042
GPR[EPVAP]-1661302442073
GPR[EPVS]-1661302442073
========
rtol=Math.max(atol,x0);
if(x==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302442074
GPR[SPVAP]-1661302442074
GPR[EPVAP]-1661302443095
GPR[EPVS]-1661302443095
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302443096
GPR[SPVAP]-1661302443096
GPR[EPVAP]-1661302444117
GPR[EPVS]-1661302444117
========
if(x==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302444118
GPR[SPVAP]-1661302444118
GPR[EPVAP]-1661302445139
GPR[EPVS]-1661302445139
========
x0=x1*d__3;
if(x==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302445141
GPR[SPVAP]-1661302445141
GPR[EPVAP]-1661302446159
GPR[EPVS]-1661302446159
========
rtol=Math.max(atol,x0);
if(x==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302446160
GPR[SPVAP]-1661302446160
GPR[EPVAP]-1661302447192
GPR[EPVS]-1661302447192
========
x0=x1*d__3;
if(x==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302447193
GPR[SPVAP]-1661302447193
GPR[EPVAP]-1661302448229
GPR[EPVS]-1661302448229
========
rtol=Math.max(atol,x0);
if(x==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302448230
GPR[SPVAP]-1661302448230
GPR[EPVAP]-1661302449253
GPR[EPVS]-1661302449253
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302449254
GPR[SPVAP]-1661302449254
GPR[EPVAP]-1661302450287
GPR[EPVS]-1661302450287
========
x0=x1*d__3;
if(x==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302450288
GPR[SPVAP]-1661302450288
GPR[EPVAP]-1661302451317
GPR[EPVS]-1661302451317
========
rtol=Math.max(atol,x0);
if(x==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302451318
GPR[SPVAP]-1661302451318
GPR[EPVAP]-1661302452345
GPR[EPVS]-1661302452345
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302452346
GPR[SPVAP]-1661302452346
GPR[EPVAP]-1661302453374
GPR[EPVS]-1661302453374
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302453375
GPR[SPVAP]-1661302453375
GPR[EPVAP]-1661302454397
GPR[EPVS]-1661302454397
========
if(temp==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302454398
GPR[SPVAP]-1661302454398
GPR[EPVAP]-1661302455436
GPR[EPVS]-1661302455436
========
if(temp==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302455438
GPR[SPVAP]-1661302455438
GPR[EPVAP]-1661302456474
GPR[EPVS]-1661302456474
========
x0=x1*d__3;
if(temp==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302456475
GPR[SPVAP]-1661302456475
GPR[EPVAP]-1661302457503
GPR[EPVS]-1661302457503
========
rtol=Math.max(atol,x0);
if(temp==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302457504
GPR[SPVAP]-1661302457504
GPR[EPVAP]-1661302458569
GPR[EPVS]-1661302458569
========
if(temp==scaden){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302458570
GPR[SPVAP]-1661302458570
GPR[EPVAP]-1661302459594
GPR[EPVS]-1661302459594
========
x0=x1*d__3;
if(temp==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302459595
GPR[SPVAP]-1661302459595
GPR[EPVAP]-1661302460636
GPR[EPVS]-1661302460636
========
rtol=Math.max(atol,x0);
if(temp==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302460637
GPR[SPVAP]-1661302460637
GPR[EPVAP]-1661302461673
GPR[EPVS]-1661302461673
========
x0=x1*d__3;
if(temp==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302461674
GPR[SPVAP]-1661302461674
GPR[EPVAP]-1661302462704
GPR[EPVS]-1661302462704
========
rtol=Math.max(atol,x0);
if(temp==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302462705
GPR[SPVAP]-1661302462705
GPR[EPVAP]-1661302463752
GPR[EPVS]-1661302463752
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(temp==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302463753
GPR[SPVAP]-1661302463753
GPR[EPVAP]-1661302464788
GPR[EPVS]-1661302464788
========
if(temp==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302464789
GPR[SPVAP]-1661302464789
GPR[EPVAP]-1661302465815
GPR[EPVS]-1661302465815
========
x0=x1*d__3;
if(temp==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302465816
GPR[SPVAP]-1661302465816
GPR[EPVAP]-1661302466838
GPR[EPVS]-1661302466838
========
rtol=Math.max(atol,x0);
if(temp==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302466839
GPR[SPVAP]-1661302466839
GPR[EPVAP]-1661302467866
GPR[EPVS]-1661302467866
========
x0=x1*d__3;
if(temp==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302467867
GPR[SPVAP]-1661302467867
GPR[EPVAP]-1661302468899
GPR[EPVS]-1661302468899
========
rtol=Math.max(atol,x0);
if(temp==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302468901
GPR[SPVAP]-1661302468901
GPR[EPVAP]-1661302469925
GPR[EPVS]-1661302469925
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(temp==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302469926
GPR[SPVAP]-1661302469926
GPR[EPVAP]-1661302470952
GPR[EPVS]-1661302470952
========
x0=x1*d__3;
if(temp==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302470953
GPR[SPVAP]-1661302470953
GPR[EPVAP]-1661302472015
GPR[EPVS]-1661302472015
========
rtol=Math.max(atol,x0);
if(temp==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302472016
GPR[SPVAP]-1661302472016
GPR[EPVAP]-1661302473045
GPR[EPVS]-1661302473045
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(temp==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302473046
GPR[SPVAP]-1661302473046
GPR[EPVAP]-1661302474092
GPR[EPVS]-1661302474092
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(temp==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302474093
GPR[SPVAP]-1661302474093
GPR[EPVAP]-1661302475148
GPR[EPVS]-1661302475149
========
if(den==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302475150
GPR[SPVAP]-1661302475150
GPR[EPVAP]-1661302476189
GPR[EPVS]-1661302476189
========
if(den==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302476190
GPR[SPVAP]-1661302476190
GPR[EPVAP]-1661302477248
GPR[EPVS]-1661302477248
========
x0=x1*d__3;
if(den==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302477249
GPR[SPVAP]-1661302477249
GPR[EPVAP]-1661302478302
GPR[EPVS]-1661302478302
========
rtol=Math.max(atol,x0);
if(den==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302478303
GPR[SPVAP]-1661302478303
GPR[EPVAP]-1661302479337
GPR[EPVS]-1661302479337
========
if(den==scaden){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302479338
GPR[SPVAP]-1661302479338
GPR[EPVAP]-1661302480382
GPR[EPVS]-1661302480382
========
x0=x1*d__3;
if(den==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302480384
GPR[SPVAP]-1661302480384
GPR[EPVAP]-1661302481422
GPR[EPVS]-1661302481422
========
rtol=Math.max(atol,x0);
if(den==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302481423
GPR[SPVAP]-1661302481423
GPR[EPVAP]-1661302482466
GPR[EPVS]-1661302482466
========
x0=x1*d__3;
if(den==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302482467
GPR[SPVAP]-1661302482467
GPR[EPVAP]-1661302483493
GPR[EPVS]-1661302483493
========
rtol=Math.max(atol,x0);
if(den==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302483494
GPR[SPVAP]-1661302483494
GPR[EPVAP]-1661302484520
GPR[EPVS]-1661302484520
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(den==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302484521
GPR[SPVAP]-1661302484521
GPR[EPVAP]-1661302485574
GPR[EPVS]-1661302485574
========
if(den==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302485575
GPR[SPVAP]-1661302485575
GPR[EPVAP]-1661302486648
GPR[EPVS]-1661302486649
========
x0=x1*d__3;
if(den==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302486650
GPR[SPVAP]-1661302486650
GPR[EPVAP]-1661302487680
GPR[EPVS]-1661302487680
========
rtol=Math.max(atol,x0);
if(den==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302487681
GPR[SPVAP]-1661302487681
GPR[EPVAP]-1661302488767
GPR[EPVS]-1661302488767
========
x0=x1*d__3;
if(den==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302488768
GPR[SPVAP]-1661302488768
GPR[EPVAP]-1661302489797
GPR[EPVS]-1661302489797
========
rtol=Math.max(atol,x0);
if(den==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302489798
GPR[SPVAP]-1661302489798
GPR[EPVAP]-1661302490839
GPR[EPVS]-1661302490839
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(den==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302490840
GPR[SPVAP]-1661302490840
GPR[EPVAP]-1661302491873
GPR[EPVS]-1661302491873
========
x0=x1*d__3;
if(den==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302491875
GPR[SPVAP]-1661302491875
GPR[EPVAP]-1661302492949
GPR[EPVS]-1661302492949
========
rtol=Math.max(atol,x0);
if(den==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302492950
GPR[SPVAP]-1661302492950
GPR[EPVAP]-1661302494005
GPR[EPVS]-1661302494005
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(den==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302494006
GPR[SPVAP]-1661302494006
GPR[EPVAP]-1661302495049
GPR[EPVS]-1661302495049
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(den==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302495050
GPR[SPVAP]-1661302495050
GPR[EPVAP]-1661302496108
GPR[EPVS]-1661302496108
========
if(x==scaden){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302496109
GPR[SPVAP]-1661302496109
GPR[EPVAP]-1661302497138
GPR[EPVS]-1661302497138
========
x0=x1*d__3;
if(x==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302497139
GPR[SPVAP]-1661302497139
GPR[EPVAP]-1661302498177
GPR[EPVS]-1661302498177
========
rtol=Math.max(atol,x0);
if(x==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302498179
GPR[SPVAP]-1661302498179
GPR[EPVAP]-1661302499233
GPR[EPVS]-1661302499233
========
x0=x1*d__3;
if(x==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302499234
GPR[SPVAP]-1661302499234
GPR[EPVAP]-1661302500308
GPR[EPVS]-1661302500308
========
rtol=Math.max(atol,x0);
if(x==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302500309
GPR[SPVAP]-1661302500309
GPR[EPVAP]-1661302501335
GPR[EPVS]-1661302501335
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==scaden){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302501337
GPR[SPVAP]-1661302501337
GPR[EPVAP]-1661302502373
GPR[EPVS]-1661302502373
========
x0=x1*d__3;
if(x==scaden){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302502374
GPR[SPVAP]-1661302502374
GPR[EPVAP]-1661302503396
GPR[EPVS]-1661302503396
========
rtol=Math.max(atol,x0);
if(x==scaden){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302503397
GPR[SPVAP]-1661302503397
GPR[EPVAP]-1661302504449
GPR[EPVS]-1661302504449
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==scaden){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302504450
GPR[SPVAP]-1661302504450
GPR[EPVAP]-1661302505491
GPR[EPVS]-1661302505491
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==scaden){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302505492
GPR[SPVAP]-1661302505492
GPR[EPVAP]-1661302506517
GPR[EPVS]-1661302506517
========
x0=x1*d__3;
if(x==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302506518
GPR[SPVAP]-1661302506518
GPR[EPVAP]-1661302507556
GPR[EPVS]-1661302507557
========
rtol=Math.max(atol,x0);
if(x==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302507558
GPR[SPVAP]-1661302507558
GPR[EPVAP]-1661302508605
GPR[EPVS]-1661302508605
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==x1){
denom=fx;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302508606
GPR[SPVAP]-1661302508606
GPR[EPVAP]-1661302509645
GPR[EPVS]-1661302509645
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==x1){
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
scaden=rtol*fx;
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302509646
GPR[SPVAP]-1661302509646
GPR[EPVAP]-1661302510708
GPR[EPVS]-1661302510708
========
x0=x1*d__3;
rtol=Math.max(atol,x0);
if(x==x1){
denom=fx;
scaden=rtol*fx;
denom=fx;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302510710
GPR[SPVAP]-1661302510710
GPR[EPVAP]-1661302511743
GPR[EPVS]-1661302511743
========
if(abs==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302511746
GPR[SPVAP]-1661302511746
GPR[EPVAP]-1661302512775
GPR[EPVS]-1661302512775
========
f0=x1;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302512777
GPR[SPVAP]-1661302512777
GPR[EPVAP]-1661302514732
GPR[SPVATF]-1661302514733
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302516665
GPR[EPVS]-1661302516665
========
x0=fx;
f0=x1;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302516666
GPR[SPVAP]-1661302516666
GPR[EPVAP]-1661302518571
GPR[SPVATF]-1661302518571
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302520456
GPR[SPVATR]-1661302520457
TESTING : math_50
GPR[EPVATR]-1661302547856
GPR[EPVS]-1661302547856
========
if(max==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302547858
GPR[SPVAP]-1661302547858
GPR[EPVAP]-1661302548889
GPR[EPVS]-1661302548889
========
if(x==e){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302548890
GPR[SPVAP]-1661302548890
GPR[EPVAP]-1661302549917
GPR[EPVS]-1661302549917
========
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
if(x1==0){
return x1;
}
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302549919
GPR[SPVAP]-1661302549919
GPR[EPVAP]-1661302551840
GPR[SPVATF]-1661302551840
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302553712
GPR[EPVS]-1661302553712
========
if(x==x1){
x*=1.80143985E16;
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302553714
GPR[SPVAP]-1661302553714
GPR[EPVAP]-1661302554740
GPR[EPVS]-1661302554740
========
if(x==x1){
if(x1==0){
return x1;
}
x*=1.80143985E16;

x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302554741
GPR[SPVAP]-1661302554741
GPR[EPVAP]-1661302555790
GPR[EPVS]-1661302555790
========
if(rel==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302555793
GPR[SPVAP]-1661302555793
GPR[EPVAP]-1661302556837
GPR[EPVS]-1661302556837
========
if(x==MIN_RELATIVE_TOLERANCE){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302556839
GPR[SPVAP]-1661302556839
GPR[EPVAP]-1661302557874
GPR[EPVS]-1661302557874
========
if(x0<=0){
throw new NotStrictlyPositiveException(abs);
}
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302557875
GPR[SPVAP]-1661302557875
GPR[EPVAP]-1661302558917
GPR[EPVS]-1661302558917
========
fx=x0;
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302558918
GPR[SPVAP]-1661302558918
GPR[EPVAP]-1661302559945
GPR[EPVS]-1661302559945
========
if(x==C_LIMIT){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302559947
GPR[SPVAP]-1661302559947
GPR[EPVAP]-1661302560984
GPR[EPVS]-1661302560984
========
if(y2==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302560986
GPR[SPVAP]-1661302560986
GPR[EPVAP]-1661302562028
GPR[EPVS]-1661302562028
========
verifyBracketing(atol,fx);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302562030
GPR[SPVAP]-1661302562030
GPR[EPVAP]-1661302563934
GPR[SPVATF]-1661302563934
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302565890
GPR[EPVS]-1661302565890
========
verifyBracketing(atol,x0);
if(f1==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302565891
GPR[SPVAP]-1661302565891
GPR[EPVAP]-1661302567800
GPR[SPVATF]-1661302567800
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302569695
GPR[SPVATR]-1661302569696
TESTING : math_50
GPR[EPVATR]-1661302597278
GPR[EPVS]-1661302597278
========
if(xa==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302597279
GPR[SPVAP]-1661302597279
GPR[EPVAP]-1661302598314
GPR[EPVS]-1661302598314
========
if(c==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302598315
GPR[SPVAP]-1661302598315
GPR[EPVAP]-1661302599351
GPR[EPVS]-1661302599351
========
if(x==Double.POSITIVE_INFINITY){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302599355
GPR[SPVAP]-1661302599355
GPR[EPVAP]-1661302601260
GPR[SPVATF]-1661302601260
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302603177
GPR[SPVATR]-1661302603178
TESTING : math_50
GPR[EPVATR]-1661302630521
GPR[EPVS]-1661302630521
GPR[PF]-1661302630521
sourceFile  script/workingdir/SimFix/math/math_50_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
location   script/workingdir/SimFix/math/math_50_buggy
========
if(x==POSITIVE_INFINITY){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302630529
GPR[SPVAP]-1661302630529
GPR[EPVAP]-1661302631567
GPR[EPVS]-1661302631567
========
if(x==invx){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}

========
GPR[SPVS]-1661302631568
GPR[SPVAP]-1661302631568
GPR[EPVAP]-1661302632591
GPR[EPVS]-1661302632591
GPR[ESUN]-1661302632591
GPR[SSUN]-1661302632591
org.apache.commons.math.analysis.solvers.BaseSecantSolver,189
GPR[ESUN]-1661302633060
GPR[SSUN]-1661302633060
org.apache.commons.math.analysis.solvers.BaseSecantSolver,239
========
case ANY_SIDE :
return inverted?x1:x0;


========
GPR[SPVS]-1661302634516
GPR[SPVAP]-1661302634516
GPR[EPVAP]-1661302639856
GPR[SPVATF]-1661302639856
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302641787
GPR[EPVS]-1661302641787
========
case ANY_SIDE :
return x0;


========
GPR[SPVS]-1661302641788
GPR[SPVAP]-1661302641788
GPR[EPVAP]-1661302643734
GPR[SPVATF]-1661302643734
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302645609
GPR[EPVS]-1661302645609
========
case RIGHT_SIDE :

case ANY_SIDE :
return x1;


========
GPR[SPVS]-1661302645610
GPR[SPVAP]-1661302645610
GPR[EPVAP]-1661302646661
GPR[EPVS]-1661302646661
========
case ANY_SIDE :
return (f1<=0)?x1:x0;


========
GPR[SPVS]-1661302646662
GPR[SPVAP]-1661302646662
GPR[EPVAP]-1661302648557
GPR[SPVATF]-1661302648557
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302650536
GPR[EPVS]-1661302650536
========
case ABOVE_SIDE :

case ANY_SIDE :
return x1;


========
GPR[SPVS]-1661302650537
GPR[SPVAP]-1661302650537
GPR[EPVAP]-1661302651556
GPR[EPVS]-1661302651556
========
case ANY_SIDE :
return FastMath.exp(-0.5*x1)/(fx*SQRT2PI);


========
GPR[SPVS]-1661302651557
GPR[SPVAP]-1661302651557
GPR[EPVAP]-1661302652581
GPR[EPVS]-1661302652581
========
case ANY_SIDE :
return standardDeviation;


========
GPR[SPVS]-1661302652582
GPR[SPVAP]-1661302652582
GPR[EPVAP]-1661302653615
GPR[EPVS]-1661302653615
========
case ANY_SIDE :
return SQRT2PI;


========
GPR[SPVS]-1661302653616
GPR[SPVAP]-1661302653616
GPR[EPVAP]-1661302654681
GPR[EPVS]-1661302654681
========
case ANY_SIDE :
return inverted?x1:x0;

case LEFT_SIDE :


========
GPR[SPVS]-1661302657084
GPR[SPVAP]-1661302657084
GPR[EPVAP]-1661302658983
GPR[SPVATF]-1661302658983
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302660870
GPR[EPVS]-1661302660870
========
case ANY_SIDE :
return x0;

case LEFT_SIDE :


========
GPR[SPVS]-1661302660871
GPR[SPVAP]-1661302660871
GPR[EPVAP]-1661302662832
GPR[SPVATF]-1661302662832
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302664730
GPR[EPVS]-1661302664730
========
case ANY_SIDE :
return (f1<=0)?x1:x0;

case LEFT_SIDE :


========
GPR[SPVS]-1661302664731
GPR[SPVAP]-1661302664731
GPR[EPVAP]-1661302666674
GPR[SPVATF]-1661302666674
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302668550
GPR[EPVS]-1661302668550
========
case ANY_SIDE :
return FastMath.exp(-0.5*x1)/(fx*SQRT2PI);

case LEFT_SIDE :


========
GPR[SPVS]-1661302668551
GPR[SPVAP]-1661302668551
GPR[EPVAP]-1661302669571
GPR[EPVS]-1661302669571
========
case ANY_SIDE :
return standardDeviation;

case LEFT_SIDE :


========
GPR[SPVS]-1661302669572
GPR[SPVAP]-1661302669572
GPR[EPVAP]-1661302670602
GPR[EPVS]-1661302670602
========
case ANY_SIDE :
return SQRT2PI;

case LEFT_SIDE :


========
GPR[SPVS]-1661302670603
GPR[SPVAP]-1661302670603
GPR[EPVAP]-1661302671636
GPR[EPVS]-1661302671636
GPR[ESUN]-1661302671637
GPR[SSUN]-1661302671637
org.apache.commons.math.analysis.solvers.BaseSecantSolver,187
GPR[ESUN]-1661302672128
GPR[SSUN]-1661302672128
org.apache.commons.math.analysis.solvers.RegulaFalsiSolver,43
GPR[ESUN]-1661302673543
GPR[SSUN]-1661302673543
org.apache.commons.math.analysis.solvers.RegulaFalsiSolver,44
Find no block!
GPR[SSUN]-1661302673817
org.apache.commons.math.analysis.solvers.BaseSecantSolver,124
========
return solve(maxEval,f,min,max,min+0.5*(max-min),allowed);

========
GPR[SPVS]-1661302675360
GPR[SPVAP]-1661302675360
GPR[EPVAP]-1661302680745
GPR[SPVATF]-1661302680745
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302682620
GPR[EPVS]-1661302682620
========
return solve(maxEval,f,min,max,startValue,allowed);

========
GPR[SPVS]-1661302682621
GPR[SPVAP]-1661302682621
GPR[EPVAP]-1661302684577
GPR[SPVATF]-1661302684577
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302686459
GPR[EPVS]-1661302686459
========
return solve(maxEval,f,Double.NaN,Double.NaN,startValue);

========
GPR[SPVS]-1661302686460
GPR[SPVAP]-1661302686460
GPR[EPVAP]-1661302688351
GPR[SPVATF]-1661302688351
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302690270
GPR[EPVS]-1661302690270
========
return solve(maxEval,f,min,max,min+0.5*(max-min));

========
GPR[SPVS]-1661302690272
GPR[SPVAP]-1661302690272
GPR[EPVAP]-1661302692204
GPR[SPVATF]-1661302692204
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302694067
GPR[EPVS]-1661302694067
========
return solve(min,DEFAULT_ABSOLUTE_ACCURACY,startValue,DEFAULT_ABSOLUTE_ACCURACY);

========
GPR[SPVS]-1661302694069
GPR[SPVAP]-1661302694069
GPR[EPVAP]-1661302695095
GPR[EPVS]-1661302695095
========
return solve(DEFAULT_ABSOLUTE_ACCURACY,max,DEFAULT_ABSOLUTE_ACCURACY,DEFAULT_ABSOLUTE_ACCURACY);

========
GPR[SPVS]-1661302695096
GPR[SPVAP]-1661302695096
GPR[EPVAP]-1661302696121
GPR[EPVS]-1661302696121
========
return laguerre(min,max,startValue,DEFAULT_ABSOLUTE_ACCURACY);

========
GPR[SPVS]-1661302696126
GPR[SPVAP]-1661302696126
GPR[EPVAP]-1661302697160
GPR[EPVS]-1661302697160
========
return brent(min,max,startValue,DEFAULT_ABSOLUTE_ACCURACY);

========
GPR[SPVS]-1661302697161
GPR[SPVAP]-1661302697162
GPR[EPVAP]-1661302698203
GPR[EPVS]-1661302698203
GPR[ESUN]-1661302698206
GPR[SSUN]-1661302698206
org.apache.commons.math.analysis.solvers.BaseSecantSolver,237
Find no block!
GPR[SSUN]-1661302698652
org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver,195
========
return solve(maxEval,f,min,max,functionValueAccuracy,AllowedSolution.ANY_SIDE);

========
GPR[SPVS]-1661302700176
GPR[SPVAP]-1661302700176
GPR[EPVAP]-1661302702360
GPR[EPVS]-1661302702360
========
return solve(min,searchMax,searchMin,searchMax);

========
GPR[SPVS]-1661302702362
GPR[SPVAP]-1661302702362
GPR[EPVAP]-1661302704292
GPR[EPVS]-1661302704292
========
return solve(searchMax,max,searchMax,searchMax);

========
GPR[SPVS]-1661302704293
GPR[SPVAP]-1661302704293
GPR[EPVAP]-1661302706203
GPR[EPVS]-1661302706204
========
return solve(maxEval,f,Double.NaN,Double.NaN,max);

========
GPR[SPVS]-1661302706206
GPR[SPVAP]-1661302706206
GPR[EPVAP]-1661302711397
GPR[SPVATF]-1661302711397
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302713273
GPR[EPVS]-1661302713273
========
return solve(maxEval,f,Double.NaN,max,min+0.5*(max-min));

========
GPR[SPVS]-1661302713274
GPR[SPVAP]-1661302713274
GPR[EPVAP]-1661302715180
GPR[SPVATF]-1661302715180
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302717052
GPR[EPVS]-1661302717052
========
return solve(maxEval,f,min,Double.NaN,min+0.5*(max-min));

========
GPR[SPVS]-1661302717053
GPR[SPVAP]-1661302717053
GPR[EPVAP]-1661302718934
GPR[SPVATF]-1661302718934
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302720850
GPR[EPVS]-1661302720850
========
return solve(maxEval,f,Double.NaN,Double.NaN,startValue);

========
GPR[SPVS]-1661302720851
GPR[SPVAP]-1661302720851
GPR[EPVAP]-1661302721853
GPR[EPVS]-1661302721853
========
return laguerre(min,searchMax,max,searchMax);

========
GPR[SPVS]-1661302721857
GPR[SPVAP]-1661302721857
GPR[EPVAP]-1661302722873
GPR[EPVS]-1661302722873
========
return brent(min,searchMax,max,searchMax);

========
GPR[SPVS]-1661302722875
GPR[SPVAP]-1661302722875
GPR[EPVAP]-1661302723897
GPR[EPVS]-1661302723897
========
return laguerre(searchMax,max,searchMax,searchMax);

========
GPR[SPVS]-1661302723899
GPR[SPVAP]-1661302723899
GPR[EPVAP]-1661302724945
GPR[EPVS]-1661302724945
========
return brent(searchMax,max,searchMax,searchMax);

========
GPR[SPVS]-1661302724946
GPR[SPVAP]-1661302724946
GPR[EPVAP]-1661302725963
GPR[EPVS]-1661302725963
GPR[ESUN]-1661302725966
GPR[SSUN]-1661302725966
org.apache.commons.math.analysis.solvers.BaseSecantSolver,205
Find no block!
GPR[SSUN]-1661302726340
org.apache.commons.math.analysis.solvers.BaseSecantSolver,178
Find no block!
GPR[SSUN]-1661302726573
org.apache.commons.math.analysis.solvers.BaseSecantSolver,171
========
case PEGASUS :

case ILLINOIS :
f0*=0.5;
break;


========
GPR[SPVS]-1661302727982
GPR[SPVAP]-1661302727982
GPR[EPVAP]-1661302730276
GPR[EPVS]-1661302730276
========
if(fx==0.0){
return x;
}
case ILLINOIS :
f0*=0.5;
break;


========
GPR[SPVS]-1661302730277
GPR[SPVAP]-1661302730277
GPR[EPVAP]-1661302731508
GPR[EPVS]-1661302731508
========
x0=x1;
case ILLINOIS :
f0*=0.5;
break;


========
GPR[SPVS]-1661302731509
GPR[SPVAP]-1661302731509
GPR[EPVAP]-1661302732767
GPR[EPVS]-1661302732767
========
x1=x;
case ILLINOIS :
f0*=0.5;
break;


========
GPR[SPVS]-1661302732768
GPR[SPVAP]-1661302732768
GPR[EPVAP]-1661302734016
GPR[EPVS]-1661302734016
========
f1=fx;
case ILLINOIS :
f0*=0.5;
break;


========
GPR[SPVS]-1661302734017
GPR[SPVAP]-1661302734017
GPR[EPVAP]-1661302735255
GPR[EPVS]-1661302735255
========
case REGULA_FALSI :

case PEGASUS :
f0*=f1/(f1+fx);
break;


========
GPR[SPVS]-1661302736419
GPR[SPVAP]-1661302736419
GPR[EPVAP]-1661302738339
GPR[EPVS]-1661302738339
========
x1=x;
case PEGASUS :
f0*=f1/(f1+fx);
break;


========
GPR[SPVS]-1661302738340
GPR[SPVAP]-1661302738340
GPR[EPVAP]-1661302740306
GPR[EPVS]-1661302740306
========
if(FastMath.abs(f0)<=fx){
return x1;
}
case PEGASUS :
f0*=f1/(f1+fx);
break;


========
GPR[SPVS]-1661302740307
GPR[SPVAP]-1661302740307
GPR[EPVAP]-1661302742256
GPR[EPVS]-1661302742256
========
case ABOVE_SIDE :

case PEGASUS :
f0*=f1/(f1+fx);
break;


========
GPR[SPVS]-1661302742258
GPR[SPVAP]-1661302742258
GPR[EPVAP]-1661302744200
GPR[EPVS]-1661302744200
========
case REGULA_FALSI :
if(x==absoluteAccuracy){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;


========
GPR[SPVS]-1661302745773
GPR[SPVAP]-1661302745773
GPR[EPVAP]-1661302747687
GPR[EPVS]-1661302747687
========
case REGULA_FALSI :
f0*=x1/(x1+x);
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;



========
GPR[SPVS]-1661302747690
GPR[SPVAP]-1661302747690
GPR[EPVAP]-1661302752869
GPR[SPVATF]-1661302752869
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302754746
GPR[EPVS]-1661302754746
========
case REGULA_FALSI :

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;


========
GPR[SPVS]-1661302754747
GPR[SPVAP]-1661302754747
GPR[EPVAP]-1661302755806
GPR[EPVS]-1661302755806
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
if(f1==0.0){
return x0;
}
throw new MathInternalError();

}
}

========
GPR[SPVS]-1661302758709
GPR[SPVAP]-1661302758709
GPR[EPVAP]-1661302759649
GPR[EPVS]-1661302759649
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
if(FastMath.abs(x1-fx)<FastMath.max(rtol*FastMath.abs(x1),atol)){
return x1;
}
throw new MathInternalError();

}
}

========
GPR[SPVS]-1661302759650
GPR[SPVAP]-1661302759650
GPR[EPVAP]-1661302760601
GPR[EPVS]-1661302760601
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
if(inverted){
return x1;
}
f0*=f1/(f1+fx);
break;


case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();

}
}

========
GPR[SPVS]-1661302760603
GPR[SPVAP]-1661302760603
GPR[EPVAP]-1661302761544
GPR[EPVS]-1661302761544
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(!inverted){
return x1;
}
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;


default :
throw new MathInternalError();

}
}

========
GPR[SPVS]-1661302761545
GPR[SPVAP]-1661302761545
GPR[EPVAP]-1661302762503
GPR[EPVS]-1661302762503
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
if(fx<=0){
return x1;
}
throw new MathInternalError();

}
}

========
GPR[SPVS]-1661302762504
GPR[SPVAP]-1661302762504
GPR[EPVAP]-1661302763429
GPR[EPVS]-1661302763429
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
break;
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302763430
GPR[SPVAP]-1661302763430
GPR[EPVAP]-1661302764379
GPR[EPVS]-1661302764379
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302764380
GPR[SPVAP]-1661302764380
GPR[EPVAP]-1661302765315
GPR[EPVS]-1661302765315
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
default :
throw new MathInternalError();

case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302765316
GPR[SPVAP]-1661302765316
GPR[EPVAP]-1661302766255
GPR[EPVS]-1661302766255
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302766256
GPR[SPVAP]-1661302766256
GPR[EPVAP]-1661302767199
GPR[EPVS]-1661302767199
========
x1=x1;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302767200
GPR[SPVAP]-1661302767200
GPR[EPVAP]-1661302768133
GPR[EPVS]-1661302768133
========
fx=fx;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302768134
GPR[SPVAP]-1661302768134
GPR[EPVAP]-1661302769066
GPR[EPVS]-1661302769066
========
if(f1*fx<0){
x0=lo;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302769071
GPR[SPVAP]-1661302769071
GPR[EPVAP]-1661302770001
GPR[EPVS]-1661302770001
========
if(f1*fx<0){
x0=x1;
f0=hi;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302770001
GPR[SPVAP]-1661302770001
GPR[EPVAP]-1661302770933
GPR[EPVS]-1661302770933
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
a=f1;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302770934
GPR[SPVAP]-1661302770934
GPR[EPVAP]-1661302771879
GPR[EPVS]-1661302771879
========
if(!inverted){
fx=-fx;
}
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302771880
GPR[SPVAP]-1661302771880
GPR[EPVAP]-1661302772813
GPR[EPVS]-1661302772813
========
if(f1*fx<0){
x0=x1;
f0=x;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302772816
GPR[SPVAP]-1661302772816
GPR[EPVAP]-1661302773763
GPR[EPVS]-1661302773763
========
if(f1*fx<0){
x0=x1;
f0=tol1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302773764
GPR[SPVAP]-1661302773764
GPR[EPVAP]-1661302774725
GPR[EPVS]-1661302774725
========
if(f1*fx<0){
x0=b;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302774727
GPR[SPVAP]-1661302774727
GPR[EPVAP]-1661302775672
GPR[EPVS]-1661302775672
========
if(f1*fx<0){
x0=x;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302775673
GPR[SPVAP]-1661302775673
GPR[EPVAP]-1661302776621
GPR[EPVS]-1661302776621
========
if(f1*fx<0){
x0=fw;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302776623
GPR[SPVAP]-1661302776623
GPR[EPVAP]-1661302777557
GPR[EPVS]-1661302777557
========
if(f1*fx<0){
v=x;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302777558
GPR[SPVAP]-1661302777558
GPR[EPVAP]-1661302778497
GPR[EPVS]-1661302778497
========
if(f1*fx<0){
w=x1;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302778498
GPR[SPVAP]-1661302778498
GPR[EPVAP]-1661302779433
GPR[EPVS]-1661302779433
========
if(f1*fx<0){
fw=fx;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302779434
GPR[SPVAP]-1661302779434
GPR[EPVAP]-1661302780369
GPR[EPVS]-1661302780369
========
if(f1*fx<0){
x=x;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302780370
GPR[SPVAP]-1661302780370
GPR[EPVAP]-1661302781313
GPR[EPVS]-1661302781314
========
if(f1*fx<0){
fx=f1;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302781314
GPR[SPVAP]-1661302781314
GPR[EPVAP]-1661302782254
GPR[EPVS]-1661302782254
========
if(f1*fx<0){
v=x;
w=x1;
fw=fx;
x=x;
fx=f1;

x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302782255
GPR[SPVAP]-1661302782255
GPR[EPVAP]-1661302783180
GPR[EPVS]-1661302783180
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
if(f1<=x||MathUtils.equals(x,x1)){
v=x;
fv=x;
w=x;
fw=f1;
}else if(f1<=x0||MathUtils.equals(x,x1)||MathUtils.equals(x,x)){
v=x;
fv=f1;
}
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302783181
GPR[SPVAP]-1661302783181
GPR[EPVAP]-1661302784112
GPR[EPVS]-1661302784112
========
if(Double.doubleToLongBits(x1)<0){
xInt=SGN_MASK-xInt;
}
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302784114
GPR[SPVAP]-1661302784114
GPR[EPVAP]-1661302785055
GPR[EPVS]-1661302785055
========
if(x*x<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302785057
GPR[SPVAP]-1661302785057
GPR[EPVAP]-1661302785993
GPR[EPVS]-1661302785993
========
if(x*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302785994
GPR[SPVAP]-1661302785994
GPR[EPVAP]-1661302786937
GPR[EPVS]-1661302786937
========
if(f1*x<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302786938
GPR[SPVAP]-1661302786938
GPR[EPVAP]-1661302787866
GPR[EPVS]-1661302787866
========
if(f1*fx<getExponent(x)){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302787870
GPR[SPVAP]-1661302787870
GPR[EPVAP]-1661302788810
GPR[EPVS]-1661302788810
========
if(f1*fx<0){
x0=e;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302788813
GPR[SPVAP]-1661302788813
GPR[EPVAP]-1661302789741
GPR[EPVS]-1661302789741
========
if(f1*fx<0){
x0=n;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302789742
GPR[SPVAP]-1661302789742
GPR[EPVAP]-1661302790688
GPR[EPVS]-1661302790688
========
if(f1*fx<0){
x0=c1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302790689
GPR[SPVAP]-1661302790689
GPR[EPVAP]-1661302791648
GPR[EPVS]-1661302791648
========
if(f1*fx<0){
x0=x1;
x=nextGaussian(0.0,1.0)*FastMath.sqrt(DEFAULT_ABSOLUTE_ACCURACY+DEFAULT_ABSOLUTE_ACCURACY)-0.5;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302791649
GPR[SPVAP]-1661302791649
GPR[EPVAP]-1661302792588
GPR[EPVS]-1661302792588
========
if(f1*fx<0){
x0=x1;
if(x>f1||x<-DEFAULT_ABSOLUTE_ACCURACY){
continue;
}
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302792589
GPR[SPVAP]-1661302792589
GPR[EPVAP]-1661302793535
GPR[EPVS]-1661302793536
========
if(f1*fx<0){
x0=x1;
x=nextGaussian(0.0,1.0)*FastMath.sqrt(DEFAULT_ABSOLUTE_ACCURACY+DEFAULT_ABSOLUTE_ACCURACY)-0.5;
if(x>f1||x<-DEFAULT_ABSOLUTE_ACCURACY){
continue;
}

f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302793536
GPR[SPVAP]-1661302793537
GPR[EPVAP]-1661302794476
GPR[EPVS]-1661302794476
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
sum=f0+LANCZOS[0];
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302794479
GPR[SPVAP]-1661302794479
GPR[EPVAP]-1661302795423
GPR[EPVS]-1661302795423
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
ret=((f1+0.5)*FastMath.log(atol))-atol+HALF_LOG_2_PI+FastMath.log(f0/f1);
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302795424
GPR[SPVAP]-1661302795424
GPR[EPVAP]-1661302796356
GPR[EPVS]-1661302796356
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
sum=f0+LANCZOS[0];
ret=((f1+0.5)*FastMath.log(atol))-atol+HALF_LOG_2_PI+FastMath.log(f0/f1);

swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302796357
GPR[SPVAP]-1661302796357
GPR[EPVAP]-1661302797285
GPR[EPVS]-1661302797285
========
if(x1!=x){
return x;
}
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302797289
GPR[SPVAP]-1661302797289
GPR[EPVAP]-1661302798244
GPR[EPVS]-1661302798244
========
if(x1>=TWO_POWER_52||x<=-TWO_POWER_52){
return x;
}
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302798246
GPR[SPVAP]-1661302798246
GPR[EPVAP]-1661302799197
GPR[EPVS]-1661302799197
========
if(f1*fx<0){
x0=epsilon;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302799198
GPR[SPVAP]-1661302799198
GPR[EPVAP]-1661302800133
GPR[EPVS]-1661302800133
========
if(f1*fx<0){
x0=fx1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302800134
GPR[SPVAP]-1661302800134
GPR[EPVAP]-1661302801080
GPR[EPVS]-1661302801080
========
if(f1*fx<0){
if(Double.isInfinite(atol)){
return atol;
}
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302801081
GPR[SPVAP]-1661302801081
GPR[EPVAP]-1661302802028
GPR[EPVS]-1661302802028
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
epsilon=x0*fx;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302802029
GPR[SPVAP]-1661302802029
GPR[EPVAP]-1661302802969
GPR[EPVS]-1661302802969
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
return x0+hiPrec[1];
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302802970
GPR[SPVAP]-1661302802970
GPR[EPVAP]-1661302803905
GPR[EPVS]-1661302803905
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
epsilon=x0*fx;
return x0+hiPrec[1];

swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302803906
GPR[SPVAP]-1661302803906
GPR[EPVAP]-1661302804850
GPR[EPVS]-1661302804850
========
if(f1*TWO_POWER_52<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302804853
GPR[SPVAP]-1661302804853
GPR[EPVAP]-1661302805789
GPR[EPVS]-1661302805789
========
if(y*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302805792
GPR[SPVAP]-1661302805792
GPR[EPVAP]-1661302806725
GPR[EPVS]-1661302806725
========
if(x1<0||x>1){
throw new OutOfRangeException(x,0,1);
}
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302806726
GPR[SPVAP]-1661302806726
GPR[EPVAP]-1661302807663
GPR[EPVS]-1661302807663
========
if(f1*fx<0){
x0=ab;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302807666
GPR[SPVAP]-1661302807666
GPR[EPVAP]-1661302808596
GPR[EPVS]-1661302808596
========
if(f1*fx<0){
x0=x1;
f0=ya;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302808597
GPR[SPVAP]-1661302808597
GPR[EPVAP]-1661302809553
GPR[EPVS]-1661302809553
========
if(f1*fx<0){
x0=x1;
f0=xb;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302809554
GPR[SPVAP]-1661302809554
GPR[EPVAP]-1661302810480
GPR[EPVS]-1661302810480
========
if(f1*fx<0){
x0=x1;
f0=yb;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302810481
GPR[SPVAP]-1661302810481
GPR[EPVAP]-1661302811423
GPR[EPVS]-1661302811423
========
if(f1*fx<0){
x0=x1;
f0=xa;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302811424
GPR[SPVAP]-1661302811424
GPR[EPVAP]-1661302812366
GPR[EPVS]-1661302812366
========
if(f1*fx<0){
xa=f1-1.0+f1-1.0*HEX_40000000-tmp;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302812367
GPR[SPVAP]-1661302812367
GPR[EPVAP]-1661302813297
GPR[EPVS]-1661302813297
========
if(f1*fx<0){
aa=LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]*f1-1.0;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302813298
GPR[SPVAP]-1661302813298
GPR[EPVAP]-1661302814249
GPR[EPVS]-1661302814249
========
if(f1*fx<0){
ab=LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]*x0+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1]*f1-1.0+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1]*x0;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302814250
GPR[SPVAP]-1661302814250
GPR[EPVAP]-1661302815201
GPR[EPVS]-1661302815201
========
if(f1*fx<0){
tmp=f1-1.0+f1-1.0*HEX_40000000-tmp*HEX_40000000;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302815202
GPR[SPVAP]-1661302815202
GPR[EPVAP]-1661302816144
GPR[EPVS]-1661302816144
========
if(f1*fx<0){
ya=f1-1.0+f1-1.0*HEX_40000000-tmp+f1-1.0*HEX_40000000-f1-1.0*HEX_40000000;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302816146
GPR[SPVAP]-1661302816146
GPR[EPVAP]-1661302817083
GPR[EPVS]-1661302817083
========
if(f1*fx<0){
yb=f1-1.0+f1-1.0*HEX_40000000-tmp-LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]+f0;
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302817085
GPR[SPVAP]-1661302817085
GPR[EPVAP]-1661302818020
GPR[EPVS]-1661302818020
========
if(f1*fx<0){
xa=f1-1.0+f1-1.0*HEX_40000000-tmp;
aa=LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]*f1-1.0;
ab=LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]*x0+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1]*f1-1.0+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1]*x0;
tmp=f1-1.0+f1-1.0*HEX_40000000-tmp*HEX_40000000;
ya=f1-1.0+f1-1.0*HEX_40000000-tmp+f1-1.0*HEX_40000000-f1-1.0*HEX_40000000;
yb=f1-1.0+f1-1.0*HEX_40000000-tmp-LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]+f0;

x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302818021
GPR[SPVAP]-1661302818021
GPR[EPVAP]-1661302818971
GPR[EPVS]-1661302818971
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
xa=f1-1.0+f1-1.0*HEX_40000000-tmp;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302818973
GPR[SPVAP]-1661302818973
GPR[EPVAP]-1661302819912
GPR[EPVS]-1661302819912
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
xb=f0;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302819913
GPR[SPVAP]-1661302819913
GPR[EPVAP]-1661302820845
GPR[EPVS]-1661302820845
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
aa=LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]*f1-1.0;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302820846
GPR[SPVAP]-1661302820846
GPR[EPVAP]-1661302821793
GPR[EPVS]-1661302821793
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
ab=LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]*x0+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1]*f1-1.0+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1]*x0;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302821794
GPR[SPVAP]-1661302821794
GPR[EPVAP]-1661302822723
GPR[EPVS]-1661302822723
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
tmp=f1-1.0+f1-1.0*HEX_40000000-tmp*HEX_40000000;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302822724
GPR[SPVAP]-1661302822724
GPR[EPVAP]-1661302823661
GPR[EPVS]-1661302823661
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
ya=f1-1.0+f1-1.0*HEX_40000000-tmp+f1-1.0*HEX_40000000-f1-1.0*HEX_40000000;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302823662
GPR[SPVAP]-1661302823662
GPR[EPVAP]-1661302824589
GPR[EPVS]-1661302824589
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
yb=f1-1.0+f1-1.0*HEX_40000000-tmp-LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]+f0;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302824590
GPR[SPVAP]-1661302824590
GPR[EPVAP]-1661302825521
GPR[EPVS]-1661302825522
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
return LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1];
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302825523
GPR[SPVAP]-1661302825523
GPR[EPVAP]-1661302826466
GPR[EPVS]-1661302826466
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
xa=f1-1.0+f1-1.0*HEX_40000000-tmp;
xb=f0;
aa=LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]*f1-1.0;
ab=LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]*x0+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1]*f1-1.0+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1]*x0;
tmp=f1-1.0+f1-1.0*HEX_40000000-tmp*HEX_40000000;
ya=f1-1.0+f1-1.0*HEX_40000000-tmp+f1-1.0*HEX_40000000-f1-1.0*HEX_40000000;
yb=f1-1.0+f1-1.0*HEX_40000000-tmp-LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]+f0;
return LN_QUICK_COEF[LN_QUICK_COEF.length-1][0]+LN_QUICK_COEF[LN_QUICK_COEF.length-1][1];

swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302826467
GPR[SPVAP]-1661302826467
GPR[EPVAP]-1661302827392
GPR[EPVS]-1661302827392
========
if(f1*threshold<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302827395
GPR[SPVAP]-1661302827395
GPR[EPVAP]-1661302828335
GPR[EPVS]-1661302828335
========
if(DEFAULT_ABSOLUTE_ACCURACY<0||z>1){
throw new OutOfRangeException(z,0,1);
}
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302828337
GPR[SPVAP]-1661302828337
GPR[EPVAP]-1661302829274
GPR[EPVS]-1661302829274
========
if(x1<0||x>1){
throw new OutOfRangeException(x,0,1);
}
if(y*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302829275
GPR[SPVAP]-1661302829275
GPR[EPVAP]-1661302830203
GPR[EPVS]-1661302830203
========
DEFAULT_ABSOLUTE_ACCURACY=est*DEFAULT_ABSOLUTE_ACCURACY+0.08758627;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302830206
GPR[SPVAP]-1661302830206
GPR[EPVAP]-1661302831176
GPR[EPVS]-1661302831176
========
DEFAULT_ABSOLUTE_ACCURACY=est*DEFAULT_ABSOLUTE_ACCURACY+-0.30580157;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302831178
GPR[SPVAP]-1661302831178
GPR[EPVAP]-1661302832105
GPR[EPVS]-1661302832105
========
DEFAULT_ABSOLUTE_ACCURACY=est*DEFAULT_ABSOLUTE_ACCURACY+0.72499955;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302832106
GPR[SPVAP]-1661302832106
GPR[EPVAP]-1661302833045
GPR[EPVS]-1661302833045
========
DEFAULT_ABSOLUTE_ACCURACY=est*DEFAULT_ABSOLUTE_ACCURACY+0.50390184;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302833046
GPR[SPVAP]-1661302833046
GPR[EPVAP]-1661302834011
GPR[EPVS]-1661302834011
========
DEFAULT_ABSOLUTE_ACCURACY+=(x/(x1*p2)-est*est)/(3*est);
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302834012
GPR[SPVAP]-1661302834012
GPR[EPVAP]-1661302834964
GPR[EPVS]-1661302834964
========
DEFAULT_ABSOLUTE_ACCURACY=-0.010714691+-0.010714691*HEX_40000000-temp*ya*HEX_40000000;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302834966
GPR[SPVAP]-1661302834966
GPR[EPVAP]-1661302835905
GPR[EPVS]-1661302835905
========
x0+=-0.010714691+-0.010714691*HEX_40000000-temp*ya-rtol;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302835906
GPR[SPVAP]-1661302835906
GPR[EPVAP]-1661302836838
GPR[EPVS]-1661302836838
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
return f1+1.0;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302836841
GPR[SPVAP]-1661302836841
GPR[EPVAP]-1661302837789
GPR[EPVS]-1661302837789
========
if(fx<0.5){
return f1;
}
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302837790
GPR[SPVAP]-1661302837790
GPR[EPVAP]-1661302838735
GPR[EPVS]-1661302838735
========
if(f1*fx<0){
shpi0=((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6==0)?0:(RECIP_2PI[idx-1]<<(int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023-((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6<<6));
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302838745
GPR[SPVAP]-1661302838745
GPR[EPVAP]-1661302839676
GPR[EPVS]-1661302839676
========
if(f1*fx<0){
shpi0|=RECIP_2PI[idx]>>>(64-(int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023-((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6<<6));
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302839677
GPR[SPVAP]-1661302839677
GPR[EPVAP]-1661302840640
GPR[EPVS]-1661302840640
========
if(f1*fx<0){
shpiA=(RECIP_2PI[idx]<<(int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023-((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6<<6))|(RECIP_2PI[idx+1]>>>(64-(int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023-((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6<<6)));
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302840641
GPR[SPVAP]-1661302840641
GPR[EPVAP]-1661302841577
GPR[EPVS]-1661302841577
========
if(f1*fx<0){
shpi0=((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6==0)?0:(RECIP_2PI[idx-1]<<(int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023-((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6<<6));
shpi0|=RECIP_2PI[idx]>>>(64-(int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023-((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6<<6));
shpiA=(RECIP_2PI[idx]<<(int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023-((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6<<6))|(RECIP_2PI[idx+1]>>>(64-(int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023-((int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023>>6<<6)));

x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302841578
GPR[SPVAP]-1661302841578
GPR[EPVAP]-1661302842531
GPR[EPVS]-1661302842531
========
(int)((Double.doubleToLongBits(atol)>>52)&0x7ff)-1023++;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302842532
GPR[SPVAP]-1661302842532
GPR[EPVAP]-1661302843475
GPR[EPVS]-1661302843476
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
return 0.0;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302843481
GPR[SPVAP]-1661302843481
GPR[EPVAP]-1661302844424
GPR[EPVS]-1661302844424
========
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
return Double.POSITIVE_INFINITY;
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302844425
GPR[SPVAP]-1661302844425
GPR[EPVAP]-1661302845355
GPR[EPVS]-1661302845355
========
new double[2][0]=ys[1]=0.0;
if(f1*fx<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302845365
GPR[SPVAP]-1661302845365
GPR[EPVAP]-1661302846323
GPR[EPVS]-1661302846323
========
if(y*y<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302846329
GPR[SPVAP]-1661302846329
GPR[EPVAP]-1661302847294
GPR[EPVS]-1661302847294
========
if(f1*y<0){
x0=x1;
f0=f1;
inverted=!inverted;
}else {
swtich (method){
case ABOVE_SIDE :
if(fx>=0){
return x1;
}
break;

default :
throw new MathInternalError();


case ILLINOIS :
f0*=0.5;
break;

case PEGASUS :
f0*=f1/(f1+fx);
break;

case REGULA_FALSI :
if(x==x1){
x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;

default :
throw new MathInternalError();


}
}

========
GPR[SPVS]-1661302847295
GPR[SPVAP]-1661302847295
GPR[EPVAP]-1661302848221
GPR[EPVS]-1661302848221
GPR[ESUN]-1661302848231
GPR[SSUN]-1661302848231
org.apache.commons.math.analysis.solvers.BaseSecantSolver,174
========
if(fx==0.0){
return x1;
}
x0=x1;
f0=f1;
inverted=!inverted;

========
GPR[SPVS]-1661302849883
GPR[SPVAP]-1661302849883
GPR[EPVAP]-1661302855191
GPR[SPVATF]-1661302855191
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302857090
GPR[EPVS]-1661302857090
========
x1=x1;
x0=x1;
f0=f1;
inverted=!inverted;

========
GPR[SPVS]-1661302857091
GPR[SPVAP]-1661302857091
GPR[EPVAP]-1661302859025
GPR[SPVATF]-1661302859025
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302860907
GPR[EPVS]-1661302860907
========
f1=fx;
x0=x1;
f0=f1;
inverted=!inverted;

========
GPR[SPVS]-1661302860908
GPR[SPVAP]-1661302860908
GPR[EPVAP]-1661302862791
GPR[SPVATF]-1661302862791
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302864702
GPR[SPVATR]-1661302864703
TESTING : math_50
GPR[EPVATR]-1661302893269
GPR[EPVS]-1661302893269
========
if(fx==0.0){
return x1;
}
x1=x1;
x0=x1;
f0=f1;
inverted=!inverted;

========
GPR[SPVS]-1661302893271
GPR[SPVAP]-1661302893271
GPR[EPVAP]-1661302895216
GPR[SPVATF]-1661302895216
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302897123
GPR[EPVS]-1661302897123
========
if(fx==0.0){
return x1;
}
f1=fx;
x0=x1;
f0=f1;
inverted=!inverted;

========
GPR[SPVS]-1661302897124
GPR[SPVAP]-1661302897124
GPR[EPVAP]-1661302899058
GPR[SPVATF]-1661302899058
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302900961
GPR[SPVATR]-1661302900961
TESTING : math_50
GPR[EPVATR]-1661302928574
GPR[EPVS]-1661302928574
========
x1=x1;
f1=fx;
x0=x1;
f0=f1;
inverted=!inverted;

========
GPR[SPVS]-1661302928575
GPR[SPVAP]-1661302928575
GPR[EPVAP]-1661302930504
GPR[SPVATF]-1661302930504
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302932397
GPR[SPVATR]-1661302932398
TESTING : math_50
GPR[EPVATR]-1661302959987
GPR[EPVS]-1661302959987
========
if(fx==0.0){
return x1;
}
x1=x1;
f1=fx;
x0=x1;
f0=f1;
inverted=!inverted;

========
GPR[SPVS]-1661302959989
GPR[SPVAP]-1661302959989
GPR[EPVAP]-1661302961927
GPR[SPVATF]-1661302961927
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302963802
GPR[SPVATR]-1661302963803
TESTING : math_50
GPR[EPVATR]-1661302991446
GPR[EPVS]-1661302991446
========
x0=x1;
f0=fx;
inverted=!inverted;

========
GPR[SPVS]-1661302991448
GPR[SPVAP]-1661302991448
GPR[EPVAP]-1661302993356
GPR[SPVATF]-1661302993356
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661302995239
GPR[SPVATR]-1661302995239
TESTING : math_50
GPR[EPVATR]-1661303022794
GPR[EPVS]-1661303022794
========
case REGULA_FALSI :

x0=x1;
f0=f1;
inverted=!inverted;

========
GPR[SPVS]-1661303022795
GPR[SPVAP]-1661303022795
GPR[EPVAP]-1661303023741
GPR[EPVS]-1661303023741
========
x0=x0;
f0=f1;
inverted=!inverted;

========
GPR[SPVS]-1661303023743
GPR[SPVAP]-1661303023743
GPR[EPVAP]-1661303025661
GPR[SPVATF]-1661303025661
TESTING : org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest::testIssue631
GPR[EPVATF]-1661303027553
GPR[SPVATR]-1661303027554
TESTING : math_50
GPR[EPVATR]-1661319451855
GPR[EPVS]-1661319451855
========
x0=x1;
f0=y1;
inverted=!inverted;

========
End running Math/50 results at /experiment_home///results/SimFix/Math/50/seed_282/
\n\nNode: host-58\n
\n\nDate: Tue 23 Aug 2022 10:37:31 PM PDT\n
Removing checked out dir script/workingdir/SimFix/math/math_50_buggy
Killing all java process
GPR[SSLE]-1661319452775
GPR[ESLE]-1661319512781
