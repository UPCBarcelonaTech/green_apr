Sleep 1m start
GPR[SSLI]-1659847468700
GPR[ESLI]-1659847528704
Running SimFix Chart 12b
Timezone: America/Los_Angeles
Seed 260
Java 8: /experiment_home/jdk1.8.0_45/bin 
DEFECTS4J_HOME: /experiment_home/defects4j/
Creating out dir /experiment_home///results/SimFix/Chart/12/seed_260/
Project lc: chart
New out script/workingdir/SimFix/chart/chart_12_buggy
The file script/workingdir/SimFix/chart/chart_12_buggy does not exist!
script/workingdir/SimFix/chart/chart_12_buggy
Current directory: script/workingdir/SimFix/chart/chart_12_buggy
classpath:  script/workingdir/SimFix/chart/chart_12_buggy/lib/servlet.jar:/experiment_home/defects4j/framework/projects/lib/junit-4.11.jar:script/workingdir/SimFix/chart/chart_12_buggy/build:script/workingdir/SimFix/chart/chart_12_buggy/build-tests
Src java:  /source
Classes Java:  /build
Src Test:  /tests
Classes Test:  /build-tests
GPR[SSLB]-1659847547057
GPR[ESLB]-1659847607060
Calling SimFix: at script/workingdir/SimFix/chart/chart_12_buggy
ant
build
build-tests
ChangeLog
checkstyle
d4j-info
defects4j.build.properties
experimental
lib
licence-LGPL.txt
maven-jfreechart-project.xml
NEWS
README.txt
source
swt
tests
content current dir: ant build build-tests ChangeLog checkstyle d4j-info defects4j.build.properties experimental lib licence-LGPL.txt maven-jfreechart-project.xml NEWS README.txt source swt tests
Node: host-75
Date init: Sat 06 Aug 2022 09:46:49 PM PDT
OAR_JOB_ID: 3720517
script/workingdir/SimFix/
GPR[SSUP]-1659847609347
=================================================
Project : chart_12	start : 22/08/06 21:46

GPR[ESUP]-1659847612161
MM Purify? false
GPR[SFL]-1659847612730
GPR[EFL]-1659847612772
GPR[SFP]-1659847612772
TIMEOUT : 18000000
GPR[SSUN]-1659847612781
org.jfree.chart.plot.MultiplePiePlot,166
GPR[ESUN]-1659847614892
GPR[SSUN]-1659847614892
org.jfree.chart.plot.MultiplePiePlot,135
GPR[ESUN]-1659847616613
GPR[SSUN]-1659847616613
org.jfree.chart.plot.MultiplePiePlot,136
Find no block!
GPR[SSUN]-1659847616905
org.jfree.data.general.AbstractDataset,160
========
List list=Arrays.asList(this.listenerList.getListenerList());
return list.unmodifiableList(listener);

========
MM Copying to MM
GPR[SPVS]-1659847618815
GPR[SPVAP]-1659847618815
GPR[EPVAP]-1659847620611
GPR[EPVS]-1659847620611
GPR[ESUN]-1659847620620
GPR[SSUN]-1659847620621
org.jfree.data.general.AbstractDataset,161
GPR[ESUN]-1659847620951
GPR[SSUN]-1659847620951
org.jfree.chart.plot.MultiplePiePlot,144
========
this.pieChart=new JFreeChart(piePlot);
super();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847622970
GPR[SPVAP]-1659847622970
GPR[EPVAP]-1659847625079
GPR[EPVS]-1659847625079
========
super();
if(dataset==null){
throw new IllegalArgumentException("Null \'dataset\' argument.");
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847625081
GPR[SPVAP]-1659847625081
GPR[EPVAP]-1659847628974
GPR[SPVATF]-1659847628974
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847630065
GPR[EPVS]-1659847630065
========
this.aggregatedItemsKey=rowKey;
super();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847630067
GPR[SPVAP]-1659847630067
GPR[EPVAP]-1659847630836
GPR[EPVS]-1659847630836
========
this.aggregatedItemsKey=columnKey;
super();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847630837
GPR[SPVAP]-1659847630838
GPR[EPVAP]-1659847631608
GPR[EPVS]-1659847631608
========
new ChartPanel(createChart(dataset),false).setPreferredSize(new Dimension(500,270));
super();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847631610
GPR[SPVAP]-1659847631610
GPR[EPVAP]-1659847632347
GPR[EPVS]-1659847632347
========
setContentPane(new ChartPanel(createChart(dataset),false));
super();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847632348
GPR[SPVAP]-1659847632349
GPR[EPVAP]-1659847633148
GPR[EPVS]-1659847633151
========
super();
if(dataExtractOrder==null){
throw new IllegalArgumentException("Null \'extract\' argument.");
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847633153
GPR[SPVAP]-1659847633153
GPR[EPVAP]-1659847634466
GPR[SPVATF]-1659847634466
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847635596
GPR[EPVS]-1659847635596
========
if(dataset!=null){
dataset.addChangeListener(this);
}
super();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847635598
GPR[SPVAP]-1659847635598
GPR[EPVAP]-1659847638136
GPR[EPVS]-1659847638136
========
super();
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847638138
GPR[SPVAP]-1659847638138
GPR[EPVAP]-1659847639398
GPR[SPVATF]-1659847639399
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847640523
GPR[EPVS]-1659847640523
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
super();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847640525
GPR[SPVAP]-1659847640525
GPR[EPVAP]-1659847641278
GPR[EPVS]-1659847641278
========
datasetChanged(new DatasetChangeEvent(this,dataset));
super();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847641279
GPR[SPVAP]-1659847641279
GPR[EPVAP]-1659847642028
GPR[EPVS]-1659847642028
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
super();
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847642035
GPR[SPVAP]-1659847642035
GPR[EPVAP]-1659847642799
GPR[EPVS]-1659847642799
========
datasetChanged(new DatasetChangeEvent(this,dataset));
super();
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847642800
GPR[SPVAP]-1659847642800
GPR[EPVAP]-1659847643558
GPR[EPVS]-1659847643558
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset));
super();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847643559
GPR[SPVAP]-1659847643559
GPR[EPVAP]-1659847644313
GPR[EPVS]-1659847644313
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset));
super();
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);

========
MM Copying to MM
GPR[SPVS]-1659847644314
GPR[SPVAP]-1659847644314
GPR[EPVAP]-1659847645083
GPR[EPVS]-1659847645083
GPR[ESUN]-1659847645084
GPR[SSUN]-1659847645084
org.jfree.chart.plot.MultiplePiePlot,111
Find no block!
GPR[SSUN]-1659847645546
org.jfree.chart.plot.MultiplePiePlot,145
GPR[ESUN]-1659847645864
GPR[SSUN]-1659847645864
org.jfree.chart.plot.MultiplePiePlot,146
========
this.pieChart.removeLegend();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847647792
GPR[SPVAP]-1659847647792
GPR[EPVAP]-1659847652077
GPR[SPVATF]-1659847652077
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847653185
GPR[EPVS]-1659847653185
========
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847653186
GPR[SPVAP]-1659847653186
GPR[EPVAP]-1659847654469
GPR[SPVATF]-1659847654469
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847655633
GPR[EPVS]-1659847655633
========
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847655635
GPR[SPVAP]-1659847655635
GPR[EPVAP]-1659847656902
GPR[SPVATF]-1659847656902
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847657995
GPR[EPVS]-1659847657995
========
if(dataset==null){
throw new IllegalArgumentException("Null \'dataset\' argument.");
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847657997
GPR[SPVAP]-1659847657997
GPR[EPVAP]-1659847659264
GPR[SPVATF]-1659847659264
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847660357
GPR[EPVS]-1659847660357
========
if(dataExtractOrder==null){
throw new IllegalArgumentException("Null \'extract\' argument.");
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847660361
GPR[SPVAP]-1659847660361
GPR[EPVAP]-1659847661656
GPR[SPVATF]-1659847661656
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847662805
GPR[EPVS]-1659847662805
========
if(dataset!=null){
dataset.addChangeListener(this);
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847662806
GPR[SPVAP]-1659847662806
GPR[EPVAP]-1659847664088
GPR[SPVATF]-1659847664088
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 0
GPR[EPVATF]-1659847665234
GPR[SPVATR]-1659847665234
TESTING : chart_12
MM messageFailing tests: 0
GPR[EPVATR]-1659847675646
GPR[EPVS]-1659847675646
GPR[PF]-1659847675646
sourceFile  script/workingdir/SimFix/chart/chart_12_buggy/source/org/jfree/chart/plot/MultiplePiePlot.java
location   script/workingdir/SimFix/chart/chart_12_buggy
MM Out patch at /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_62877_1_ts_1659847675646.diff
MM Command diff diff -w -b  --label=/source/org/jfree/chart/plot/MultiplePiePlot.java --label=/source/org/jfree/chart/plot/MultiplePiePlot.java /tmp/tmpDirMM7328568830735706410/MultiplePiePlot.java  /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/1_MultiplePiePlot.java  --unified=3  > /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_62877_1_ts_1659847675646.diff
MMOut command diff: []
========
this.aggregatedItemsKey=rowKey;
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847675656
GPR[SPVAP]-1659847675656
GPR[EPVAP]-1659847676423
GPR[EPVS]-1659847676423
========
this.aggregatedItemsKey=columnKey;
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847676424
GPR[SPVAP]-1659847676424
GPR[EPVAP]-1659847677191
GPR[EPVS]-1659847677191
========
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847677193
GPR[SPVAP]-1659847677193
GPR[EPVAP]-1659847678461
GPR[SPVATF]-1659847678462
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847679607
GPR[EPVS]-1659847679607
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847679608
GPR[SPVAP]-1659847679608
GPR[EPVAP]-1659847680923
GPR[SPVATF]-1659847680923
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 0
GPR[EPVATF]-1659847682060
GPR[SPVATR]-1659847682060
TESTING : chart_12
MM messageFailing tests: 0
GPR[EPVATR]-1659847692479
GPR[EPVS]-1659847692479
GPR[PF]-1659847692479
sourceFile  script/workingdir/SimFix/chart/chart_12_buggy/source/org/jfree/chart/plot/MultiplePiePlot.java
location   script/workingdir/SimFix/chart/chart_12_buggy
MM Out patch at /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_79708_2_ts_1659847692479.diff
MM Command diff diff -w -b  --label=/source/org/jfree/chart/plot/MultiplePiePlot.java --label=/source/org/jfree/chart/plot/MultiplePiePlot.java /tmp/tmpDirMM923988468460386144/MultiplePiePlot.java  /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/2_MultiplePiePlot.java  --unified=3  > /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_79708_2_ts_1659847692479.diff
MMOut command diff: []
========
datasetChanged(new DatasetChangeEvent(this,dataset));
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847692486
GPR[SPVAP]-1659847692486
GPR[EPVAP]-1659847693736
GPR[SPVATF]-1659847693736
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847694879
GPR[EPVS]-1659847694879
========
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset));
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847694880
GPR[SPVAP]-1659847694880
GPR[EPVAP]-1659847696157
GPR[SPVATF]-1659847696158
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847697307
GPR[EPVS]-1659847697308
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)).setPosition(RectangleEdge.BOTTOM);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847697313
GPR[SPVAP]-1659847697313
GPR[EPVAP]-1659847698612
GPR[SPVATF]-1659847698612
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847699748
GPR[EPVS]-1659847699748
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847699750
GPR[SPVAP]-1659847699750
GPR[EPVAP]-1659847701001
GPR[SPVATF]-1659847701001
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847702135
GPR[EPVS]-1659847702135
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.aggregatedItemsKey="Other";
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847702136
GPR[SPVAP]-1659847702136
GPR[EPVAP]-1659847703416
GPR[SPVATF]-1659847703416
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847704576
GPR[EPVS]-1659847704576
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)).setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847704577
GPR[SPVAP]-1659847704577
GPR[EPVAP]-1659847705840
GPR[SPVATF]-1659847705840
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847706957
GPR[EPVS]-1659847706957
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)).setPosition(RectangleEdge.BOTTOM);
this.aggregatedItemsKey="Other";
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847706958
GPR[SPVAP]-1659847706958
GPR[EPVAP]-1659847709853
GPR[SPVATF]-1659847709853
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847710996
GPR[EPVS]-1659847710996
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
this.aggregatedItemsKey="Other";
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847710997
GPR[SPVAP]-1659847710997
GPR[EPVAP]-1659847712253
GPR[SPVATF]-1659847712253
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847713384
GPR[EPVS]-1659847713384
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)).setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
this.aggregatedItemsKey="Other";
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847713386
GPR[SPVAP]-1659847713386
GPR[EPVAP]-1659847714677
GPR[SPVATF]-1659847714677
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847715788
GPR[EPVS]-1659847715788
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847715790
GPR[SPVAP]-1659847715790
GPR[EPVAP]-1659847717050
GPR[SPVATF]-1659847717050
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847718151
GPR[EPVS]-1659847718151
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847718152
GPR[SPVAP]-1659847718152
GPR[EPVAP]-1659847719399
GPR[SPVATF]-1659847719400
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847720551
GPR[EPVS]-1659847720551
========
fireChangeEvent();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847720553
GPR[SPVAP]-1659847720553
GPR[EPVAP]-1659847721834
GPR[SPVATF]-1659847721834
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847722987
GPR[EPVS]-1659847722987
========
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847722988
GPR[SPVAP]-1659847722988
GPR[EPVAP]-1659847724249
GPR[SPVATF]-1659847724250
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847725377
GPR[EPVS]-1659847725377
========
fireChangeEvent();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847725378
GPR[SPVAP]-1659847725378
GPR[EPVAP]-1659847726644
GPR[SPVATF]-1659847726645
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847727781
GPR[EPVS]-1659847727781
========
fireChangeEvent();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847727783
GPR[SPVAP]-1659847727783
GPR[EPVAP]-1659847729042
GPR[SPVATF]-1659847729043
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847730200
GPR[EPVS]-1659847730200
========
fireChangeEvent();
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847730202
GPR[SPVAP]-1659847730202
GPR[EPVAP]-1659847731471
GPR[SPVATF]-1659847731471
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847732602
GPR[EPVS]-1659847732602
========
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847732604
GPR[SPVAP]-1659847732604
GPR[EPVAP]-1659847733869
GPR[SPVATF]-1659847733870
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 0
GPR[EPVATF]-1659847734994
GPR[SPVATR]-1659847734995
TESTING : chart_12
MM messageFailing tests: 0
GPR[EPVATR]-1659847745302
GPR[EPVS]-1659847745302
GPR[PF]-1659847745302
sourceFile  script/workingdir/SimFix/chart/chart_12_buggy/source/org/jfree/chart/plot/MultiplePiePlot.java
location   script/workingdir/SimFix/chart/chart_12_buggy
MM Out patch at /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_132532_3_ts_1659847745302.diff
MM Command diff diff -w -b  --label=/source/org/jfree/chart/plot/MultiplePiePlot.java --label=/source/org/jfree/chart/plot/MultiplePiePlot.java /tmp/tmpDirMM4748397900074533479/MultiplePiePlot.java  /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/3_MultiplePiePlot.java  --unified=3  > /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_132532_3_ts_1659847745302.diff
MMOut command diff: []
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset));
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847745311
GPR[SPVAP]-1659847745311
GPR[EPVAP]-1659847746593
GPR[SPVATF]-1659847746593
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 0
GPR[EPVATF]-1659847747746
GPR[SPVATR]-1659847747746
TESTING : chart_12
MM messageFailing tests: 0
GPR[EPVATR]-1659847757785
GPR[EPVS]-1659847757785
GPR[PF]-1659847757785
sourceFile  script/workingdir/SimFix/chart/chart_12_buggy/source/org/jfree/chart/plot/MultiplePiePlot.java
location   script/workingdir/SimFix/chart/chart_12_buggy
MM Out patch at /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_145014_4_ts_1659847757785.diff
MM Command diff diff -w -b  --label=/source/org/jfree/chart/plot/MultiplePiePlot.java --label=/source/org/jfree/chart/plot/MultiplePiePlot.java /tmp/tmpDirMM4799226288154069584/MultiplePiePlot.java  /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/4_MultiplePiePlot.java  --unified=3  > /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_145014_4_ts_1659847757785.diff
MMOut command diff: []
========
if(this.dataset!=null){
this.dataset.removeChangeListener(this);
}
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
datasetChanged(new DatasetChangeEvent(this,dataset));
this.dataset=dataset;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);

========
MM Copying to MM
GPR[SPVS]-1659847757793
GPR[SPVAP]-1659847757793
GPR[EPVAP]-1659847759045
GPR[SPVATF]-1659847759045
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 0
GPR[EPVATF]-1659847760201
GPR[SPVATR]-1659847760202
TESTING : chart_12
MM messageFailing tests: 0
GPR[EPVATR]-1659847770384
GPR[EPVS]-1659847770384
GPR[PF]-1659847770384
sourceFile  script/workingdir/SimFix/chart/chart_12_buggy/source/org/jfree/chart/plot/MultiplePiePlot.java
location   script/workingdir/SimFix/chart/chart_12_buggy
MM Out patch at /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_157614_5_ts_1659847770384.diff
MM Command diff diff -w -b  --label=/source/org/jfree/chart/plot/MultiplePiePlot.java --label=/source/org/jfree/chart/plot/MultiplePiePlot.java /tmp/tmpDirMM6751421088326198466/MultiplePiePlot.java  /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/5_MultiplePiePlot.java  --unified=3  > /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_157614_5_ts_1659847770384.diff
MMOut command diff: []
GPR[ESUN]-1659847770394
GPR[SSUN]-1659847770394
org.jfree.chart.plot.MultiplePiePlot,147
========
PiePlot piePlot=new PiePlot(null);
super();
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847772429
GPR[SPVAP]-1659847772429
GPR[EPVAP]-1659847774497
GPR[EPVS]-1659847774497
========
PiePlot piePlot=new PiePlot(null);
this.dataset=dataset;
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847774498
GPR[SPVAP]-1659847774498
GPR[EPVAP]-1659847778229
GPR[SPVATF]-1659847778229
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847779428
GPR[EPVS]-1659847779428
========
pieChart.removeLegend();
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847779430
GPR[SPVAP]-1659847779430
GPR[EPVAP]-1659847782758
GPR[SPVATF]-1659847782758
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847783878
GPR[EPVS]-1659847783878
========
pieChart.setBackgroundPaint(null);
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847783880
GPR[SPVAP]-1659847783880
GPR[EPVAP]-1659847785151
GPR[SPVATF]-1659847785151
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847786301
GPR[EPVS]-1659847786301
========
pieChart.removeLegend();
pieChart.setBackgroundPaint(null);
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847786302
GPR[SPVAP]-1659847786302
GPR[EPVAP]-1659847787599
GPR[SPVATF]-1659847787599
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847788729
GPR[EPVS]-1659847788729
========
PiePlot piePlot=new PiePlot(null);
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847788730
GPR[SPVAP]-1659847788730
GPR[EPVAP]-1659847790049
GPR[SPVATF]-1659847790049
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847791179
GPR[EPVS]-1659847791179
========
PiePlot piePlot=new PiePlot(null);
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847791180
GPR[SPVAP]-1659847791180
GPR[EPVAP]-1659847792432
GPR[SPVATF]-1659847792432
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847793568
GPR[EPVS]-1659847793568
========
PiePlot piePlot=new PiePlot(null);
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847793569
GPR[SPVAP]-1659847793569
GPR[EPVAP]-1659847794820
GPR[SPVATF]-1659847794820
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847795929
GPR[EPVS]-1659847795929
========
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847795930
GPR[SPVAP]-1659847795931
GPR[EPVAP]-1659847797260
GPR[SPVATF]-1659847797260
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847798368
GPR[EPVS]-1659847798368
========
this.aggregatedItemsKey="Other";
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847798370
GPR[SPVAP]-1659847798370
GPR[EPVAP]-1659847799674
GPR[SPVATF]-1659847799674
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847800817
GPR[EPVS]-1659847800817
========
this.aggregatedItemsPaint=Color.lightGray;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847800818
GPR[SPVAP]-1659847800818
GPR[EPVAP]-1659847802100
GPR[SPVATF]-1659847802100
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847803246
GPR[EPVS]-1659847803246
========
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
this.aggregatedItemsKey="Other";
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847803247
GPR[SPVAP]-1659847803247
GPR[EPVAP]-1659847804504
GPR[SPVATF]-1659847804504
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847805609
GPR[EPVS]-1659847805609
========
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
this.aggregatedItemsPaint=Color.lightGray;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847805610
GPR[SPVAP]-1659847805610
GPR[EPVAP]-1659847806914
GPR[SPVATF]-1659847806914
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847808025
GPR[EPVS]-1659847808025
========
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847808027
GPR[SPVAP]-1659847808027
GPR[EPVAP]-1659847809296
GPR[SPVATF]-1659847809296
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847810417
GPR[EPVS]-1659847810417
========
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847810419
GPR[SPVAP]-1659847810419
GPR[EPVAP]-1659847811671
GPR[SPVATF]-1659847811671
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847812781
GPR[EPVS]-1659847812781
========
PiePlot piePlot=new PiePlot(null);
this.pieChart=new JFreeChart(piePlot);
if(aggregatedItemsKey.equals(this.aggregatedItemsKey)){
aggregatedItemsPaint=this.aggregatedItemsPaint;
}else {
p=(Paint)this.sectionPaints.get(key);
}
this.pieChart.removeLegend();

========
MM Copying to MM
GPR[SPVS]-1659847812783
GPR[SPVAP]-1659847812783
GPR[EPVAP]-1659847813524
GPR[EPVS]-1659847813524
GPR[ESUN]-1659847813524
GPR[SSUN]-1659847813524
org.jfree.chart.plot.MultiplePiePlot,148
========
this.dataset=dataset;
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847815471
GPR[SPVAP]-1659847815471
GPR[EPVAP]-1659847819779
GPR[SPVATF]-1659847819779
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847820911
GPR[EPVS]-1659847820911
========
pieChart.removeLegend();
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847820913
GPR[SPVAP]-1659847820913
GPR[EPVAP]-1659847822200
GPR[SPVATF]-1659847822200
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847823348
GPR[EPVS]-1659847823348
========
pieChart.setBackgroundPaint(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847823350
GPR[SPVAP]-1659847823350
GPR[EPVAP]-1659847824616
GPR[SPVATF]-1659847824616
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847825747
GPR[EPVS]-1659847825747
========
pieChart.removeLegend();
pieChart.setBackgroundPaint(null);
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847825748
GPR[SPVAP]-1659847825748
GPR[EPVAP]-1659847827008
GPR[SPVATF]-1659847827008
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847828139
GPR[EPVS]-1659847828139
========
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659847828141
GPR[SPVAP]-1659847828141
GPR[EPVAP]-1659847828919
GPR[EPVS]-1659847828919
========
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847828920
GPR[SPVAP]-1659847828920
GPR[EPVAP]-1659847830228
GPR[SPVATF]-1659847830228
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847831367
GPR[EPVS]-1659847831367
========
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.aggregatedItemsKey="Other";
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847831369
GPR[SPVAP]-1659847831369
GPR[EPVAP]-1659847832608
GPR[SPVATF]-1659847832608
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847833728
GPR[EPVS]-1659847833728
========
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.pieChart.setTitle(new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12)));
this.aggregatedItemsKey="Other";
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847833730
GPR[SPVAP]-1659847833730
GPR[EPVAP]-1659847835000
GPR[SPVATF]-1659847835000
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847836141
GPR[EPVS]-1659847836141
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847836142
GPR[SPVAP]-1659847836142
GPR[EPVAP]-1659847837436
GPR[SPVATF]-1659847837436
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847838580
GPR[EPVS]-1659847838580
========
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847838582
GPR[SPVAP]-1659847838582
GPR[EPVAP]-1659847839872
GPR[SPVATF]-1659847839872
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847841061
GPR[EPVS]-1659847841061
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847841062
GPR[SPVAP]-1659847841062
GPR[EPVAP]-1659847842339
GPR[SPVATF]-1659847842339
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847843449
GPR[EPVS]-1659847843449
========
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
if(dataset!=null){
dataset.addChangeListener(this);
}
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847843451
GPR[SPVAP]-1659847843451
GPR[EPVAP]-1659847844742
GPR[SPVATF]-1659847844742
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 0
GPR[EPVATF]-1659847845853
GPR[SPVATR]-1659847845853
TESTING : chart_12
MM messageFailing tests: 0
GPR[EPVATR]-1659847858356
GPR[EPVS]-1659847858356
GPR[PF]-1659847858356
sourceFile  script/workingdir/SimFix/chart/chart_12_buggy/source/org/jfree/chart/plot/MultiplePiePlot.java
location   script/workingdir/SimFix/chart/chart_12_buggy
MM Out patch at /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_245585_6_ts_1659847858356.diff
MM Command diff diff -w -b  --label=/source/org/jfree/chart/plot/MultiplePiePlot.java --label=/source/org/jfree/chart/plot/MultiplePiePlot.java /tmp/tmpDirMM4730990532175123166/MultiplePiePlot.java  /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/6_MultiplePiePlot.java  --unified=3  > /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_245585_6_ts_1659847858356.diff
MMOut command diff: []
========
this.limit=DEFAULT_HEAD;
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847858364
GPR[SPVAP]-1659847858364
GPR[EPVAP]-1659847859117
GPR[EPVS]-1659847859117
========
this.pieChart=new JFreeChart(piePlot);
if(aggregatedItemsKey.equals(this.aggregatedItemsKey)){
aggregatedItemsPaint=this.aggregatedItemsPaint;
}else {
p=(Paint)this.sectionPaints.get(key);
}
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659847859119
GPR[SPVAP]-1659847859119
GPR[EPVAP]-1659847859862
GPR[EPVS]-1659847859862
GPR[ESUN]-1659847859862
GPR[SSUN]-1659847859862
org.jfree.chart.plot.MultiplePiePlot,149
========
this.pieChart=new JFreeChart(piePlot);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847861865
GPR[SPVAP]-1659847861865
GPR[EPVAP]-1659847866160
GPR[SPVATF]-1659847866160
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847867364
GPR[EPVS]-1659847867364
========
pieChart.removeLegend();
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847867366
GPR[SPVAP]-1659847867366
GPR[EPVAP]-1659847868687
GPR[SPVATF]-1659847868687
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847869844
GPR[EPVS]-1659847869844
========
pieChart.setBackgroundPaint(null);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847869846
GPR[SPVAP]-1659847869846
GPR[EPVAP]-1659847871123
GPR[SPVATF]-1659847871123
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847872284
GPR[EPVS]-1659847872284
========
pieChart.removeLegend();
pieChart.setBackgroundPaint(null);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847872286
GPR[SPVAP]-1659847872286
GPR[EPVAP]-1659847873562
GPR[SPVATF]-1659847873563
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847874705
GPR[EPVS]-1659847874705
========
new MultiplePiePlot(dataset).setOutlineStroke(null);
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847874707
GPR[SPVAP]-1659847874707
GPR[EPVAP]-1659847876018
GPR[SPVATF]-1659847876018
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847877221
GPR[EPVS]-1659847877221
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847877222
GPR[SPVAP]-1659847877222
GPR[EPVAP]-1659847878556
GPR[SPVATF]-1659847878556
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847879701
GPR[EPVS]-1659847879701
========
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847879702
GPR[SPVAP]-1659847879702
GPR[EPVAP]-1659847880977
GPR[SPVATF]-1659847880977
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847882128
GPR[EPVS]-1659847882128
========
this.pieChart=pieChart;
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847882129
GPR[SPVAP]-1659847882129
GPR[EPVAP]-1659847883395
GPR[SPVATF]-1659847883395
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847884553
GPR[EPVS]-1659847884553
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847884554
GPR[SPVAP]-1659847884554
GPR[EPVAP]-1659847885817
GPR[SPVATF]-1659847885817
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847886956
GPR[EPVS]-1659847886956
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=pieChart;
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847886958
GPR[SPVAP]-1659847886958
GPR[EPVAP]-1659847888249
GPR[SPVATF]-1659847888250
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847889390
GPR[EPVS]-1659847889390
========
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847889391
GPR[SPVAP]-1659847889391
GPR[EPVAP]-1659847890656
GPR[SPVATF]-1659847890656
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847891794
GPR[EPVS]-1659847891794
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847891795
GPR[SPVAP]-1659847891795
GPR[EPVAP]-1659847893042
GPR[SPVATF]-1659847893042
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847894178
GPR[EPVS]-1659847894178
========
this.pieChart.removeLegend();
this.dataExtractOrder=Color.lightGray;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847894180
GPR[SPVAP]-1659847894180
GPR[EPVAP]-1659847894923
GPR[EPVS]-1659847894923
========
this.pieChart.removeLegend();
this.aggregatedItemsKey="Other";
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847894924
GPR[SPVAP]-1659847894924
GPR[EPVAP]-1659847896189
GPR[SPVATF]-1659847896189
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847897318
GPR[EPVS]-1659847897318
========
super();
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847897319
GPR[SPVAP]-1659847897319
GPR[EPVAP]-1659847898076
GPR[EPVS]-1659847898076
========
this.dataset=dataset;
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847898077
GPR[SPVAP]-1659847898077
GPR[EPVAP]-1659847899340
GPR[SPVATF]-1659847899340
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847900461
GPR[EPVS]-1659847900461
========
this.pieChart.removeLegend();
if(dataset!=null){
dataset.addChangeListener(this);
}
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847900463
GPR[SPVAP]-1659847900463
GPR[EPVAP]-1659847901718
GPR[SPVATF]-1659847901718
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 0
GPR[EPVATF]-1659847902857
GPR[SPVATR]-1659847902858
TESTING : chart_12
MM messageFailing tests: 0
GPR[EPVATR]-1659847913281
GPR[EPVS]-1659847913281
GPR[PF]-1659847913281
sourceFile  script/workingdir/SimFix/chart/chart_12_buggy/source/org/jfree/chart/plot/MultiplePiePlot.java
location   script/workingdir/SimFix/chart/chart_12_buggy
MM Out patch at /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_300511_7_ts_1659847913281.diff
MM Command diff diff -w -b  --label=/source/org/jfree/chart/plot/MultiplePiePlot.java --label=/source/org/jfree/chart/plot/MultiplePiePlot.java /tmp/tmpDirMM8434804894714483156/MultiplePiePlot.java  /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/7_MultiplePiePlot.java  --unified=3  > /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_300511_7_ts_1659847913281.diff
MMOut command diff: []
========
this.limit=DEFAULT_HEAD;
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847913289
GPR[SPVAP]-1659847913289
GPR[EPVAP]-1659847914054
GPR[EPVS]-1659847914054
========
pieChart.setAntiAlias(getAntiAlias());
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847914056
GPR[SPVAP]-1659847914056
GPR[EPVAP]-1659847914822
GPR[EPVS]-1659847914822
========
pieChart.setBackgroundPaint(getBackgroundPaint());
this.pieChart.removeLegend();
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);

========
MM Copying to MM
GPR[SPVS]-1659847914824
GPR[SPVAP]-1659847914824
GPR[EPVAP]-1659847916076
GPR[SPVATF]-1659847916076
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847917253
GPR[EPVS]-1659847917253
GPR[ESUN]-1659847917253
GPR[SSUN]-1659847917253
org.jfree.chart.plot.MultiplePiePlot,150
========
this.pieChart.setBackgroundPaint(null);
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847919337
GPR[SPVAP]-1659847919337
GPR[EPVAP]-1659847923603
GPR[SPVATF]-1659847923603
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847924764
GPR[EPVS]-1659847924764
========
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847924766
GPR[SPVAP]-1659847924766
GPR[EPVAP]-1659847925508
GPR[EPVS]-1659847925508
========
(CategoryPlot)pieChart.getPlot().setBackgroundPaint(Color.lightGray);
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847925510
GPR[SPVAP]-1659847925510
GPR[EPVAP]-1659847926138
GPR[EPVS]-1659847926139
========
(XYPlot)pieChart.getPlot().setBackgroundPaint(Color.lightGray);
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847926140
GPR[SPVAP]-1659847926140
GPR[EPVAP]-1659847928245
GPR[EPVS]-1659847928245
========
this.dataExtractOrder=TableOrder.BY_COLUMN;
super();
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847928251
GPR[SPVAP]-1659847928251
GPR[EPVAP]-1659847929320
GPR[EPVS]-1659847929320
========
this.dataset=dataset;
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847929321
GPR[SPVAP]-1659847929321
GPR[EPVAP]-1659847930603
GPR[SPVATF]-1659847930603
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847931732
GPR[EPVS]-1659847931732
========
this.dataExtractOrder=TableOrder.BY_COLUMN;
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847931733
GPR[SPVAP]-1659847931733
GPR[EPVAP]-1659847933008
GPR[SPVATF]-1659847933008
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847934152
GPR[EPVS]-1659847934152
========
this.dataExtractOrder=TableOrder.BY_COLUMN;
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847934154
GPR[SPVAP]-1659847934154
GPR[EPVAP]-1659847935426
GPR[SPVATF]-1659847935426
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847936572
GPR[EPVS]-1659847936572
========
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart=pieChart;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847936573
GPR[SPVAP]-1659847936573
GPR[EPVAP]-1659847937866
GPR[SPVATF]-1659847937866
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847939004
GPR[EPVS]-1659847939004
========
this.dataExtractOrder=TableOrder.BY_COLUMN;
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847939006
GPR[SPVAP]-1659847939006
GPR[EPVAP]-1659847940284
GPR[SPVATF]-1659847940284
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847941428
GPR[EPVS]-1659847941428
========
this.dataExtractOrder=TableOrder.BY_COLUMN;
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=pieChart;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847941429
GPR[SPVAP]-1659847941429
GPR[EPVAP]-1659847942690
GPR[SPVATF]-1659847942690
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847943853
GPR[EPVS]-1659847943853
========
this.dataExtractOrder=TableOrder.BY_COLUMN;
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847943854
GPR[SPVAP]-1659847943854
GPR[EPVAP]-1659847945146
GPR[SPVATF]-1659847945146
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847946279
GPR[EPVS]-1659847946279
========
this.dataExtractOrder=TableOrder.BY_COLUMN;
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847946280
GPR[SPVAP]-1659847946280
GPR[EPVAP]-1659847947553
GPR[SPVATF]-1659847947553
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847948692
GPR[EPVS]-1659847948692
========
new MultiplePiePlot(dataset).setBackgroundPaint(null);
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847948695
GPR[SPVAP]-1659847948695
GPR[EPVAP]-1659847949974
GPR[SPVATF]-1659847949974
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847951159
GPR[EPVS]-1659847951159
========
new MultiplePiePlot(dataset).setOutlineStroke(null);
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847951160
GPR[SPVAP]-1659847951160
GPR[EPVAP]-1659847952423
GPR[SPVATF]-1659847952423
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847953630
GPR[EPVS]-1659847953630
========
new MultiplePiePlot(dataset).setBackgroundPaint(null);
new MultiplePiePlot(dataset).setOutlineStroke(null);
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847953631
GPR[SPVAP]-1659847953631
GPR[EPVAP]-1659847954892
GPR[SPVATF]-1659847954892
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847956100
GPR[EPVS]-1659847956100
========
if(dataset!=null){
dataset.addChangeListener(this);
}
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847956101
GPR[SPVAP]-1659847956101
GPR[EPVAP]-1659847957364
GPR[SPVATF]-1659847957364
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 0
GPR[EPVATF]-1659847958505
GPR[SPVATR]-1659847958505
TESTING : chart_12
MM messageFailing tests: 0
GPR[EPVATR]-1659847968732
GPR[EPVS]-1659847968732
GPR[PF]-1659847968732
sourceFile  script/workingdir/SimFix/chart/chart_12_buggy/source/org/jfree/chart/plot/MultiplePiePlot.java
location   script/workingdir/SimFix/chart/chart_12_buggy
MM Out patch at /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_355962_8_ts_1659847968732.diff
MM Command diff diff -w -b  --label=/source/org/jfree/chart/plot/MultiplePiePlot.java --label=/source/org/jfree/chart/plot/MultiplePiePlot.java /tmp/tmpDirMM1670535201634018443/MultiplePiePlot.java  /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/8_MultiplePiePlot.java  --unified=3  > /experiment_home///results/SimFix/Chart/12/seed_260/patch/chart/12/0/patch_355962_8_ts_1659847968732.diff
MMOut command diff: []
========
this.seriesTitle=DEFAULT_HEAD;
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));

========
MM Copying to MM
GPR[SPVS]-1659847968742
GPR[SPVAP]-1659847968742
GPR[EPVAP]-1659847969491
GPR[EPVS]-1659847969491
GPR[ESUN]-1659847969492
GPR[SSUN]-1659847969492
org.jfree.chart.plot.MultiplePiePlot,151
========
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setBackgroundPaint(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847971464
GPR[SPVAP]-1659847971464
GPR[EPVAP]-1659847973474
GPR[EPVS]-1659847973474
========
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
this.dataExtractOrder=TableOrder.BY_COLUMN;
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847973475
GPR[SPVAP]-1659847973475
GPR[EPVAP]-1659847977350
GPR[SPVATF]-1659847977350
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847978488
GPR[EPVS]-1659847978488
========
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847978490
GPR[SPVAP]-1659847978490
GPR[EPVAP]-1659847979284
GPR[EPVS]-1659847979284
========
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setOutlineStroke(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847979285
GPR[SPVAP]-1659847979285
GPR[EPVAP]-1659847980055
GPR[EPVS]-1659847980055
========
super();
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847980057
GPR[SPVAP]-1659847980057
GPR[EPVAP]-1659847980800
GPR[EPVS]-1659847980800
========
this.dataset=dataset;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847980801
GPR[SPVAP]-1659847980801
GPR[EPVAP]-1659847982098
GPR[SPVATF]-1659847982098
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847983233
GPR[EPVS]-1659847983233
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847983235
GPR[SPVAP]-1659847983235
GPR[EPVAP]-1659847984504
GPR[SPVATF]-1659847984504
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847985627
GPR[EPVS]-1659847985627
========
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847985629
GPR[SPVAP]-1659847985629
GPR[EPVAP]-1659847986911
GPR[SPVATF]-1659847986911
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847988036
GPR[EPVS]-1659847988036
========
this.pieChart=pieChart;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847988037
GPR[SPVAP]-1659847988037
GPR[EPVAP]-1659847989337
GPR[SPVATF]-1659847989337
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847990498
GPR[EPVS]-1659847990498
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847990499
GPR[SPVAP]-1659847990499
GPR[EPVAP]-1659847991777
GPR[SPVATF]-1659847991777
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847992923
GPR[EPVS]-1659847992923
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=pieChart;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847992924
GPR[SPVAP]-1659847992924
GPR[EPVAP]-1659847994168
GPR[SPVATF]-1659847994168
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847995308
GPR[EPVS]-1659847995308
========
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847995310
GPR[SPVAP]-1659847995310
GPR[EPVAP]-1659847996613
GPR[SPVATF]-1659847996613
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659847997748
GPR[EPVS]-1659847997748
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659847997750
GPR[SPVAP]-1659847997750
GPR[EPVAP]-1659848001142
GPR[SPVATF]-1659848001142
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848002293
GPR[EPVS]-1659848002293
========
new MultiplePiePlot(dataset).setOutlineStroke(null);
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659848002294
GPR[SPVAP]-1659848002294
GPR[EPVAP]-1659848003547
GPR[SPVATF]-1659848003547
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848004730
GPR[EPVS]-1659848004730
========
new MultiplePiePlot(dataset).setOutlineStroke(null);
this.pieChart.setBackgroundPaint(null);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setBackgroundPaint(RectangleEdge.BOTTOM);

========
MM Copying to MM
GPR[SPVS]-1659848004731
GPR[SPVAP]-1659848004731
GPR[EPVAP]-1659848005475
GPR[EPVS]-1659848005475
GPR[ESUN]-1659848005476
GPR[SSUN]-1659848005476
org.jfree.chart.plot.MultiplePiePlot,153
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setOutlineStroke(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848007479
GPR[SPVAP]-1659848007479
GPR[EPVAP]-1659848009515
GPR[EPVS]-1659848009515
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setPosition(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848009517
GPR[SPVAP]-1659848009517
GPR[EPVAP]-1659848010986
GPR[EPVS]-1659848010986
========
pieChart.setTitle(seriesTitle);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848010987
GPR[SPVAP]-1659848010987
GPR[EPVAP]-1659848012404
GPR[EPVS]-1659848012404
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setBackgroundPaint(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848012405
GPR[SPVAP]-1659848012406
GPR[EPVAP]-1659848013824
GPR[EPVS]-1659848013824
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.dataExtractOrder=TableOrder.BY_COLUMN;
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848013826
GPR[SPVAP]-1659848013826
GPR[EPVAP]-1659848017645
GPR[SPVATF]-1659848017645
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848018786
GPR[EPVS]-1659848018786
========
seriesTitle.setPosition(RectangleEdge.BOTTOM);
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848018787
GPR[SPVAP]-1659848018787
GPR[EPVAP]-1659848019563
GPR[EPVS]-1659848019563
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848019565
GPR[SPVAP]-1659848019565
GPR[EPVAP]-1659848020846
GPR[SPVATF]-1659848020846
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848021951
GPR[EPVS]-1659848021951
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848021952
GPR[SPVAP]-1659848021952
GPR[EPVAP]-1659848023243
GPR[SPVATF]-1659848023243
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848024383
GPR[EPVS]-1659848024383
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
this.pieChart=pieChart;
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848024385
GPR[SPVAP]-1659848024385
GPR[EPVAP]-1659848025656
GPR[SPVATF]-1659848025656
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848026813
GPR[EPVS]-1659848026813
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848026815
GPR[SPVAP]-1659848026815
GPR[EPVAP]-1659848028138
GPR[SPVATF]-1659848028138
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848029276
GPR[EPVS]-1659848029276
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=pieChart;
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848029277
GPR[SPVAP]-1659848029277
GPR[EPVAP]-1659848030531
GPR[SPVATF]-1659848030531
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848031655
GPR[EPVS]-1659848031655
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848031656
GPR[SPVAP]-1659848031656
GPR[EPVAP]-1659848032937
GPR[SPVATF]-1659848032937
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848034089
GPR[EPVS]-1659848034089
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848034090
GPR[SPVAP]-1659848034090
GPR[EPVAP]-1659848035348
GPR[SPVATF]-1659848035348
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848036497
GPR[EPVS]-1659848036497
========
TextTitle seriesTitle=new TextTitle("Series Title",new Font("SansSerif",Font.BOLD,12));
seriesTitle.setBackgroundPaint(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);

========
MM Copying to MM
GPR[SPVS]-1659848036499
GPR[SPVAP]-1659848036499
GPR[EPVAP]-1659848037248
GPR[EPVS]-1659848037248
GPR[ESUN]-1659848037248
GPR[SSUN]-1659848037248
org.jfree.chart.plot.MultiplePiePlot,154
========
this.aggregatedItemsPaint=Color.lightGray;
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848039228
GPR[SPVAP]-1659848039228
GPR[EPVAP]-1659848043474
GPR[SPVATF]-1659848043474
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848044642
GPR[EPVS]-1659848044642
========
pieChart.removeLegend();
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848044644
GPR[SPVAP]-1659848044644
GPR[EPVAP]-1659848045952
GPR[SPVATF]-1659848045952
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848047100
GPR[EPVS]-1659848047100
========
pieChart.setBackgroundPaint(null);
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848047101
GPR[SPVAP]-1659848047101
GPR[EPVAP]-1659848048370
GPR[SPVATF]-1659848048370
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848049536
GPR[EPVS]-1659848049536
========
pieChart.removeLegend();
pieChart.setBackgroundPaint(null);
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848049538
GPR[SPVAP]-1659848049538
GPR[EPVAP]-1659848050790
GPR[SPVATF]-1659848050790
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848051959
GPR[EPVS]-1659848051959
========
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setBackgroundPaint(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848051960
GPR[SPVAP]-1659848051960
GPR[EPVAP]-1659848052727
GPR[EPVS]-1659848052727
========
this.pieChart=new JFreeChart(piePlot);
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848052728
GPR[SPVAP]-1659848052728
GPR[EPVAP]-1659848054024
GPR[SPVATF]-1659848054024
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848055170
GPR[EPVS]-1659848055170
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848055171
GPR[SPVAP]-1659848055171
GPR[EPVAP]-1659848056436
GPR[SPVATF]-1659848056436
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848057581
GPR[EPVS]-1659848057582
========
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848057583
GPR[SPVAP]-1659848057583
GPR[EPVAP]-1659848058846
GPR[SPVATF]-1659848058846
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848059999
GPR[EPVS]-1659848059999
========
this.pieChart=pieChart;
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848060000
GPR[SPVAP]-1659848060000
GPR[EPVAP]-1659848061252
GPR[SPVATF]-1659848061252
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848062402
GPR[EPVS]-1659848062402
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848062403
GPR[SPVAP]-1659848062403
GPR[EPVAP]-1659848063673
GPR[SPVATF]-1659848063673
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848064872
GPR[EPVS]-1659848064872
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=pieChart;
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848064874
GPR[SPVAP]-1659848064874
GPR[EPVAP]-1659848066198
GPR[SPVATF]-1659848066198
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848067325
GPR[EPVS]-1659848067325
========
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848067326
GPR[SPVAP]-1659848067326
GPR[EPVAP]-1659848068592
GPR[SPVATF]-1659848068592
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848069734
GPR[EPVS]-1659848069734
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
seriesTitle.setPosition(RectangleEdge.BOTTOM);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";

========
MM Copying to MM
GPR[SPVS]-1659848069735
GPR[SPVAP]-1659848069735
GPR[EPVAP]-1659848072002
GPR[SPVATF]-1659848072002
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848073937
GPR[EPVS]-1659848073937
GPR[ESUN]-1659848073937
GPR[SSUN]-1659848073937
org.jfree.chart.plot.MultiplePiePlot,155
========
this.sectionPaints=new HashMap();
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848076175
GPR[SPVAP]-1659848076175
GPR[EPVAP]-1659848080463
GPR[SPVATF]-1659848080463
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848081625
GPR[EPVS]-1659848081625
========
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=TableOrder.BY_COLUMN;

========
MM Copying to MM
GPR[SPVS]-1659848081627
GPR[SPVAP]-1659848081627
GPR[EPVAP]-1659848082365
GPR[EPVS]-1659848082365
========
this.dataset=dataset;
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848082366
GPR[SPVAP]-1659848082366
GPR[EPVAP]-1659848083687
GPR[SPVATF]-1659848083687
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848084815
GPR[EPVS]-1659848084815
========
this.pieChart=new JFreeChart(piePlot);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848084816
GPR[SPVAP]-1659848084816
GPR[EPVAP]-1659848086077
GPR[SPVATF]-1659848086077
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848087204
GPR[EPVS]-1659848087204
========
this.dataset=dataset;
this.pieChart=new JFreeChart(piePlot);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848087206
GPR[SPVAP]-1659848087206
GPR[EPVAP]-1659848088464
GPR[SPVATF]-1659848088464
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848089612
GPR[EPVS]-1659848089612
========
this.pieChart.setBackgroundPaint(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848089613
GPR[SPVAP]-1659848089613
GPR[EPVAP]-1659848090368
GPR[EPVS]-1659848090368
========
(CategoryPlot)pieChart.getPlot().setBackgroundPaint(Color.lightGray);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848090369
GPR[SPVAP]-1659848090369
GPR[EPVAP]-1659848090984
GPR[EPVS]-1659848090984
========
(CategoryPlot)pieChart.getPlot().setDomainGridlinePaint(Color.white);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848090985
GPR[SPVAP]-1659848090985
GPR[EPVAP]-1659848091593
GPR[EPVS]-1659848091593
========
(CategoryPlot)pieChart.getPlot().setDomainGridlinesVisible(true);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848091595
GPR[SPVAP]-1659848091595
GPR[EPVAP]-1659848092194
GPR[EPVS]-1659848092194
========
(XYPlot)pieChart.getPlot().setBackgroundPaint(Color.lightGray);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848092196
GPR[SPVAP]-1659848092196
GPR[EPVAP]-1659848092823
GPR[EPVS]-1659848092823
========
(XYPlot)pieChart.getPlot().setDomainGridlinePaint(Color.white);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848092824
GPR[SPVAP]-1659848092824
GPR[EPVAP]-1659848093428
GPR[EPVS]-1659848093428
========
(XYPlot)pieChart.getPlot().setRangeGridlinePaint(Color.white);
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848093429
GPR[SPVAP]-1659848093429
GPR[EPVAP]-1659848094036
GPR[EPVS]-1659848094036
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848094038
GPR[SPVAP]-1659848094038
GPR[EPVAP]-1659848095370
GPR[SPVATF]-1659848095370
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848096526
GPR[EPVS]-1659848096526
========
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848096527
GPR[SPVAP]-1659848096527
GPR[EPVAP]-1659848097787
GPR[SPVATF]-1659848097787
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848098907
GPR[EPVS]-1659848098907
========
this.pieChart=pieChart;
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848098908
GPR[SPVAP]-1659848098908
GPR[EPVAP]-1659848100202
GPR[SPVATF]-1659848100202
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848101404
GPR[EPVS]-1659848101404
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848101405
GPR[SPVAP]-1659848101405
GPR[EPVAP]-1659848102699
GPR[SPVATF]-1659848102699
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848103853
GPR[EPVS]-1659848103853
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
this.pieChart=pieChart;
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848103854
GPR[SPVAP]-1659848103854
GPR[EPVAP]-1659848105114
GPR[SPVATF]-1659848105114
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848106237
GPR[EPVS]-1659848106237
========
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848106239
GPR[SPVAP]-1659848106239
GPR[EPVAP]-1659848107540
GPR[SPVATF]-1659848107540
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848108688
GPR[EPVS]-1659848108688
========
if(pieChart==null){
throw new IllegalArgumentException("Null \'pieChart\' argument.");
}
if(!(pieChart.getPlot() instanceof PiePlot)){
throw new IllegalArgumentException("The \'pieChart\' argument must "+"be a chart based on a PiePlot.");
}
this.pieChart=pieChart;
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;

========
MM Copying to MM
GPR[SPVS]-1659848108690
GPR[SPVAP]-1659848108690
GPR[EPVAP]-1659848109943
GPR[SPVATF]-1659848109943
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848111101
GPR[EPVS]-1659848111101
GPR[ESUN]-1659848111101
GPR[SSUN]-1659848111101
org.jfree.chart.plot.MultiplePiePlot,156
========
this.pieChart.setTitle(seriesTitle);
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;
this.sectionPaints=new HashMap();

========
MM Copying to MM
GPR[SPVS]-1659848113108
GPR[SPVAP]-1659848113108
GPR[EPVAP]-1659848117431
GPR[SPVATF]-1659848117431
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848118575
GPR[EPVS]-1659848118575
========
fireChangeEvent();
this.aggregatedItemsKey="Other";
this.aggregatedItemsPaint=Color.lightGray;
this.sectionPaints=new HashMap();

========
MM Copying to MM
GPR[SPVS]-1659848118577
GPR[SPVAP]-1659848118577
GPR[EPVAP]-1659848119858
GPR[SPVATF]-1659848119858
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848121015
GPR[EPVS]-1659848121015
GPR[ESUN]-1659848121016
GPR[SSUN]-1659848121016
org.jfree.chart.plot.MultiplePiePlot,157
GPR[ESUN]-1659848121521
GPR[SSUN]-1659848121521
org.jfree.chart.plot.MultiplePiePlot,158
Find no block!
GPR[SSUN]-1659848121859
org.jfree.chart.JFreeChart,664
GPR[ESUN]-1659848123665
GPR[SSUN]-1659848123665
org.jfree.chart.JFreeChart,665
Find no block!
GPR[SSUN]-1659848124001
org.jfree.chart.JFreeChart,795
========
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848125920
GPR[SPVAP]-1659848125920
GPR[EPVAP]-1659848130253
GPR[SPVATF]-1659848130253
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848131428
GPR[EPVS]-1659848131428
========
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848131430
GPR[SPVAP]-1659848131430
GPR[EPVAP]-1659848132784
GPR[SPVATF]-1659848132784
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848133928
GPR[EPVS]-1659848133928
========
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848133930
GPR[SPVAP]-1659848133930
GPR[EPVAP]-1659848135271
GPR[SPVATF]-1659848135271
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848136389
GPR[EPVS]-1659848136389
========
fireChartChanged();
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848136391
GPR[SPVAP]-1659848136391
GPR[EPVAP]-1659848137693
GPR[SPVATF]-1659848137693
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848138845
GPR[EPVS]-1659848138845
========
if(title==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848138847
GPR[SPVAP]-1659848138847
GPR[EPVAP]-1659848140224
GPR[SPVATF]-1659848140224
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848141373
GPR[EPVS]-1659848141373
========
if(title==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
fireChartChanged();
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848141375
GPR[SPVAP]-1659848141375
GPR[EPVAP]-1659848142717
GPR[SPVATF]-1659848142717
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848143849
GPR[EPVS]-1659848143849
========
this.subtitles.remove(title);
this.borderVisible=borderVisible;
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848143851
GPR[SPVAP]-1659848143851
GPR[EPVAP]-1659848145143
GPR[SPVATF]-1659848145143
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848148412
GPR[EPVS]-1659848148412
========
this.subtitles.remove(title);
this.borderStroke=borderStroke;
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848148413
GPR[SPVAP]-1659848148413
GPR[EPVAP]-1659848149749
GPR[SPVATF]-1659848149749
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848150873
GPR[EPVS]-1659848150873
========
this.subtitles.remove(title);
this.borderPaint=borderPaint;
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848150874
GPR[SPVAP]-1659848150874
GPR[EPVAP]-1659848152195
GPR[SPVATF]-1659848152195
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848153365
GPR[EPVS]-1659848153365
========
this.borderVisible=borderVisible;
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848153368
GPR[SPVAP]-1659848153368
GPR[EPVAP]-1659848154673
GPR[SPVATF]-1659848154674
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848155779
GPR[EPVS]-1659848155779
========
this.subtitles.remove(title);
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848155782
GPR[SPVAP]-1659848155782
GPR[EPVAP]-1659848157118
GPR[SPVATF]-1659848157118
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848158238
GPR[EPVS]-1659848158238
========
fireChangeEvent();
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848158239
GPR[SPVAP]-1659848158239
GPR[EPVAP]-1659848159016
GPR[EPVS]-1659848159016
========
this.subtitles.remove(title);
if(renderingHints==null){
throw new NullPointerException("RenderingHints given are null");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848159018
GPR[SPVAP]-1659848159018
GPR[EPVAP]-1659848160368
GPR[SPVATF]-1659848160368
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848161495
GPR[EPVS]-1659848161495
========
this.subtitles.remove(title);
this.renderingHints=renderingHints;
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848161496
GPR[SPVAP]-1659848161496
GPR[EPVAP]-1659848162810
GPR[SPVATF]-1659848162810
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848163941
GPR[EPVS]-1659848163941
========
this.subtitles.remove(title);
if(renderingHints==null){
throw new NullPointerException("RenderingHints given are null");
}
this.renderingHints=renderingHints;
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848163943
GPR[SPVAP]-1659848163943
GPR[EPVAP]-1659848165268
GPR[SPVATF]-1659848165268
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848166441
GPR[EPVS]-1659848166441
========
fireDatasetChanged();
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848166443
GPR[SPVAP]-1659848166443
GPR[EPVAP]-1659848167238
GPR[EPVS]-1659848167238
========
this.title=title;
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848167240
GPR[SPVAP]-1659848167240
GPR[EPVAP]-1659848168025
GPR[EPVS]-1659848168025
========
if(title!=null){
title.addChangeListener(this);
}
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848168027
GPR[SPVAP]-1659848168027
GPR[EPVAP]-1659848169333
GPR[SPVATF]-1659848169334
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848170516
GPR[EPVS]-1659848170516
========
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848170518
GPR[SPVAP]-1659848170518
GPR[EPVAP]-1659848171864
GPR[SPVATF]-1659848171864
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848173073
GPR[EPVS]-1659848173073
========
this.subtitles.remove(title);
this.plot=plot;
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848173075
GPR[SPVAP]-1659848173075
GPR[EPVAP]-1659848174401
GPR[SPVATF]-1659848174401
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848175574
GPR[EPVS]-1659848175574
========
this.subtitles=new ArrayList();
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848175577
GPR[SPVAP]-1659848175577
GPR[EPVAP]-1659848177025
GPR[SPVATF]-1659848177025
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848178185
GPR[EPVS]-1659848178185
========
this.subtitles=new ArrayList();
this.subtitles.remove(title);
this.plot=plot;
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848178187
GPR[SPVAP]-1659848178187
GPR[EPVAP]-1659848179519
GPR[SPVATF]-1659848179519
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848180644
GPR[EPVS]-1659848180644
========
this.subtitles.remove(title);
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("TaskSeriesCollection.remove(): index outside valid range.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848180646
GPR[SPVAP]-1659848180646
GPR[EPVAP]-1659848181451
GPR[EPVS]-1659848181451
========
fireDatasetChanged();
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848181453
GPR[SPVAP]-1659848181453
GPR[EPVAP]-1659848182225
GPR[EPVS]-1659848182225
========
this.subtitles.remove(title);
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(seriesIndex>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848182227
GPR[SPVAP]-1659848182227
GPR[EPVAP]-1659848183004
GPR[EPVS]-1659848183004
========
this.subtitles.remove(title);
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848183007
GPR[SPVAP]-1659848183007
GPR[EPVAP]-1659848183787
GPR[EPVS]-1659848183787
========
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848183789
GPR[SPVAP]-1659848183789
GPR[EPVAP]-1659848184578
GPR[EPVS]-1659848184578
========
fireDatasetChanged();
this.subtitles.remove(title);
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848184580
GPR[SPVAP]-1659848184580
GPR[EPVAP]-1659848185368
GPR[EPVS]-1659848185368
========
fireDatasetChanged();
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848185369
GPR[SPVAP]-1659848185369
GPR[EPVAP]-1659848186179
GPR[EPVS]-1659848186179
========
this.subtitles.setBorder(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848186181
GPR[SPVAP]-1659848186181
GPR[EPVAP]-1659848186987
GPR[EPVS]-1659848186987
========
chart.subtitles=new ArrayList();
this.subtitles.remove(title);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848186990
GPR[SPVAP]-1659848186990
GPR[EPVAP]-1659848187845
GPR[EPVS]-1659848187845
GPR[ESUN]-1659848187846
GPR[SSUN]-1659848187846
org.jfree.chart.JFreeChart,796
GPR[ESUN]-1659848188546
GPR[SSUN]-1659848188546
org.jfree.chart.JFreeChart,797
Find no block!
GPR[SSUN]-1659848188883
org.jfree.chart.util.TableOrder,69
Find no block!
GPR[SSUN]-1659848189229
org.jfree.chart.util.TableOrder,70
========
if(name==null){
throw new IllegalArgumentException("Null \'name\' argument.");
}
this.name=name;

========
MM Copying to MM
GPR[SPVS]-1659848191026
GPR[SPVAP]-1659848191026
GPR[EPVAP]-1659848195391
GPR[SPVATF]-1659848195393
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848196563
GPR[EPVS]-1659848196563
========
this.name=licenceText;

========
MM Copying to MM
GPR[SPVS]-1659848196565
GPR[SPVAP]-1659848196565
GPR[EPVAP]-1659848197222
GPR[EPVS]-1659848197222
========
this.name=prefix;

========
MM Copying to MM
GPR[SPVS]-1659848197223
GPR[SPVAP]-1659848197223
GPR[EPVAP]-1659848197935
GPR[EPVS]-1659848197935
GPR[ESUN]-1659848197936
GPR[SSUN]-1659848197936
org.jfree.chart.util.TableOrder,71
Find no block!
GPR[SSUN]-1659848198579
org.jfree.chart.util.TableOrder,55
Find no block!
GPR[SSUN]-1659848198945
org.jfree.chart.util.TableOrder,58
Find no block!
GPR[SSUN]-1659848199292
org.jfree.chart.title.LegendTitle,542
========
if(this==obj){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1659848201274
GPR[SPVAP]-1659848201274
GPR[EPVAP]-1659848205815
GPR[SPVATF]-1659848205815
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848206973
GPR[EPVS]-1659848206973
========
if(obj==this){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1659848206977
GPR[SPVAP]-1659848206977
GPR[EPVAP]-1659848208363
GPR[SPVATF]-1659848208363
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848209540
GPR[EPVS]-1659848209540
========
if(this==obj){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1659848209541
GPR[SPVAP]-1659848209541
GPR[EPVAP]-1659848210864
GPR[SPVATF]-1659848210864
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848212016
GPR[EPVS]-1659848212016
========
if(obj==null){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1659848212017
GPR[SPVAP]-1659848212017
GPR[EPVAP]-1659848213316
GPR[SPVATF]-1659848213316
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848214485
GPR[EPVS]-1659848214485
========
if(obj==null){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1659848214486
GPR[SPVAP]-1659848214486
GPR[EPVAP]-1659848215766
GPR[SPVATF]-1659848215766
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848216886
GPR[EPVS]-1659848216886
========
if(!super.equals(obj)){
return false;
}
if(obj==this){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1659848216891
GPR[SPVAP]-1659848216891
GPR[EPVAP]-1659848220634
GPR[SPVATF]-1659848220634
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848221812
GPR[EPVS]-1659848221812
========
if(!super.equals(obj)){
return false;
}
if(obj==this){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1659848221814
GPR[SPVAP]-1659848221814
GPR[EPVAP]-1659848223088
GPR[SPVATF]-1659848223088
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848224240
GPR[EPVS]-1659848224240
========
if(obj!=this){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1659848224243
GPR[SPVAP]-1659848224243
GPR[EPVAP]-1659848225520
GPR[SPVATF]-1659848225520
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848226694
GPR[EPVS]-1659848226694
========
if(obj!=null){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1659848226695
GPR[SPVAP]-1659848226695
GPR[EPVAP]-1659848227974
GPR[SPVATF]-1659848227974
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848229099
GPR[EPVS]-1659848229099
========
if(obj!=this){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1659848229101
GPR[SPVAP]-1659848229101
GPR[EPVAP]-1659848230366
GPR[SPVATF]-1659848230366
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848231513
GPR[EPVS]-1659848231513
========
if(obj!=null){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1659848231514
GPR[SPVAP]-1659848231514
GPR[EPVAP]-1659848232751
GPR[SPVATF]-1659848232751
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848233934
GPR[EPVS]-1659848233934
========
if(obj==this){
return true;
return true;
}

========
MM Copying to MM
GPR[SPVS]-1659848233941
GPR[SPVAP]-1659848233941
GPR[EPVAP]-1659848234651
GPR[EPVS]-1659848234651
========
if(obj==this){
return true;
return false;
}

========
MM Copying to MM
GPR[SPVS]-1659848234653
GPR[SPVAP]-1659848234653
GPR[EPVAP]-1659848235374
GPR[EPVS]-1659848235374
========
if(obj==this){
if(!this.itemFont.equals(axis.subLabelFont)){
return false;
}
return true;
}

========
MM Copying to MM
GPR[SPVS]-1659848235384
GPR[SPVAP]-1659848235384
GPR[EPVAP]-1659848236119
GPR[EPVS]-1659848236119
========
if(obj==this){
if(!this.backgroundPaint.equals(axis.subLabelPaint)){
return false;
}
return true;
}

========
MM Copying to MM
GPR[SPVS]-1659848236120
GPR[SPVAP]-1659848236120
GPR[EPVAP]-1659848236847
GPR[EPVS]-1659848236847
========
if(obj==this){
if(!this.itemFont.equals(axis.subLabelFont)){
return false;
}
if(!this.backgroundPaint.equals(axis.subLabelPaint)){
return false;
}
return true;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1659848236848
GPR[SPVAP]-1659848236848
GPR[EPVAP]-1659848237566
GPR[EPVS]-1659848237566
GPR[ESUN]-1659848237568
GPR[SSUN]-1659848237568
org.jfree.chart.JFreeChart,571
========
if(title!=null){
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848239503
GPR[SPVAP]-1659848239503
GPR[EPVAP]-1659848243762
GPR[SPVATF]-1659848243762
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848244941
GPR[EPVS]-1659848244941
========
if(this.title==null){
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848244945
GPR[SPVAP]-1659848244945
GPR[EPVAP]-1659848246287
GPR[SPVATF]-1659848246287
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848247457
GPR[EPVS]-1659848247457
========
if(title==null){
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848247459
GPR[SPVAP]-1659848247459
GPR[EPVAP]-1659848248755
GPR[SPVATF]-1659848248755
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848249905
GPR[EPVS]-1659848249905
========
if(this.title!=null){
title=new TextTitle();
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848249906
GPR[SPVAP]-1659848249906
GPR[EPVAP]-1659848251222
GPR[SPVATF]-1659848251222
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848252350
GPR[EPVS]-1659848252351
========
if(this.title==null){
title=new TextTitle();
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848252353
GPR[SPVAP]-1659848252353
GPR[EPVAP]-1659848253696
GPR[SPVATF]-1659848253696
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848254893
GPR[EPVS]-1659848254893
========
if(title==null){
title=new TextTitle();
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848254895
GPR[SPVAP]-1659848254895
GPR[EPVAP]-1659848256178
GPR[SPVATF]-1659848256178
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848257285
GPR[EPVS]-1659848257285
========
if(title!=null){
title=new TextTitle();
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848257287
GPR[SPVAP]-1659848257287
GPR[EPVAP]-1659848258571
GPR[SPVATF]-1659848258571
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848259709
GPR[EPVS]-1659848259709
========
if(this.title!=null){
chart.title=(TextTitle)this.title.clone();
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848259711
GPR[SPVAP]-1659848259711
GPR[EPVAP]-1659848260504
GPR[EPVS]-1659848260504
========
fireChangeEvent();
if(this.title!=null){
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848260506
GPR[SPVAP]-1659848260506
GPR[EPVAP]-1659848261288
GPR[EPVS]-1659848261288
========
fireDatasetChanged();
if(this.title!=null){
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848261290
GPR[SPVAP]-1659848261290
GPR[EPVAP]-1659848262098
GPR[EPVS]-1659848262098
========
fireDatasetChanged();
if(this.title==null){
this.title.removeChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848262101
GPR[SPVAP]-1659848262101
GPR[EPVAP]-1659848262906
GPR[EPVS]-1659848262906
GPR[ESUN]-1659848262906
GPR[SSUN]-1659848262906
org.jfree.chart.JFreeChart,574
========
if(this.title!=null){
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848264891
GPR[SPVAP]-1659848264891
GPR[EPVAP]-1659848269160
GPR[SPVATF]-1659848269160
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848270340
GPR[EPVS]-1659848270340
========
if(title!=null){
chart.title=(TextTitle)this.title.clone();
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848270342
GPR[SPVAP]-1659848270342
GPR[EPVAP]-1659848271124
GPR[EPVS]-1659848271124
========
if(title==null){
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848271126
GPR[SPVAP]-1659848271126
GPR[EPVAP]-1659848272472
GPR[SPVATF]-1659848272472
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848273614
GPR[EPVS]-1659848273614
========
if(this.title==null){
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848273616
GPR[SPVAP]-1659848273616
GPR[EPVAP]-1659848274919
GPR[SPVATF]-1659848274919
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848276061
GPR[EPVS]-1659848276061
========
if(title!=null){
title=new TextTitle();
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848276063
GPR[SPVAP]-1659848276063
GPR[EPVAP]-1659848277392
GPR[SPVATF]-1659848277392
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848278596
GPR[EPVS]-1659848278596
========
if(title==null){
title=new TextTitle();
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848278597
GPR[SPVAP]-1659848278597
GPR[EPVAP]-1659848279895
GPR[SPVATF]-1659848279895
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848281039
GPR[EPVS]-1659848281039
========
if(title!=null){
title.setDatasetGroup(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848281041
GPR[SPVAP]-1659848281041
GPR[EPVAP]-1659848281812
GPR[EPVS]-1659848281812
========
fireChangeEvent();
if(title!=null){
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848281814
GPR[SPVAP]-1659848281814
GPR[EPVAP]-1659848282594
GPR[EPVS]-1659848282594
========
fireChangeEvent();
if(title==null){
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848282596
GPR[SPVAP]-1659848282596
GPR[EPVAP]-1659848283392
GPR[EPVS]-1659848283392
========
fireChartChanged();
if(title!=null){
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848283394
GPR[SPVAP]-1659848283394
GPR[EPVAP]-1659848284686
GPR[SPVATF]-1659848284686
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848285813
GPR[EPVS]-1659848285813
========
fireChartChanged();
if(title==null){
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848285815
GPR[SPVAP]-1659848285815
GPR[EPVAP]-1659848287129
GPR[SPVATF]-1659848287129
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848288250
GPR[EPVS]-1659848288250
========
fireDatasetChanged();
if(title!=null){
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848288252
GPR[SPVAP]-1659848288252
GPR[EPVAP]-1659848289028
GPR[EPVS]-1659848289028
========
fireDatasetChanged();
if(title==null){
title.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848289030
GPR[SPVAP]-1659848289030
GPR[EPVAP]-1659848289812
GPR[EPVS]-1659848289812
========
if(this.title!=null){
chart.title=(TextTitle)this.title.clone();
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848292160
GPR[SPVAP]-1659848292160
GPR[EPVAP]-1659848293334
GPR[EPVS]-1659848293334
========
if(this.title==null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848293336
GPR[SPVAP]-1659848293336
GPR[EPVAP]-1659848294666
GPR[SPVATF]-1659848294666
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848295801
GPR[EPVS]-1659848295801
========
if(title==null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848295803
GPR[SPVAP]-1659848295803
GPR[EPVAP]-1659848297104
GPR[SPVATF]-1659848297104
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848298221
GPR[EPVS]-1659848298221
========
if(title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848298223
GPR[SPVAP]-1659848298223
GPR[EPVAP]-1659848299522
GPR[SPVATF]-1659848299522
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848300653
GPR[EPVS]-1659848300653
========
if(this.title!=null){
title=new TextTitle();
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848300654
GPR[SPVAP]-1659848300654
GPR[EPVAP]-1659848301962
GPR[SPVATF]-1659848301962
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848303108
GPR[EPVS]-1659848303108
========
if(this.title==null){
title=new TextTitle();
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848303110
GPR[SPVAP]-1659848303110
GPR[EPVAP]-1659848304430
GPR[SPVATF]-1659848304430
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848305553
GPR[EPVS]-1659848305553
========
if(title==null){
title=new TextTitle();
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848305555
GPR[SPVAP]-1659848305555
GPR[EPVAP]-1659848306887
GPR[SPVATF]-1659848306887
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848308010
GPR[EPVS]-1659848308010
========
if(title!=null){
title=new TextTitle();
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848308012
GPR[SPVAP]-1659848308012
GPR[EPVAP]-1659848309363
GPR[SPVATF]-1659848309363
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848310487
GPR[EPVS]-1659848310487
========
fireChartChanged();
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848310489
GPR[SPVAP]-1659848310489
GPR[EPVAP]-1659848311788
GPR[SPVATF]-1659848311788
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848312936
GPR[EPVS]-1659848312936
========
fireChangeEvent();
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848312938
GPR[SPVAP]-1659848312938
GPR[EPVAP]-1659848313732
GPR[EPVS]-1659848313732
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0||index>getSubtitleCount()){
throw new IllegalArgumentException("The \'index\' argument is out of range.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848313734
GPR[SPVAP]-1659848313734
GPR[EPVAP]-1659848314503
GPR[EPVS]-1659848314503
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if(renderingHints==null){
throw new NullPointerException("RenderingHints given are null");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848314505
GPR[SPVAP]-1659848314505
GPR[EPVAP]-1659848315806
GPR[SPVATF]-1659848315806
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848316951
GPR[EPVS]-1659848316951
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
this.renderingHints=renderingHints;
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848316953
GPR[SPVAP]-1659848316953
GPR[EPVAP]-1659848318278
GPR[SPVATF]-1659848318278
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848319439
GPR[EPVS]-1659848319439
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if(renderingHints==null){
throw new NullPointerException("RenderingHints given are null");
}
this.renderingHints=renderingHints;
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848319440
GPR[SPVAP]-1659848319440
GPR[EPVAP]-1659848320775
GPR[SPVATF]-1659848320775
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848321896
GPR[EPVS]-1659848321896
========
fireDatasetChanged();
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848321898
GPR[SPVAP]-1659848321898
GPR[EPVAP]-1659848322684
GPR[EPVS]-1659848322684
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848322686
GPR[SPVAP]-1659848322686
GPR[EPVAP]-1659848324011
GPR[SPVATF]-1659848324011
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848325158
GPR[EPVS]-1659848325158
========
if(getRangeAxis()!=null){
range.configure();
}
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848325161
GPR[SPVAP]-1659848325161
GPR[EPVAP]-1659848325948
GPR[EPVS]-1659848325948
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("TaskSeriesCollection.remove(): index outside valid range.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848325950
GPR[SPVAP]-1659848325950
GPR[EPVAP]-1659848326732
GPR[EPVS]-1659848326732
========
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848326734
GPR[SPVAP]-1659848326734
GPR[EPVAP]-1659848328048
GPR[SPVATF]-1659848328048
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848329164
GPR[EPVS]-1659848329164
========
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
fireDatasetChanged();
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848329166
GPR[SPVAP]-1659848329166
GPR[EPVAP]-1659848329936
GPR[EPVS]-1659848329936
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(seriesIndex>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848329938
GPR[SPVAP]-1659848329938
GPR[EPVAP]-1659848330708
GPR[EPVS]-1659848330708
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848330710
GPR[SPVAP]-1659848330710
GPR[EPVAP]-1659848331504
GPR[EPVS]-1659848331504
========
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848331506
GPR[SPVAP]-1659848331506
GPR[EPVAP]-1659848332286
GPR[EPVS]-1659848332286
========
fireDatasetChanged();
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848332287
GPR[SPVAP]-1659848332287
GPR[EPVAP]-1659848333066
GPR[EPVS]-1659848333066
========
this.subtitles.remove(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
fireDatasetChanged();
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848333067
GPR[SPVAP]-1659848333067
GPR[EPVAP]-1659848333849
GPR[EPVS]-1659848333849
========
this.borderVisible=false;
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848333850
GPR[SPVAP]-1659848333850
GPR[EPVAP]-1659848335151
GPR[SPVATF]-1659848335151
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848336287
GPR[EPVS]-1659848336287
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if(this.renderingHints.get(RenderingHints.KEY_ANTIALIASING)==null){
val=RenderingHints.VALUE_ANTIALIAS_DEFAULT;
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848336289
GPR[SPVAP]-1659848336289
GPR[EPVAP]-1659848337065
GPR[EPVS]-1659848337065
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if(!borderVisible&&RenderingHints.VALUE_ANTIALIAS_OFF.equals(this.renderingHints.get(RenderingHints.KEY_ANTIALIASING))||flag&&RenderingHints.VALUE_ANTIALIAS_ON.equals(val)){
return ;
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848337067
GPR[SPVAP]-1659848337067
GPR[EPVAP]-1659848337835
GPR[EPVS]-1659848337836
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if(borderVisible){
this.renderingHints.put(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
}else {
this.renderingHints.put(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_OFF);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848337837
GPR[SPVAP]-1659848337837
GPR[EPVAP]-1659848339140
GPR[SPVATF]-1659848339140
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848340262
GPR[EPVS]-1659848340262
========
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
if((DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0)||(series>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848340264
GPR[SPVAP]-1659848340264
GPR[EPVAP]-1659848341029
GPR[EPVS]-1659848341029
========
if(notify){
fireChangeEvent();
}
if(this.title!=null){
this.title.removeChangeListener(this);
}
this.title=title;
if(title!=null){
title.addChangeListener(this);
}
fireChartChanged();

========
MM Copying to MM
GPR[SPVS]-1659848341031
GPR[SPVAP]-1659848341031
GPR[EPVAP]-1659848341862
GPR[EPVS]-1659848341862
GPR[ESUN]-1659848341863
GPR[SSUN]-1659848341863
org.jfree.chart.JFreeChart,575
GPR[ESUN]-1659848342315
GPR[SSUN]-1659848342315
org.jfree.chart.JFreeChart,576
GPR[ESUN]-1659848342635
GPR[SSUN]-1659848342635
org.jfree.chart.JFreeChart,578
GPR[ESUN]-1659848342945
GPR[SSUN]-1659848342945
org.jfree.chart.JFreeChart,579
Find no block!
GPR[SSUN]-1659848343245
org.jfree.chart.JFreeChart,959
========
if(!this.backgroundPaint.equals(axis.subCategories)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848345608
GPR[SPVAP]-1659848345608
GPR[EPVAP]-1659848347375
GPR[EPVS]-1659848347375
========
if(!this.backgroundPaint.equals(axis.subLabelFont)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848347377
GPR[SPVAP]-1659848347377
GPR[EPVAP]-1659848349140
GPR[EPVS]-1659848349140
========
if(!this.backgroundPaint.equals(axis.subLabelPaint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848349142
GPR[SPVAP]-1659848349142
GPR[EPVAP]-1659848350831
GPR[EPVS]-1659848350831
========
if(!this.backgroundPaint.equals(tf.paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848350832
GPR[SPVAP]-1659848350832
GPR[EPVAP]-1659848352564
GPR[EPVS]-1659848352564
========
if(!this.backgroundPaint.equals(that.stripOutlineStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848352566
GPR[SPVAP]-1659848352566
GPR[EPVAP]-1659848354247
GPR[EPVS]-1659848354247
========
if(!PaintUtilities.equal(this.paint,that.backgroundPaint)){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848354248
GPR[SPVAP]-1659848354248
GPR[EPVAP]-1659848355873
GPR[EPVS]-1659848355873
========
if(!this.backgroundPaint.equals(DEFAULT_BACKGROUND_IMAGE)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848355875
GPR[SPVAP]-1659848355875
GPR[EPVAP]-1659848360180
GPR[SPVATF]-1659848360180
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848361319
GPR[EPVS]-1659848361319
========
if(!this.backgroundPaint.equals(paint)){
this.paint=paint;
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848361321
GPR[SPVAP]-1659848361321
GPR[EPVAP]-1659848362092
GPR[EPVS]-1659848362092
========
if(!this.subtitles.equals(that.cornerTextItems)){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848362094
GPR[SPVAP]-1659848362094
GPR[EPVAP]-1659848362921
GPR[EPVS]-1659848362921
========
if(!this.borderStroke.equals(that.outlineStroke)){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848362923
GPR[SPVAP]-1659848362923
GPR[EPVAP]-1659848365417
GPR[EPVS]-1659848365417
========
if(!this.backgroundPaint.equals(that.tickLabelFont)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848365419
GPR[SPVAP]-1659848365419
GPR[EPVAP]-1659848366190
GPR[EPVS]-1659848366190
========
if(!PaintUtilities.equal(this.paint,that.tickLabelPaint)){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848366191
GPR[SPVAP]-1659848366191
GPR[EPVAP]-1659848366966
GPR[EPVS]-1659848366966
========
if(!this.borderStroke.equals(that.groupStroke)){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848366968
GPR[SPVAP]-1659848366968
GPR[EPVAP]-1659848367750
GPR[EPVS]-1659848367750
========
if(!this.backgroundPaint.equals(that.columnKey)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848367751
GPR[SPVAP]-1659848367751
GPR[EPVAP]-1659848368528
GPR[EPVS]-1659848368528
========
if(!this.backgroundPaint.equals(that.scale)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848368530
GPR[SPVAP]-1659848368530
GPR[EPVAP]-1659848369322
GPR[EPVS]-1659848369322
========
if(!this.backgroundPaint.equals(that.itemFont)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848369324
GPR[SPVAP]-1659848369324
GPR[EPVAP]-1659848370096
GPR[EPVS]-1659848370096
========
if(!this.backgroundPaint.equals(that.itemPaint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848370098
GPR[SPVAP]-1659848370098
GPR[EPVAP]-1659848370871
GPR[EPVS]-1659848370871
========
if(!this.backgroundPaint.equals(that.hLayout)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848370874
GPR[SPVAP]-1659848370874
GPR[EPVAP]-1659848371657
GPR[EPVS]-1659848371657
========
if(!this.backgroundPaint.equals(that.vLayout)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848371659
GPR[SPVAP]-1659848371659
GPR[EPVAP]-1659848372453
GPR[EPVS]-1659848372453
========
if(!this.backgroundPaint.equals(that.formatPattern)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848372454
GPR[SPVAP]-1659848372454
GPR[EPVAP]-1659848373227
GPR[EPVS]-1659848373227
========
if(!this.backgroundPaint.equals(that.formatString)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848373230
GPR[SPVAP]-1659848373230
GPR[EPVAP]-1659848373997
GPR[EPVS]-1659848373997
========
if(!this.backgroundPaint.equals(that.additionalFormatPattern)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848373999
GPR[SPVAP]-1659848373999
GPR[EPVAP]-1659848374770
GPR[EPVS]-1659848374770
========
if(!this.backgroundPaint.equals(that.seriesLabelLists)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848374772
GPR[SPVAP]-1659848374772
GPR[EPVAP]-1659848375561
GPR[EPVS]-1659848375561
========
if(!this.backgroundPaint.equals(generator.dateFormatter)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848375563
GPR[SPVAP]-1659848375563
GPR[EPVAP]-1659848376382
GPR[EPVS]-1659848376382
========
if(!this.backgroundPaint.equals(generator.numberFormatter)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848376384
GPR[SPVAP]-1659848376384
GPR[EPVAP]-1659848377165
GPR[EPVS]-1659848377165
========
if(!this.backgroundPaint.equals(that.labelFormat)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848377167
GPR[SPVAP]-1659848377167
GPR[EPVAP]-1659848377940
GPR[EPVS]-1659848377940
========
if(!this.backgroundPaint.equals(that.numberFormat)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848377941
GPR[SPVAP]-1659848377941
GPR[EPVAP]-1659848378714
GPR[EPVS]-1659848378714
========
if(!this.backgroundPaint.equals(that.percentFormat)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848378715
GPR[SPVAP]-1659848378715
GPR[EPVAP]-1659848379490
GPR[EPVS]-1659848379490
========
if(!this.backgroundPaint.equals(layer.name)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848379492
GPR[SPVAP]-1659848379492
GPR[EPVAP]-1659848380307
GPR[EPVS]-1659848380307
========
if(!this.backgroundPaint.equals(that.name)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848380309
GPR[SPVAP]-1659848380309
GPR[EPVAP]-1659848381084
GPR[EPVS]-1659848381084
========
if(!this.backgroundPaint.equals(t.name)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848381086
GPR[SPVAP]-1659848381086
GPR[EPVAP]-1659848381885
GPR[EPVS]-1659848381885
========
if(!this.backgroundPaint.equals(alignment.name)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848381886
GPR[SPVAP]-1659848381886
GPR[EPVAP]-1659848382668
GPR[EPVS]-1659848382668
========
if(!this.backgroundPaint.equals(that.baseLabel)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848382670
GPR[SPVAP]-1659848382670
GPR[EPVAP]-1659848383464
GPR[EPVS]-1659848383464
========
if(!this.backgroundPaint.equals(order.name)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848383465
GPR[SPVAP]-1659848383465
GPR[EPVAP]-1659848384264
GPR[EPVS]-1659848384264
========
if(!this.backgroundPaint.equals(that.positivePrefix)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848384266
GPR[SPVAP]-1659848384266
GPR[EPVAP]-1659848385043
GPR[EPVS]-1659848385043
========
if(!this.backgroundPaint.equals(that.daySuffix)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848385044
GPR[SPVAP]-1659848385044
GPR[EPVAP]-1659848385847
GPR[EPVS]-1659848385847
========
if(!this.backgroundPaint.equals(that.hourSuffix)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848385849
GPR[SPVAP]-1659848385849
GPR[EPVAP]-1659848386620
GPR[EPVS]-1659848386620
========
if(!this.backgroundPaint.equals(that.minuteSuffix)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848386622
GPR[SPVAP]-1659848386622
GPR[EPVAP]-1659848387398
GPR[EPVS]-1659848387398
========
if(!this.backgroundPaint.equals(that.secondSuffix)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848387399
GPR[SPVAP]-1659848387399
GPR[EPVAP]-1659848388174
GPR[EPVS]-1659848388174
========
if(!this.backgroundPaint.equals(that.secondFormatter)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848388176
GPR[SPVAP]-1659848388176
GPR[EPVAP]-1659848388968
GPR[EPVS]-1659848388968
========
if(!this.backgroundPaint.equals(that.label)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848388971
GPR[SPVAP]-1659848388971
GPR[EPVAP]-1659848389753
GPR[EPVS]-1659848389753
========
if(!this.backgroundPaint.equals(that.fillPaint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848389754
GPR[SPVAP]-1659848389754
GPR[EPVAP]-1659848390539
GPR[EPVS]-1659848390539
========
if(!this.backgroundPaint.equals(that.outlineStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848390540
GPR[SPVAP]-1659848390540
GPR[EPVAP]-1659848391370
GPR[EPVS]-1659848391370
========
if(!this.backgroundPaint.equals(that.outlinePaint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848391371
GPR[SPVAP]-1659848391371
GPR[EPVAP]-1659848392167
GPR[EPVS]-1659848392167
========
if(!this.backgroundPaint.equals(that.lineStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848392169
GPR[SPVAP]-1659848392169
GPR[EPVAP]-1659848392958
GPR[EPVS]-1659848392958
========
if(!this.backgroundPaint.equals(that.linePaint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848392960
GPR[SPVAP]-1659848392960
GPR[EPVAP]-1659848393741
GPR[EPVS]-1659848393741
========
if(!this.backgroundPaint.equals(that.items)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848393742
GPR[SPVAP]-1659848393742
GPR[EPVAP]-1659848394510
GPR[EPVS]-1659848394510
========
if(!this.backgroundPaint.equals(that.drawingSupplier)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848394512
GPR[SPVAP]-1659848394512
GPR[EPVAP]-1659848395298
GPR[EPVS]-1659848395298
========
if(!this.backgroundPaint.equals(that.aggregatedItemsKey)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848395300
GPR[SPVAP]-1659848395300
GPR[EPVAP]-1659848396099
GPR[EPVS]-1659848396099
========
if(!this.backgroundPaint.equals(that.key)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848396101
GPR[SPVAP]-1659848396101
GPR[EPVAP]-1659848396867
GPR[EPVS]-1659848396867
========
if(!this.backgroundPaint.equals(that.angleLabelFont)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848396869
GPR[SPVAP]-1659848396869
GPR[EPVAP]-1659848397664
GPR[EPVS]-1659848397664
========
if(!this.backgroundPaint.equals(that.axisLineStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848397665
GPR[SPVAP]-1659848397665
GPR[EPVAP]-1659848398439
GPR[EPVS]-1659848398439
========
if(!this.backgroundPaint.equals(that.baseSeriesOutlineStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848398440
GPR[SPVAP]-1659848398440
GPR[EPVAP]-1659848399218
GPR[EPVS]-1659848399218
========
if(!this.backgroundPaint.equals(that.labelFont)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848399219
GPR[SPVAP]-1659848399219
GPR[EPVAP]-1659848399999
GPR[EPVS]-1659848399999
========
if(!this.backgroundPaint.equals(that.labelGenerator)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848400000
GPR[SPVAP]-1659848400000
GPR[EPVAP]-1659848400796
GPR[EPVS]-1659848400796
========
if(!this.backgroundPaint.equals(that.quadrantOrigin)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848400798
GPR[SPVAP]-1659848400798
GPR[EPVAP]-1659848401568
GPR[EPVS]-1659848401568
========
if(!this.backgroundPaint.equals(that.dialFrame)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848401570
GPR[SPVAP]-1659848401570
GPR[EPVAP]-1659848402342
GPR[EPVS]-1659848402342
========
if(!this.backgroundPaint.equals(that.layers)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848402343
GPR[SPVAP]-1659848402343
GPR[EPVAP]-1659848403117
GPR[EPVS]-1659848403117
========
if(!this.backgroundPaint.equals(that.pointers)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848403118
GPR[SPVAP]-1659848403118
GPR[EPVAP]-1659848403900
GPR[EPVS]-1659848403900
========
if(!this.backgroundPaint.equals(that.stroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848403902
GPR[SPVAP]-1659848403902
GPR[EPVAP]-1659848404681
GPR[EPVS]-1659848404681
========
if(!this.backgroundPaint.equals(that.font)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848404683
GPR[SPVAP]-1659848404683
GPR[EPVAP]-1659848405468
GPR[EPVS]-1659848405469
========
if(!this.backgroundPaint.equals(that.templateValue)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848405470
GPR[SPVAP]-1659848405470
GPR[EPVAP]-1659848406308
GPR[EPVS]-1659848406308
========
if(!this.backgroundPaint.equals(that.majorTickStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848406309
GPR[SPVAP]-1659848406309
GPR[EPVAP]-1659848407105
GPR[EPVS]-1659848407105
========
if(!this.backgroundPaint.equals(that.minorTickStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848407107
GPR[SPVAP]-1659848407107
GPR[EPVAP]-1659848407891
GPR[EPVS]-1659848407891
========
if(!this.backgroundPaint.equals(that.gradientPaintTransformer)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848407893
GPR[SPVAP]-1659848407893
GPR[EPVAP]-1659848408667
GPR[EPVS]-1659848408667
========
if(!this.backgroundPaint.equals(that.arrowPaint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848408668
GPR[SPVAP]-1659848408668
GPR[EPVAP]-1659848409472
GPR[EPVS]-1659848409472
========
if(!this.backgroundPaint.equals(that.shape)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848409473
GPR[SPVAP]-1659848409473
GPR[EPVAP]-1659848410272
GPR[EPVS]-1659848410272
========
if(!this.backgroundPaint.equals(that.text)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848410274
GPR[SPVAP]-1659848410274
GPR[EPVAP]-1659848411071
GPR[EPVS]-1659848411071
========
if(!this.backgroundPaint.equals(that.point)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848411072
GPR[SPVAP]-1659848411072
GPR[EPVAP]-1659848411850
GPR[EPVS]-1659848411850
========
if(!this.backgroundPaint.equals(that.paintScale)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848411852
GPR[SPVAP]-1659848411852
GPR[EPVAP]-1659848412652
GPR[EPVS]-1659848412652
========
if(!this.backgroundPaint.equals(that.foregroundAnnotations)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848412654
GPR[SPVAP]-1659848412654
GPR[EPVAP]-1659848413448
GPR[EPVS]-1659848413448
========
if(!this.backgroundPaint.equals(that.backgroundAnnotations)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848413450
GPR[SPVAP]-1659848413450
GPR[EPVAP]-1659848414228
GPR[EPVS]-1659848414228
========
if(!this.backgroundPaint.equals(that.lookupTable)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848414229
GPR[SPVAP]-1659848414229
GPR[EPVAP]-1659848415008
GPR[EPVS]-1659848415008
========
if(!this.backgroundPaint.equals(that.formatter)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848415010
GPR[SPVAP]-1659848415010
GPR[EPVAP]-1659848415783
GPR[EPVS]-1659848415783
========
if(!this.backgroundPaint.equals(this.DEFAULT_TITLE_FONT)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848415785
GPR[SPVAP]-1659848415785
GPR[EPVAP]-1659848417107
GPR[SPVATF]-1659848417107
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848418251
GPR[EPVS]-1659848418251
========
if(!this.backgroundPaint.equals(this.backgroundPaint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848418253
GPR[SPVAP]-1659848418253
GPR[EPVAP]-1659848419553
GPR[SPVATF]-1659848419553
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848420687
GPR[EPVS]-1659848420687
========
if(!this.backgroundPaint.equals(this.borderStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848420690
GPR[SPVAP]-1659848420690
GPR[EPVAP]-1659848422036
GPR[SPVATF]-1659848422036
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848423145
GPR[EPVS]-1659848423145
========
if(!this.backgroundPaint.equals(that.yearFormatter)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848423147
GPR[SPVAP]-1659848423147
GPR[EPVAP]-1659848423920
GPR[EPVS]-1659848423920
========
if(!this.backgroundPaint.equals(that.sublabelFont)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848423922
GPR[SPVAP]-1659848423922
GPR[EPVAP]-1659848424726
GPR[EPVS]-1659848424726
========
if(!this.backgroundPaint.equals(that.first)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848424727
GPR[SPVAP]-1659848424727
GPR[EPVAP]-1659848425508
GPR[EPVS]-1659848425508
========
if(!this.backgroundPaint.equals(that.last)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848425510
GPR[SPVAP]-1659848425510
GPR[EPVAP]-1659848426305
GPR[EPVS]-1659848426305
========
if(!this.backgroundPaint.equals(that.timeZone)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848426306
GPR[SPVAP]-1659848426306
GPR[EPVAP]-1659848427083
GPR[EPVS]-1659848427083
========
if(!this.backgroundPaint.equals(that.autoRangeTimePeriodClass)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848427085
GPR[SPVAP]-1659848427085
GPR[EPVAP]-1659848427865
GPR[EPVS]-1659848427865
========
if(!this.backgroundPaint.equals(that.majorTickTimePeriodClass)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848427866
GPR[SPVAP]-1659848427866
GPR[EPVAP]-1659848428648
GPR[EPVS]-1659848428648
========
if(!this.backgroundPaint.equals(that.minorTickTimePeriodClass)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848428650
GPR[SPVAP]-1659848428650
GPR[EPVAP]-1659848429443
GPR[EPVS]-1659848429443
========
if(!this.backgroundPaint.equals(that.minorTickMarkPaint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848429444
GPR[SPVAP]-1659848429444
GPR[EPVAP]-1659848430250
GPR[EPVS]-1659848430250
========
if(!this.backgroundPaint.equals(that.minorTickMarkStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848430252
GPR[SPVAP]-1659848430252
GPR[EPVAP]-1659848431057
GPR[EPVS]-1659848431057
========
if(!this.backgroundPaint.equals(that.symbols)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848431059
GPR[SPVAP]-1659848431059
GPR[EPVAP]-1659848431882
GPR[EPVS]-1659848431882
========
if(!this.backgroundPaint.equals(that.dateFormat)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848431883
GPR[SPVAP]-1659848431883
GPR[EPVAP]-1659848432660
GPR[EPVS]-1659848432660
========
if(!this.backgroundPaint.equals(that.itemParameterName)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848432662
GPR[SPVAP]-1659848432662
GPR[EPVAP]-1659848433441
GPR[EPVS]-1659848433441
========
if(!this.backgroundPaint.equals(that.prefix)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848433443
GPR[SPVAP]-1659848433443
GPR[EPVAP]-1659848434230
GPR[EPVS]-1659848434230
========
if(!this.backgroundPaint.equals(that.seriesParameterName)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848434232
GPR[SPVAP]-1659848434232
GPR[EPVAP]-1659848435029
GPR[EPVS]-1659848435029
========
if(!this.backgroundPaint.equals(that.categoryParameterName)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848435030
GPR[SPVAP]-1659848435030
GPR[EPVAP]-1659848435814
GPR[EPVS]-1659848435814
========
if(!this.backgroundPaint.equals(that.rowKey)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848435816
GPR[SPVAP]-1659848435816
GPR[EPVAP]-1659848436611
GPR[EPVS]-1659848436611
========
if(!this.backgroundPaint.equals(that.area)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848436613
GPR[SPVAP]-1659848436613
GPR[EPVAP]-1659848438798
GPR[EPVS]-1659848438798
========
if(!this.backgroundPaint.equals(that.renderingHints)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848438805
GPR[SPVAP]-1659848438805
GPR[EPVAP]-1659848439776
GPR[EPVS]-1659848439776
========
if(!this.backgroundPaint.equals(other.name)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848439777
GPR[SPVAP]-1659848439777
GPR[EPVAP]-1659848440551
GPR[EPVS]-1659848440551
========
if(!this.backgroundPaint.equals(tf.text)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848440553
GPR[SPVAP]-1659848440553
GPR[EPVAP]-1659848441364
GPR[EPVS]-1659848441364
========
if(!this.backgroundPaint.equals(tf.font)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848441366
GPR[SPVAP]-1659848441366
GPR[EPVAP]-1659848442144
GPR[EPVS]-1659848442144
========
if(!this.backgroundPaint.equals(that.frame)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848442146
GPR[SPVAP]-1659848442146
GPR[EPVAP]-1659848442942
GPR[EPVS]-1659848442942
========
if(!this.backgroundPaint.equals(that.bounds)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848442944
GPR[SPVAP]-1659848442944
GPR[EPVAP]-1659848443723
GPR[EPVS]-1659848443723
========
if(!this.backgroundPaint.equals(that.arrangement)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848443725
GPR[SPVAP]-1659848443725
GPR[EPVAP]-1659848444474
GPR[EPVS]-1659848444474
========
if(!this.backgroundPaint.equals(that.blocks)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848444476
GPR[SPVAP]-1659848444476
GPR[EPVAP]-1659848445253
GPR[EPVS]-1659848445253
========
if(!this.backgroundPaint.equals(that.keyToGroupMap)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848445254
GPR[SPVAP]-1659848445254
GPR[EPVAP]-1659848446036
GPR[EPVS]-1659848446036
========
if(!this.backgroundPaint.equals(that.tasks)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848446038
GPR[SPVAP]-1659848446038
GPR[EPVAP]-1659848446826
GPR[EPVS]-1659848446826
========
if(!this.backgroundPaint.equals(that.bins)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848446827
GPR[SPVAP]-1659848446827
GPR[EPVAP]-1659848447599
GPR[EPVS]-1659848447599
========
if(!this.backgroundPaint.equals(that.seriesKeys)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848447600
GPR[SPVAP]-1659848447600
GPR[EPVAP]-1659848448429
GPR[EPVS]-1659848448429
========
if(!this.backgroundPaint.equals(that.allSeriesData)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848448430
GPR[SPVAP]-1659848448430
GPR[EPVAP]-1659848449232
GPR[EPVS]-1659848449232
========
if(!this.backgroundPaint.equals(that.x)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848449234
GPR[SPVAP]-1659848449234
GPR[EPVAP]-1659848450022
GPR[EPVS]-1659848450022
========
if(!this.backgroundPaint.equals(that.windDir)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848450023
GPR[SPVAP]-1659848450023
GPR[EPVAP]-1659848450816
GPR[EPVS]-1659848450816
========
if(!this.backgroundPaint.equals(that.windForce)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848450817
GPR[SPVAP]-1659848450817
GPR[EPVAP]-1659848451593
GPR[EPVS]-1659848451593
========
if(!this.backgroundPaint.equals(that.underlying)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848451595
GPR[SPVAP]-1659848451595
GPR[EPVAP]-1659848452368
GPR[EPVS]-1659848452368
========
if(!this.backgroundPaint.equals(that.date)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848452369
GPR[SPVAP]-1659848452369
GPR[EPVAP]-1659848453157
GPR[EPVS]-1659848453157
========
if(!this.backgroundPaint.equals(that.high)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848453158
GPR[SPVAP]-1659848453158
GPR[EPVAP]-1659848453937
GPR[EPVS]-1659848453937
========
if(!this.backgroundPaint.equals(that.low)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848453939
GPR[SPVAP]-1659848453939
GPR[EPVAP]-1659848454753
GPR[EPVS]-1659848454753
========
if(!this.backgroundPaint.equals(that.open)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848454755
GPR[SPVAP]-1659848454755
GPR[EPVAP]-1659848455531
GPR[EPVS]-1659848455531
========
if(!this.backgroundPaint.equals(that.close)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848455533
GPR[SPVAP]-1659848455533
GPR[EPVAP]-1659848456336
GPR[EPVS]-1659848456336
========
if(!this.backgroundPaint.equals(that.seriesKey)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848456338
GPR[SPVAP]-1659848456338
GPR[EPVAP]-1659848457118
GPR[EPVS]-1659848457118
========
if(!this.backgroundPaint.equals(that.id)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848457120
GPR[SPVAP]-1659848457120
GPR[EPVAP]-1659848457903
GPR[EPVS]-1659848457903
========
if(!this.backgroundPaint.equals(type.name)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848457904
GPR[SPVAP]-1659848457904
GPR[EPVAP]-1659848458688
GPR[EPVS]-1659848458689
========
if(!this.backgroundPaint.equals(timeSeriesDataItem.period)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848458690
GPR[SPVAP]-1659848458690
GPR[EPVAP]-1659848459480
GPR[EPVS]-1659848459481
========
if(!this.backgroundPaint.equals(timeSeriesDataItem.value)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848459482
GPR[SPVAP]-1659848459482
GPR[EPVAP]-1659848460261
GPR[EPVS]-1659848460261
========
if(!this.backgroundPaint.equals(position.name)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848460262
GPR[SPVAP]-1659848460262
GPR[EPVAP]-1659848461037
GPR[EPVS]-1659848461037
========
if(!this.backgroundPaint.equals(DEFAULT_TITLE_FONT)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848461039
GPR[SPVAP]-1659848461039
GPR[EPVAP]-1659848462357
GPR[SPVATF]-1659848462357
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848463584
GPR[EPVS]-1659848463584
========
if(!this.backgroundPaint.equals(library.name)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848463587
GPR[SPVAP]-1659848463587
GPR[EPVAP]-1659848464365
GPR[EPVS]-1659848464365
========
if(!this.backgroundPaint.equals(that.value)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848464366
GPR[SPVAP]-1659848464366
GPR[EPVAP]-1659848465142
GPR[EPVS]-1659848465142
========
if(!this.backgroundPaint.equals(timePeriodValue.period)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848465144
GPR[SPVAP]-1659848465144
GPR[EPVAP]-1659848465964
GPR[EPVS]-1659848465964
========
if(!this.backgroundPaint.equals(timePeriodValue.value)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848465966
GPR[SPVAP]-1659848465966
GPR[EPVAP]-1659848466743
GPR[EPVS]-1659848466743
========
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
this.font=DEFAULT_TITLE_FONT;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848466745
GPR[SPVAP]-1659848466745
GPR[EPVAP]-1659848467544
GPR[EPVS]-1659848467544
========
if(!this.backgroundPaint.equals(borderStroke)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848467545
GPR[SPVAP]-1659848467545
GPR[EPVAP]-1659848468916
GPR[SPVATF]-1659848468916
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848470034
GPR[EPVS]-1659848470034
========
if(this.borderVisible!=that.showOutline){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848470036
GPR[SPVAP]-1659848470036
GPR[EPVAP]-1659848470825
GPR[EPVS]-1659848470825
========
if(this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT!=that.dotHeight){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848470826
GPR[SPVAP]-1659848470826
GPR[EPVAP]-1659848471601
GPR[EPVS]-1659848471601
========
if(this.borderVisible!=that.useOutlinePaint){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848471602
GPR[SPVAP]-1659848471602
GPR[EPVAP]-1659848472386
GPR[EPVS]-1659848472386
========
if(this.borderVisible!=that.drawSeriesLineAsPath){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848472388
GPR[SPVAP]-1659848472388
GPR[EPVAP]-1659848473191
GPR[EPVS]-1659848473191
========
if(this.borderVisible!=that.verticalTickLabels){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848473193
GPR[SPVAP]-1659848473193
GPR[EPVAP]-1659848473983
GPR[EPVS]-1659848473983
========
if(!ObjectUtilities.equal(this.borderStroke,that.lineStroke)){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848473985
GPR[SPVAP]-1659848473985
GPR[EPVAP]-1659848474793
GPR[EPVS]-1659848474793
========
if(!PaintUtilities.equal(this.paint,that.outlinePaint)){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848474795
GPR[SPVAP]-1659848474795
GPR[EPVAP]-1659848475594
GPR[EPVS]-1659848475594
========
if(!ObjectUtilities.equal(this.subtitles,that.foregroundAnnotations)){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848475596
GPR[SPVAP]-1659848475596
GPR[EPVAP]-1659848476373
GPR[EPVS]-1659848476373
========
if(!PaintUtilities.equal(this.paint,that.gridBandAlternatePaint)){
return false;
}
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848476374
GPR[SPVAP]-1659848476374
GPR[EPVAP]-1659848477164
GPR[EPVS]-1659848477164
========
if(!this.backgroundPaint.equals(paint)){
notifyListeners(new AxisChangeEvent(this));
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848477167
GPR[SPVAP]-1659848477167
GPR[EPVAP]-1659848477942
GPR[EPVS]-1659848477942
========
if(paint!=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848479608
GPR[SPVAP]-1659848479608
GPR[EPVAP]-1659848480404
GPR[EPVS]-1659848480404
========
if(paint!=backgroundImageAlpha){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848480406
GPR[SPVAP]-1659848480406
GPR[EPVAP]-1659848481196
GPR[EPVS]-1659848481196
========
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848481198
GPR[SPVAP]-1659848481198
GPR[EPVAP]-1659848482513
GPR[SPVATF]-1659848482513
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848483654
GPR[EPVS]-1659848483654
========
this.backgroundPaint=paint;
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848483655
GPR[SPVAP]-1659848483655
GPR[EPVAP]-1659848484974
GPR[SPVATF]-1659848484974
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848486098
GPR[EPVS]-1659848486098
========
notifyListeners(new DialLayerChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848486099
GPR[SPVAP]-1659848486099
GPR[EPVAP]-1659848486882
GPR[EPVS]-1659848486882
========
this.backgroundPaint=paint;
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848486884
GPR[SPVAP]-1659848486884
GPR[EPVAP]-1659848488195
GPR[SPVATF]-1659848488195
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848489358
GPR[EPVS]-1659848489358
========
this.paint=paint;
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848489360
GPR[SPVAP]-1659848489360
GPR[EPVAP]-1659848490161
GPR[EPVS]-1659848490161
========
fireChangeEvent();
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848490163
GPR[SPVAP]-1659848490163
GPR[EPVAP]-1659848490948
GPR[EPVS]-1659848490948
========
fireChangeEvent();
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848490949
GPR[SPVAP]-1659848490949
GPR[EPVAP]-1659848491728
GPR[EPVS]-1659848491728
========
this.backgroundPaint=paint;
fireChangeEvent();
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848491729
GPR[SPVAP]-1659848491729
GPR[EPVAP]-1659848492501
GPR[EPVS]-1659848492501
========
this.backgroundPaint=paint;
fireChangeEvent();
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848492509
GPR[SPVAP]-1659848492509
GPR[EPVAP]-1659848493300
GPR[EPVS]-1659848493300
========
this.paint=paint;
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848493302
GPR[SPVAP]-1659848493302
GPR[EPVAP]-1659848494093
GPR[EPVS]-1659848494093
========
this.paint=paint;
fireChangeEvent();
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848494094
GPR[SPVAP]-1659848494094
GPR[EPVAP]-1659848494866
GPR[EPVS]-1659848494866
========
this.paint=paint;
fireChangeEvent();
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848494867
GPR[SPVAP]-1659848494867
GPR[EPVAP]-1659848495649
GPR[EPVS]-1659848495649
========
this.renderingHints=renderingHints;
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848495652
GPR[SPVAP]-1659848495652
GPR[EPVAP]-1659848496967
GPR[SPVATF]-1659848496967
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848498109
GPR[EPVS]-1659848498109
========
fireChartChanged();
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848498110
GPR[SPVAP]-1659848498110
GPR[EPVAP]-1659848499447
GPR[SPVATF]-1659848499447
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848500572
GPR[EPVS]-1659848500572
========
this.renderingHints=renderingHints;
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848500574
GPR[SPVAP]-1659848500574
GPR[EPVAP]-1659848501893
GPR[SPVATF]-1659848501893
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848503015
GPR[EPVS]-1659848503015
========
fireChartChanged();
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848503017
GPR[SPVAP]-1659848503017
GPR[EPVAP]-1659848504594
GPR[SPVATF]-1659848504594
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848505725
GPR[EPVS]-1659848505725
========
this.renderingHints=renderingHints;
fireChartChanged();
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848505727
GPR[SPVAP]-1659848505727
GPR[EPVAP]-1659848507074
GPR[SPVATF]-1659848507074
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848508204
GPR[EPVS]-1659848508204
========
this.renderingHints=renderingHints;
fireChartChanged();
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848508205
GPR[SPVAP]-1659848508205
GPR[EPVAP]-1659848511570
GPR[SPVATF]-1659848511570
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848512735
GPR[EPVS]-1659848512735
========
notifyListeners(new TitleChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848512736
GPR[SPVAP]-1659848512736
GPR[EPVAP]-1659848513524
GPR[EPVS]-1659848513524
========
notifyListeners(new TitleChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848513526
GPR[SPVAP]-1659848513526
GPR[EPVAP]-1659848514309
GPR[EPVS]-1659848514309
========
this.backgroundPaint=paint;
notifyListeners(new TitleChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848514310
GPR[SPVAP]-1659848514310
GPR[EPVAP]-1659848515127
GPR[EPVS]-1659848515128
========
this.backgroundPaint=paint;
notifyListeners(new TitleChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848515129
GPR[SPVAP]-1659848515129
GPR[EPVAP]-1659848515936
GPR[EPVS]-1659848515936
========
notifyListeners(new MarkerChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848515937
GPR[SPVAP]-1659848515937
GPR[EPVAP]-1659848516742
GPR[EPVS]-1659848516742
========
notifyListeners(new MarkerChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848516743
GPR[SPVAP]-1659848516743
GPR[EPVAP]-1659848517528
GPR[EPVS]-1659848517528
========
this.backgroundPaint=paint;
notifyListeners(new MarkerChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848517530
GPR[SPVAP]-1659848517530
GPR[EPVAP]-1659848518306
GPR[EPVS]-1659848518306
========
this.backgroundPaint=paint;
notifyListeners(new MarkerChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848518308
GPR[SPVAP]-1659848518308
GPR[EPVAP]-1659848519096
GPR[EPVS]-1659848519096
========
notifyListeners(new DialLayerChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848519097
GPR[SPVAP]-1659848519097
GPR[EPVAP]-1659848519874
GPR[EPVS]-1659848519874
========
this.backgroundPaint=paint;
notifyListeners(new DialLayerChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848519876
GPR[SPVAP]-1659848519876
GPR[EPVAP]-1659848520705
GPR[EPVS]-1659848520705
========
this.backgroundPaint=paint;
notifyListeners(new DialLayerChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848520706
GPR[SPVAP]-1659848520706
GPR[EPVAP]-1659848521480
GPR[EPVS]-1659848521480
========
this.paint=paint;
notifyListeners(new DialLayerChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848521482
GPR[SPVAP]-1659848521482
GPR[EPVAP]-1659848522252
GPR[EPVS]-1659848522252
========
this.paint=paint;
notifyListeners(new DialLayerChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848522254
GPR[SPVAP]-1659848522254
GPR[EPVAP]-1659848523024
GPR[EPVS]-1659848523024
========
notifyListeners(new RendererChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848523027
GPR[SPVAP]-1659848523027
GPR[EPVAP]-1659848523802
GPR[EPVS]-1659848523802
========
notifyListeners(new RendererChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848523804
GPR[SPVAP]-1659848523804
GPR[EPVAP]-1659848524585
GPR[EPVS]-1659848524585
========
this.backgroundPaint=paint;
notifyListeners(new RendererChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848524587
GPR[SPVAP]-1659848524587
GPR[EPVAP]-1659848525384
GPR[EPVS]-1659848525384
========
this.backgroundPaint=paint;
notifyListeners(new RendererChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848525386
GPR[SPVAP]-1659848525386
GPR[EPVAP]-1659848526164
GPR[EPVS]-1659848526164
========
notifyListeners(new AxisChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848526166
GPR[SPVAP]-1659848526166
GPR[EPVAP]-1659848526949
GPR[EPVS]-1659848526949
========
notifyListeners(new AxisChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848526951
GPR[SPVAP]-1659848526951
GPR[EPVAP]-1659848527760
GPR[EPVS]-1659848527760
========
this.backgroundPaint=paint;
notifyListeners(new AxisChangeEvent(this));
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848527761
GPR[SPVAP]-1659848527761
GPR[EPVAP]-1659848528553
GPR[EPVS]-1659848528553
========
this.backgroundPaint=paint;
notifyListeners(new AxisChangeEvent(this));
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848528555
GPR[SPVAP]-1659848528555
GPR[EPVAP]-1659848529356
GPR[EPVS]-1659848529356
========
if(notify){
fireChangeEvent();
}
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848529359
GPR[SPVAP]-1659848529359
GPR[EPVAP]-1659848530128
GPR[EPVS]-1659848530128
========
if(notify){
fireChangeEvent();
}
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848530130
GPR[SPVAP]-1659848530130
GPR[EPVAP]-1659848530911
GPR[EPVS]-1659848530911
========
this.backgroundPaint=paint;
if(notify){
fireChangeEvent();
}
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848530914
GPR[SPVAP]-1659848530914
GPR[EPVAP]-1659848531689
GPR[EPVS]-1659848531689
========
this.backgroundPaint=paint;
if(notify){
fireChangeEvent();
}
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848531690
GPR[SPVAP]-1659848531690
GPR[EPVAP]-1659848532473
GPR[EPVS]-1659848532473
========
if(paint!=null){
if(this.backgroundPaint!=null){
if(this.backgroundPaint.equals(paint)){
return ;
}
}
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848532474
GPR[SPVAP]-1659848532474
GPR[EPVAP]-1659848533774
GPR[SPVATF]-1659848533774
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848534914
GPR[EPVS]-1659848534914
========
if(paint==null){
if(this.backgroundPaint!=null){
if(this.backgroundPaint.equals(paint)){
return ;
}
}
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848534915
GPR[SPVAP]-1659848534915
GPR[EPVAP]-1659848536222
GPR[SPVATF]-1659848536222
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848537352
GPR[EPVS]-1659848537352
========
if(padding==null){
throw new IllegalArgumentException("Null \'insets\' argument.");
}
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848537354
GPR[SPVAP]-1659848537354
GPR[EPVAP]-1659848538657
GPR[SPVATF]-1659848538657
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848539836
GPR[EPVS]-1659848539836
========
this.padding=insets;
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848539838
GPR[SPVAP]-1659848539838
GPR[EPVAP]-1659848540608
GPR[EPVS]-1659848540608
========
if(padding==null){
throw new IllegalArgumentException("Null \'insets\' argument.");
}
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848540609
GPR[SPVAP]-1659848540609
GPR[EPVAP]-1659848541914
GPR[SPVATF]-1659848541914
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848543072
GPR[EPVS]-1659848543072
========
if(padding==null){
throw new IllegalArgumentException("Null \'insets\' argument.");
}
this.paint=paint;
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848543073
GPR[SPVAP]-1659848543073
GPR[EPVAP]-1659848543870
GPR[EPVS]-1659848543870
========
if(padding==null){
throw new IllegalArgumentException("Null \'insets\' argument.");
}
this.paint=paint;
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848543871
GPR[SPVAP]-1659848543871
GPR[EPVAP]-1659848544642
GPR[EPVS]-1659848544642
========
if(paint!=null){
if(this.borderPaint!=null){
if(this.borderPaint.equals(paint)){
return ;
}
}
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848544644
GPR[SPVAP]-1659848544644
GPR[EPVAP]-1659848545969
GPR[SPVATF]-1659848545969
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848547143
GPR[EPVS]-1659848547143
========
if(paint!=null){
this.outlinePaint=paint;
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848547146
GPR[SPVAP]-1659848547146
GPR[EPVAP]-1659848547954
GPR[EPVS]-1659848547954
========
if(paint!=null){
if(this.borderPaint!=null){
if(this.borderPaint.equals(paint)){
return ;
}
}
this.outlinePaint=paint;

this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848547956
GPR[SPVAP]-1659848547956
GPR[EPVAP]-1659848548737
GPR[EPVS]-1659848548737
========
if(paint==null){
if(this.borderPaint!=null){
if(this.borderPaint.equals(paint)){
return ;
}
}
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848548739
GPR[SPVAP]-1659848548739
GPR[EPVAP]-1659848550071
GPR[SPVATF]-1659848550071
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848551235
GPR[EPVS]-1659848551235
========
this.subtitles=new java.util.ArrayList();
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848551237
GPR[SPVAP]-1659848551237
GPR[EPVAP]-1659848552549
GPR[SPVATF]-1659848552549
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848553676
GPR[EPVS]-1659848553676
========
this.subtitles=new java.util.ArrayList();
if(paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848553678
GPR[SPVAP]-1659848553678
GPR[EPVAP]-1659848554978
GPR[SPVATF]-1659848554978
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848556152
GPR[EPVS]-1659848556152
========
if(borderStroke!=null&&paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848556153
GPR[SPVAP]-1659848556154
GPR[EPVAP]-1659848557486
GPR[SPVATF]-1659848557486
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848558664
GPR[EPVS]-1659848558664
========
if(this.paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848558666
GPR[SPVAP]-1659848558666
GPR[EPVAP]-1659848559462
GPR[EPVS]-1659848559462
========
if(backgroundPaint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848559464
GPR[SPVAP]-1659848559464
GPR[EPVAP]-1659848560750
GPR[SPVATF]-1659848560750
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848561895
GPR[EPVS]-1659848561895
========
if(this.paint==null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848561898
GPR[SPVAP]-1659848561898
GPR[EPVAP]-1659848562666
GPR[EPVS]-1659848562666
========
if(paint!=null&&borderStroke!=null){
this.backgroundPaint=paint;
fireChartChanged();
}

========
MM Copying to MM
GPR[SPVS]-1659848562668
GPR[SPVAP]-1659848562668
GPR[EPVAP]-1659848563977
GPR[SPVATF]-1659848563977
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848565132
GPR[EPVS]-1659848565132
========
if(this.backgroundPaint!=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT){
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}
}else {
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}
}

========
MM Copying to MM
GPR[SPVS]-1659848567372
GPR[SPVAP]-1659848567372
GPR[EPVAP]-1659848568184
GPR[EPVS]-1659848568184
========
if(this.backgroundPaint!=backgroundImageAlpha){
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}
}else {
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}
}

========
MM Copying to MM
GPR[SPVS]-1659848568186
GPR[SPVAP]-1659848568186
GPR[EPVAP]-1659848569000
GPR[EPVS]-1659848569000
========
if(backgroundPaint!=null){
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}
}else {
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}
}

========
MM Copying to MM
GPR[SPVS]-1659848569004
GPR[SPVAP]-1659848569004
GPR[EPVAP]-1659848570451
GPR[SPVATF]-1659848570451
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848571735
GPR[EPVS]-1659848571735
========
if(this.backgroundPaint==null){
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}
}else {
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}
}

========
MM Copying to MM
GPR[SPVS]-1659848571742
GPR[SPVAP]-1659848571742
GPR[EPVAP]-1659848573166
GPR[SPVATF]-1659848573166
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848574451
GPR[EPVS]-1659848574451
========
if(backgroundPaint==null){
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}
}else {
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}
}

========
MM Copying to MM
GPR[SPVS]-1659848574452
GPR[SPVAP]-1659848574452
GPR[EPVAP]-1659848575881
GPR[SPVATF]-1659848575881
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848577149
GPR[EPVS]-1659848577149
========
if(plot.getDomainGridlineStroke()==null){
stroke=CategoryPlot.DEFAULT_GRIDLINE_STROKE;
}
if(this.backgroundPaint!=null){
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}
}else {
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}
}

========
MM Copying to MM
GPR[SPVS]-1659848577151
GPR[SPVAP]-1659848577151
GPR[EPVAP]-1659848578014
GPR[EPVS]-1659848578014
========
if(plot.getRangeGridlineStroke()==null){
stroke=CategoryPlot.DEFAULT_GRIDLINE_STROKE;
}
if(this.backgroundPaint!=null){
if(!this.backgroundPaint.equals(paint)){
this.backgroundPaint=paint;
fireChartChanged();
}
}else {
if(paint!=null){
this.backgroundPaint=paint;
fireChartChanged();
}
}

========
MM Copying to MM
GPR[SPVS]-1659848578016
GPR[SPVAP]-1659848578016
GPR[EPVAP]-1659848578839
GPR[EPVS]-1659848578839
GPR[ESUN]-1659848578845
GPR[SSUN]-1659848578845
org.jfree.chart.JFreeChart,960
GPR[ESUN]-1659848579404
GPR[SSUN]-1659848579404
org.jfree.chart.JFreeChart,961
GPR[ESUN]-1659848579908
GPR[SSUN]-1659848579908
org.jfree.chart.JFreeChart,962
GPR[ESUN]-1659848580377
GPR[SSUN]-1659848580377
org.jfree.chart.JFreeChart,972
Find no block!
GPR[SSUN]-1659848580839
org.jfree.chart.JFreeChart,628
GPR[ESUN]-1659848585159
GPR[SSUN]-1659848585159
org.jfree.chart.JFreeChart,641
========
if(start==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848587455
GPR[SPVAP]-1659848587455
GPR[EPVAP]-1659848589241
GPR[EPVS]-1659848589241
========
if(seen==minStart){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848589243
GPR[SPVAP]-1659848589243
GPR[EPVAP]-1659848590984
GPR[EPVS]-1659848590984
========
if(seen==maxStart){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848590986
GPR[SPVAP]-1659848590986
GPR[EPVAP]-1659848592774
GPR[EPVS]-1659848592774
========
if(middle==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848592776
GPR[SPVAP]-1659848592776
GPR[EPVAP]-1659848594459
GPR[EPVS]-1659848594459
========
if(seen==minMiddle){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848594461
GPR[SPVAP]-1659848594461
GPR[EPVAP]-1659848596196
GPR[EPVS]-1659848596196
========
if(seen==maxMiddle){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848596198
GPR[SPVAP]-1659848596198
GPR[EPVAP]-1659848597856
GPR[EPVS]-1659848597856
========
if(end==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848597858
GPR[SPVAP]-1659848597858
GPR[EPVAP]-1659848599509
GPR[EPVS]-1659848599509
========
if(seen==minEnd){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848599511
GPR[SPVAP]-1659848599511
GPR[EPVAP]-1659848601186
GPR[EPVS]-1659848601186
========
if(seen==maxEnd){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848601188
GPR[SPVAP]-1659848601188
GPR[EPVAP]-1659848602818
GPR[EPVS]-1659848602818
========
if(seen==null){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848602821
GPR[SPVAP]-1659848602821
GPR[EPVAP]-1659848604444
GPR[EPVS]-1659848604444
========
if(index>=getDatasetCount()){
return ;
}
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848604445
GPR[SPVAP]-1659848604445
GPR[EPVAP]-1659848606096
GPR[EPVS]-1659848606096
========
if(index>=getDatasetCount()){
return ;
}
if(seen==null){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848606098
GPR[SPVAP]-1659848606098
GPR[EPVAP]-1659848607790
GPR[EPVS]-1659848607790
========
fireChartChanged();
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848607791
GPR[SPVAP]-1659848607791
GPR[EPVAP]-1659848612051
GPR[SPVATF]-1659848612051
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848613184
GPR[EPVS]-1659848613184
========
if(seen==ORIENTATION_VERTICAL){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848613186
GPR[SPVAP]-1659848613186
GPR[EPVAP]-1659848613968
GPR[EPVS]-1659848613968
========
if(index==ORIENTATION_VERTICAL){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848613969
GPR[SPVAP]-1659848613969
GPR[EPVAP]-1659848614786
GPR[EPVS]-1659848614786
========
if(seen!=index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848614788
GPR[SPVAP]-1659848614788
GPR[EPVAP]-1659848616113
GPR[SPVATF]-1659848616113
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848617285
GPR[EPVS]-1659848617285
========
if(index!=-1){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848617286
GPR[SPVAP]-1659848617286
GPR[EPVAP]-1659848618589
GPR[SPVATF]-1659848618589
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848619758
GPR[EPVS]-1659848619758
========
if(seen==-1){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848619760
GPR[SPVAP]-1659848619760
GPR[EPVAP]-1659848621097
GPR[SPVATF]-1659848621097
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848622240
GPR[EPVS]-1659848622240
========
if(seen!=-1){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848622242
GPR[SPVAP]-1659848622242
GPR[EPVAP]-1659848623528
GPR[SPVATF]-1659848623528
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848624668
GPR[EPVS]-1659848624668
========
removeValue(index);
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848624670
GPR[SPVAP]-1659848624670
GPR[EPVAP]-1659848625444
GPR[EPVS]-1659848625444
========
removeRow(index);
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848625445
GPR[SPVAP]-1659848625445
GPR[EPVAP]-1659848626228
GPR[EPVS]-1659848626228
========
fireChangeEvent();
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848626230
GPR[SPVAP]-1659848626230
GPR[EPVAP]-1659848627006
GPR[EPVS]-1659848627006
========
if(notify){
fireChangeEvent();
}
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848627007
GPR[SPVAP]-1659848627007
GPR[EPVAP]-1659848627845
GPR[EPVS]-1659848627845
========
if(seriesNumber==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848627847
GPR[SPVAP]-1659848627847
GPR[EPVAP]-1659848628627
GPR[EPVS]-1659848628627
========
invalidateRangeInfo();
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848628628
GPR[SPVAP]-1659848628628
GPR[EPVAP]-1659848629393
GPR[EPVS]-1659848629393
========
fireSeriesChanged();
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848629395
GPR[SPVAP]-1659848629395
GPR[EPVAP]-1659848630206
GPR[EPVS]-1659848630206
========
if(seen==Layer.FOREGROUND){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848630208
GPR[SPVAP]-1659848630208
GPR[EPVAP]-1659848631003
GPR[EPVS]-1659848631003
========
if(seen==FOREGROUND){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848631004
GPR[SPVAP]-1659848631004
GPR[EPVAP]-1659848631824
GPR[EPVS]-1659848631824
========
if(seen==start){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848631825
GPR[SPVAP]-1659848631825
GPR[EPVAP]-1659848632611
GPR[EPVS]-1659848632611
========
if(index==-1){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848632614
GPR[SPVAP]-1659848632614
GPR[EPVAP]-1659848633954
GPR[SPVATF]-1659848633954
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848635112
GPR[EPVS]-1659848635112
========
if(seen==Layer.BACKGROUND){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848635115
GPR[SPVAP]-1659848635115
GPR[EPVAP]-1659848635911
GPR[EPVS]-1659848635911
========
if(seen==BACKGROUND){
return (LegendTitle)subtitle;
}else {
seen++;
}

========
MM Copying to MM
GPR[SPVS]-1659848635914
GPR[SPVAP]-1659848635914
GPR[EPVAP]-1659848636687
GPR[EPVS]-1659848636687
========
while(iterator.hasNext()){
if((DialPointer)iterator.next().getDatasetIndex()==index){
return (DialPointer)iterator.next();
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848640220
GPR[SPVAP]-1659848640220
GPR[EPVAP]-1659848641004
GPR[EPVS]-1659848641004
========
while(iterator.hasNext()){
if(subtitle!=null){
addSubtitle(subtitle);
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848641005
GPR[SPVAP]-1659848641005
GPR[EPVAP]-1659848641802
GPR[EPVS]-1659848641802
========
while(iterator.hasNext()){
seen++;
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848641804
GPR[SPVAP]-1659848641804
GPR[EPVAP]-1659848643106
GPR[SPVATF]-1659848643106
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848644278
GPR[EPVS]-1659848644278
========
while(iterator.hasNext()){
if(index>=0){
(KeyedObjects)iterator.next().removeValue(index);
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848644280
GPR[SPVAP]-1659848644280
GPR[EPVAP]-1659848644887
GPR[EPVS]-1659848644887
========
while(iterator.hasNext()){
if(index<0){
this.subtitles.add((Task)iterator.next().getDescription());
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848644889
GPR[SPVAP]-1659848644889
GPR[EPVAP]-1659848645661
GPR[EPVS]-1659848645661
========
while(iterator.hasNext()){
(Marker)iterator.next().removeChangeListener(this);
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848645662
GPR[SPVAP]-1659848645662
GPR[EPVAP]-1659848646280
GPR[EPVS]-1659848646280
========
while(iterator.hasNext()){
if(!ObjectUtilities.equal(getStroke((Comparable)iterator.next()),borderStroke)){
return false;
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848646281
GPR[SPVAP]-1659848646281
GPR[EPVAP]-1659848647083
GPR[EPVS]-1659848647083
========
while(iterator.hasNext()){
if(!PaintUtilities.equal(getPaint((Comparable)iterator.next()),borderPaint)){
return false;
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848647085
GPR[SPVAP]-1659848647085
GPR[EPVAP]-1659848647862
GPR[EPVS]-1659848647862
========
while(iterator.hasNext()){
if((TimeSeries)iterator.next().getKey()!=null){
result=(TimeSeries)iterator.next();
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848647865
GPR[SPVAP]-1659848647865
GPR[EPVAP]-1659848648651
GPR[EPVS]-1659848648651
========
while(iterator.hasNext()){
previous=(ValueTick)iterator.next().getValue();
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848648654
GPR[SPVAP]-1659848648654
GPR[EPVAP]-1659848649428
GPR[EPVS]-1659848649428
========
while(iterator.hasNext()){
fillBand=!borderVisible;
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848649429
GPR[SPVAP]-1659848649429
GPR[EPVAP]-1659848650205
GPR[EPVS]-1659848650205
========
while(iterator.hasNext()){
previous=(ValueTick)iterator.next().getValue();
fillBand=!borderVisible;

Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848650207
GPR[SPVAP]-1659848650207
GPR[EPVAP]-1659848651010
GPR[EPVS]-1659848651010
========
while(iterator.hasNext()){
previous=(ValueTick)iterator.next().getValue();
fillBand=!borderVisible;
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848651011
GPR[SPVAP]-1659848651011
GPR[EPVAP]-1659848651791
GPR[EPVS]-1659848651791
========
while(iterator.hasNext()){
previous=(ValueTick)iterator.next().getValue();
previous=(ValueTick)iterator.next().getValue();
fillBand=!borderVisible;

Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848651793
GPR[SPVAP]-1659848651793
GPR[EPVAP]-1659848652564
GPR[EPVS]-1659848652564
========
while(iterator.hasNext()){
fillBand=!borderVisible;
previous=(ValueTick)iterator.next().getValue();
fillBand=!borderVisible;

Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848652565
GPR[SPVAP]-1659848652565
GPR[EPVAP]-1659848653335
GPR[EPVS]-1659848653335
========
while(iterator.hasNext()){
previous=(ValueTick)iterator.next().getValue();
fillBand=!borderVisible;
previous=(ValueTick)iterator.next().getValue();
fillBand=!borderVisible;

Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848653336
GPR[SPVAP]-1659848653336
GPR[EPVAP]-1659848654805
GPR[EPVS]-1659848654805
========
while(iterator.hasNext()){
if(!PaintUtilities.equal((Paint)(Map.Entry)iterator.next().getValue(),borderPaint)){
return false;
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848654814
GPR[SPVAP]-1659848654814
GPR[EPVAP]-1659848656389
GPR[EPVS]-1659848656389
========
if(index>=getDatasetCount()){
return ;
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848656391
GPR[SPVAP]-1659848656391
GPR[EPVAP]-1659848657206
GPR[EPVS]-1659848657206
========
while(iterator.hasNext()){
if(canPrune((Number)iterator.next())){
removeAllValuesForX((Number)iterator.next());
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848657207
GPR[SPVAP]-1659848657207
GPR[EPVAP]-1659848658000
GPR[EPVS]-1659848658000
========
while(iterator.hasNext()){
new java.util.ArrayList().add((KeyedObject)iterator.next().getKey());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848658002
GPR[SPVAP]-1659848658002
GPR[EPVAP]-1659848658826
GPR[EPVS]-1659848658826
========
Collections.sort(this.subtitles);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848658829
GPR[SPVAP]-1659848658829
GPR[EPVAP]-1659848659606
GPR[EPVS]-1659848659606
========
while(iterator.hasNext()){
clearDomainMarkers((Integer)iterator.next().intValue());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848659608
GPR[SPVAP]-1659848659608
GPR[EPVAP]-1659848660385
GPR[EPVS]-1659848660385
========
while(iterator.hasNext()){
clearRangeMarkers((Integer)iterator.next().intValue());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848660386
GPR[SPVAP]-1659848660386
GPR[EPVAP]-1659848661166
GPR[EPVS]-1659848661166
========
while(iterator.hasNext()){
clone.data.add((KeyedObject)iterator.next().clone());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848661167
GPR[SPVAP]-1659848661167
GPR[EPVAP]-1659848661935
GPR[EPVS]-1659848661935
========
clone.data=new java.util.ArrayList();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848661936
GPR[SPVAP]-1659848661936
GPR[EPVAP]-1659848662755
GPR[EPVS]-1659848662755
========
while(iterator.hasNext()){
if(!new ArrayList().contains((Comparable)iterator.next())){
new ArrayList().add((Comparable)iterator.next());
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848662757
GPR[SPVAP]-1659848662757
GPR[EPVAP]-1659848664077
GPR[SPVATF]-1659848664077
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848665194
GPR[EPVS]-1659848665194
========
while(iterator.hasNext()){
if((Arc2D)iterator.next()!=null){
Comparable getSectionKey(seen)=getSectionKey(seen);
paint=lookupSectionPaint(getSectionKey(seen));
outlinePaint=lookupSectionOutlinePaint(getSectionKey(seen));
outlineStroke=lookupSectionOutlineStroke(getSectionKey(seen));
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848665196
GPR[SPVAP]-1659848665196
GPR[EPVAP]-1659848665821
GPR[EPVS]-1659848665821
========
while(iterator.hasNext()){
if((Arc2D)iterator.next()!=null){
Comparable getSectionKey(seen)=getSectionKey(seen);
paint=lookupSectionPaint(getSectionKey(seen));
outlinePaint=lookupSectionOutlinePaint(getSectionKey(seen));
outlineStroke=lookupSectionOutlineStroke(getSectionKey(seen));
}
seen++;

Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848665823
GPR[SPVAP]-1659848665823
GPR[EPVAP]-1659848666439
GPR[EPVS]-1659848666439
========
while(iterator.hasNext()){
if((Arc2D)iterator.next()!=null){
Comparable getSectionKey(seen)=getSectionKey(seen);
paint=lookupSectionPaint(getSectionKey(seen),true);
outlinePaint=lookupSectionOutlinePaint(getSectionKey(seen));
outlineStroke=lookupSectionOutlineStroke(getSectionKey(seen));
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848666441
GPR[SPVAP]-1659848666441
GPR[EPVAP]-1659848667066
GPR[EPVS]-1659848667066
========
while(iterator.hasNext()){
if((Arc2D)iterator.next()!=null){
Comparable getSectionKey(seen)=getSectionKey(seen);
paint=lookupSectionPaint(getSectionKey(seen),true);
outlinePaint=lookupSectionOutlinePaint(getSectionKey(seen));
outlineStroke=lookupSectionOutlineStroke(getSectionKey(seen));
}
seen++;

Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848667068
GPR[SPVAP]-1659848667068
GPR[EPVAP]-1659848667673
GPR[EPVS]-1659848667673
========
while(iterator.hasNext()){
if(new File(System.getProperty("java.io.tmpdir"),(String)iterator.next()).exists()){
new File(System.getProperty("java.io.tmpdir"),(String)iterator.next()).delete();
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848667675
GPR[SPVAP]-1659848667675
GPR[EPVAP]-1659848668476
GPR[EPVS]-1659848668476
========
iterator.next();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848668477
GPR[SPVAP]-1659848668477
GPR[EPVAP]-1659848669762
GPR[SPVATF]-1659848669762
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848670874
GPR[EPVS]-1659848670874
========
while(iterator.hasNext()){
clone.rows.add((KeyedObjects)iterator.next().clone());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848670876
GPR[SPVAP]-1659848670876
GPR[EPVAP]-1659848671644
GPR[EPVS]-1659848671644
========
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848671645
GPR[SPVAP]-1659848671645
GPR[EPVAP]-1659848672427
GPR[EPVS]-1659848672427
========
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848672428
GPR[SPVAP]-1659848672428
GPR[EPVAP]-1659848673206
GPR[EPVS]-1659848673206
========
clone.rows=new java.util.ArrayList(this.rows.size());
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848673208
GPR[SPVAP]-1659848673208
GPR[EPVAP]-1659848673994
GPR[EPVS]-1659848673994
========
while(iterator.hasNext()){
categoryIndex=subtitle+1;
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848673995
GPR[SPVAP]-1659848673995
GPR[EPVAP]-1659848674762
GPR[EPVS]-1659848674762
========
while(iterator.hasNext()){
if(index>0){
RegularTimePeriod (TimeSeries)iterator.next().getTimePeriod(0)=(TimeSeries)iterator.next().getTimePeriod(0);
RegularTimePeriod (TimeSeries)iterator.next().getTimePeriod(index-1)=(TimeSeries)iterator.next().getTimePeriod(index-1);
if(!borderVisible){
temp=new Range(getX((TimeSeries)iterator.next().getTimePeriod(0)),getX((TimeSeries)iterator.next().getTimePeriod(index-1)));
}
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848674764
GPR[SPVAP]-1659848674764
GPR[EPVAP]-1659848675367
GPR[EPVS]-1659848675367
========
while(iterator.hasNext()){
if((XYDataset)iterator.next()!=null){
XYItemRenderer getRendererForDataset((XYDataset)iterator.next())=getRendererForDataset((XYDataset)iterator.next());
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848675373
GPR[SPVAP]-1659848675373
GPR[EPVAP]-1659848675983
GPR[EPVS]-1659848675983
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848675984
GPR[SPVAP]-1659848675984
GPR[EPVAP]-1659848676783
GPR[EPVS]-1659848676783
========
this.subtitles.add(index,subtitle);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848676785
GPR[SPVAP]-1659848676785
GPR[EPVAP]-1659848677570
GPR[EPVS]-1659848677570
========
subtitle.addChangeListener(this);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848677571
GPR[SPVAP]-1659848677571
GPR[EPVAP]-1659848678350
GPR[EPVS]-1659848678351
========
fireChartChanged();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848678352
GPR[SPVAP]-1659848678352
GPR[EPVAP]-1659848679684
GPR[SPVATF]-1659848679684
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848680832
GPR[EPVS]-1659848680832
========
while(iterator.hasNext()){
if((MeterInterval)iterator.next().getBackgroundPaint()==null){
color=(MeterInterval)iterator.next().getOutlinePaint();
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848680834
GPR[SPVAP]-1659848680834
GPR[EPVAP]-1659848681606
GPR[EPVS]-1659848681606
========
while(iterator.hasNext()){
new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()).setDataset(getDataset());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848681607
GPR[SPVAP]-1659848681607
GPR[EPVAP]-1659848682390
GPR[EPVS]-1659848682390
========
while(iterator.hasNext()){
new LegendItemCollection().add(new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()));
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848682391
GPR[SPVAP]-1659848682391
GPR[EPVAP]-1659848683172
GPR[EPVS]-1659848683172
========
while(iterator.hasNext()){
if((MeterInterval)iterator.next().getBackgroundPaint()==null){
color=(MeterInterval)iterator.next().getOutlinePaint();
}
new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()).setDataset(getDataset());
new LegendItemCollection().add(new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()));

Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848683174
GPR[SPVAP]-1659848683174
GPR[EPVAP]-1659848683948
GPR[EPVS]-1659848683948
========
this.subtitles.add(subtitle);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848683950
GPR[SPVAP]-1659848683950
GPR[EPVAP]-1659848684726
GPR[EPVS]-1659848684726
========
subtitle.addChangeListener(this);
fireChartChanged();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848684727
GPR[SPVAP]-1659848684727
GPR[EPVAP]-1659848685542
GPR[EPVS]-1659848685542
========
(ImageWriter)iterator.next().getDefaultWriteParam().setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848685544
GPR[SPVAP]-1659848685544
GPR[EPVAP]-1659848686163
GPR[EPVS]-1659848686163
========
(ImageWriter)iterator.next().getDefaultWriteParam().setCompressionQuality(this.backgroundImageAlpha);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848686164
GPR[SPVAP]-1659848686164
GPR[EPVAP]-1659848686774
GPR[EPVS]-1659848686774
========
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848686776
GPR[SPVAP]-1659848686776
GPR[EPVAP]-1659848687568
GPR[EPVS]-1659848687568
========
while(iterator.hasNext()){
if(plot.isAngleLabelsVisible()){
int p.x=p.x;
int p.y=p.y;
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848687569
GPR[SPVAP]-1659848687569
GPR[EPVAP]-1659848688175
GPR[EPVS]-1659848688175
========
iterator=tminor.next();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848688178
GPR[SPVAP]-1659848688178
GPR[EPVAP]-1659848688968
GPR[EPVS]-1659848688968
========
while(iterator.hasNext()){
result=(CategoryPlot)plot.getDomainAxis(index);
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848688970
GPR[SPVAP]-1659848688970
GPR[EPVAP]-1659848689739
GPR[EPVS]-1659848689739
========
while(iterator.hasNext()){
result=(CategoryPlot)plot.getRangeAxis(index);
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848689740
GPR[SPVAP]-1659848689740
GPR[EPVAP]-1659848690525
GPR[EPVS]-1659848690525
========
while(iterator.hasNext()){
result=(XYPlot)plot.getDomainAxis(index);
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848690527
GPR[SPVAP]-1659848690527
GPR[EPVAP]-1659848691310
GPR[EPVS]-1659848691310
========
while(iterator.hasNext()){
result=(XYPlot)plot.getRangeAxis(index);
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848691311
GPR[SPVAP]-1659848691311
GPR[EPVAP]-1659848692088
GPR[EPVS]-1659848692088
========
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT>=0){
borderVisible=false;
iterator.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848692090
GPR[SPVAP]-1659848692090
GPR[EPVAP]-1659848692907
GPR[EPVS]-1659848692907
========
this.iterator.remove(index);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848692911
GPR[SPVAP]-1659848692911
GPR[EPVAP]-1659848693696
GPR[EPVS]-1659848693696
========
fireChangeEvent();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848693698
GPR[SPVAP]-1659848693698
GPR[EPVAP]-1659848694464
GPR[EPVS]-1659848694464
========
this.iterator.remove(index);
fireChangeEvent();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848694466
GPR[SPVAP]-1659848694466
GPR[EPVAP]-1659848695233
GPR[EPVS]-1659848695233
========
removeValue(index);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848695235
GPR[SPVAP]-1659848695235
GPR[EPVAP]-1659848696008
GPR[EPVS]-1659848696008
========
removeRow(index);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848696010
GPR[SPVAP]-1659848696010
GPR[EPVAP]-1659848696830
GPR[EPVS]-1659848696830
========
invalidateRangeInfo();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848696832
GPR[SPVAP]-1659848696832
GPR[EPVAP]-1659848697604
GPR[EPVS]-1659848697604
========
fireSeriesChanged();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848697605
GPR[SPVAP]-1659848697605
GPR[EPVAP]-1659848698373
GPR[EPVS]-1659848698373
========
while(iterator.hasNext()){
fireSeriesChanged();
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848698374
GPR[SPVAP]-1659848698374
GPR[EPVAP]-1659848699170
GPR[EPVS]-1659848699171
========
if(notify){
fireChangeEvent();
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848699173
GPR[SPVAP]-1659848699173
GPR[EPVAP]-1659848700020
GPR[EPVS]-1659848700020
========
if(null!=null){
result=Collections.unmodifiableCollection(result);
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848700022
GPR[SPVAP]-1659848700022
GPR[EPVAP]-1659848700825
GPR[EPVS]-1659848700825
========
if(index>=0){
return iterator.getObject(index);
}else {
return null;
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848700827
GPR[SPVAP]-1659848700827
GPR[EPVAP]-1659848701630
GPR[EPVS]-1659848701631
========
if((DialScale)this.iterator.get(index)!=null){
removeLayer(existing);
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848701632
GPR[SPVAP]-1659848701632
GPR[EPVAP]-1659848702449
GPR[EPVS]-1659848702449
========
this.index=index;
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848702450
GPR[SPVAP]-1659848702450
GPR[EPVAP]-1659848703228
GPR[EPVS]-1659848703228
========
configureDomainAxes();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848703230
GPR[SPVAP]-1659848703230
GPR[EPVAP]-1659848704002
GPR[EPVS]-1659848704002
========
configureRangeAxes();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848704004
GPR[SPVAP]-1659848704004
GPR[EPVAP]-1659848704788
GPR[EPVS]-1659848704788
========
configureDomainAxes();
configureRangeAxes();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848704790
GPR[SPVAP]-1659848704790
GPR[EPVAP]-1659848705575
GPR[EPVS]-1659848705575
========
configureDomainAxes();
if(notify){
fireChangeEvent();
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848705577
GPR[SPVAP]-1659848705577
GPR[EPVAP]-1659848706369
GPR[EPVS]-1659848706369
========
configureRangeAxes();
if(notify){
fireChangeEvent();
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848706370
GPR[SPVAP]-1659848706370
GPR[EPVAP]-1659848707150
GPR[EPVS]-1659848707150
========
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848707152
GPR[SPVAP]-1659848707152
GPR[EPVAP]-1659848707942
GPR[EPVS]-1659848707942
========
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=Math.max(this.size,index+1);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848707944
GPR[SPVAP]-1659848707944
GPR[EPVAP]-1659848708741
GPR[EPVS]-1659848708741
========
if(index==-1){
return iterator;
}
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848708744
GPR[SPVAP]-1659848708744
GPR[EPVAP]-1659848709526
GPR[EPVS]-1659848709526
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
this.subtitles.add(index,subtitle);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848709529
GPR[SPVAP]-1659848709529
GPR[EPVAP]-1659848710306
GPR[EPVS]-1659848710306
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
subtitle.addChangeListener(this);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848710307
GPR[SPVAP]-1659848710307
GPR[EPVAP]-1659848711081
GPR[EPVS]-1659848711081
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
fireChartChanged();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848711082
GPR[SPVAP]-1659848711082
GPR[EPVAP]-1659848711852
GPR[EPVS]-1659848711852
========
this.subtitles.add(index,subtitle);
subtitle.addChangeListener(this);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848711854
GPR[SPVAP]-1659848711854
GPR[EPVAP]-1659848712631
GPR[EPVS]-1659848712631
========
this.subtitles.add(index,subtitle);
fireChartChanged();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848712632
GPR[SPVAP]-1659848712632
GPR[EPVAP]-1659848713432
GPR[EPVS]-1659848713432
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
this.subtitles.add(index,subtitle);
subtitle.addChangeListener(this);
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848713433
GPR[SPVAP]-1659848713433
GPR[EPVAP]-1659848714228
GPR[EPVS]-1659848714228
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
this.subtitles.add(index,subtitle);
fireChartChanged();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848714229
GPR[SPVAP]-1659848714229
GPR[EPVAP]-1659848715032
GPR[EPVS]-1659848715032
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
subtitle.addChangeListener(this);
fireChartChanged();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848715033
GPR[SPVAP]-1659848715033
GPR[EPVAP]-1659848715800
GPR[EPVS]-1659848715800
========
this.subtitles.add(index,subtitle);
subtitle.addChangeListener(this);
fireChartChanged();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848715801
GPR[SPVAP]-1659848715801
GPR[EPVAP]-1659848716577
GPR[EPVS]-1659848716577
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
this.subtitles.add(index,subtitle);
subtitle.addChangeListener(this);
fireChartChanged();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848716578
GPR[SPVAP]-1659848716578
GPR[EPVAP]-1659848717359
GPR[EPVS]-1659848717359
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
if((DialPointer)iterator.next().getDatasetIndex()==index){
return (DialPointer)iterator.next();
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848719435
GPR[SPVAP]-1659848719435
GPR[EPVAP]-1659848720224
GPR[EPVS]-1659848720224
========
float seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848720226
GPR[SPVAP]-1659848720226
GPR[EPVAP]-1659848721575
GPR[SPVATF]-1659848721575
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848722713
GPR[EPVS]-1659848722713
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
if((TimeSeries)iterator.next().getKey()!=null){
result=(TimeSeries)iterator.next();
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848722715
GPR[SPVAP]-1659848722715
GPR[EPVAP]-1659848723496
GPR[EPVS]-1659848723496
========
double seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848723498
GPR[SPVAP]-1659848723498
GPR[EPVAP]-1659848724851
GPR[SPVATF]-1659848724851
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848725991
GPR[EPVS]-1659848725991
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
if(canPrune((Number)iterator.next())){
removeAllValuesForX((Number)iterator.next());
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848725993
GPR[SPVAP]-1659848725993
GPR[EPVAP]-1659848726836
GPR[EPVS]-1659848726836
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
new java.util.ArrayList().add((KeyedObject)iterator.next().getKey());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848726838
GPR[SPVAP]-1659848726838
GPR[EPVAP]-1659848727615
GPR[EPVS]-1659848727615
========
Collections.sort(this.subtitles);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848727618
GPR[SPVAP]-1659848727618
GPR[EPVAP]-1659848729212
GPR[EPVS]-1659848729212
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
clone.data.add((KeyedObject)iterator.next().clone());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848729220
GPR[SPVAP]-1659848729220
GPR[EPVAP]-1659848730689
GPR[EPVS]-1659848730689
========
int seen=0;
clone.data=new java.util.ArrayList();
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848730691
GPR[SPVAP]-1659848730691
GPR[EPVAP]-1659848731466
GPR[EPVS]-1659848731466
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
if(!new ArrayList().contains((Comparable)iterator.next())){
new ArrayList().add((Comparable)iterator.next());
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848731468
GPR[SPVAP]-1659848731468
GPR[EPVAP]-1659848732782
GPR[SPVATF]-1659848732782
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848733944
GPR[EPVS]-1659848733944
========
int seen=0;
if(index>=getDatasetCount()){
return ;
}
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848733947
GPR[SPVAP]-1659848733947
GPR[EPVAP]-1659848734731
GPR[EPVS]-1659848734731
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
clone.rows.add((KeyedObjects)iterator.next().clone());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848734735
GPR[SPVAP]-1659848734735
GPR[EPVAP]-1659848735547
GPR[EPVS]-1659848735547
========
int seen=0;
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848735549
GPR[SPVAP]-1659848735549
GPR[EPVAP]-1659848736333
GPR[EPVS]-1659848736333
========
int seen=0;
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848736335
GPR[SPVAP]-1659848736335
GPR[EPVAP]-1659848737108
GPR[EPVS]-1659848737108
========
int seen=0;
clone.rows=new java.util.ArrayList(this.rows.size());
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848737109
GPR[SPVAP]-1659848737109
GPR[EPVAP]-1659848737892
GPR[EPVS]-1659848737892
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
if(seen>0){
RegularTimePeriod (TimeSeries)iterator.next().getTimePeriod(0)=(TimeSeries)iterator.next().getTimePeriod(0);
RegularTimePeriod (TimeSeries)iterator.next().getTimePeriod(seen-1)=(TimeSeries)iterator.next().getTimePeriod(seen-1);
if(!borderVisible){
temp=new Range(getX((TimeSeries)iterator.next().getTimePeriod(0)),getX((TimeSeries)iterator.next().getTimePeriod(seen-1)));
}
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848737894
GPR[SPVAP]-1659848737894
GPR[EPVAP]-1659848738528
GPR[EPVS]-1659848738528
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
if((MeterInterval)iterator.next().getBackgroundPaint()==null){
color=(MeterInterval)iterator.next().getOutlinePaint();
}
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848738531
GPR[SPVAP]-1659848738531
GPR[EPVAP]-1659848739316
GPR[EPVS]-1659848739316
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()).setDataset(getDataset());
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848739318
GPR[SPVAP]-1659848739318
GPR[EPVAP]-1659848740110
GPR[EPVS]-1659848740110
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
new LegendItemCollection().add(new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()));
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848740111
GPR[SPVAP]-1659848740111
GPR[EPVAP]-1659848740915
GPR[EPVS]-1659848740915
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
if((MeterInterval)iterator.next().getBackgroundPaint()==null){
color=(MeterInterval)iterator.next().getOutlinePaint();
}
new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()).setDataset(getDataset());
new LegendItemCollection().add(new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()));

Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848740916
GPR[SPVAP]-1659848740916
GPR[EPVAP]-1659848741730
GPR[EPVS]-1659848741730
========
if(subtitle<=0){
iterator.add(null);
continue;
}
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848741733
GPR[SPVAP]-1659848741733
GPR[EPVAP]-1659848742516
GPR[EPVS]-1659848742516
========
int seen=p.x;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848742518
GPR[SPVAP]-1659848742518
GPR[EPVAP]-1659848743340
GPR[EPVS]-1659848743340
========
int seen=p.y;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848743342
GPR[SPVAP]-1659848743342
GPR[EPVAP]-1659848744139
GPR[EPVS]-1659848744139
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848744141
GPR[SPVAP]-1659848744141
GPR[EPVAP]-1659848744957
GPR[EPVS]-1659848744957
========
this.subtitles.add(index,subtitle);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848744958
GPR[SPVAP]-1659848744958
GPR[EPVAP]-1659848745747
GPR[EPVS]-1659848745747
========
subtitle.addChangeListener(this);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848745748
GPR[SPVAP]-1659848745748
GPR[EPVAP]-1659848746522
GPR[EPVS]-1659848746522
========
fireChartChanged();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848746523
GPR[SPVAP]-1659848746523
GPR[EPVAP]-1659848747895
GPR[SPVATF]-1659848747895
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848749041
GPR[EPVS]-1659848749041
========
this.subtitles.add(subtitle);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848749044
GPR[SPVAP]-1659848749044
GPR[EPVAP]-1659848749829
GPR[EPVS]-1659848749829
========
subtitle.addChangeListener(this);
fireChartChanged();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848749831
GPR[SPVAP]-1659848749831
GPR[EPVAP]-1659848750632
GPR[EPVS]-1659848750632
========
(ImageWriter)iterator.next().getDefaultWriteParam().setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848750634
GPR[SPVAP]-1659848750634
GPR[EPVAP]-1659848751258
GPR[EPVS]-1659848751258
========
(ImageWriter)iterator.next().getDefaultWriteParam().setCompressionQuality(this.backgroundImageAlpha);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848751260
GPR[SPVAP]-1659848751260
GPR[EPVAP]-1659848751900
GPR[EPVS]-1659848751900
========
int seen=0;
if(index>=0){
borderVisible=false;
subtitles.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
}
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848751902
GPR[SPVAP]-1659848751902
GPR[EPVAP]-1659848752675
GPR[EPVS]-1659848752675
========
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848752677
GPR[SPVAP]-1659848752677
GPR[EPVAP]-1659848753455
GPR[EPVS]-1659848753455
========
int seen=seen;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848753456
GPR[SPVAP]-1659848753456
GPR[EPVAP]-1659848754246
GPR[EPVS]-1659848754246
========
int seen=index;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848754247
GPR[SPVAP]-1659848754247
GPR[EPVAP]-1659848755574
GPR[SPVATF]-1659848755574
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848756713
GPR[EPVS]-1659848756713
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
chart.renderingHints=(RenderingHints)this.renderingHints.clone();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848756714
GPR[SPVAP]-1659848756714
GPR[EPVAP]-1659848757496
GPR[EPVS]-1659848757496
========
chart.subtitles=new ArrayList();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848757498
GPR[SPVAP]-1659848757498
GPR[EPVAP]-1659848758284
GPR[EPVS]-1659848758284
========
iterator=tminor.next();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848758286
GPR[SPVAP]-1659848758286
GPR[EPVAP]-1659848759099
GPR[EPVS]-1659848759099
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
result=iterator.getDomainAxis(index);
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848759101
GPR[SPVAP]-1659848759101
GPR[EPVAP]-1659848759899
GPR[EPVS]-1659848759899
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
result=iterator.getRangeAxis(index);
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848759900
GPR[SPVAP]-1659848759900
GPR[EPVAP]-1659848760688
GPR[EPVS]-1659848760688
========
this.subtitles.remove(index);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848760690
GPR[SPVAP]-1659848760690
GPR[EPVAP]-1659848761997
GPR[SPVATF]-1659848761997
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848763156
GPR[EPVS]-1659848763156
========
fireChangeEvent();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848763157
GPR[SPVAP]-1659848763157
GPR[EPVAP]-1659848763949
GPR[EPVS]-1659848763949
========
this.subtitles.remove(index);
fireChangeEvent();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848763957
GPR[SPVAP]-1659848763957
GPR[EPVAP]-1659848764742
GPR[EPVS]-1659848764742
========
fireSeriesChanged();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848764743
GPR[SPVAP]-1659848764743
GPR[EPVAP]-1659848765539
GPR[EPVS]-1659848765539
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
fireSeriesChanged();
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848765541
GPR[SPVAP]-1659848765541
GPR[EPVAP]-1659848766369
GPR[EPVS]-1659848766369
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
invalidateRangeInfo();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848766371
GPR[SPVAP]-1659848766371
GPR[EPVAP]-1659848767173
GPR[EPVS]-1659848767173
========
int seen=0;
Iterator iterator=this.subtitles.iterator();
subtitle=true;
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848767175
GPR[SPVAP]-1659848767175
GPR[EPVAP]-1659848767951
GPR[EPVS]-1659848767951
========
if(null!=null){
result=Collections.unmodifiableCollection(result);
}
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848767953
GPR[SPVAP]-1659848767953
GPR[EPVAP]-1659848768743
GPR[EPVS]-1659848768743
========
if(notify){
fireChangeEvent();
}
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848768745
GPR[SPVAP]-1659848768745
GPR[EPVAP]-1659848769544
GPR[EPVS]-1659848769544
========
removeValue(seen);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848769546
GPR[SPVAP]-1659848769546
GPR[EPVAP]-1659848770329
GPR[EPVS]-1659848770329
========
removeRow(seen);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848770331
GPR[SPVAP]-1659848770331
GPR[EPVAP]-1659848771112
GPR[EPVS]-1659848771112
========
if((DialScale)this.iterator.get(index)!=null){
removeLayer(existing);
}
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848771113
GPR[SPVAP]-1659848771113
GPR[EPVAP]-1659848771896
GPR[EPVS]-1659848771896
========
this.index=index;
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848771900
GPR[SPVAP]-1659848771900
GPR[EPVAP]-1659848772691
GPR[EPVS]-1659848772691
========
int seen=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848772693
GPR[SPVAP]-1659848772693
GPR[EPVAP]-1659848774054
GPR[SPVATF]-1659848774054
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848775208
GPR[EPVS]-1659848775208
========
configureDomainAxes();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848775210
GPR[SPVAP]-1659848775210
GPR[EPVAP]-1659848775995
GPR[EPVS]-1659848775995
========
configureRangeAxes();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848775996
GPR[SPVAP]-1659848775996
GPR[EPVAP]-1659848776820
GPR[EPVS]-1659848776820
========
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=Math.max(this.size,index+1);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848776822
GPR[SPVAP]-1659848776822
GPR[EPVAP]-1659848777609
GPR[EPVS]-1659848777609
========
if(index>=0){
return iterator.getObject(index);
}else {
return null;
}
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848777611
GPR[SPVAP]-1659848777611
GPR[EPVAP]-1659848778420
GPR[EPVS]-1659848778420
========
long seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848778422
GPR[SPVAP]-1659848778422
GPR[EPVAP]-1659848779736
GPR[SPVATF]-1659848779736
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848780888
GPR[EPVS]-1659848780888
========
configureDomainAxes();
configureRangeAxes();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848780891
GPR[SPVAP]-1659848780891
GPR[EPVAP]-1659848781669
GPR[EPVS]-1659848781669
========
configureDomainAxes();
if(notify){
fireChangeEvent();
}
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848781670
GPR[SPVAP]-1659848781670
GPR[EPVAP]-1659848782473
GPR[EPVS]-1659848782473
========
configureRangeAxes();
if(notify){
fireChangeEvent();
}
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848782475
GPR[SPVAP]-1659848782475
GPR[EPVAP]-1659848783264
GPR[EPVS]-1659848783264
========
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848783265
GPR[SPVAP]-1659848783265
GPR[EPVAP]-1659848784039
GPR[EPVS]-1659848784039
========
int seen=ORIENTATION_VERTICAL;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848784041
GPR[SPVAP]-1659848784041
GPR[EPVAP]-1659848784812
GPR[EPVS]-1659848784812
========
int seen=borderVisible?0:ORIENTATION_HORIZONTAL;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848784814
GPR[SPVAP]-1659848784814
GPR[EPVAP]-1659848785598
GPR[EPVS]-1659848785598
========
int seen=borderVisible?0:DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848785601
GPR[SPVAP]-1659848785601
GPR[EPVAP]-1659848786915
GPR[SPVATF]-1659848786915
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848788030
GPR[EPVS]-1659848788030
========
double seen=seen;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848788032
GPR[SPVAP]-1659848788032
GPR[EPVAP]-1659848788804
GPR[EPVS]-1659848788804
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
this.subtitles.add(index,subtitle);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848788807
GPR[SPVAP]-1659848788807
GPR[EPVAP]-1659848789592
GPR[EPVS]-1659848789592
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
subtitle.addChangeListener(this);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848789593
GPR[SPVAP]-1659848789593
GPR[EPVAP]-1659848790369
GPR[EPVS]-1659848790369
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
fireChartChanged();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848790371
GPR[SPVAP]-1659848790371
GPR[EPVAP]-1659848791144
GPR[EPVS]-1659848791144
========
this.subtitles.add(index,subtitle);
subtitle.addChangeListener(this);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848791146
GPR[SPVAP]-1659848791146
GPR[EPVAP]-1659848791916
GPR[EPVS]-1659848791916
========
this.subtitles.add(index,subtitle);
fireChartChanged();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848791919
GPR[SPVAP]-1659848791919
GPR[EPVAP]-1659848792725
GPR[EPVS]-1659848792726
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
this.subtitles.add(index,subtitle);
subtitle.addChangeListener(this);
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848792727
GPR[SPVAP]-1659848792727
GPR[EPVAP]-1659848793507
GPR[EPVS]-1659848793507
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
this.subtitles.add(index,subtitle);
fireChartChanged();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848793508
GPR[SPVAP]-1659848793508
GPR[EPVAP]-1659848794310
GPR[EPVS]-1659848794310
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
subtitle.addChangeListener(this);
fireChartChanged();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848794312
GPR[SPVAP]-1659848794312
GPR[EPVAP]-1659848795085
GPR[EPVS]-1659848795085
========
this.subtitles.add(index,subtitle);
subtitle.addChangeListener(this);
fireChartChanged();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848795086
GPR[SPVAP]-1659848795086
GPR[EPVAP]-1659848795866
GPR[EPVS]-1659848795866
========
if(subtitle==null){
throw new IllegalArgumentException("Null \'subtitle\' argument.");
}
this.subtitles.add(index,subtitle);
subtitle.addChangeListener(this);
fireChartChanged();
int seen=0;
Iterator iterator=this.subtitles.iterator();
while(iterator.hasNext()){
Title subtitle=(Title)iterator.next();
if(subtitle instanceof LegendTitle){
if(seen==index){
return (LegendTitle)subtitle;
}else {
seen++;
}
}
}

========
MM Copying to MM
GPR[SPVS]-1659848795867
GPR[SPVAP]-1659848795867
GPR[EPVAP]-1659848796645
GPR[EPVS]-1659848796645
GPR[ESUN]-1659848796645
GPR[SSUN]-1659848796645
org.jfree.chart.JFreeChart,642
GPR[ESUN]-1659848797190
GPR[SSUN]-1659848797190
org.jfree.chart.JFreeChart,643
GPR[ESUN]-1659848797552
GPR[SSUN]-1659848797552
org.jfree.chart.JFreeChart,644
GPR[ESUN]-1659848797899
GPR[SSUN]-1659848797899
org.jfree.chart.JFreeChart,645
GPR[ESUN]-1659848798180
GPR[SSUN]-1659848798180
org.jfree.chart.JFreeChart,646
GPR[ESUN]-1659848798483
GPR[SSUN]-1659848798483
org.jfree.chart.JFreeChart,647
GPR[ESUN]-1659848798831
GPR[SSUN]-1659848798831
org.jfree.chart.JFreeChart,1486
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(padding==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848801425
GPR[SPVAP]-1659848801425
GPR[EPVAP]-1659848806388
GPR[SPVATF]-1659848806388
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848807541
GPR[EPVS]-1659848807541
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.padding=padding;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848807543
GPR[SPVAP]-1659848807543
GPR[EPVAP]-1659848808908
GPR[SPVATF]-1659848808908
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848810097
GPR[EPVS]-1659848810097
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(padding==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
this.padding=padding;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848810098
GPR[SPVAP]-1659848810098
GPR[EPVAP]-1659848811395
GPR[SPVATF]-1659848811395
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848812533
GPR[EPVS]-1659848812533
========
notifyListeners(event);
ChartChangeEvent event=new ChartChangeEvent(this);
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848812535
GPR[SPVAP]-1659848812535
GPR[EPVAP]-1659848813308
GPR[EPVS]-1659848813308
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.borderVisible=borderVisible;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848813310
GPR[SPVAP]-1659848813310
GPR[EPVAP]-1659848814647
GPR[SPVATF]-1659848814647
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848815841
GPR[EPVS]-1659848815841
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.backgroundPaint=borderPaint;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848815843
GPR[SPVAP]-1659848815843
GPR[EPVAP]-1659848817162
GPR[SPVATF]-1659848817162
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848818319
GPR[EPVS]-1659848818319
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.borderVisible=drawAsLine;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848818320
GPR[SPVAP]-1659848818320
GPR[EPVAP]-1659848819117
GPR[EPVS]-1659848819117
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.borderPaint=borderPaint;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848819118
GPR[SPVAP]-1659848819118
GPR[EPVAP]-1659848820439
GPR[SPVATF]-1659848820439
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848821557
GPR[EPVS]-1659848821557
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.borderStroke=borderStroke;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848821558
GPR[SPVAP]-1659848821558
GPR[EPVAP]-1659848822858
GPR[SPVATF]-1659848822858
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848823983
GPR[EPVS]-1659848823983
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848823985
GPR[SPVAP]-1659848823985
GPR[EPVAP]-1659848824754
GPR[EPVS]-1659848824754
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.borderVisible=visible;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848824757
GPR[SPVAP]-1659848824757
GPR[EPVAP]-1659848825594
GPR[EPVS]-1659848825594
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.backgroundImageAlpha=backgroundImageAlpha;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848825600
GPR[SPVAP]-1659848825600
GPR[EPVAP]-1659848826907
GPR[SPVATF]-1659848826907
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848828091
GPR[EPVS]-1659848828091
========
notifyListeners(new RendererChangeEvent(this));
ChartChangeEvent event=new ChartChangeEvent(this);
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848828094
GPR[SPVAP]-1659848828094
GPR[EPVAP]-1659848828869
GPR[EPVS]-1659848828869
========
notifyListeners(new PlotChangeEvent(this));
ChartChangeEvent event=new ChartChangeEvent(this);
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848828871
GPR[SPVAP]-1659848828871
GPR[EPVAP]-1659848829638
GPR[EPVS]-1659848829638
========
ChartChangeEvent event=new ChartChangeEvent(this);
setType(event);

========
MM Copying to MM
GPR[SPVS]-1659848829640
GPR[SPVAP]-1659848829640
GPR[EPVAP]-1659848830412
GPR[EPVS]-1659848830412
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.subtitles.clear();
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848830414
GPR[SPVAP]-1659848830414
GPR[EPVAP]-1659848831704
GPR[SPVATF]-1659848831704
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848832832
GPR[EPVS]-1659848832832
========
notifyListeners(new DatasetChangeEvent(this,this));
ChartChangeEvent event=new ChartChangeEvent(this);
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848832833
GPR[SPVAP]-1659848832834
GPR[EPVAP]-1659848833608
GPR[EPVS]-1659848833608
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.subtitles=new ArrayList();
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848833610
GPR[SPVAP]-1659848833610
GPR[EPVAP]-1659848834894
GPR[SPVATF]-1659848834894
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848836044
GPR[EPVS]-1659848836044
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(isAutoRange()){
autoAdjustRange();
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848836046
GPR[SPVAP]-1659848836046
GPR[EPVAP]-1659848836860
GPR[EPVS]-1659848836860
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(borderPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848836862
GPR[SPVAP]-1659848836862
GPR[EPVAP]-1659848838195
GPR[SPVATF]-1659848838196
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848839368
GPR[EPVS]-1659848839368
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(borderPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.borderPaint=borderPaint;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848839371
GPR[SPVAP]-1659848839371
GPR[EPVAP]-1659848840686
GPR[SPVATF]-1659848840686
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848841828
GPR[EPVS]-1659848841828
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(borderStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848841830
GPR[SPVAP]-1659848841830
GPR[EPVAP]-1659848843136
GPR[SPVATF]-1659848843136
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848844285
GPR[EPVS]-1659848844285
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(borderStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.borderStroke=borderStroke;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848844287
GPR[SPVAP]-1659848844287
GPR[EPVAP]-1659848845642
GPR[SPVATF]-1659848845642
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848846779
GPR[EPVS]-1659848846779
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE==null){
throw new NullPointerException("Null \'image\' argument.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848846780
GPR[SPVAP]-1659848846780
GPR[EPVAP]-1659848848079
GPR[SPVATF]-1659848848079
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848849195
GPR[EPVS]-1659848849195
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.DEFAULT_BACKGROUND_IMAGE=image;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848849197
GPR[SPVAP]-1659848849197
GPR[EPVAP]-1659848850000
GPR[EPVS]-1659848850000
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_TITLE_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848850002
GPR[SPVAP]-1659848850002
GPR[EPVAP]-1659848851312
GPR[SPVATF]-1659848851312
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848852496
GPR[EPVS]-1659848852496
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.DEFAULT_TITLE_FONT=DEFAULT_TITLE_FONT;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848852498
GPR[SPVAP]-1659848852498
GPR[EPVAP]-1659848853278
GPR[EPVS]-1659848853278
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.borderPaint=paint;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848853280
GPR[SPVAP]-1659848853280
GPR[EPVAP]-1659848854085
GPR[EPVS]-1659848854085
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.borderStroke=stroke;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848854087
GPR[SPVAP]-1659848854087
GPR[EPVAP]-1659848854868
GPR[EPVS]-1659848854868
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_TITLE_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.DEFAULT_TITLE_FONT=DEFAULT_TITLE_FONT;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848854869
GPR[SPVAP]-1659848854869
GPR[EPVAP]-1659848855658
GPR[EPVS]-1659848855658
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(padding==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848855660
GPR[SPVAP]-1659848855660
GPR[EPVAP]-1659848856977
GPR[SPVATF]-1659848856977
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848858100
GPR[EPVS]-1659848858100
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(padding==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
this.padding=padding;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848858102
GPR[SPVAP]-1659848858102
GPR[EPVAP]-1659848859479
GPR[SPVATF]-1659848859479
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848860611
GPR[EPVS]-1659848860611
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(borderPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.backgroundPaint=borderPaint;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848860612
GPR[SPVAP]-1659848860612
GPR[EPVAP]-1659848861911
GPR[SPVATF]-1659848861911
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848863032
GPR[EPVS]-1659848863032
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(borderStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.borderStroke=stroke;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848863033
GPR[SPVAP]-1659848863033
GPR[EPVAP]-1659848863813
GPR[EPVS]-1659848863813
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.DEFAULT_TITLE_FONT=font;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848863814
GPR[SPVAP]-1659848863814
GPR[EPVAP]-1659848864588
GPR[EPVS]-1659848864588
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(borderPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.borderPaint=paint;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848864590
GPR[SPVAP]-1659848864590
GPR[EPVAP]-1659848865359
GPR[EPVS]-1659848865359
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(padding==null){
throw new IllegalArgumentException("Null \'insets\' argument.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848865361
GPR[SPVAP]-1659848865361
GPR[EPVAP]-1659848866671
GPR[SPVATF]-1659848866671
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848867818
GPR[EPVS]-1659848867818
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.padding=insets;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848867820
GPR[SPVAP]-1659848867820
GPR[EPVAP]-1659848868591
GPR[EPVS]-1659848868591
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0){
throw new IllegalArgumentException("The \'count\' cannot be negative.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848868593
GPR[SPVAP]-1659848868593
GPR[EPVAP]-1659848869890
GPR[SPVATF]-1659848869890
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848871045
GPR[EPVS]-1659848871045
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<0){
throw new IllegalArgumentException("The \'count\' cannot be negative.");
}
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848871047
GPR[SPVAP]-1659848871047
GPR[EPVAP]-1659848871831
GPR[EPVS]-1659848871832
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<=0){
throw new IllegalArgumentException("Requires p > 0.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848871834
GPR[SPVAP]-1659848871834
GPR[EPVAP]-1659848874695
GPR[SPVATF]-1659848874695
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848875858
GPR[EPVS]-1659848875858
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<=0){
throw new IllegalArgumentException("Requires p > 0.");
}
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848875859
GPR[SPVAP]-1659848875859
GPR[EPVAP]-1659848876679
GPR[EPVS]-1659848876679
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<1){
throw new IllegalArgumentException("Requires w > 0.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848876681
GPR[SPVAP]-1659848876681
GPR[EPVAP]-1659848877966
GPR[SPVATF]-1659848877966
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848879085
GPR[EPVS]-1659848879085
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<1){
throw new IllegalArgumentException("Requires w > 0.");
}
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848879087
GPR[SPVAP]-1659848879087
GPR[EPVAP]-1659848879862
GPR[EPVS]-1659848879862
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<1){
throw new IllegalArgumentException("Requires h > 0.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848879863
GPR[SPVAP]-1659848879863
GPR[EPVAP]-1659848881186
GPR[SPVATF]-1659848881186
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848882301
GPR[EPVS]-1659848882301
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<1){
throw new IllegalArgumentException("Requires h > 0.");
}
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848882303
GPR[SPVAP]-1659848882303
GPR[EPVAP]-1659848883074
GPR[EPVS]-1659848883074
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<=0){
throw new IllegalArgumentException("Requires \'count\' > 0.");
}
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848883077
GPR[SPVAP]-1659848883077
GPR[EPVAP]-1659848884380
GPR[SPVATF]-1659848884380
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848885526
GPR[EPVS]-1659848885526
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_BACKGROUND_IMAGE_ALIGNMENT<=0){
throw new IllegalArgumentException("Requires \'count\' > 0.");
}
this.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848885527
GPR[SPVAP]-1659848885527
GPR[EPVAP]-1659848886303
GPR[EPVS]-1659848886303
========
notifyListeners(new AxisChangeEvent(this));
ChartChangeEvent event=new ChartChangeEvent(this);
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848886305
GPR[SPVAP]-1659848886305
GPR[EPVAP]-1659848887088
GPR[EPVS]-1659848887088
========
ChartChangeEvent event=new ChartChangeEvent(this);
notifyListeners(new PlotChangeEvent(this));

========
MM Copying to MM
GPR[SPVS]-1659848887090
GPR[SPVAP]-1659848887090
GPR[EPVAP]-1659848887876
GPR[EPVS]-1659848887876
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(backgroundImageAlpha<0.0||alpha>1.0)throw new IllegalArgumentException("The \'alpha\' value must be in the range 0.0f to 1.0f");
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848887877
GPR[SPVAP]-1659848887877
GPR[EPVAP]-1659848888680
GPR[EPVS]-1659848888680
========
ChartChangeEvent event=new ChartChangeEvent(this);
this.backgroundImageAlpha=alpha;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848888682
GPR[SPVAP]-1659848888682
GPR[EPVAP]-1659848889483
GPR[EPVS]-1659848889483
========
ChartChangeEvent event=new ChartChangeEvent(this);
setType(new PlotChangeEvent(this));

========
MM Copying to MM
GPR[SPVS]-1659848889485
GPR[SPVAP]-1659848889485
GPR[EPVAP]-1659848890263
GPR[EPVS]-1659848890263
========
ChartChangeEvent event=new ChartChangeEvent(this);
if(DEFAULT_TITLE_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.DEFAULT_TITLE_FONT=font;
notifyListeners(event);

========
MM Copying to MM
GPR[SPVS]-1659848890265
GPR[SPVAP]-1659848890265
GPR[EPVAP]-1659848891051
GPR[EPVS]-1659848891051
GPR[ESUN]-1659848891052
GPR[SSUN]-1659848891052
org.jfree.chart.JFreeChart,1487
GPR[ESUN]-1659848891578
GPR[SSUN]-1659848891578
org.jfree.chart.JFreeChart,1488
Find no block!
GPR[SSUN]-1659848891922
org.jfree.chart.JFreeChart,327
GPR[ESUN]-1659848893760
GPR[SSUN]-1659848893760
org.jfree.chart.JFreeChart,328
Find no block!
GPR[SSUN]-1659848894087
org.jfree.chart.title.LegendTitle,541
GPR[ESUN]-1659848894438
GPR[SSUN]-1659848894438
org.jfree.chart.PaintMap,77
Find no block!
GPR[SSUN]-1659848894754
org.jfree.chart.PaintMap,78
GPR[ESUN]-1659848896554
GPR[SSUN]-1659848896554
org.jfree.chart.PaintMap,79
Find no block!
GPR[SSUN]-1659848896858
org.jfree.chart.plot.PieLabelLinkStyle,74
Find no block!
GPR[SSUN]-1659848897195
org.jfree.chart.plot.PieLabelLinkStyle,75
GPR[ESUN]-1659848897536
GPR[SSUN]-1659848897536
org.jfree.chart.plot.PieLabelLinkStyle,76
Find no block!
GPR[SSUN]-1659848897892
org.jfree.chart.plot.PieLabelLinkStyle,55
Find no block!
GPR[SSUN]-1659848898229
org.jfree.chart.plot.PieLabelLinkStyle,59
Find no block!
GPR[SSUN]-1659848898553
org.jfree.chart.plot.PieLabelLinkStyle,63
Find no block!
GPR[SSUN]-1659848898887
org.jfree.chart.plot.PiePlot,504
========
this.pieIndex=0;
super();
this.dataset=dataset;
if(dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848900803
GPR[SPVAP]-1659848900803
GPR[EPVAP]-1659848902832
GPR[EPVS]-1659848902832
========
super();
this.dataset=dataset;
if(clone.dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848902834
GPR[SPVAP]-1659848902834
GPR[EPVAP]-1659848904313
GPR[EPVS]-1659848904313
========
super();
this.dataset=dataset;
if(dataset==null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848904315
GPR[SPVAP]-1659848904315
GPR[EPVAP]-1659848908122
GPR[SPVATF]-1659848908122
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848909237
GPR[EPVS]-1659848909237
========
super();
this.dataset=dataset;
if(this.dataset==null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848909239
GPR[SPVAP]-1659848909239
GPR[EPVAP]-1659848910636
GPR[SPVATF]-1659848910636
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848911771
GPR[EPVS]-1659848911771
========
super();
this.dataset=dataset;
if(this.dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848911772
GPR[SPVAP]-1659848911772
GPR[EPVAP]-1659848913109
GPR[SPVATF]-1659848913109
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848914269
GPR[EPVS]-1659848914269
========
super();
this.dataset=dataset;
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848914272
GPR[SPVAP]-1659848914272
GPR[EPVAP]-1659848915660
GPR[SPVATF]-1659848915660
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848916823
GPR[EPVS]-1659848916823
========
if(dataset.getItemCount()==0){
return true;
}
super();
this.dataset=dataset;
if(dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848916826
GPR[SPVAP]-1659848916826
GPR[EPVAP]-1659848917633
GPR[EPVS]-1659848917633
========
super();
this.dataset=dataset;
if(dataset!=null){
this.datasets[0]=dataset;
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848917636
GPR[SPVAP]-1659848917636
GPR[EPVAP]-1659848918428
GPR[EPVS]-1659848918428
========
super();
this.dataset=dataset;
if(dataset!=null){
include=this.ignoreZeroValues?shadowYOffset>0.0:shadowYOffset>=0.0;
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848918431
GPR[SPVAP]-1659848918431
GPR[EPVAP]-1659848919252
GPR[EPVS]-1659848919252
========
super();
this.dataset=dataset;
if(dataset!=null){
setDatasetGroup(this.dataset.getGroup());
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848919254
GPR[SPVAP]-1659848919254
GPR[EPVAP]-1659848920611
GPR[SPVATF]-1659848920611
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848921748
GPR[EPVS]-1659848921748
========
super();
this.dataset=dataset;
if(this.dataset!=null){
setDatasetGroup(this.dataset.getGroup());
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848921750
GPR[SPVAP]-1659848921750
GPR[EPVAP]-1659848923104
GPR[SPVATF]-1659848923104
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848924234
GPR[EPVS]-1659848924234
========
super();
this.dataset=dataset;
if(dataset!=null){
return ;
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848924236
GPR[SPVAP]-1659848924236
GPR[EPVAP]-1659848925043
GPR[EPVS]-1659848925043
GPR[ESUN]-1659848925044
GPR[SSUN]-1659848925044
org.jfree.chart.plot.PiePlot,321
Find no block!
GPR[SSUN]-1659848925497
org.jfree.chart.plot.PiePlot,324
Find no block!
GPR[SSUN]-1659848925818
org.jfree.chart.plot.PiePlot,327
Find no block!
GPR[SSUN]-1659848926127
org.jfree.chart.plot.PiePlot,370
Find no block!
GPR[SSUN]-1659848926480
org.jfree.chart.plot.PiePlot,388
Find no block!
GPR[SSUN]-1659848926817
org.jfree.chart.plot.PiePlot,394
Find no block!
GPR[SSUN]-1659848927147
org.jfree.chart.plot.PiePlot,404
Find no block!
GPR[SSUN]-1659848927523
org.jfree.chart.plot.PiePlot,407
Find no block!
GPR[SSUN]-1659848927870
org.jfree.chart.plot.PiePlot,410
Find no block!
GPR[SSUN]-1659848928184
org.jfree.chart.plot.PiePlot,413
Find no block!
GPR[SSUN]-1659848928549
org.jfree.chart.plot.PiePlot,505
GPR[ESUN]-1659848928877
GPR[SSUN]-1659848928877
org.jfree.chart.plot.PiePlot,506
========
if(clone.dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848930867
GPR[SPVAP]-1659848930867
GPR[EPVAP]-1659848932918
GPR[EPVS]-1659848932918
========
if(dataset==null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848932920
GPR[SPVAP]-1659848932920
GPR[EPVAP]-1659848936738
GPR[SPVATF]-1659848936738
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848937871
GPR[EPVS]-1659848937871
========
if(this.dataset==null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848937873
GPR[SPVAP]-1659848937873
GPR[EPVAP]-1659848939208
GPR[SPVATF]-1659848939208
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848940333
GPR[EPVS]-1659848940333
========
if(this.dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848940336
GPR[SPVAP]-1659848940336
GPR[EPVAP]-1659848941680
GPR[SPVATF]-1659848941680
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848942816
GPR[EPVS]-1659848942816
========
if(dataset!=null){
this.datasets[0]=dataset;
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848942820
GPR[SPVAP]-1659848942820
GPR[EPVAP]-1659848943607
GPR[EPVS]-1659848943607
========
if(existing!=null){
existing.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848943609
GPR[SPVAP]-1659848943609
GPR[EPVAP]-1659848945844
GPR[EPVS]-1659848945844
========
if(existing!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848945853
GPR[SPVAP]-1659848945853
GPR[EPVAP]-1659848946821
GPR[EPVS]-1659848946821
========
if(dataset!=null){
existing.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848946822
GPR[SPVAP]-1659848946822
GPR[EPVAP]-1659848947631
GPR[EPVS]-1659848947631
========
this.dataset=dataset;
if(dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848947633
GPR[SPVAP]-1659848947633
GPR[EPVAP]-1659848948980
GPR[SPVATF]-1659848948980
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848950117
GPR[EPVS]-1659848950117
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
if(dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848950119
GPR[SPVAP]-1659848950119
GPR[EPVAP]-1659848951482
GPR[SPVATF]-1659848951482
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848952613
GPR[EPVS]-1659848952613
========
this.dataset=dataset;
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
if(dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848952615
GPR[SPVAP]-1659848952615
GPR[EPVAP]-1659848953967
GPR[SPVATF]-1659848953967
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848955105
GPR[EPVS]-1659848955105
========
if(dataset.getItemCount()==0){
return true;
}
if(dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848955107
GPR[SPVAP]-1659848955107
GPR[EPVAP]-1659848955955
GPR[EPVS]-1659848955955
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848955957
GPR[SPVAP]-1659848955957
GPR[EPVAP]-1659848957341
GPR[SPVATF]-1659848957341
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848958474
GPR[EPVS]-1659848958474
========
if(dataset!=null){
setDatasetGroup(this.dataset.getGroup());
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848958476
GPR[SPVAP]-1659848958476
GPR[EPVAP]-1659848959810
GPR[SPVATF]-1659848959810
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848960967
GPR[EPVS]-1659848960967
========
if(this.dataset!=null){
setDatasetGroup(this.dataset.getGroup());
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848960969
GPR[SPVAP]-1659848960969
GPR[EPVAP]-1659848962312
GPR[SPVATF]-1659848962312
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848963463
GPR[EPVS]-1659848963463
========
fireChangeEvent();
if(dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848963466
GPR[SPVAP]-1659848963466
GPR[EPVAP]-1659848964798
GPR[SPVATF]-1659848964798
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848965917
GPR[EPVS]-1659848965917
========
fireChangeEvent();
if(dataset==null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848965919
GPR[SPVAP]-1659848965919
GPR[EPVAP]-1659848967267
GPR[SPVATF]-1659848967267
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848968387
GPR[EPVS]-1659848968387
========
fireChartChanged();
if(dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848968390
GPR[SPVAP]-1659848968390
GPR[EPVAP]-1659848969176
GPR[EPVS]-1659848969176
========
fireDatasetChanged();
if(dataset!=null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848969179
GPR[SPVAP]-1659848969179
GPR[EPVAP]-1659848969964
GPR[EPVS]-1659848969964
========
fireDatasetChanged();
if(dataset==null){
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848969966
GPR[SPVAP]-1659848969966
GPR[EPVAP]-1659848970756
GPR[EPVS]-1659848970756
========
if(dataset!=null){
return ;
dataset.addChangeListener(this);
}

========
MM Copying to MM
GPR[SPVS]-1659848970758
GPR[SPVAP]-1659848970758
GPR[EPVAP]-1659848971558
GPR[EPVS]-1659848971558
GPR[ESUN]-1659848971560
GPR[SSUN]-1659848971560
org.jfree.chart.plot.PiePlot,509
========
this.dataset=dataset;
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848973595
GPR[SPVAP]-1659848973595
GPR[EPVAP]-1659848977913
GPR[SPVATF]-1659848977913
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848979043
GPR[EPVS]-1659848979043
========
this.circular=true;
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848979045
GPR[SPVAP]-1659848979045
GPR[EPVAP]-1659848980398
GPR[SPVATF]-1659848980398
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848981572
GPR[EPVS]-1659848981572
========
this.dataset=dataset;
this.circular=true;
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848981574
GPR[SPVAP]-1659848981574
GPR[EPVAP]-1659848982947
GPR[SPVATF]-1659848982947
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848984066
GPR[EPVS]-1659848984066
========
if(clone.dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848984068
GPR[SPVAP]-1659848984068
GPR[EPVAP]-1659848984870
GPR[EPVS]-1659848984870
========
if(dataset!=null){
this.datasets[0]=dataset;
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848984872
GPR[SPVAP]-1659848984872
GPR[EPVAP]-1659848985679
GPR[EPVS]-1659848985679
========
if(this.dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848985682
GPR[SPVAP]-1659848985682
GPR[EPVAP]-1659848987062
GPR[SPVATF]-1659848987062
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848988223
GPR[EPVS]-1659848988223
========
if(existing!=null){
existing.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848988226
GPR[SPVAP]-1659848988227
GPR[EPVAP]-1659848989014
GPR[EPVS]-1659848989014
========
if(existing!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848989016
GPR[SPVAP]-1659848989016
GPR[EPVAP]-1659848989797
GPR[EPVS]-1659848989797
========
if(dataset!=null){
existing.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848989800
GPR[SPVAP]-1659848989800
GPR[EPVAP]-1659848990619
GPR[EPVS]-1659848990619
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848990622
GPR[SPVAP]-1659848990622
GPR[EPVAP]-1659848991961
GPR[SPVATF]-1659848991961
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848993128
GPR[EPVS]-1659848993128
========
this.dataset=dataset;
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848993131
GPR[SPVAP]-1659848993131
GPR[EPVAP]-1659848994492
GPR[SPVATF]-1659848994492
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848995613
GPR[EPVS]-1659848995613
========
if(dataset==null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848995615
GPR[SPVAP]-1659848995615
GPR[EPVAP]-1659848996968
GPR[SPVATF]-1659848996968
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659848998107
GPR[EPVS]-1659848998107
========
if(this.dataset==null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659848998110
GPR[SPVAP]-1659848998110
GPR[EPVAP]-1659848999494
GPR[SPVATF]-1659848999494
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849000589
GPR[EPVS]-1659849000589
========
if(pieIndex==0){
return true;
}
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849000591
GPR[SPVAP]-1659849000591
GPR[EPVAP]-1659849001374
GPR[EPVS]-1659849001374
========
if(dataset!=null){
setDatasetGroup(dataset.getGroup());
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849001376
GPR[SPVAP]-1659849001376
GPR[EPVAP]-1659849002768
GPR[SPVATF]-1659849002768
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849003903
GPR[EPVS]-1659849003903
========
if(dataset!=null){
setDatasetGroup(this.dataset.getGroup());
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849003905
GPR[SPVAP]-1659849003905
GPR[EPVAP]-1659849005239
GPR[SPVATF]-1659849005239
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849006372
GPR[EPVS]-1659849006372
========
if(this.dataset!=null){
setDatasetGroup(this.dataset.getGroup());
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849006374
GPR[SPVAP]-1659849006374
GPR[EPVAP]-1659849007719
GPR[SPVATF]-1659849007719
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849008838
GPR[EPVS]-1659849008838
========
fireChangeEvent();
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849008840
GPR[SPVAP]-1659849008840
GPR[EPVAP]-1659849010162
GPR[SPVATF]-1659849010162
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849011298
GPR[EPVS]-1659849011298
========
fireChangeEvent();
if(dataset==null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849011300
GPR[SPVAP]-1659849011300
GPR[EPVAP]-1659849012654
GPR[SPVATF]-1659849012654
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849013750
GPR[EPVS]-1659849013750
========
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=totalValue;

========
MM Copying to MM
GPR[SPVS]-1659849013752
GPR[SPVAP]-1659849013752
GPR[EPVAP]-1659849014564
GPR[EPVS]-1659849014564
========
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=v;

========
MM Copying to MM
GPR[SPVS]-1659849014566
GPR[SPVAP]-1659849014566
GPR[EPVAP]-1659849015358
GPR[EPVS]-1659849015358
========
fireChartChanged();
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849015361
GPR[SPVAP]-1659849015361
GPR[EPVAP]-1659849016160
GPR[EPVS]-1659849016160
========
fireDatasetChanged();
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849016162
GPR[SPVAP]-1659849016162
GPR[EPVAP]-1659849016958
GPR[EPVS]-1659849016958
========
fireDatasetChanged();
if(dataset==null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849016960
GPR[SPVAP]-1659849016960
GPR[EPVAP]-1659849017767
GPR[EPVS]-1659849017767
========
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=percent;

========
MM Copying to MM
GPR[SPVS]-1659849017769
GPR[SPVAP]-1659849017769
GPR[EPVAP]-1659849018942
GPR[EPVS]-1659849018942
========
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=value;

========
MM Copying to MM
GPR[SPVS]-1659849018952
GPR[SPVAP]-1659849018952
GPR[EPVAP]-1659849021037
GPR[EPVS]-1659849021037
========
if(pieIndex<0||index>getSubtitleCount()){
throw new IllegalArgumentException("The \'index\' argument is out of range.");
}
if(dataset!=null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849021039
GPR[SPVAP]-1659849021039
GPR[EPVAP]-1659849021856
GPR[EPVS]-1659849021856
========
fireChartChanged();
if(dataset==null){
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849021858
GPR[SPVAP]-1659849021858
GPR[EPVAP]-1659849022686
GPR[EPVS]-1659849022686
========
if(dataset!=null){
return ;
dataset.addChangeListener(this);
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;

========
MM Copying to MM
GPR[SPVS]-1659849022689
GPR[SPVAP]-1659849022689
GPR[EPVAP]-1659849023490
GPR[EPVS]-1659849023490
GPR[ESUN]-1659849023493
GPR[SSUN]-1659849023493
org.jfree.chart.plot.PiePlot,511
========
this.startAngle=DEFAULT_START_ANGLE;
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849025485
GPR[SPVAP]-1659849025485
GPR[EPVAP]-1659849029770
GPR[SPVATF]-1659849029770
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849030929
GPR[EPVS]-1659849030929
========
this.direction=Rotation.CLOCKWISE;
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849030932
GPR[SPVAP]-1659849030932
GPR[EPVAP]-1659849032285
GPR[SPVATF]-1659849032285
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849033451
GPR[EPVS]-1659849033451
========
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849033453
GPR[SPVAP]-1659849033453
GPR[EPVAP]-1659849034794
GPR[SPVATF]-1659849034794
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849035921
GPR[EPVS]-1659849035921
========
this.shadowPaint=Color.black;
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849035923
GPR[SPVAP]-1659849035923
GPR[EPVAP]-1659849037281
GPR[SPVATF]-1659849037281
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849038435
GPR[EPVS]-1659849038435
========
this.shadowPaint=Color.black;
this.direction=Rotation.CLOCKWISE;
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849038436
GPR[SPVAP]-1659849038436
GPR[EPVAP]-1659849039780
GPR[SPVATF]-1659849039780
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849040937
GPR[EPVS]-1659849040937
========
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=circular;

========
MM Copying to MM
GPR[SPVS]-1659849040938
GPR[SPVAP]-1659849040938
GPR[EPVAP]-1659849042282
GPR[SPVATF]-1659849042282
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849043408
GPR[EPVS]-1659849043408
========
if(DEBUG_DRAW_INTERIOR){
fireChangeEvent();
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849043410
GPR[SPVAP]-1659849043410
GPR[EPVAP]-1659849044750
GPR[SPVATF]-1659849044750
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849045897
GPR[EPVS]-1659849045897
========
if(DEBUG_DRAW_INTERIOR){
fireChangeEvent();
}
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=circular;

========
MM Copying to MM
GPR[SPVS]-1659849045898
GPR[SPVAP]-1659849045898
GPR[EPVAP]-1659849047306
GPR[SPVATF]-1659849047306
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849048513
GPR[EPVS]-1659849048513
========
this.pieIndex=0;
this.interiorGap=percent;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849048515
GPR[SPVAP]-1659849048515
GPR[EPVAP]-1659849049308
GPR[EPVS]-1659849049308
========
this.pieIndex=pieIndex;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849049310
GPR[SPVAP]-1659849049310
GPR[EPVAP]-1659849050698
GPR[SPVATF]-1659849050698
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849051819
GPR[EPVS]-1659849051819
========
this.dataset=dataset;
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849051821
GPR[SPVAP]-1659849051821
GPR[EPVAP]-1659849053159
GPR[SPVATF]-1659849053160
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849054294
GPR[EPVS]-1659849054294
========
this.dataset=dataset;
this.pieIndex=pieIndex;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849054296
GPR[SPVAP]-1659849054296
GPR[EPVAP]-1659849055623
GPR[SPVATF]-1659849055623
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849056797
GPR[EPVS]-1659849056797
========
this.pieIndex=0;
this.interiorGap=min;
this.circular=true;

========
MM Copying to MM
GPR[SPVS]-1659849056800
GPR[SPVAP]-1659849056800
GPR[EPVAP]-1659849057598
GPR[EPVS]-1659849057599
GPR[ESUN]-1659849057599
GPR[SSUN]-1659849057599
org.jfree.chart.plot.PiePlot,512
========
this.direction=Rotation.CLOCKWISE;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849059628
GPR[SPVAP]-1659849059628
GPR[EPVAP]-1659849063883
GPR[SPVATF]-1659849063883
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849065037
GPR[EPVS]-1659849065037
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849065039
GPR[SPVAP]-1659849065039
GPR[EPVAP]-1659849066439
GPR[SPVATF]-1659849066440
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849067604
GPR[EPVS]-1659849067604
========
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849067606
GPR[SPVAP]-1659849067606
GPR[EPVAP]-1659849068947
GPR[SPVATF]-1659849068947
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849070083
GPR[EPVS]-1659849070083
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.shadowPaint=Color.black;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849070086
GPR[SPVAP]-1659849070086
GPR[EPVAP]-1659849071498
GPR[SPVATF]-1659849071498
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849072669
GPR[EPVS]-1659849072669
========
this.direction=Rotation.CLOCKWISE;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.shadowPaint=Color.black;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849072671
GPR[SPVAP]-1659849072671
GPR[EPVAP]-1659849074010
GPR[SPVATF]-1659849074010
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849075149
GPR[EPVS]-1659849075149
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=angle;

========
MM Copying to MM
GPR[SPVS]-1659849075151
GPR[SPVAP]-1659849075151
GPR[EPVAP]-1659849075942
GPR[EPVS]-1659849075942
========
fireChangeEvent();
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849075943
GPR[SPVAP]-1659849075943
GPR[EPVAP]-1659849077285
GPR[SPVATF]-1659849077285
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849078405
GPR[EPVS]-1659849078405
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=circular;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849078407
GPR[SPVAP]-1659849078407
GPR[EPVAP]-1659849079770
GPR[SPVATF]-1659849079770
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849080931
GPR[EPVS]-1659849080931
========
if(DEBUG_DRAW_INTERIOR){
fireChangeEvent();
}
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849080932
GPR[SPVAP]-1659849080932
GPR[EPVAP]-1659849082256
GPR[SPVATF]-1659849082256
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849083405
GPR[EPVS]-1659849083405
========
if(DEBUG_DRAW_INTERIOR){
fireChangeEvent();
}
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=circular;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849083407
GPR[SPVAP]-1659849083407
GPR[EPVAP]-1659849084802
GPR[SPVATF]-1659849084802
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849085937
GPR[EPVS]-1659849085937
========
this.interiorGap=extent;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849085939
GPR[SPVAP]-1659849085939
GPR[EPVAP]-1659849086756
GPR[EPVS]-1659849086756
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=startAngle;

========
MM Copying to MM
GPR[SPVS]-1659849086758
GPR[SPVAP]-1659849086758
GPR[EPVAP]-1659849088135
GPR[SPVATF]-1659849088135
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849089272
GPR[EPVS]-1659849089272
========
this.shadowYOffset=lowerBound;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849089273
GPR[SPVAP]-1659849089273
GPR[EPVAP]-1659849090289
GPR[EPVS]-1659849090289
========
this.shadowYOffset=upperBound;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849090291
GPR[SPVAP]-1659849090291
GPR[EPVAP]-1659849092740
GPR[EPVS]-1659849092740
========
this.interiorGap=percent;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849092754
GPR[SPVAP]-1659849092754
GPR[EPVAP]-1659849093648
GPR[EPVS]-1659849093648
========
notifyListeners(new DialLayerChangeEvent(this));
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849093650
GPR[SPVAP]-1659849093650
GPR[EPVAP]-1659849094447
GPR[EPVS]-1659849094447
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.shadowPaint=Color.gray;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849094449
GPR[SPVAP]-1659849094449
GPR[EPVAP]-1659849095778
GPR[SPVATF]-1659849095778
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849096951
GPR[EPVS]-1659849096951
========
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849096953
GPR[SPVAP]-1659849096953
GPR[EPVAP]-1659849097784
GPR[EPVS]-1659849097784
========
this.startAngle=startAngle;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849097786
GPR[SPVAP]-1659849097786
GPR[EPVAP]-1659849099112
GPR[SPVATF]-1659849099112
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849100245
GPR[EPVS]-1659849100245
========
this.shadowYOffset=extent;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849100247
GPR[SPVAP]-1659849100247
GPR[EPVAP]-1659849101051
GPR[EPVS]-1659849101051
========
this.startAngle=startAngle;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.shadowPaint=Color.gray;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849101052
GPR[SPVAP]-1659849101052
GPR[EPVAP]-1659849102427
GPR[SPVATF]-1659849102427
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849103551
GPR[EPVS]-1659849103551
========
serialVersionUID=Double.doubleToLongBits(this.shadowYOffset);
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849103553
GPR[SPVAP]-1659849103553
GPR[EPVAP]-1659849104334
GPR[EPVS]-1659849104334
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
if(shadowYOffset>=this.shadowYOffset){
break;
}
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849104336
GPR[SPVAP]-1659849104336
GPR[EPVAP]-1659849105115
GPR[EPVS]-1659849105115
========
this.interiorGap=min;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;

========
MM Copying to MM
GPR[SPVS]-1659849105117
GPR[SPVAP]-1659849105117
GPR[EPVAP]-1659849105912
GPR[EPVS]-1659849105912
========
fireChangeEvent();
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=angle;

========
MM Copying to MM
GPR[SPVS]-1659849105915
GPR[SPVAP]-1659849105915
GPR[EPVAP]-1659849106702
GPR[EPVS]-1659849106702
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=runningTotal;

========
MM Copying to MM
GPR[SPVS]-1659849106704
GPR[SPVAP]-1659849106704
GPR[EPVAP]-1659849107499
GPR[EPVS]-1659849107499
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=v;

========
MM Copying to MM
GPR[SPVS]-1659849107501
GPR[SPVAP]-1659849107501
GPR[EPVAP]-1659849108308
GPR[EPVS]-1659849108308
========
notifyListeners(new DialLayerChangeEvent(this));
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=angle;

========
MM Copying to MM
GPR[SPVS]-1659849108311
GPR[SPVAP]-1659849108311
GPR[EPVAP]-1659849109128
GPR[EPVS]-1659849109128
GPR[ESUN]-1659849109128
GPR[SSUN]-1659849109128
org.jfree.chart.plot.PiePlot,513
========
this.pieIndex=0;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849111104
GPR[SPVAP]-1659849111104
GPR[EPVAP]-1659849115335
GPR[SPVATF]-1659849115335
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849116501
GPR[EPVS]-1659849116501
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849116503
GPR[SPVAP]-1659849116504
GPR[EPVAP]-1659849117859
GPR[SPVATF]-1659849117859
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849118996
GPR[EPVS]-1659849118996
========
this.pieIndex=0;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849118999
GPR[SPVAP]-1659849118999
GPR[EPVAP]-1659849120315
GPR[SPVATF]-1659849120315
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849121464
GPR[EPVS]-1659849121464
========
this.circular=true;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849121467
GPR[SPVAP]-1659849121467
GPR[EPVAP]-1659849122787
GPR[SPVATF]-1659849122787
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849123932
GPR[EPVS]-1659849123932
========
this.shadowYOffset=DEFAULT_MAX_VALUE;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849123934
GPR[SPVAP]-1659849123934
GPR[EPVAP]-1659849124770
GPR[EPVS]-1659849124770
========
this.circular=true;
this.startAngle=angle;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849124772
GPR[SPVAP]-1659849124772
GPR[EPVAP]-1659849125568
GPR[EPVS]-1659849125568
========
fireChangeEvent();
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849125569
GPR[SPVAP]-1659849125569
GPR[EPVAP]-1659849126892
GPR[SPVATF]-1659849126892
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849128039
GPR[EPVS]-1659849128039
========
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849128041
GPR[SPVAP]-1659849128041
GPR[EPVAP]-1659849128857
GPR[EPVS]-1659849128857
========
this.circular=true;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849128860
GPR[SPVAP]-1659849128860
GPR[EPVAP]-1659849129679
GPR[EPVS]-1659849129679
========
this.circular=true;
this.shadowYOffset=0.25;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849129680
GPR[SPVAP]-1659849129680
GPR[EPVAP]-1659849131023
GPR[SPVATF]-1659849131023
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849132224
GPR[EPVS]-1659849132224
========
this.startAngle=startAngle;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849132227
GPR[SPVAP]-1659849132227
GPR[EPVAP]-1659849133567
GPR[SPVATF]-1659849133567
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849134717
GPR[EPVS]-1659849134717
========
this.shadowYOffset=extent;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849134720
GPR[SPVAP]-1659849134720
GPR[EPVAP]-1659849135514
GPR[EPVS]-1659849135514
========
this.startAngle=startAngle;
this.circular=true;
this.shadowYOffset=0.25;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849135516
GPR[SPVAP]-1659849135516
GPR[EPVAP]-1659849136850
GPR[SPVATF]-1659849136850
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849138025
GPR[EPVS]-1659849138025
========
this.circular=circular;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849138027
GPR[SPVAP]-1659849138027
GPR[EPVAP]-1659849139387
GPR[SPVATF]-1659849139387
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849140576
GPR[EPVS]-1659849140576
========
if(DEBUG_DRAW_INTERIOR){
fireChangeEvent();
}
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849140578
GPR[SPVAP]-1659849140578
GPR[EPVAP]-1659849141929
GPR[SPVATF]-1659849141929
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849143113
GPR[EPVS]-1659849143113
========
if(DEBUG_DRAW_INTERIOR){
fireChangeEvent();
}
this.circular=circular;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849143116
GPR[SPVAP]-1659849143116
GPR[EPVAP]-1659849144454
GPR[SPVATF]-1659849144454
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849145582
GPR[EPVS]-1659849145582
========
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=direction;

========
MM Copying to MM
GPR[SPVS]-1659849145585
GPR[SPVAP]-1659849145585
GPR[EPVAP]-1659849146932
GPR[SPVATF]-1659849146932
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849148073
GPR[EPVS]-1659849148073
========
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849148075
GPR[SPVAP]-1659849148075
GPR[EPVAP]-1659849149448
GPR[SPVATF]-1659849149448
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849150574
GPR[EPVS]-1659849150574
========
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=direction;

========
MM Copying to MM
GPR[SPVS]-1659849150576
GPR[SPVAP]-1659849150576
GPR[EPVAP]-1659849151915
GPR[SPVATF]-1659849151915
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849153053
GPR[EPVS]-1659849153053
========
fireChangeEvent();
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=direction;

========
MM Copying to MM
GPR[SPVS]-1659849153054
GPR[SPVAP]-1659849153054
GPR[EPVAP]-1659849154387
GPR[SPVATF]-1659849154387
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849155504
GPR[EPVS]-1659849155504
========
fireChangeEvent();
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849155506
GPR[SPVAP]-1659849155506
GPR[EPVAP]-1659849156869
GPR[SPVATF]-1659849156869
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849157973
GPR[EPVS]-1659849157973
========
fireChangeEvent();
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=direction;

========
MM Copying to MM
GPR[SPVS]-1659849157975
GPR[SPVAP]-1659849157975
GPR[EPVAP]-1659849159320
GPR[SPVATF]-1659849159320
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849160476
GPR[EPVS]-1659849160476
========
this.circular=true;
this.startAngle=startAngle;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849160478
GPR[SPVAP]-1659849160478
GPR[EPVAP]-1659849161835
GPR[SPVATF]-1659849161835
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849165401
GPR[EPVS]-1659849165401
========
this.shadowYOffset=lowerBound;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849165402
GPR[SPVAP]-1659849165402
GPR[EPVAP]-1659849166192
GPR[EPVS]-1659849166192
========
this.shadowYOffset=upperBound;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849166194
GPR[SPVAP]-1659849166194
GPR[EPVAP]-1659849166998
GPR[EPVS]-1659849166998
========
this.shadowYOffset=extent;
this.circular=true;
this.startAngle=startAngle;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849167001
GPR[SPVAP]-1659849167001
GPR[EPVAP]-1659849167784
GPR[EPVS]-1659849167784
========
notifyListeners(new DialLayerChangeEvent(this));
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849167786
GPR[SPVAP]-1659849167786
GPR[EPVAP]-1659849168587
GPR[EPVS]-1659849168587
========
serialVersionUID=Double.doubleToLongBits(this.shadowYOffset);
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849168590
GPR[SPVAP]-1659849168590
GPR[EPVAP]-1659849169424
GPR[EPVS]-1659849169424
========
this.circular=true;
this.startAngle=angle1;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849169426
GPR[SPVAP]-1659849169426
GPR[EPVAP]-1659849170214
GPR[EPVS]-1659849170214
========
this.circular=true;
this.startAngle=value;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849170215
GPR[SPVAP]-1659849170215
GPR[EPVAP]-1659849171024
GPR[EPVS]-1659849171024
========
this.circular=true;
this.startAngle=min;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849171026
GPR[SPVAP]-1659849171026
GPR[EPVAP]-1659849171821
GPR[EPVS]-1659849171822
========
this.circular=true;
this.startAngle=runningTotal;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849171824
GPR[SPVAP]-1659849171824
GPR[EPVAP]-1659849172644
GPR[EPVS]-1659849172644
========
this.circular=true;
this.startAngle=v;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849172647
GPR[SPVAP]-1659849172647
GPR[EPVAP]-1659849173452
GPR[EPVS]-1659849173452
========
this.circular=true;
if(shadowYOffset>=this.shadowYOffset){
break;
}
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849173454
GPR[SPVAP]-1659849173454
GPR[EPVAP]-1659849174246
GPR[EPVS]-1659849174246
========
fireChangeEvent();
this.circular=true;
this.startAngle=angle;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849174249
GPR[SPVAP]-1659849174249
GPR[EPVAP]-1659849175042
GPR[EPVS]-1659849175042
========
notifyListeners(new DialLayerChangeEvent(this));
this.circular=true;
this.startAngle=angle;
this.direction=Rotation.CLOCKWISE;

========
MM Copying to MM
GPR[SPVS]-1659849175045
GPR[SPVAP]-1659849175045
GPR[EPVAP]-1659849175871
GPR[EPVS]-1659849175871
GPR[ESUN]-1659849175871
GPR[SSUN]-1659849175871
org.jfree.chart.plot.PiePlot,514
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849177893
GPR[SPVAP]-1659849177893
GPR[EPVAP]-1659849182222
GPR[SPVATF]-1659849182222
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849183365
GPR[EPVS]-1659849183365
========
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849183367
GPR[SPVAP]-1659849183367
GPR[EPVAP]-1659849184722
GPR[SPVATF]-1659849184722
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849185896
GPR[EPVS]-1659849185896
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849185898
GPR[SPVAP]-1659849185898
GPR[EPVAP]-1659849187279
GPR[SPVATF]-1659849187279
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849188418
GPR[EPVS]-1659849188418
========
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MAX_VALUE;

========
MM Copying to MM
GPR[SPVS]-1659849188420
GPR[SPVAP]-1659849188420
GPR[EPVAP]-1659849189207
GPR[EPVS]-1659849189207
========
this.shadowPaint=null;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849189209
GPR[SPVAP]-1659849189209
GPR[EPVAP]-1659849190560
GPR[SPVATF]-1659849190560
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849191739
GPR[EPVS]-1659849191739
========
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.shadowPaint=null;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849191741
GPR[SPVAP]-1659849191741
GPR[EPVAP]-1659849193094
GPR[SPVATF]-1659849193094
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849194240
GPR[EPVS]-1659849194240
========
this.startAngle=angle;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849194242
GPR[SPVAP]-1659849194242
GPR[EPVAP]-1659849195027
GPR[EPVS]-1659849195027
========
fireChangeEvent();
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849195029
GPR[SPVAP]-1659849195029
GPR[EPVAP]-1659849196382
GPR[SPVATF]-1659849196382
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849197522
GPR[EPVS]-1659849197522
========
this.startAngle=startAngle;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849197524
GPR[SPVAP]-1659849197524
GPR[EPVAP]-1659849198845
GPR[SPVATF]-1659849198845
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849199977
GPR[EPVS]-1659849199977
========
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=extent;

========
MM Copying to MM
GPR[SPVS]-1659849199979
GPR[SPVAP]-1659849199979
GPR[EPVAP]-1659849200795
GPR[EPVS]-1659849200796
========
this.shadowYOffset=lowerBound;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849200797
GPR[SPVAP]-1659849200797
GPR[EPVAP]-1659849201590
GPR[EPVS]-1659849201590
========
this.shadowYOffset=upperBound;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849201591
GPR[SPVAP]-1659849201591
GPR[EPVAP]-1659849202385
GPR[EPVS]-1659849202385
========
notifyListeners(new DialLayerChangeEvent(this));
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849202387
GPR[SPVAP]-1659849202387
GPR[EPVAP]-1659849203184
GPR[EPVS]-1659849203184
========
this.startAngle=DEFAULT_START_ANGLE;
this.shadowPaint=Color.gray;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849203186
GPR[SPVAP]-1659849203186
GPR[EPVAP]-1659849204568
GPR[SPVATF]-1659849204568
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849205763
GPR[EPVS]-1659849205763
========
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849205765
GPR[SPVAP]-1659849205765
GPR[EPVAP]-1659849206554
GPR[EPVS]-1659849206554
========
this.startAngle=startAngle;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849206556
GPR[SPVAP]-1659849206556
GPR[EPVAP]-1659849207871
GPR[SPVATF]-1659849207871
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849208988
GPR[EPVS]-1659849208988
========
this.shadowYOffset=extent;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849208990
GPR[SPVAP]-1659849208990
GPR[EPVAP]-1659849209787
GPR[EPVS]-1659849209787
========
this.startAngle=startAngle;
this.startAngle=DEFAULT_START_ANGLE;
this.shadowPaint=Color.gray;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849209788
GPR[SPVAP]-1659849209788
GPR[EPVAP]-1659849211104
GPR[SPVATF]-1659849211104
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849212229
GPR[EPVS]-1659849212229
========
this.startAngle=DEFAULT_START_ANGLE;
this.direction=direction;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849212231
GPR[SPVAP]-1659849212231
GPR[EPVAP]-1659849213564
GPR[SPVATF]-1659849213564
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849214683
GPR[EPVS]-1659849214683
========
this.startAngle=DEFAULT_START_ANGLE;
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849214685
GPR[SPVAP]-1659849214685
GPR[EPVAP]-1659849216002
GPR[SPVATF]-1659849216002
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849217132
GPR[EPVS]-1659849217132
========
this.startAngle=DEFAULT_START_ANGLE;
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=direction;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849217134
GPR[SPVAP]-1659849217134
GPR[EPVAP]-1659849218515
GPR[SPVATF]-1659849218515
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849219613
GPR[EPVS]-1659849219613
========
fireChangeEvent();
this.startAngle=DEFAULT_START_ANGLE;
this.direction=direction;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849219614
GPR[SPVAP]-1659849219614
GPR[EPVAP]-1659849220999
GPR[SPVATF]-1659849220999
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849222139
GPR[EPVS]-1659849222139
========
fireChangeEvent();
this.startAngle=DEFAULT_START_ANGLE;
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849222141
GPR[SPVAP]-1659849222141
GPR[EPVAP]-1659849223458
GPR[SPVATF]-1659849223458
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849224585
GPR[EPVS]-1659849224585
========
fireChangeEvent();
this.startAngle=DEFAULT_START_ANGLE;
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=direction;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849224587
GPR[SPVAP]-1659849224587
GPR[EPVAP]-1659849225932
GPR[SPVATF]-1659849225932
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849227076
GPR[EPVS]-1659849227076
========
serialVersionUID=Double.doubleToLongBits(this.shadowYOffset);
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849227078
GPR[SPVAP]-1659849227078
GPR[EPVAP]-1659849227873
GPR[EPVS]-1659849227873
========
this.startAngle=runningTotal;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849227875
GPR[SPVAP]-1659849227876
GPR[EPVAP]-1659849228704
GPR[EPVS]-1659849228704
========
this.startAngle=v;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849228706
GPR[SPVAP]-1659849228706
GPR[EPVAP]-1659849229520
GPR[EPVS]-1659849229520
========
if(shadowYOffset>=this.shadowYOffset){
break;
}
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849229522
GPR[SPVAP]-1659849229522
GPR[EPVAP]-1659849230324
GPR[EPVS]-1659849230324
========
this.startAngle=angle1;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849230326
GPR[SPVAP]-1659849230326
GPR[EPVAP]-1659849231112
GPR[EPVS]-1659849231112
========
this.startAngle=value;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849231114
GPR[SPVAP]-1659849231114
GPR[EPVAP]-1659849231939
GPR[EPVS]-1659849231939
========
fireChangeEvent();
this.startAngle=angle;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849231941
GPR[SPVAP]-1659849231941
GPR[EPVAP]-1659849232728
GPR[EPVS]-1659849232728
========
notifyListeners(new DialLayerChangeEvent(this));
this.startAngle=angle;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;

========
MM Copying to MM
GPR[SPVS]-1659849232731
GPR[SPVAP]-1659849232731
GPR[EPVAP]-1659849233524
GPR[EPVS]-1659849233524
GPR[ESUN]-1659849233524
GPR[SSUN]-1659849233524
org.jfree.chart.plot.PiePlot,515
========
this.circular=true;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849235936
GPR[SPVAP]-1659849235936
GPR[EPVAP]-1659849241593
GPR[SPVATF]-1659849241593
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849242753
GPR[EPVS]-1659849242753
========
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849242755
GPR[SPVAP]-1659849242755
GPR[EPVAP]-1659849244134
GPR[SPVATF]-1659849244135
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849245320
GPR[EPVS]-1659849245320
========
this.circular=true;
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849245322
GPR[SPVAP]-1659849245322
GPR[EPVAP]-1659849246675
GPR[SPVATF]-1659849246675
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849247794
GPR[EPVS]-1659849247794
========
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_START_ANGLE;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849247796
GPR[SPVAP]-1659849247796
GPR[EPVAP]-1659849249118
GPR[SPVATF]-1659849249118
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849250294
GPR[EPVS]-1659849250294
========
this.direction=Rotation.CLOCKWISE;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849250296
GPR[SPVAP]-1659849250296
GPR[EPVAP]-1659849251645
GPR[SPVATF]-1659849251645
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849252790
GPR[EPVS]-1659849252790
========
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.shadowYOffset=DEFAULT_MAX_VALUE;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849252792
GPR[SPVAP]-1659849252792
GPR[EPVAP]-1659849253594
GPR[EPVS]-1659849253594
========
this.direction=Rotation.CLOCKWISE;
this.interiorGap=DEFAULT_INTERIOR_GAP;
this.minimumArcAngleToDraw=DEFAULT_START_ANGLE;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849253596
GPR[SPVAP]-1659849253596
GPR[EPVAP]-1659849254929
GPR[SPVATF]-1659849254929
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849256068
GPR[EPVS]-1659849256068
========
this.direction=direction;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849256069
GPR[SPVAP]-1659849256069
GPR[EPVAP]-1659849257387
GPR[SPVATF]-1659849257387
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849258517
GPR[EPVS]-1659849258517
========
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849258519
GPR[SPVAP]-1659849258519
GPR[EPVAP]-1659849259849
GPR[SPVATF]-1659849259849
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849260993
GPR[EPVS]-1659849260993
========
fireChangeEvent();
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849260996
GPR[SPVAP]-1659849260996
GPR[EPVAP]-1659849262372
GPR[SPVATF]-1659849262372
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849263537
GPR[EPVS]-1659849263537
========
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
this.direction=direction;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849263539
GPR[SPVAP]-1659849263539
GPR[EPVAP]-1659849264879
GPR[SPVATF]-1659849264879
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849265984
GPR[EPVS]-1659849265984
========
fireChangeEvent();
this.direction=direction;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849265986
GPR[SPVAP]-1659849265986
GPR[EPVAP]-1659849267335
GPR[SPVATF]-1659849267335
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849268484
GPR[EPVS]-1659849268484
========
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
fireChangeEvent();
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849268486
GPR[SPVAP]-1659849268486
GPR[EPVAP]-1659849269792
GPR[SPVATF]-1659849269792
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849270931
GPR[EPVS]-1659849270931
========
if(direction==null){
throw new IllegalArgumentException("Null \'direction\' argument.");
}
fireChangeEvent();
this.direction=direction;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849270933
GPR[SPVAP]-1659849270933
GPR[EPVAP]-1659849272246
GPR[SPVATF]-1659849272246
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849273340
GPR[EPVS]-1659849273340
========
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=angle1;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849273342
GPR[SPVAP]-1659849273342
GPR[EPVAP]-1659849274145
GPR[EPVS]-1659849274145
========
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=value;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849274147
GPR[SPVAP]-1659849274147
GPR[EPVAP]-1659849274965
GPR[EPVS]-1659849274965
========
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=runningTotal;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849274967
GPR[SPVAP]-1659849274967
GPR[EPVAP]-1659849275750
GPR[EPVS]-1659849275750
========
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=v;
this.sectionPaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849275751
GPR[SPVAP]-1659849275751
GPR[EPVAP]-1659849276548
GPR[EPVS]-1659849276548
GPR[ESUN]-1659849276548
GPR[SSUN]-1659849276548
org.jfree.chart.plot.PiePlot,517
========
this.startAngle=DEFAULT_START_ANGLE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849278518
GPR[SPVAP]-1659849278518
GPR[EPVAP]-1659849282772
GPR[SPVATF]-1659849282772
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849283924
GPR[EPVS]-1659849283924
========
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849283927
GPR[SPVAP]-1659849283927
GPR[EPVAP]-1659849285283
GPR[SPVATF]-1659849285283
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849286420
GPR[EPVS]-1659849286420
========
this.startAngle=DEFAULT_START_ANGLE;
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849286422
GPR[SPVAP]-1659849286422
GPR[EPVAP]-1659849287737
GPR[SPVATF]-1659849287737
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849288871
GPR[EPVS]-1659849288871
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
super();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849288872
GPR[SPVAP]-1659849288872
GPR[EPVAP]-1659849289661
GPR[EPVS]-1659849289661
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.black;

========
MM Copying to MM
GPR[SPVS]-1659849289663
GPR[SPVAP]-1659849289663
GPR[EPVAP]-1659849291001
GPR[SPVATF]-1659849291001
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849292169
GPR[EPVS]-1659849292169
========
super(pieIndex);
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849292171
GPR[SPVAP]-1659849292172
GPR[EPVAP]-1659849292964
GPR[EPVS]-1659849292964
========
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849292965
GPR[SPVAP]-1659849292965
GPR[EPVAP]-1659849293757
GPR[EPVS]-1659849293757
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.white;

========
MM Copying to MM
GPR[SPVS]-1659849293758
GPR[SPVAP]-1659849293758
GPR[EPVAP]-1659849295124
GPR[SPVATF]-1659849295124
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849296291
GPR[EPVS]-1659849296291
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.labelLinksVisible=false;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849296293
GPR[SPVAP]-1659849296293
GPR[EPVAP]-1659849297619
GPR[SPVATF]-1659849297619
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849298748
GPR[EPVS]-1659849298748
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.labelOutlineStroke=new BasicStroke(0.5);
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849298749
GPR[SPVAP]-1659849298749
GPR[EPVAP]-1659849299559
GPR[EPVS]-1659849299559
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.labelLinksVisible=false;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.white;

========
MM Copying to MM
GPR[SPVS]-1659849299562
GPR[SPVAP]-1659849299562
GPR[EPVAP]-1659849300890
GPR[SPVATF]-1659849300890
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849302031
GPR[EPVS]-1659849302031
========
this.minimumArcAngleToDraw=green;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849302034
GPR[SPVAP]-1659849302034
GPR[EPVAP]-1659849302838
GPR[EPVS]-1659849302838
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.red;

========
MM Copying to MM
GPR[SPVS]-1659849302840
GPR[SPVAP]-1659849302840
GPR[EPVAP]-1659849304232
GPR[SPVATF]-1659849304232
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849305357
GPR[EPVS]-1659849305357
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.maximumLabelWidth=candleWidth;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849305359
GPR[SPVAP]-1659849305359
GPR[EPVAP]-1659849306171
GPR[EPVS]-1659849306171
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.DEBUG_DRAW_INTERIOR=drawVolume;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849306173
GPR[SPVAP]-1659849306173
GPR[EPVAP]-1659849307016
GPR[EPVS]-1659849307016
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
super(dataset);
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849307018
GPR[SPVAP]-1659849307018
GPR[EPVAP]-1659849307837
GPR[EPVS]-1659849307837
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.labelLinksVisible=true;
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849307840
GPR[SPVAP]-1659849307840
GPR[EPVAP]-1659849309192
GPR[SPVATF]-1659849309192
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849312288
GPR[EPVS]-1659849312288
========
this.shadowYOffset=0.2;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849312290
GPR[SPVAP]-1659849312290
GPR[EPVAP]-1659849313618
GPR[SPVATF]-1659849313618
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849314777
GPR[EPVS]-1659849314777
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.labelLinksVisible=true;
this.labelOutlineStroke=new BasicStroke(0.5);
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849314779
GPR[SPVAP]-1659849314779
GPR[EPVAP]-1659849315571
GPR[EPVS]-1659849315571
========
this.shadowYOffset=0.2;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.labelLinksVisible=true;
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849315573
GPR[SPVAP]-1659849315573
GPR[EPVAP]-1659849316898
GPR[SPVATF]-1659849316898
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849318052
GPR[EPVS]-1659849318052
========
this.shadowYOffset=0.2;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.labelOutlineStroke=new BasicStroke(0.5);
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849318054
GPR[SPVAP]-1659849318054
GPR[EPVAP]-1659849318846
GPR[EPVS]-1659849318846
========
this.shadowYOffset=0.2;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.labelLinksVisible=true;
this.labelOutlineStroke=new BasicStroke(0.5);
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849318848
GPR[SPVAP]-1659849318848
GPR[EPVAP]-1659849319642
GPR[EPVS]-1659849319642
========
this.shadowYOffset=0.25;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849319645
GPR[SPVAP]-1659849319645
GPR[EPVAP]-1659849320972
GPR[SPVATF]-1659849320972
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849322104
GPR[EPVS]-1659849322104
========
this.startAngle=startAngle;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849322106
GPR[SPVAP]-1659849322106
GPR[EPVAP]-1659849323428
GPR[SPVATF]-1659849323428
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849324549
GPR[EPVS]-1659849324549
========
this.shadowYOffset=extent;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849324551
GPR[SPVAP]-1659849324551
GPR[EPVAP]-1659849325354
GPR[EPVS]-1659849325354
========
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.shadowYOffset=0.25;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849325356
GPR[SPVAP]-1659849325356
GPR[EPVAP]-1659849326187
GPR[EPVS]-1659849326187
========
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.startAngle=startAngle;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849326189
GPR[SPVAP]-1659849326189
GPR[EPVAP]-1659849326988
GPR[EPVS]-1659849326988
========
this.shadowYOffset=0.25;
this.startAngle=startAngle;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849326990
GPR[SPVAP]-1659849326990
GPR[EPVAP]-1659849328360
GPR[SPVATF]-1659849328360
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849329505
GPR[EPVS]-1659849329505
========
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.shadowYOffset=0.25;
this.startAngle=startAngle;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849329507
GPR[SPVAP]-1659849329507
GPR[EPVAP]-1659849330293
GPR[EPVS]-1659849330293
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849330295
GPR[SPVAP]-1659849330295
GPR[EPVAP]-1659849331597
GPR[SPVATF]-1659849331597
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849332784
GPR[EPVS]-1659849332784
========
fireChangeEvent();
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849332786
GPR[SPVAP]-1659849332786
GPR[EPVAP]-1659849334156
GPR[SPVATF]-1659849334156
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849335281
GPR[EPVS]-1659849335281
========
fireChangeEvent();
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849335283
GPR[SPVAP]-1659849335283
GPR[EPVAP]-1659849336614
GPR[SPVATF]-1659849336614
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849337752
GPR[EPVS]-1659849337752
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.interiorGap=new RectangleInsets(1.0,3.0,1.0,3.0);
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849337755
GPR[SPVAP]-1659849337755
GPR[EPVAP]-1659849338541
GPR[EPVS]-1659849338541
========
this.shadowXOffset=2.0;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;

========
MM Copying to MM
GPR[SPVS]-1659849338542
GPR[SPVAP]-1659849338542
GPR[EPVAP]-1659849339900
GPR[SPVATF]-1659849339900
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849341021
GPR[EPVS]-1659849341021
GPR[ESUN]-1659849341021
GPR[SSUN]-1659849341021
org.jfree.chart.plot.PiePlot,518
========
this.direction=Rotation.CLOCKWISE;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849342989
GPR[SPVAP]-1659849342989
GPR[EPVAP]-1659849347275
GPR[SPVATF]-1659849347275
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849348404
GPR[EPVS]-1659849348404
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849348406
GPR[SPVAP]-1659849348406
GPR[EPVAP]-1659849349753
GPR[SPVATF]-1659849349753
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849350899
GPR[EPVS]-1659849350899
========
this.direction=Rotation.CLOCKWISE;
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849350901
GPR[SPVAP]-1659849350901
GPR[EPVAP]-1659849352221
GPR[SPVATF]-1659849352221
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849353381
GPR[EPVS]-1659849353381
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=gray;

========
MM Copying to MM
GPR[SPVS]-1659849353383
GPR[SPVAP]-1659849353383
GPR[EPVAP]-1659849354203
GPR[EPVS]-1659849354203
========
fireChangeEvent();
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849354206
GPR[SPVAP]-1659849354206
GPR[EPVAP]-1659849355560
GPR[SPVATF]-1659849355560
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849356733
GPR[EPVS]-1659849356733
========
this.sectionPaintMap=new PaintMap();
super();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849356735
GPR[SPVAP]-1659849356735
GPR[EPVAP]-1659849357535
GPR[EPVS]-1659849357535
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.black;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849357537
GPR[SPVAP]-1659849357537
GPR[EPVAP]-1659849358916
GPR[SPVATF]-1659849358916
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849360040
GPR[EPVS]-1659849360040
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849360042
GPR[SPVAP]-1659849360042
GPR[EPVAP]-1659849360825
GPR[EPVS]-1659849360825
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
super(pieIndex);
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849360827
GPR[SPVAP]-1659849360827
GPR[EPVAP]-1659849361640
GPR[EPVS]-1659849361640
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.white;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849361642
GPR[SPVAP]-1659849361642
GPR[EPVAP]-1659849362959
GPR[SPVATF]-1659849362959
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849364117
GPR[EPVS]-1659849364117
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=false;

========
MM Copying to MM
GPR[SPVS]-1659849364120
GPR[SPVAP]-1659849364120
GPR[EPVAP]-1659849365466
GPR[SPVATF]-1659849365466
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849366622
GPR[EPVS]-1659849366622
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.maximumLabelWidth=15.0;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849366624
GPR[SPVAP]-1659849366624
GPR[EPVAP]-1659849367963
GPR[SPVATF]-1659849367963
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849369148
GPR[EPVS]-1659849369148
========
this.sectionPaintMap=new PaintMap();
this.labelOutlineStroke=new BasicStroke(0.5);
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849369150
GPR[SPVAP]-1659849369150
GPR[EPVAP]-1659849369979
GPR[EPVS]-1659849369979
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.white;
this.sectionOutlinesVisible=false;

========
MM Copying to MM
GPR[SPVS]-1659849369980
GPR[SPVAP]-1659849369980
GPR[EPVAP]-1659849371345
GPR[SPVATF]-1659849371345
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849372493
GPR[EPVS]-1659849372493
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.white;
this.maximumLabelWidth=15.0;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849372495
GPR[SPVAP]-1659849372495
GPR[EPVAP]-1659849373812
GPR[SPVATF]-1659849373812
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849374969
GPR[EPVS]-1659849374969
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.maximumLabelWidth=15.0;
this.sectionOutlinesVisible=false;

========
MM Copying to MM
GPR[SPVS]-1659849374971
GPR[SPVAP]-1659849374971
GPR[EPVAP]-1659849376311
GPR[SPVATF]-1659849376311
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849377446
GPR[EPVS]-1659849377446
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.white;
this.maximumLabelWidth=15.0;
this.sectionOutlinesVisible=false;

========
MM Copying to MM
GPR[SPVS]-1659849377449
GPR[SPVAP]-1659849377449
GPR[EPVAP]-1659849378827
GPR[SPVATF]-1659849378827
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849379969
GPR[EPVS]-1659849379969
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
super(dataset);
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849379971
GPR[SPVAP]-1659849379971
GPR[EPVAP]-1659849380758
GPR[EPVS]-1659849380758
========
this.shadowYOffset=0.2;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849380759
GPR[SPVAP]-1659849380759
GPR[EPVAP]-1659849382170
GPR[SPVATF]-1659849382170
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849385561
GPR[EPVS]-1659849385561
========
this.shadowYOffset=0.2;
this.sectionPaintMap=new PaintMap();
this.labelOutlineStroke=new BasicStroke(0.5);
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849385562
GPR[SPVAP]-1659849385562
GPR[EPVAP]-1659849386360
GPR[EPVS]-1659849386360
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.shadowYOffset=0.25;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849386362
GPR[SPVAP]-1659849386362
GPR[EPVAP]-1659849387713
GPR[SPVATF]-1659849387713
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849388835
GPR[EPVS]-1659849388835
========
this.startAngle=startAngle;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849388837
GPR[SPVAP]-1659849388837
GPR[EPVAP]-1659849390181
GPR[SPVATF]-1659849390181
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849391298
GPR[EPVS]-1659849391298
========
this.shadowYOffset=extent;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849391300
GPR[SPVAP]-1659849391300
GPR[EPVAP]-1659849392088
GPR[EPVS]-1659849392088
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.shadowYOffset=0.25;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849392090
GPR[SPVAP]-1659849392090
GPR[EPVAP]-1659849392903
GPR[EPVS]-1659849392903
========
this.startAngle=startAngle;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849392905
GPR[SPVAP]-1659849392905
GPR[EPVAP]-1659849393700
GPR[EPVS]-1659849393700
========
this.startAngle=startAngle;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.shadowYOffset=0.25;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849393702
GPR[SPVAP]-1659849393702
GPR[EPVAP]-1659849395046
GPR[SPVATF]-1659849395046
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849396209
GPR[EPVS]-1659849396209
========
this.startAngle=startAngle;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.shadowYOffset=0.25;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849396211
GPR[SPVAP]-1659849396211
GPR[EPVAP]-1659849397040
GPR[EPVS]-1659849397040
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.red;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849397043
GPR[SPVAP]-1659849397043
GPR[EPVAP]-1659849398407
GPR[SPVATF]-1659849398407
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849399552
GPR[EPVS]-1659849399552
========
this.maximumLabelWidth=candleWidth;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849399554
GPR[SPVAP]-1659849399554
GPR[EPVAP]-1659849400340
GPR[EPVS]-1659849400340
========
this.DEBUG_DRAW_INTERIOR=drawVolume;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849400341
GPR[SPVAP]-1659849400341
GPR[EPVAP]-1659849401147
GPR[EPVS]-1659849401147
========
this.sectionPaintMap=new PaintMap();
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849401149
GPR[SPVAP]-1659849401149
GPR[EPVAP]-1659849402475
GPR[SPVATF]-1659849402475
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849403639
GPR[EPVS]-1659849403639
========
fireChangeEvent();
this.sectionPaintMap=new PaintMap();
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849403641
GPR[SPVAP]-1659849403641
GPR[EPVAP]-1659849404975
GPR[SPVATF]-1659849404975
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849406096
GPR[EPVS]-1659849406096
========
this.interiorGap=new RectangleInsets(1.0,3.0,1.0,3.0);
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849406098
GPR[SPVAP]-1659849406098
GPR[EPVAP]-1659849406884
GPR[EPVS]-1659849406884
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.shadowXOffset=2.0;
this.sectionOutlinesVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849406886
GPR[SPVAP]-1659849406886
GPR[EPVAP]-1659849408251
GPR[SPVATF]-1659849408251
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849409428
GPR[EPVS]-1659849409428
GPR[ESUN]-1659849409428
GPR[SSUN]-1659849409428
org.jfree.chart.plot.PiePlot,520
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849411358
GPR[SPVAP]-1659849411358
GPR[EPVAP]-1659849415676
GPR[SPVATF]-1659849415676
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849416834
GPR[EPVS]-1659849416834
========
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849416836
GPR[SPVAP]-1659849416836
GPR[EPVAP]-1659849418230
GPR[SPVATF]-1659849418230
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849419372
GPR[EPVS]-1659849419372
========
this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;
this.sectionPaintMap=new PaintMap();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849419374
GPR[SPVAP]-1659849419374
GPR[EPVAP]-1659849420711
GPR[SPVATF]-1659849420711
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849421833
GPR[EPVS]-1659849421833
========
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=gray;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849421835
GPR[SPVAP]-1659849421835
GPR[EPVAP]-1659849422664
GPR[EPVS]-1659849422664
========
fireChangeEvent();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849422665
GPR[SPVAP]-1659849422665
GPR[EPVAP]-1659849424010
GPR[SPVATF]-1659849424010
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849425216
GPR[EPVS]-1659849425216
========
super();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849425218
GPR[SPVAP]-1659849425218
GPR[EPVAP]-1659849426040
GPR[EPVS]-1659849426040
========
this.baseSectionPaint=Color.black;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849426042
GPR[SPVAP]-1659849426042
GPR[EPVAP]-1659849427372
GPR[SPVATF]-1659849427372
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849428520
GPR[EPVS]-1659849428520
========
this.baseSectionPaint=Color.gray;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849428522
GPR[SPVAP]-1659849428522
GPR[EPVAP]-1659849429332
GPR[EPVS]-1659849429332
========
this.baseSectionPaint=Color.gray;
super(pieIndex);
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849429335
GPR[SPVAP]-1659849429335
GPR[EPVAP]-1659849430124
GPR[EPVS]-1659849430124
========
this.baseSectionPaint=Color.white;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849430126
GPR[SPVAP]-1659849430126
GPR[EPVAP]-1659849431454
GPR[SPVATF]-1659849431454
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849432591
GPR[EPVS]-1659849432591
========
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=false;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849432594
GPR[SPVAP]-1659849432594
GPR[EPVAP]-1659849433908
GPR[SPVATF]-1659849433908
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849435162
GPR[EPVS]-1659849435162
========
this.baseSectionPaint=Color.gray;
this.maximumLabelWidth=15.0;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849435164
GPR[SPVAP]-1659849435164
GPR[EPVAP]-1659849436506
GPR[SPVATF]-1659849436506
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849437686
GPR[EPVS]-1659849437686
========
this.labelOutlineStroke=new BasicStroke(0.5);
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849437688
GPR[SPVAP]-1659849437688
GPR[EPVAP]-1659849438498
GPR[EPVS]-1659849438498
========
this.baseSectionPaint=Color.white;
this.sectionOutlinesVisible=false;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849438500
GPR[SPVAP]-1659849438500
GPR[EPVAP]-1659849439823
GPR[SPVATF]-1659849439823
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849440949
GPR[EPVS]-1659849440949
========
this.baseSectionPaint=Color.white;
this.maximumLabelWidth=15.0;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849440950
GPR[SPVAP]-1659849440950
GPR[EPVAP]-1659849442285
GPR[SPVATF]-1659849442285
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849443430
GPR[EPVS]-1659849443430
========
this.baseSectionPaint=Color.gray;
this.maximumLabelWidth=15.0;
this.sectionOutlinesVisible=false;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849443431
GPR[SPVAP]-1659849443431
GPR[EPVAP]-1659849444766
GPR[SPVATF]-1659849444766
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849445905
GPR[EPVS]-1659849445905
========
this.baseSectionPaint=Color.white;
this.maximumLabelWidth=15.0;
this.sectionOutlinesVisible=false;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849445907
GPR[SPVAP]-1659849445907
GPR[EPVAP]-1659849447232
GPR[SPVATF]-1659849447232
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849448355
GPR[EPVS]-1659849448355
========
this.baseSectionPaint=Color.gray;
super(dataset);
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849448357
GPR[SPVAP]-1659849448357
GPR[EPVAP]-1659849449136
GPR[EPVS]-1659849449136
========
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.shadowYOffset=0.2;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849449138
GPR[SPVAP]-1659849449138
GPR[EPVAP]-1659849450463
GPR[SPVATF]-1659849450463
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849451596
GPR[EPVS]-1659849451596
========
this.labelOutlineStroke=new BasicStroke(0.5);
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.shadowYOffset=0.2;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849451598
GPR[SPVAP]-1659849451598
GPR[EPVAP]-1659849452408
GPR[EPVS]-1659849452408
========
this.baseSectionPaint=Color.gray;
this.shadowYOffset=0.25;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849452411
GPR[SPVAP]-1659849452411
GPR[EPVAP]-1659849453760
GPR[SPVATF]-1659849453760
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849457246
GPR[EPVS]-1659849457246
========
this.startAngle=startAngle;
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849457248
GPR[SPVAP]-1659849457248
GPR[EPVAP]-1659849458578
GPR[SPVATF]-1659849458578
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849459693
GPR[EPVS]-1659849459693
========
this.shadowYOffset=extent;
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849459694
GPR[SPVAP]-1659849459694
GPR[EPVAP]-1659849460491
GPR[EPVS]-1659849460491
========
this.baseSectionPaint=Color.gray;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.shadowYOffset=0.25;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849460493
GPR[SPVAP]-1659849460493
GPR[EPVAP]-1659849461315
GPR[EPVS]-1659849461315
========
this.startAngle=startAngle;
this.baseSectionPaint=Color.gray;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849461316
GPR[SPVAP]-1659849461316
GPR[EPVAP]-1659849462127
GPR[EPVS]-1659849462127
========
this.startAngle=startAngle;
this.baseSectionPaint=Color.gray;
this.shadowYOffset=0.25;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849462129
GPR[SPVAP]-1659849462129
GPR[EPVAP]-1659849463494
GPR[SPVATF]-1659849463494
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849464620
GPR[EPVS]-1659849464620
========
this.startAngle=startAngle;
this.baseSectionPaint=Color.gray;
this.baseSectionOutlineStroke=new BasicStroke(2.0);
this.shadowYOffset=0.25;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849464622
GPR[SPVAP]-1659849464622
GPR[EPVAP]-1659849465425
GPR[EPVS]-1659849465425
========
this.baseSectionPaint=Color.red;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849465427
GPR[SPVAP]-1659849465427
GPR[EPVAP]-1659849466772
GPR[SPVATF]-1659849466772
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849467902
GPR[EPVS]-1659849467902
========
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.maximumLabelWidth=candleWidth;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849467904
GPR[SPVAP]-1659849467904
GPR[EPVAP]-1659849468771
GPR[EPVS]-1659849468771
========
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.DEBUG_DRAW_INTERIOR=drawVolume;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849468773
GPR[SPVAP]-1659849468773
GPR[EPVAP]-1659849469572
GPR[EPVS]-1659849469572
========
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849469574
GPR[SPVAP]-1659849469574
GPR[EPVAP]-1659849470891
GPR[SPVATF]-1659849470891
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849472036
GPR[EPVS]-1659849472036
========
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
fireChangeEvent();
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849472038
GPR[SPVAP]-1659849472038
GPR[EPVAP]-1659849473391
GPR[SPVATF]-1659849473391
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849474544
GPR[EPVS]-1659849474544
========
this.baseSectionPaint=Color.gray;
this.sectionOutlinesVisible=true;
this.interiorGap=new RectangleInsets(1.0,3.0,1.0,3.0);
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849474546
GPR[SPVAP]-1659849474546
GPR[EPVAP]-1659849475348
GPR[EPVS]-1659849475348
========
this.baseSectionPaint=Color.gray;
this.shadowXOffset=2.0;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();

========
MM Copying to MM
GPR[SPVS]-1659849475350
GPR[SPVAP]-1659849475350
GPR[EPVAP]-1659849476706
GPR[SPVATF]-1659849476706
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849477835
GPR[EPVS]-1659849477835
GPR[ESUN]-1659849477835
GPR[SSUN]-1659849477835
org.jfree.chart.plot.PiePlot,521
========
this.sectionOutlineStrokeMap=new StrokeMap();
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849479770
GPR[SPVAP]-1659849479770
GPR[EPVAP]-1659849484103
GPR[SPVATF]-1659849484103
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849485257
GPR[EPVS]-1659849485257
========
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849485259
GPR[SPVAP]-1659849485259
GPR[EPVAP]-1659849486650
GPR[SPVATF]-1659849486650
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849487791
GPR[EPVS]-1659849487791
========
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849487793
GPR[SPVAP]-1659849487793
GPR[EPVAP]-1659849489118
GPR[SPVATF]-1659849489118
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849490236
GPR[EPVS]-1659849490236
========
this.sectionOutlinesVisible=DEBUG_DRAW_INTERIOR;
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849490238
GPR[SPVAP]-1659849490238
GPR[EPVAP]-1659849491568
GPR[SPVATF]-1659849491568
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849492720
GPR[EPVS]-1659849492720
========
fireChangeEvent();
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849492722
GPR[SPVAP]-1659849492722
GPR[EPVAP]-1659849494089
GPR[SPVATF]-1659849494089
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849495244
GPR[EPVS]-1659849495244
========
fireChangeEvent();
this.sectionOutlinesVisible=DEBUG_DRAW_INTERIOR;
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849495246
GPR[SPVAP]-1659849495246
GPR[EPVAP]-1659849496588
GPR[SPVATF]-1659849496588
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849497717
GPR[EPVS]-1659849497717
========
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849497719
GPR[SPVAP]-1659849497719
GPR[EPVAP]-1659849499033
GPR[SPVATF]-1659849499033
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849500196
GPR[EPVS]-1659849500196
========
fireChangeEvent();
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849500198
GPR[SPVAP]-1659849500198
GPR[EPVAP]-1659849501536
GPR[SPVATF]-1659849501536
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849502663
GPR[EPVS]-1659849502663
GPR[ESUN]-1659849502663
GPR[SSUN]-1659849502663
org.jfree.chart.plot.PiePlot,522
========
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();

========
MM Copying to MM
GPR[SPVS]-1659849504598
GPR[SPVAP]-1659849504598
GPR[EPVAP]-1659849508835
GPR[SPVATF]-1659849508835
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849510001
GPR[EPVS]-1659849510001
========
this.explodePercentages=new TreeMap();
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();

========
MM Copying to MM
GPR[SPVS]-1659849510003
GPR[SPVAP]-1659849510003
GPR[EPVAP]-1659849511374
GPR[SPVATF]-1659849511374
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849512537
GPR[EPVS]-1659849512537
========
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();

========
MM Copying to MM
GPR[SPVS]-1659849512539
GPR[SPVAP]-1659849512539
GPR[EPVAP]-1659849513887
GPR[SPVATF]-1659849513887
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849514997
GPR[EPVS]-1659849514997
========
this.sectionOutlinePaintMap=new PaintMap();
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();

========
MM Copying to MM
GPR[SPVS]-1659849515000
GPR[SPVAP]-1659849515000
GPR[EPVAP]-1659849516320
GPR[SPVATF]-1659849516320
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849517484
GPR[EPVS]-1659849517484
========
fireChangeEvent();
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();

========
MM Copying to MM
GPR[SPVS]-1659849517485
GPR[SPVAP]-1659849517485
GPR[EPVAP]-1659849518872
GPR[SPVATF]-1659849518872
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849520001
GPR[EPVS]-1659849520001
========
fireChangeEvent();
this.sectionOutlinePaintMap=new PaintMap();
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();

========
MM Copying to MM
GPR[SPVS]-1659849520003
GPR[SPVAP]-1659849520003
GPR[EPVAP]-1659849521337
GPR[SPVATF]-1659849521337
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849522481
GPR[EPVS]-1659849522481
GPR[ESUN]-1659849522481
GPR[SSUN]-1659849522481
org.jfree.chart.plot.PiePlot,524
========
this.sectionOutlinesVisible=true;
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849524437
GPR[SPVAP]-1659849524437
GPR[EPVAP]-1659849530735
GPR[SPVATF]-1659849530735
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849531861
GPR[EPVS]-1659849531861
========
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849531863
GPR[SPVAP]-1659849531863
GPR[EPVAP]-1659849533229
GPR[SPVATF]-1659849533229
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849534376
GPR[EPVS]-1659849534376
========
this.sectionOutlinesVisible=true;
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849534378
GPR[SPVAP]-1659849534378
GPR[EPVAP]-1659849535704
GPR[SPVATF]-1659849535704
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849536865
GPR[EPVS]-1659849536865
========
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849536867
GPR[SPVAP]-1659849536867
GPR[EPVAP]-1659849538225
GPR[SPVATF]-1659849538225
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849539386
GPR[EPVS]-1659849539386
========
fireChangeEvent();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849539388
GPR[SPVAP]-1659849539388
GPR[EPVAP]-1659849540734
GPR[SPVATF]-1659849540734
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849541881
GPR[EPVS]-1659849541881
========
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
fireChangeEvent();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849541883
GPR[SPVAP]-1659849541883
GPR[EPVAP]-1659849543203
GPR[SPVATF]-1659849543203
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849544337
GPR[EPVS]-1659849544337
========
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
if(labelOutlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849544339
GPR[SPVAP]-1659849544339
GPR[EPVAP]-1659849545690
GPR[SPVATF]-1659849545690
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849546809
GPR[EPVS]-1659849546809
========
fireChangeEvent();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
if(labelOutlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849546811
GPR[SPVAP]-1659849546811
GPR[EPVAP]-1659849548170
GPR[SPVATF]-1659849548170
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849549311
GPR[EPVS]-1659849549311
GPR[ESUN]-1659849549311
GPR[SSUN]-1659849549311
org.jfree.chart.plot.PiePlot,525
========
this.sectionOutlinePaintMap=new PaintMap();
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();

========
MM Copying to MM
GPR[SPVS]-1659849551225
GPR[SPVAP]-1659849551225
GPR[EPVAP]-1659849555550
GPR[SPVATF]-1659849555550
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849556665
GPR[EPVS]-1659849556665
========
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();

========
MM Copying to MM
GPR[SPVS]-1659849556668
GPR[SPVAP]-1659849556668
GPR[EPVAP]-1659849558020
GPR[SPVATF]-1659849558020
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849559193
GPR[EPVS]-1659849559193
========
this.sectionOutlinePaintMap=new PaintMap();
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();

========
MM Copying to MM
GPR[SPVS]-1659849559195
GPR[SPVAP]-1659849559195
GPR[EPVAP]-1659849560514
GPR[SPVATF]-1659849560514
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849561665
GPR[EPVS]-1659849561665
========
this.sectionOutlineStrokeMap=new StrokeMap();
if(labelOutlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();

========
MM Copying to MM
GPR[SPVS]-1659849561667
GPR[SPVAP]-1659849561667
GPR[EPVAP]-1659849562990
GPR[SPVATF]-1659849562990
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849564157
GPR[EPVS]-1659849564157
========
fireChangeEvent();
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();

========
MM Copying to MM
GPR[SPVS]-1659849564159
GPR[SPVAP]-1659849564159
GPR[EPVAP]-1659849565517
GPR[SPVATF]-1659849565517
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849566662
GPR[EPVS]-1659849566662
========
fireChangeEvent();
this.sectionOutlineStrokeMap=new StrokeMap();
if(labelOutlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();

========
MM Copying to MM
GPR[SPVS]-1659849566664
GPR[SPVAP]-1659849566664
GPR[EPVAP]-1659849567998
GPR[SPVATF]-1659849567998
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849569102
GPR[EPVS]-1659849569102
GPR[ESUN]-1659849569102
GPR[SSUN]-1659849569102
org.jfree.chart.plot.PiePlot,527
========
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659849571119
GPR[SPVAP]-1659849571119
GPR[EPVAP]-1659849575396
GPR[SPVATF]-1659849575396
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849576575
GPR[EPVS]-1659849576575
========
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659849576577
GPR[SPVAP]-1659849576577
GPR[EPVAP]-1659849577985
GPR[SPVATF]-1659849577985
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849579137
GPR[EPVS]-1659849579137
========
this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659849579138
GPR[SPVAP]-1659849579138
GPR[EPVAP]-1659849580477
GPR[SPVATF]-1659849580477
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849581594
GPR[EPVS]-1659849581594
========
fireChangeEvent();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659849581596
GPR[SPVAP]-1659849581596
GPR[EPVAP]-1659849582916
GPR[SPVATF]-1659849582916
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849584089
GPR[EPVS]-1659849584089
========
if(labelOutlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659849584091
GPR[SPVAP]-1659849584091
GPR[EPVAP]-1659849585442
GPR[SPVATF]-1659849585442
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849586551
GPR[EPVS]-1659849586551
========
if(labelOutlineStroke==null){
throw new IllegalArgumentException("Null \'stroke\' argument.");
}
fireChangeEvent();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659849586553
GPR[SPVAP]-1659849586553
GPR[EPVAP]-1659849587885
GPR[SPVATF]-1659849587885
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849589012
GPR[EPVS]-1659849589012
GPR[ESUN]-1659849589012
GPR[SSUN]-1659849589012
org.jfree.chart.plot.PiePlot,529
========
this.sectionOutlineStrokeMap=new StrokeMap();
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849591046
GPR[SPVAP]-1659849591046
GPR[EPVAP]-1659849595272
GPR[SPVATF]-1659849595272
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849596433
GPR[EPVS]-1659849596433
========
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849596435
GPR[SPVAP]-1659849596435
GPR[EPVAP]-1659849597791
GPR[SPVATF]-1659849597791
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849598921
GPR[EPVS]-1659849598921
========
this.sectionOutlineStrokeMap=new StrokeMap();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849598922
GPR[SPVAP]-1659849598922
GPR[EPVAP]-1659849600295
GPR[SPVATF]-1659849600295
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849601425
GPR[EPVS]-1659849601425
========
fireChangeEvent();
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849601427
GPR[SPVAP]-1659849601427
GPR[EPVAP]-1659849604536
GPR[SPVATF]-1659849604536
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849605688
GPR[EPVS]-1659849605688
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849605691
GPR[SPVAP]-1659849605691
GPR[EPVAP]-1659849607008
GPR[SPVATF]-1659849607008
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849608166
GPR[EPVS]-1659849608166
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=font;

========
MM Copying to MM
GPR[SPVS]-1659849608168
GPR[SPVAP]-1659849608168
GPR[EPVAP]-1659849608962
GPR[EPVS]-1659849608962
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_AXIS_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849608964
GPR[SPVAP]-1659849608964
GPR[EPVAP]-1659849609812
GPR[EPVS]-1659849609812
========
this.explodePercentages=new TreeMap();
this.labelPaint=DEFAULT_AXIS_LABEL_PAINT;
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849609814
GPR[SPVAP]-1659849609814
GPR[EPVAP]-1659849610604
GPR[EPVS]-1659849610604
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849610606
GPR[SPVAP]-1659849610606
GPR[EPVAP]-1659849611922
GPR[SPVATF]-1659849611922
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849613053
GPR[EPVS]-1659849613053
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=font;

========
MM Copying to MM
GPR[SPVS]-1659849613055
GPR[SPVAP]-1659849613055
GPR[EPVAP]-1659849613856
GPR[EPVS]-1659849613856
========
fireChangeEvent();
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=font;

========
MM Copying to MM
GPR[SPVS]-1659849613857
GPR[SPVAP]-1659849613857
GPR[EPVAP]-1659849614704
GPR[EPVS]-1659849614704
========
fireChangeEvent();
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849614707
GPR[SPVAP]-1659849614707
GPR[EPVAP]-1659849616051
GPR[SPVATF]-1659849616051
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849617220
GPR[EPVS]-1659849617220
========
fireChangeEvent();
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=font;

========
MM Copying to MM
GPR[SPVS]-1659849617222
GPR[SPVAP]-1659849617222
GPR[EPVAP]-1659849618050
GPR[EPVS]-1659849618050
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849618052
GPR[SPVAP]-1659849618052
GPR[EPVAP]-1659849619406
GPR[SPVATF]-1659849619406
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849620544
GPR[EPVS]-1659849620544
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=font;

========
MM Copying to MM
GPR[SPVS]-1659849620550
GPR[SPVAP]-1659849620550
GPR[EPVAP]-1659849621343
GPR[EPVS]-1659849621343
========
fireChangeEvent();
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849621345
GPR[SPVAP]-1659849621345
GPR[EPVAP]-1659849622706
GPR[SPVATF]-1659849622706
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849623849
GPR[EPVS]-1659849623849
========
fireChangeEvent();
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=font;

========
MM Copying to MM
GPR[SPVS]-1659849623851
GPR[SPVAP]-1659849623851
GPR[EPVAP]-1659849624652
GPR[EPVS]-1659849624652
========
notifyListeners(new MarkerChangeEvent(this));
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849624654
GPR[SPVAP]-1659849624654
GPR[EPVAP]-1659849625496
GPR[EPVS]-1659849625496
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelOutlineStroke=outlineStroke;
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849625498
GPR[SPVAP]-1659849625498
GPR[EPVAP]-1659849626295
GPR[EPVS]-1659849626295
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=labelFont;

========
MM Copying to MM
GPR[SPVS]-1659849626297
GPR[SPVAP]-1659849626297
GPR[EPVAP]-1659849627629
GPR[SPVATF]-1659849627629
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849628762
GPR[EPVS]-1659849628762
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelPadding=padding;
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849628764
GPR[SPVAP]-1659849628764
GPR[EPVAP]-1659849629566
GPR[EPVS]-1659849629566
========
this.DEBUG_DRAW_INTERIOR=drawDividers;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;

========
MM Copying to MM
GPR[SPVS]-1659849629568
GPR[SPVAP]-1659849629568
GPR[EPVAP]-1659849630388
GPR[EPVS]-1659849630388
GPR[ESUN]-1659849630389
GPR[SSUN]-1659849630389
org.jfree.chart.plot.PiePlot,530
========
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849632420
GPR[SPVAP]-1659849632420
GPR[EPVAP]-1659849636784
GPR[SPVATF]-1659849636784
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849637937
GPR[EPVS]-1659849637937
========
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849637939
GPR[SPVAP]-1659849637939
GPR[EPVAP]-1659849639354
GPR[SPVATF]-1659849639354
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849640530
GPR[EPVS]-1659849640530
========
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.explodePercentages=new TreeMap();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849640531
GPR[SPVAP]-1659849640531
GPR[EPVAP]-1659849641887
GPR[SPVATF]-1659849641887
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849643009
GPR[EPVS]-1659849643009
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849643010
GPR[SPVAP]-1659849643010
GPR[EPVAP]-1659849644355
GPR[SPVATF]-1659849644355
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849645520
GPR[EPVS]-1659849645520
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_AXIS_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849645522
GPR[SPVAP]-1659849645522
GPR[EPVAP]-1659849646325
GPR[EPVS]-1659849646325
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_AXIS_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849646327
GPR[SPVAP]-1659849646327
GPR[EPVAP]-1659849647111
GPR[EPVS]-1659849647112
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.DEBUG_DRAW_INTERIOR=DEFAULT_AXIS_VISIBLE;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849647113
GPR[SPVAP]-1659849647113
GPR[EPVAP]-1659849647900
GPR[EPVS]-1659849647900
========
fireChangeEvent();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849647902
GPR[SPVAP]-1659849647902
GPR[EPVAP]-1659849649238
GPR[SPVATF]-1659849649238
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849650377
GPR[EPVS]-1659849650377
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=black;

========
MM Copying to MM
GPR[SPVS]-1659849650379
GPR[SPVAP]-1659849650379
GPR[EPVAP]-1659849651222
GPR[EPVS]-1659849651222
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelOutlineStroke=outlineStroke;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849651224
GPR[SPVAP]-1659849651224
GPR[EPVAP]-1659849652002
GPR[EPVS]-1659849652002
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=labelFont;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849652004
GPR[SPVAP]-1659849652004
GPR[EPVAP]-1659849653362
GPR[SPVATF]-1659849653362
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849654505
GPR[EPVS]-1659849654505
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=labelPaint;

========
MM Copying to MM
GPR[SPVS]-1659849654507
GPR[SPVAP]-1659849654507
GPR[EPVAP]-1659849655820
GPR[SPVATF]-1659849655820
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849657063
GPR[EPVS]-1659849657063
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelPadding=padding;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849657065
GPR[SPVAP]-1659849657065
GPR[EPVAP]-1659849657873
GPR[EPVS]-1659849657873
========
this.DEBUG_DRAW_INTERIOR=drawDividers;
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849657874
GPR[SPVAP]-1659849657874
GPR[EPVAP]-1659849658665
GPR[EPVS]-1659849658665
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=labelFont;
this.labelPaint=labelPaint;

========
MM Copying to MM
GPR[SPVS]-1659849658668
GPR[SPVAP]-1659849658668
GPR[EPVAP]-1659849660046
GPR[SPVATF]-1659849660046
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849661208
GPR[EPVS]-1659849661208
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849661210
GPR[SPVAP]-1659849661210
GPR[EPVAP]-1659849662006
GPR[EPVS]-1659849662006
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849662009
GPR[SPVAP]-1659849662009
GPR[EPVAP]-1659849663433
GPR[SPVATF]-1659849663433
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849664576
GPR[EPVS]-1659849664576
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849664578
GPR[SPVAP]-1659849664578
GPR[EPVAP]-1659849665382
GPR[EPVS]-1659849665382
========
fireChangeEvent();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849665385
GPR[SPVAP]-1659849665385
GPR[EPVAP]-1659849666190
GPR[EPVS]-1659849666190
========
fireChangeEvent();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849666191
GPR[SPVAP]-1659849666191
GPR[EPVAP]-1659849667546
GPR[SPVATF]-1659849667546
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849668668
GPR[EPVS]-1659849668668
========
fireChangeEvent();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849668671
GPR[SPVAP]-1659849668671
GPR[EPVAP]-1659849669471
GPR[EPVS]-1659849669472
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=paint;

========
MM Copying to MM
GPR[SPVS]-1659849669473
GPR[SPVAP]-1659849669473
GPR[EPVAP]-1659849670274
GPR[EPVS]-1659849670274
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849670276
GPR[SPVAP]-1659849670276
GPR[EPVAP]-1659849671616
GPR[SPVATF]-1659849671616
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849672748
GPR[EPVS]-1659849672748
========
fireChangeEvent();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849672750
GPR[SPVAP]-1659849672750
GPR[EPVAP]-1659849674116
GPR[SPVATF]-1659849674116
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849677417
GPR[EPVS]-1659849677417
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849677419
GPR[SPVAP]-1659849677419
GPR[EPVAP]-1659849678763
GPR[SPVATF]-1659849678763
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849679915
GPR[EPVS]-1659849679915
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849679917
GPR[SPVAP]-1659849679917
GPR[EPVAP]-1659849680740
GPR[EPVS]-1659849680740
========
fireChangeEvent();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849680742
GPR[SPVAP]-1659849680742
GPR[EPVAP]-1659849682087
GPR[SPVATF]-1659849682087
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849683238
GPR[EPVS]-1659849683238
========
fireChangeEvent();
this.labelGenerator=new StandardPieSectionLabelGenerator();
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849683240
GPR[SPVAP]-1659849683240
GPR[EPVAP]-1659849684050
GPR[EPVS]-1659849684050
========
notifyListeners(new MarkerChangeEvent(this));
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849684052
GPR[SPVAP]-1659849684052
GPR[EPVAP]-1659849684880
GPR[EPVS]-1659849684880
========
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=paint;

========
MM Copying to MM
GPR[SPVS]-1659849684882
GPR[SPVAP]-1659849684882
GPR[EPVAP]-1659849685675
GPR[EPVS]-1659849685675
========
notifyListeners(new MarkerChangeEvent(this));
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=paint;

========
MM Copying to MM
GPR[SPVS]-1659849685677
GPR[SPVAP]-1659849685677
GPR[EPVAP]-1659849686467
GPR[EPVS]-1659849686467
========
notifyListeners(new MarkerChangeEvent(this));
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849686468
GPR[SPVAP]-1659849686468
GPR[EPVAP]-1659849687254
GPR[EPVS]-1659849687254
========
notifyListeners(new MarkerChangeEvent(this));
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=paint;

========
MM Copying to MM
GPR[SPVS]-1659849687256
GPR[SPVAP]-1659849687256
GPR[EPVAP]-1659849688044
GPR[EPVS]-1659849688044
========
notifyListeners(new AxisChangeEvent(this));
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849688046
GPR[SPVAP]-1659849688046
GPR[EPVAP]-1659849688839
GPR[EPVS]-1659849688839
========
fireChangeEvent();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=paint;

========
MM Copying to MM
GPR[SPVS]-1659849688842
GPR[SPVAP]-1659849688842
GPR[EPVAP]-1659849689641
GPR[EPVS]-1659849689641
========
fireChangeEvent();
this.labelGenerator=new StandardPieSectionLabelGenerator();
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=paint;

========
MM Copying to MM
GPR[SPVS]-1659849689642
GPR[SPVAP]-1659849689642
GPR[EPVAP]-1659849690442
GPR[EPVS]-1659849690442
GPR[ESUN]-1659849690442
GPR[SSUN]-1659849690442
org.jfree.chart.plot.PiePlot,531
========
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849692439
GPR[SPVAP]-1659849692439
GPR[EPVAP]-1659849696836
GPR[SPVATF]-1659849696836
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849697976
GPR[EPVS]-1659849697976
========
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849697977
GPR[SPVAP]-1659849697977
GPR[EPVAP]-1659849699348
GPR[SPVATF]-1659849699348
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849700493
GPR[EPVS]-1659849700493
========
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849700495
GPR[SPVAP]-1659849700495
GPR[EPVAP]-1659849701819
GPR[SPVATF]-1659849701819
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849703044
GPR[EPVS]-1659849703044
========
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849703047
GPR[SPVAP]-1659849703047
GPR[EPVAP]-1659849704416
GPR[SPVATF]-1659849704416
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849705601
GPR[EPVS]-1659849705601
========
this.legendItemShape=DEFAULT_LEGEND_ITEM_CIRCLE;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849705603
GPR[SPVAP]-1659849705603
GPR[EPVAP]-1659849706963
GPR[SPVATF]-1659849706963
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849708132
GPR[EPVS]-1659849708132
========
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.legendItemShape=DEFAULT_LEGEND_ITEM_CIRCLE;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849708134
GPR[SPVAP]-1659849708134
GPR[EPVAP]-1659849709467
GPR[SPVATF]-1659849709467
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849710687
GPR[EPVS]-1659849710687
========
this.labelFont=DEFAULT_AXIS_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849710689
GPR[SPVAP]-1659849710689
GPR[EPVAP]-1659849711477
GPR[EPVS]-1659849711477
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_AXIS_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849711479
GPR[SPVAP]-1659849711479
GPR[EPVAP]-1659849712298
GPR[EPVS]-1659849712298
========
this.DEBUG_DRAW_INTERIOR=DEFAULT_AXIS_VISIBLE;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849712300
GPR[SPVAP]-1659849712300
GPR[EPVAP]-1659849713117
GPR[EPVS]-1659849713117
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=paint;

========
MM Copying to MM
GPR[SPVS]-1659849713119
GPR[SPVAP]-1659849713119
GPR[EPVAP]-1659849713936
GPR[EPVS]-1659849713936
========
fireChangeEvent();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849713938
GPR[SPVAP]-1659849713938
GPR[EPVAP]-1659849715328
GPR[SPVATF]-1659849715328
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849716498
GPR[EPVS]-1659849716498
========
this.labelFont=labelFont;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849716500
GPR[SPVAP]-1659849716500
GPR[EPVAP]-1659849717895
GPR[SPVATF]-1659849717895
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849719064
GPR[EPVS]-1659849719064
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=labelPaint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849719065
GPR[SPVAP]-1659849719065
GPR[EPVAP]-1659849720400
GPR[SPVATF]-1659849720400
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849721554
GPR[EPVS]-1659849721554
========
this.labelPadding=padding;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849721556
GPR[SPVAP]-1659849721556
GPR[EPVAP]-1659849722392
GPR[EPVS]-1659849722392
========
this.DEBUG_DRAW_INTERIOR=drawDividers;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849722394
GPR[SPVAP]-1659849722394
GPR[EPVAP]-1659849723205
GPR[EPVS]-1659849723205
========
this.labelFont=labelFont;
this.labelPaint=labelPaint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849723211
GPR[SPVAP]-1659849723211
GPR[EPVAP]-1659849724560
GPR[SPVATF]-1659849724560
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849725714
GPR[EPVS]-1659849725714
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=black;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849725716
GPR[SPVAP]-1659849725716
GPR[EPVAP]-1659849726527
GPR[EPVS]-1659849726527
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=TOP_LEFT;

========
MM Copying to MM
GPR[SPVS]-1659849726530
GPR[SPVAP]-1659849726530
GPR[EPVAP]-1659849727324
GPR[EPVS]-1659849727324
========
this.labelOutlineStroke=outlineStroke;
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849727326
GPR[SPVAP]-1659849727326
GPR[EPVAP]-1659849728150
GPR[EPVS]-1659849728150
========
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849728152
GPR[SPVAP]-1659849728152
GPR[EPVAP]-1659849728948
GPR[EPVS]-1659849728948
========
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849728950
GPR[SPVAP]-1659849728950
GPR[EPVAP]-1659849730284
GPR[SPVATF]-1659849730284
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849731422
GPR[EPVS]-1659849731422
========
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849731424
GPR[SPVAP]-1659849731424
GPR[EPVAP]-1659849732241
GPR[EPVS]-1659849732241
========
fireChangeEvent();
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849732244
GPR[SPVAP]-1659849732244
GPR[EPVAP]-1659849733029
GPR[EPVS]-1659849733029
========
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
fireChangeEvent();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849733031
GPR[SPVAP]-1659849733031
GPR[EPVAP]-1659849734369
GPR[SPVATF]-1659849734369
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849735520
GPR[EPVS]-1659849735520
========
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' argument.");
}
fireChangeEvent();
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849735522
GPR[SPVAP]-1659849735522
GPR[EPVAP]-1659849736328
GPR[EPVS]-1659849736328
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849736330
GPR[SPVAP]-1659849736330
GPR[EPVAP]-1659849737121
GPR[EPVS]-1659849737121
========
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849737123
GPR[SPVAP]-1659849737123
GPR[EPVAP]-1659849738458
GPR[SPVATF]-1659849738458
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849739625
GPR[EPVS]-1659849739625
========
fireChangeEvent();
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849739627
GPR[SPVAP]-1659849739627
GPR[EPVAP]-1659849740982
GPR[SPVATF]-1659849740982
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849742181
GPR[EPVS]-1659849742181
========
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849742183
GPR[SPVAP]-1659849742183
GPR[EPVAP]-1659849743531
GPR[SPVATF]-1659849743531
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849744672
GPR[EPVS]-1659849744672
========
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849744674
GPR[SPVAP]-1659849744674
GPR[EPVAP]-1659849745506
GPR[EPVS]-1659849745506
========
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
fireChangeEvent();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849745508
GPR[SPVAP]-1659849745508
GPR[EPVAP]-1659849749021
GPR[SPVATF]-1659849749021
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849750172
GPR[EPVS]-1659849750172
========
if(DEFAULT_LABEL_FONT==null){
throw new IllegalArgumentException("Null \'font\' not allowed.");
}
fireChangeEvent();
this.labelFont=font;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849750174
GPR[SPVAP]-1659849750175
GPR[EPVAP]-1659849750966
GPR[EPVS]-1659849750966
========
notifyListeners(new MarkerChangeEvent(this));
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849750969
GPR[SPVAP]-1659849750969
GPR[EPVAP]-1659849751799
GPR[EPVS]-1659849751799
========
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849751801
GPR[SPVAP]-1659849751801
GPR[EPVAP]-1659849752635
GPR[EPVS]-1659849752635
========
notifyListeners(new MarkerChangeEvent(this));
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849752637
GPR[SPVAP]-1659849752637
GPR[EPVAP]-1659849753433
GPR[EPVS]-1659849753433
========
notifyListeners(new MarkerChangeEvent(this));
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849753435
GPR[SPVAP]-1659849753435
GPR[EPVAP]-1659849754231
GPR[EPVS]-1659849754231
========
notifyListeners(new MarkerChangeEvent(this));
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849754233
GPR[SPVAP]-1659849754233
GPR[EPVAP]-1659849755042
GPR[EPVS]-1659849755042
========
notifyListeners(new AxisChangeEvent(this));
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849755044
GPR[SPVAP]-1659849755044
GPR[EPVAP]-1659849755835
GPR[EPVS]-1659849755835
========
fireChangeEvent();
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849755839
GPR[SPVAP]-1659849755839
GPR[EPVAP]-1659849756627
GPR[EPVS]-1659849756627
========
fireChangeEvent();
this.labelFont=DEFAULT_LABEL_FONT;
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849756630
GPR[SPVAP]-1659849756630
GPR[EPVAP]-1659849757440
GPR[EPVS]-1659849757440
GPR[ESUN]-1659849757440
GPR[SSUN]-1659849757440
org.jfree.chart.plot.PiePlot,532
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849759523
GPR[SPVAP]-1659849759523
GPR[EPVAP]-1659849763984
GPR[SPVATF]-1659849763984
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849765141
GPR[EPVS]-1659849765141
========
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849765142
GPR[SPVAP]-1659849765143
GPR[EPVAP]-1659849766494
GPR[SPVATF]-1659849766495
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849767626
GPR[EPVS]-1659849767626
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849767628
GPR[SPVAP]-1659849767628
GPR[EPVAP]-1659849769036
GPR[SPVATF]-1659849769036
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849770182
GPR[EPVS]-1659849770182
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=paint;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849770184
GPR[SPVAP]-1659849770184
GPR[EPVAP]-1659849771003
GPR[EPVS]-1659849771003
========
fireChangeEvent();
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849771005
GPR[SPVAP]-1659849771005
GPR[EPVAP]-1659849772350
GPR[SPVATF]-1659849772350
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849773547
GPR[EPVS]-1659849773547
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=paint;

========
MM Copying to MM
GPR[SPVS]-1659849773549
GPR[SPVAP]-1659849773549
GPR[EPVAP]-1659849774344
GPR[EPVS]-1659849774344
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849774346
GPR[SPVAP]-1659849774346
GPR[EPVAP]-1659849775675
GPR[SPVATF]-1659849775675
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849776810
GPR[EPVS]-1659849776810
========
this.legendItemShape=DEFAULT_LEGEND_ITEM_CIRCLE;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849776812
GPR[SPVAP]-1659849776812
GPR[EPVAP]-1659849778139
GPR[SPVATF]-1659849778139
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849779277
GPR[EPVS]-1659849779277
========
this.legendItemShape=DEFAULT_LEGEND_ITEM_CIRCLE;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849779280
GPR[SPVAP]-1659849779280
GPR[EPVAP]-1659849780622
GPR[SPVATF]-1659849780622
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849781796
GPR[EPVS]-1659849781796
========
this.labelPaint=DEFAULT_AXIS_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849781799
GPR[SPVAP]-1659849781799
GPR[EPVAP]-1659849782601
GPR[EPVS]-1659849782601
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.DEBUG_DRAW_INTERIOR=DEFAULT_AXIS_VISIBLE;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849782603
GPR[SPVAP]-1659849782603
GPR[EPVAP]-1659849783411
GPR[EPVS]-1659849783411
========
this.startAngle=0.0;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849783413
GPR[SPVAP]-1659849783413
GPR[EPVAP]-1659849784767
GPR[SPVATF]-1659849784767
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849785953
GPR[EPVS]-1659849785953
========
this.labelPaint=labelPaint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849785955
GPR[SPVAP]-1659849785955
GPR[EPVAP]-1659849787306
GPR[SPVATF]-1659849787306
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849788423
GPR[EPVS]-1659849788423
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelPadding=padding;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849788424
GPR[SPVAP]-1659849788424
GPR[EPVAP]-1659849789216
GPR[EPVS]-1659849789216
========
this.DEBUG_DRAW_INTERIOR=drawDividers;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849789217
GPR[SPVAP]-1659849789218
GPR[EPVAP]-1659849790009
GPR[EPVS]-1659849790009
========
this.labelOutlineStroke=dividerStroke;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849790010
GPR[SPVAP]-1659849790010
GPR[EPVAP]-1659849790792
GPR[EPVS]-1659849790792
========
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849790794
GPR[SPVAP]-1659849790794
GPR[EPVAP]-1659849791580
GPR[EPVS]-1659849791580
========
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849791582
GPR[SPVAP]-1659849791582
GPR[EPVAP]-1659849792923
GPR[SPVATF]-1659849792923
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849794080
GPR[EPVS]-1659849794080
========
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
fireChangeEvent();
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849794083
GPR[SPVAP]-1659849794083
GPR[EPVAP]-1659849795408
GPR[SPVATF]-1659849795408
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849796572
GPR[EPVS]-1659849796572
========
this.labelPaint=black;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849796575
GPR[SPVAP]-1659849796575
GPR[EPVAP]-1659849797372
GPR[EPVS]-1659849797372
========
notifyListeners(new MarkerChangeEvent(this));
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849797375
GPR[SPVAP]-1659849797375
GPR[EPVAP]-1659849798170
GPR[EPVS]-1659849798170
========
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849798172
GPR[SPVAP]-1659849798172
GPR[EPVAP]-1659849798976
GPR[EPVS]-1659849798976
========
notifyListeners(new AxisChangeEvent(this));
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849798978
GPR[SPVAP]-1659849798978
GPR[EPVAP]-1659849799768
GPR[EPVS]-1659849799768
========
fireChangeEvent();
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849799770
GPR[SPVAP]-1659849799770
GPR[EPVAP]-1659849800566
GPR[EPVS]-1659849800566
========
if(shadowPaint==null){
throw new IllegalArgumentException("Null \'paint\' argument.");
}
fireChangeEvent();
this.labelPaint=paint;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849800568
GPR[SPVAP]-1659849800568
GPR[EPVAP]-1659849801362
GPR[EPVS]-1659849801362
GPR[ESUN]-1659849801362
GPR[SSUN]-1659849801362
org.jfree.chart.plot.PiePlot,533
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849803423
GPR[SPVAP]-1659849803423
GPR[EPVAP]-1659849807679
GPR[SPVATF]-1659849807679
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849808845
GPR[EPVS]-1659849808845
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849808847
GPR[SPVAP]-1659849808847
GPR[EPVAP]-1659849810281
GPR[SPVATF]-1659849810281
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849811473
GPR[EPVS]-1659849811473
========
this.labelFont=DEFAULT_LABEL_FONT;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849811475
GPR[SPVAP]-1659849811475
GPR[EPVAP]-1659849812827
GPR[SPVATF]-1659849812827
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849813949
GPR[EPVS]-1659849813949
========
this.labelBackgroundPaint=paint;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849813952
GPR[SPVAP]-1659849813952
GPR[EPVAP]-1659849814757
GPR[EPVS]-1659849814757
========
fireChangeEvent();
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849814758
GPR[SPVAP]-1659849814758
GPR[EPVAP]-1659849816090
GPR[SPVATF]-1659849816090
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849817291
GPR[EPVS]-1659849817291
========
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=paint;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;

========
MM Copying to MM
GPR[SPVS]-1659849817293
GPR[SPVAP]-1659849817293
GPR[EPVAP]-1659849818083
GPR[EPVS]-1659849818083
========
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=stroke;

========
MM Copying to MM
GPR[SPVS]-1659849818085
GPR[SPVAP]-1659849818085
GPR[EPVAP]-1659849818944
GPR[EPVS]-1659849818944
GPR[ESUN]-1659849818944
GPR[SSUN]-1659849818944
org.jfree.chart.plot.PiePlot,534
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849822843
GPR[SPVAP]-1659849822843
GPR[EPVAP]-1659849827077
GPR[SPVATF]-1659849827077
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849828209
GPR[EPVS]-1659849828209
========
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849828211
GPR[SPVAP]-1659849828211
GPR[EPVAP]-1659849829570
GPR[SPVATF]-1659849829570
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849830710
GPR[EPVS]-1659849830710
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849830712
GPR[SPVAP]-1659849830712
GPR[EPVAP]-1659849832056
GPR[SPVATF]-1659849832056
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849833197
GPR[EPVS]-1659849833197
========
this.labelOutlinePaint=paint;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849833199
GPR[SPVAP]-1659849833199
GPR[EPVAP]-1659849833998
GPR[EPVS]-1659849833998
========
fireChangeEvent();
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849834000
GPR[SPVAP]-1659849834000
GPR[EPVAP]-1659849835347
GPR[SPVATF]-1659849835347
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849836529
GPR[EPVS]-1659849836529
========
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=stroke;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;

========
MM Copying to MM
GPR[SPVS]-1659849836531
GPR[SPVAP]-1659849836531
GPR[EPVAP]-1659849837347
GPR[EPVS]-1659849837347
========
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=paint;

========
MM Copying to MM
GPR[SPVS]-1659849837350
GPR[SPVAP]-1659849837350
GPR[EPVAP]-1659849838136
GPR[EPVS]-1659849838136
GPR[ESUN]-1659849838136
GPR[SSUN]-1659849838136
org.jfree.chart.plot.PiePlot,535
========
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849840084
GPR[SPVAP]-1659849840084
GPR[EPVAP]-1659849844332
GPR[SPVATF]-1659849844332
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849845485
GPR[EPVS]-1659849845485
========
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849845486
GPR[SPVAP]-1659849845486
GPR[EPVAP]-1659849846853
GPR[SPVATF]-1659849846853
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849848003
GPR[EPVS]-1659849848003
========
this.labelBackgroundPaint=DEFAULT_LABEL_BACKGROUND_PAINT;
this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849848005
GPR[SPVAP]-1659849848005
GPR[EPVAP]-1659849849325
GPR[SPVATF]-1659849849325
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849850496
GPR[EPVS]-1659849850496
========
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=DEBUG_DRAW_INTERIOR;

========
MM Copying to MM
GPR[SPVS]-1659849850498
GPR[SPVAP]-1659849850498
GPR[EPVAP]-1659849851807
GPR[SPVATF]-1659849851807
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849852990
GPR[EPVS]-1659849852990
========
fireChangeEvent();
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849852992
GPR[SPVAP]-1659849852992
GPR[EPVAP]-1659849854360
GPR[SPVATF]-1659849854360
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849855479
GPR[EPVS]-1659849855479
========
fireChangeEvent();
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=DEBUG_DRAW_INTERIOR;

========
MM Copying to MM
GPR[SPVS]-1659849855481
GPR[SPVAP]-1659849855481
GPR[EPVAP]-1659849856826
GPR[SPVATF]-1659849856826
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849857964
GPR[EPVS]-1659849857964
========
this.labelOutlineStroke=stroke;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849857966
GPR[SPVAP]-1659849857966
GPR[EPVAP]-1659849858782
GPR[EPVS]-1659849858782
========
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=paint;
this.labelLinksVisible=true;

========
MM Copying to MM
GPR[SPVS]-1659849858784
GPR[SPVAP]-1659849858784
GPR[EPVAP]-1659849859567
GPR[EPVS]-1659849859567
GPR[ESUN]-1659849859568
GPR[SSUN]-1659849859568
org.jfree.chart.plot.PiePlot,536
========
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);

========
MM Copying to MM
GPR[SPVS]-1659849861432
GPR[SPVAP]-1659849861432
GPR[EPVAP]-1659849865768
GPR[SPVATF]-1659849865768
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849866902
GPR[EPVS]-1659849866902
========
this.simpleLabels=false;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);

========
MM Copying to MM
GPR[SPVS]-1659849866903
GPR[SPVAP]-1659849866903
GPR[EPVAP]-1659849868259
GPR[SPVATF]-1659849868259
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849869435
GPR[EPVS]-1659849869435
========
this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;
this.simpleLabels=false;
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);

========
MM Copying to MM
GPR[SPVS]-1659849869439
GPR[SPVAP]-1659849869439
GPR[EPVAP]-1659849870781
GPR[SPVATF]-1659849870781
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849871900
GPR[EPVS]-1659849871900
========
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=DEBUG_DRAW_INTERIOR;
this.labelDistributor=new PieLabelDistributor(0);

========
MM Copying to MM
GPR[SPVS]-1659849871902
GPR[SPVAP]-1659849871902
GPR[EPVAP]-1659849873266
GPR[SPVATF]-1659849873266
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849874417
GPR[EPVS]-1659849874417
========
fireChangeEvent();
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);

========
MM Copying to MM
GPR[SPVS]-1659849874418
GPR[SPVAP]-1659849874418
GPR[EPVAP]-1659849875784
GPR[SPVATF]-1659849875784
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849876907
GPR[EPVS]-1659849876907
========
fireChangeEvent();
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=DEBUG_DRAW_INTERIOR;
this.labelDistributor=new PieLabelDistributor(0);

========
MM Copying to MM
GPR[SPVS]-1659849876909
GPR[SPVAP]-1659849876909
GPR[EPVAP]-1659849878276
GPR[SPVATF]-1659849878276
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849879406
GPR[EPVS]-1659849879406
========
this.labelShadowPaint=paint;
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);

========
MM Copying to MM
GPR[SPVS]-1659849879408
GPR[SPVAP]-1659849879408
GPR[EPVAP]-1659849880198
GPR[EPVS]-1659849880198
GPR[ESUN]-1659849880198
GPR[SSUN]-1659849880198
org.jfree.chart.plot.PiePlot,537
========
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;

========
MM Copying to MM
GPR[SPVS]-1659849882119
GPR[SPVAP]-1659849882119
GPR[EPVAP]-1659849886409
GPR[SPVATF]-1659849886409
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849887548
GPR[EPVS]-1659849887548
========
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;

========
MM Copying to MM
GPR[SPVS]-1659849887551
GPR[SPVAP]-1659849887551
GPR[EPVAP]-1659849888894
GPR[SPVATF]-1659849888894
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849890031
GPR[EPVS]-1659849890031
========
this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;

========
MM Copying to MM
GPR[SPVS]-1659849890033
GPR[SPVAP]-1659849890033
GPR[EPVAP]-1659849891376
GPR[SPVATF]-1659849891376
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849892535
GPR[EPVS]-1659849892535
========
this.labelLinksVisible=DEBUG_DRAW_INTERIOR;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;

========
MM Copying to MM
GPR[SPVS]-1659849892537
GPR[SPVAP]-1659849892537
GPR[EPVAP]-1659849895891
GPR[SPVATF]-1659849895891
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849897009
GPR[EPVS]-1659849897009
========
fireChangeEvent();
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;

========
MM Copying to MM
GPR[SPVS]-1659849897011
GPR[SPVAP]-1659849897011
GPR[EPVAP]-1659849898340
GPR[SPVATF]-1659849898340
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849899461
GPR[EPVS]-1659849899461
========
fireChangeEvent();
this.labelLinksVisible=DEBUG_DRAW_INTERIOR;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;

========
MM Copying to MM
GPR[SPVS]-1659849899463
GPR[SPVAP]-1659849899463
GPR[EPVAP]-1659849900780
GPR[SPVATF]-1659849900780
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849901931
GPR[EPVS]-1659849901931
========
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=DEBUG_DRAW_INTERIOR;

========
MM Copying to MM
GPR[SPVS]-1659849901933
GPR[SPVAP]-1659849901933
GPR[EPVAP]-1659849903247
GPR[SPVATF]-1659849903247
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849904407
GPR[EPVS]-1659849904407
========
fireChangeEvent();
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=DEBUG_DRAW_INTERIOR;

========
MM Copying to MM
GPR[SPVS]-1659849904409
GPR[SPVAP]-1659849904410
GPR[EPVAP]-1659849905758
GPR[SPVATF]-1659849905758
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849906886
GPR[EPVS]-1659849906886
GPR[ESUN]-1659849906887
GPR[SSUN]-1659849906887
org.jfree.chart.plot.PiePlot,539
========
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);

========
MM Copying to MM
GPR[SPVS]-1659849908854
GPR[SPVAP]-1659849908854
GPR[EPVAP]-1659849913106
GPR[SPVATF]-1659849913106
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849914262
GPR[EPVS]-1659849914262
========
this.labelPadding=new RectangleInsets(2,2,2,2);
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);

========
MM Copying to MM
GPR[SPVS]-1659849914264
GPR[SPVAP]-1659849914264
GPR[EPVAP]-1659849915652
GPR[SPVATF]-1659849915652
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849916817
GPR[EPVS]-1659849916817
========
this.labelLinksVisible=true;
this.labelPadding=new RectangleInsets(2,2,2,2);
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);

========
MM Copying to MM
GPR[SPVS]-1659849916818
GPR[SPVAP]-1659849916818
GPR[EPVAP]-1659849918194
GPR[SPVATF]-1659849918194
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849919310
GPR[EPVS]-1659849919310
========
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;
if(labelPadding==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);

========
MM Copying to MM
GPR[SPVS]-1659849919312
GPR[SPVAP]-1659849919312
GPR[EPVAP]-1659849920649
GPR[SPVATF]-1659849920649
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849921802
GPR[EPVS]-1659849921802
========
fireChangeEvent();
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);

========
MM Copying to MM
GPR[SPVS]-1659849921805
GPR[SPVAP]-1659849921805
GPR[EPVAP]-1659849923152
GPR[SPVATF]-1659849923152
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849924273
GPR[EPVS]-1659849924273
========
fireChangeEvent();
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;
if(labelPadding==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);

========
MM Copying to MM
GPR[SPVS]-1659849924275
GPR[SPVAP]-1659849924275
GPR[EPVAP]-1659849925627
GPR[SPVATF]-1659849925627
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849926741
GPR[EPVS]-1659849926741
GPR[ESUN]-1659849926741
GPR[SSUN]-1659849926741
org.jfree.chart.plot.PiePlot,540
========
this.labelLinksVisible=true;
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);

========
MM Copying to MM
GPR[SPVS]-1659849928602
GPR[SPVAP]-1659849928602
GPR[EPVAP]-1659849932844
GPR[SPVATF]-1659849932844
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849933982
GPR[EPVS]-1659849933982
========
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);

========
MM Copying to MM
GPR[SPVS]-1659849933984
GPR[SPVAP]-1659849933984
GPR[EPVAP]-1659849935354
GPR[SPVATF]-1659849935354
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849936497
GPR[EPVS]-1659849936497
========
this.labelLinksVisible=true;
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);

========
MM Copying to MM
GPR[SPVS]-1659849936499
GPR[SPVAP]-1659849936499
GPR[EPVAP]-1659849937822
GPR[SPVATF]-1659849937822
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849938963
GPR[EPVS]-1659849938963
========
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
if(simpleLabelOffset==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
this.labelPadding=new RectangleInsets(2,2,2,2);

========
MM Copying to MM
GPR[SPVS]-1659849938965
GPR[SPVAP]-1659849938965
GPR[EPVAP]-1659849940316
GPR[SPVATF]-1659849940316
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849941515
GPR[EPVS]-1659849941515
========
fireChangeEvent();
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);

========
MM Copying to MM
GPR[SPVS]-1659849941517
GPR[SPVAP]-1659849941517
GPR[EPVAP]-1659849942918
GPR[SPVATF]-1659849942918
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849944097
GPR[EPVS]-1659849944097
========
fireChangeEvent();
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
if(simpleLabelOffset==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
this.labelPadding=new RectangleInsets(2,2,2,2);

========
MM Copying to MM
GPR[SPVS]-1659849944099
GPR[SPVAP]-1659849944099
GPR[EPVAP]-1659849945459
GPR[SPVATF]-1659849945459
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849946674
GPR[EPVS]-1659849946674
========
this.simpleLabels=false;
if(labelPadding==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);

========
MM Copying to MM
GPR[SPVS]-1659849946675
GPR[SPVAP]-1659849946675
GPR[EPVAP]-1659849948065
GPR[SPVATF]-1659849948065
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849949219
GPR[EPVS]-1659849949219
========
fireChangeEvent();
this.simpleLabels=false;
if(labelPadding==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);

========
MM Copying to MM
GPR[SPVS]-1659849949220
GPR[SPVAP]-1659849949220
GPR[EPVAP]-1659849950563
GPR[SPVATF]-1659849950563
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849951737
GPR[EPVS]-1659849951737
GPR[ESUN]-1659849951737
GPR[SSUN]-1659849951737
org.jfree.chart.plot.PiePlot,542
========
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849953830
GPR[SPVAP]-1659849953830
GPR[EPVAP]-1659849958169
GPR[SPVATF]-1659849958169
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849959372
GPR[EPVS]-1659849959372
========
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849959375
GPR[SPVAP]-1659849959375
GPR[EPVAP]-1659849960808
GPR[SPVATF]-1659849960808
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849962000
GPR[EPVS]-1659849962000
========
this.labelDistributor=new PieLabelDistributor(0);
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849962004
GPR[SPVAP]-1659849962004
GPR[EPVAP]-1659849963343
GPR[SPVATF]-1659849963343
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849964495
GPR[EPVS]-1659849964495
========
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
if(simpleLabelOffset==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849964497
GPR[SPVAP]-1659849964497
GPR[EPVAP]-1659849967937
GPR[SPVATF]-1659849967937
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849969081
GPR[EPVS]-1659849969081
========
fireChangeEvent();
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849969083
GPR[SPVAP]-1659849969083
GPR[EPVAP]-1659849970445
GPR[SPVATF]-1659849970445
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849971600
GPR[EPVS]-1659849971600
========
fireChangeEvent();
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
if(simpleLabelOffset==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849971602
GPR[SPVAP]-1659849971602
GPR[EPVAP]-1659849972931
GPR[SPVATF]-1659849972931
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849974088
GPR[EPVS]-1659849974088
========
if(labelPadding==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849974090
GPR[SPVAP]-1659849974090
GPR[EPVAP]-1659849975424
GPR[SPVATF]-1659849975424
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849976533
GPR[EPVS]-1659849976533
========
if(labelPadding==null){
throw new IllegalArgumentException("Null \'offset\' argument.");
}
fireChangeEvent();
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849976534
GPR[SPVAP]-1659849976534
GPR[EPVAP]-1659849977885
GPR[SPVATF]-1659849977885
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849979000
GPR[EPVS]-1659849979000
GPR[ESUN]-1659849979000
GPR[SSUN]-1659849979000
org.jfree.chart.plot.PiePlot,544
========
this.simpleLabels=false;
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;
this.urlGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849980944
GPR[SPVAP]-1659849980944
GPR[EPVAP]-1659849985238
GPR[SPVATF]-1659849985238
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849986391
GPR[EPVS]-1659849986391
========
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;
this.urlGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849986394
GPR[SPVAP]-1659849986394
GPR[EPVAP]-1659849987732
GPR[SPVATF]-1659849987732
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849988901
GPR[EPVS]-1659849988901
========
this.simpleLabels=false;
this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;
this.urlGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849988903
GPR[SPVAP]-1659849988903
GPR[EPVAP]-1659849990218
GPR[SPVATF]-1659849990218
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849991365
GPR[EPVS]-1659849991365
========
if(simpleLabelOffset==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;
this.urlGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849991367
GPR[SPVAP]-1659849991367
GPR[EPVAP]-1659849992691
GPR[SPVATF]-1659849992691
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849993849
GPR[EPVS]-1659849993849
========
fireChangeEvent();
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;
this.urlGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849993852
GPR[SPVAP]-1659849993852
GPR[EPVAP]-1659849995194
GPR[SPVATF]-1659849995194
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849996297
GPR[EPVS]-1659849996297
========
if(simpleLabelOffset==null){
throw new IllegalArgumentException("Null \'padding\' argument.");
}
fireChangeEvent();
this.labelPadding=new RectangleInsets(2,2,2,2);
this.toolTipGenerator=null;
this.urlGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659849996299
GPR[SPVAP]-1659849996299
GPR[EPVAP]-1659849997643
GPR[SPVATF]-1659849997643
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659849998772
GPR[EPVS]-1659849998772
GPR[ESUN]-1659849998773
GPR[SSUN]-1659849998773
org.jfree.chart.plot.PiePlot,545
========
this.legendLabelToolTipGenerator=null;
this.toolTipGenerator=null;
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659850000774
GPR[SPVAP]-1659850000774
GPR[EPVAP]-1659850005011
GPR[SPVATF]-1659850005011
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850006160
GPR[EPVS]-1659850006160
========
this.legendLabelURLGenerator=null;
this.toolTipGenerator=null;
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659850006162
GPR[SPVAP]-1659850006162
GPR[EPVAP]-1659850007523
GPR[SPVATF]-1659850007523
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850008661
GPR[EPVS]-1659850008661
========
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.toolTipGenerator=null;
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659850008663
GPR[SPVAP]-1659850008663
GPR[EPVAP]-1659850009976
GPR[SPVATF]-1659850009976
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850011108
GPR[EPVS]-1659850011108
========
fireChangeEvent();
this.toolTipGenerator=null;
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659850011110
GPR[SPVAP]-1659850011110
GPR[EPVAP]-1659850012447
GPR[SPVATF]-1659850012447
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850013629
GPR[EPVS]-1659850013629
========
this.toolTipGenerator=null;
this.urlGenerator=null;
if(labelGenerator==null){
throw new IllegalArgumentException("Null \'generator\' argument.");
}
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659850013632
GPR[SPVAP]-1659850013632
GPR[EPVAP]-1659850014994
GPR[SPVATF]-1659850014994
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850016145
GPR[EPVS]-1659850016145
========
fireChangeEvent();
this.toolTipGenerator=null;
this.urlGenerator=null;
if(labelGenerator==null){
throw new IllegalArgumentException("Null \'generator\' argument.");
}
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();

========
MM Copying to MM
GPR[SPVS]-1659850016147
GPR[SPVAP]-1659850016147
GPR[EPVAP]-1659850017510
GPR[SPVATF]-1659850017510
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850018632
GPR[EPVS]-1659850018632
GPR[ESUN]-1659850018632
GPR[SSUN]-1659850018632
org.jfree.chart.plot.PiePlot,546
========
this.toolTipGenerator=null;
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850020637
GPR[SPVAP]-1659850020637
GPR[EPVAP]-1659850024880
GPR[SPVATF]-1659850024880
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850026051
GPR[EPVS]-1659850026051
========
this.legendLabelURLGenerator=null;
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850026054
GPR[SPVAP]-1659850026054
GPR[EPVAP]-1659850027466
GPR[SPVATF]-1659850027466
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850028608
GPR[EPVS]-1659850028608
========
this.toolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850028609
GPR[SPVAP]-1659850028609
GPR[EPVAP]-1659850029942
GPR[SPVATF]-1659850029942
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850031073
GPR[EPVS]-1659850031073
========
fireChangeEvent();
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850031075
GPR[SPVAP]-1659850031075
GPR[EPVAP]-1659850032420
GPR[SPVATF]-1659850032420
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850033604
GPR[EPVS]-1659850033604
========
this.urlGenerator=null;
if(labelGenerator==null){
throw new IllegalArgumentException("Null \'generator\' argument.");
}
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850033607
GPR[SPVAP]-1659850033607
GPR[EPVAP]-1659850034954
GPR[SPVATF]-1659850034954
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850036121
GPR[EPVS]-1659850036121
========
fireChangeEvent();
this.urlGenerator=null;
if(labelGenerator==null){
throw new IllegalArgumentException("Null \'generator\' argument.");
}
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850036123
GPR[SPVAP]-1659850036123
GPR[EPVAP]-1659850037516
GPR[SPVATF]-1659850037516
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850040522
GPR[EPVS]-1659850040522
GPR[ESUN]-1659850040522
GPR[SSUN]-1659850040522
org.jfree.chart.plot.PiePlot,547
========
this.toolTipGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850042687
GPR[SPVAP]-1659850042687
GPR[EPVAP]-1659850047050
GPR[SPVATF]-1659850047050
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850048194
GPR[EPVS]-1659850048194
========
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850048195
GPR[SPVAP]-1659850048195
GPR[EPVAP]-1659850049550
GPR[SPVATF]-1659850049551
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850050725
GPR[EPVS]-1659850050725
========
this.toolTipGenerator=null;
this.urlGenerator=null;
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850050727
GPR[SPVAP]-1659850050727
GPR[EPVAP]-1659850052046
GPR[SPVATF]-1659850052046
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850053205
GPR[EPVS]-1659850053205
========
fireChangeEvent();
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850053206
GPR[SPVAP]-1659850053206
GPR[EPVAP]-1659850054538
GPR[SPVATF]-1659850054538
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850055697
GPR[EPVS]-1659850055697
========
if(labelGenerator==null){
throw new IllegalArgumentException("Null \'generator\' argument.");
}
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850055699
GPR[SPVAP]-1659850055699
GPR[EPVAP]-1659850057070
GPR[SPVATF]-1659850057070
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850058217
GPR[EPVS]-1659850058217
========
if(labelGenerator==null){
throw new IllegalArgumentException("Null \'generator\' argument.");
}
fireChangeEvent();
this.legendLabelGenerator=new StandardPieSectionLabelGenerator();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;

========
MM Copying to MM
GPR[SPVS]-1659850058219
GPR[SPVAP]-1659850058219
GPR[EPVAP]-1659850059557
GPR[SPVATF]-1659850059557
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850060689
GPR[EPVS]-1659850060689
GPR[ESUN]-1659850060689
GPR[SSUN]-1659850060689
org.jfree.chart.plot.PiePlot,548
========
this.ignoreNullValues=false;
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;

========
MM Copying to MM
GPR[SPVS]-1659850062735
GPR[SPVAP]-1659850062735
GPR[EPVAP]-1659850067078
GPR[SPVATF]-1659850067078
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850068213
GPR[EPVS]-1659850068213
========
this.ignoreZeroValues=false;
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;

========
MM Copying to MM
GPR[SPVS]-1659850068215
GPR[SPVAP]-1659850068215
GPR[EPVAP]-1659850069583
GPR[SPVATF]-1659850069583
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850070754
GPR[EPVS]-1659850070754
========
this.ignoreNullValues=false;
this.ignoreZeroValues=false;
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;

========
MM Copying to MM
GPR[SPVS]-1659850070755
GPR[SPVAP]-1659850070755
GPR[EPVAP]-1659850072107
GPR[SPVATF]-1659850072107
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850073257
GPR[EPVS]-1659850073257
========
fireChangeEvent();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;

========
MM Copying to MM
GPR[SPVS]-1659850073259
GPR[SPVAP]-1659850073259
GPR[EPVAP]-1659850074652
GPR[SPVATF]-1659850074652
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850075833
GPR[EPVS]-1659850075833
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;

========
MM Copying to MM
GPR[SPVS]-1659850075837
GPR[SPVAP]-1659850075837
GPR[EPVAP]-1659850077252
GPR[SPVATF]-1659850077252
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850078382
GPR[EPVS]-1659850078382
========
clone.seriesPaintList=(PaintList)this.seriesPaintList.clone();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;

========
MM Copying to MM
GPR[SPVS]-1659850078385
GPR[SPVAP]-1659850078385
GPR[EPVAP]-1659850079194
GPR[EPVS]-1659850079194
========
clone.seriesOutlinePaintList=(PaintList)this.seriesOutlinePaintList.clone();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;

========
MM Copying to MM
GPR[SPVS]-1659850079196
GPR[SPVAP]-1659850079196
GPR[EPVAP]-1659850080051
GPR[EPVS]-1659850080051
========
clone.seriesOutlineStrokeList=(StrokeList)this.seriesOutlineStrokeList.clone();
this.legendLabelToolTipGenerator=null;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;

========
MM Copying to MM
GPR[SPVS]-1659850080053
GPR[SPVAP]-1659850080053
GPR[EPVAP]-1659850080844
GPR[EPVS]-1659850080844
GPR[ESUN]-1659850080844
GPR[SSUN]-1659850080844
org.jfree.chart.plot.PiePlot,549
========
this.ignoreZeroValues=false;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850082844
GPR[SPVAP]-1659850082844
GPR[EPVAP]-1659850087191
GPR[SPVATF]-1659850087191
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850088352
GPR[EPVS]-1659850088352
========
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=DEBUG_DRAW_INTERIOR;

========
MM Copying to MM
GPR[SPVS]-1659850088354
GPR[SPVAP]-1659850088354
GPR[EPVAP]-1659850089713
GPR[SPVATF]-1659850089713
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850090856
GPR[EPVS]-1659850090856
========
fireChangeEvent();
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850090857
GPR[SPVAP]-1659850090857
GPR[EPVAP]-1659850092221
GPR[SPVATF]-1659850092221
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850093340
GPR[EPVS]-1659850093340
========
fireChangeEvent();
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=DEBUG_DRAW_INTERIOR;

========
MM Copying to MM
GPR[SPVS]-1659850093342
GPR[SPVAP]-1659850093342
GPR[EPVAP]-1659850094688
GPR[SPVATF]-1659850094688
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850095855
GPR[EPVS]-1659850095855
========
this.labelPaint=DEFAULT_LABEL_PAINT;
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850095856
GPR[SPVAP]-1659850095856
GPR[EPVAP]-1659850097202
GPR[SPVATF]-1659850097202
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850098328
GPR[EPVS]-1659850098328
========
if(this.legendLabelGenerator!=null){
clone.legendLabelGenerator=(PieSectionLabelGenerator)ObjectUtilities.clone(this.legendLabelGenerator);
}
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850098330
GPR[SPVAP]-1659850098330
GPR[EPVAP]-1659850099120
GPR[EPVS]-1659850099120
========
clone.seriesPaintList=(PaintList)this.seriesPaintList.clone();
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850099122
GPR[SPVAP]-1659850099122
GPR[EPVAP]-1659850099916
GPR[EPVS]-1659850099916
========
clone.seriesOutlinePaintList=(PaintList)this.seriesOutlinePaintList.clone();
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850099918
GPR[SPVAP]-1659850099918
GPR[EPVAP]-1659850100718
GPR[EPVS]-1659850100718
========
clone.seriesOutlineStrokeList=(StrokeList)this.seriesOutlineStrokeList.clone();
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850100720
GPR[SPVAP]-1659850100720
GPR[EPVAP]-1659850101542
GPR[EPVS]-1659850101542
GPR[ESUN]-1659850101542
GPR[SSUN]-1659850101542
org.jfree.chart.plot.PiePlot,551
========
this.legendLabelURLGenerator=null;
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850103507
GPR[SPVAP]-1659850103507
GPR[EPVAP]-1659850107784
GPR[SPVATF]-1659850107784
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850108945
GPR[EPVS]-1659850108945
========
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=DEBUG_DRAW_INTERIOR;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850108947
GPR[SPVAP]-1659850108947
GPR[EPVAP]-1659850112063
GPR[SPVATF]-1659850112063
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850113224
GPR[EPVS]-1659850113224
========
fireChangeEvent();
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850113226
GPR[SPVAP]-1659850113226
GPR[EPVAP]-1659850114622
GPR[SPVATF]-1659850114622
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850115811
GPR[EPVS]-1659850115811
========
fireChangeEvent();
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=DEBUG_DRAW_INTERIOR;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850115813
GPR[SPVAP]-1659850115813
GPR[EPVAP]-1659850117157
GPR[SPVATF]-1659850117157
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850118346
GPR[EPVS]-1659850118346
========
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;
this.ignoreZeroValues=DEBUG_DRAW_INTERIOR;

========
MM Copying to MM
GPR[SPVS]-1659850118348
GPR[SPVAP]-1659850118348
GPR[EPVAP]-1659850119674
GPR[SPVATF]-1659850119674
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850120820
GPR[EPVS]-1659850120820
========
fireChangeEvent();
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;
this.ignoreZeroValues=DEBUG_DRAW_INTERIOR;

========
MM Copying to MM
GPR[SPVS]-1659850120822
GPR[SPVAP]-1659850120822
GPR[EPVAP]-1659850122136
GPR[SPVATF]-1659850122136
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850123311
GPR[EPVS]-1659850123311
========
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.labelPaint=DEFAULT_LABEL_PAINT;
this.ignoreNullValues=false;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850123313
GPR[SPVAP]-1659850123313
GPR[EPVAP]-1659850124645
GPR[SPVATF]-1659850124645
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850125783
GPR[EPVS]-1659850125783
========
if(this.urlGenerator instanceof PublicCloneable){
clone.urlGenerator=(PieURLGenerator)ObjectUtilities.clone(this.urlGenerator);
}
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850125785
GPR[SPVAP]-1659850125785
GPR[EPVAP]-1659850126589
GPR[EPVS]-1659850126589
========
if(this.legendLabelGenerator!=null){
clone.legendLabelGenerator=(PieSectionLabelGenerator)ObjectUtilities.clone(this.legendLabelGenerator);
}
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850126591
GPR[SPVAP]-1659850126591
GPR[EPVAP]-1659850127396
GPR[EPVS]-1659850127396
========
clone.seriesPaintList=(PaintList)this.seriesPaintList.clone();
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850127398
GPR[SPVAP]-1659850127398
GPR[EPVAP]-1659850128183
GPR[EPVS]-1659850128183
========
clone.seriesOutlinePaintList=(PaintList)this.seriesOutlinePaintList.clone();
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850128185
GPR[SPVAP]-1659850128185
GPR[EPVAP]-1659850128979
GPR[EPVS]-1659850128979
========
clone.seriesOutlineStrokeList=(StrokeList)this.seriesOutlineStrokeList.clone();
this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
this.ignoreNullValues=false;
this.ignoreZeroValues=false;

========
MM Copying to MM
GPR[SPVS]-1659850128981
GPR[SPVAP]-1659850128981
GPR[EPVAP]-1659850129766
GPR[EPVS]-1659850129766
GPR[ESUN]-1659850129766
GPR[SSUN]-1659850129766
org.jfree.chart.plot.PiePlot,552
GPR[ESUN]-1659850130250
GPR[SSUN]-1659850130250
org.jfree.chart.plot.PiePlot,553
Find no block!
GPR[SSUN]-1659850130607
org.jfree.chart.plot.PiePlot,251
Find no block!
GPR[SSUN]-1659850130966
org.jfree.chart.plot.PiePlot,255
Find no block!
GPR[SSUN]-1659850131290
org.jfree.chart.plot.PiePlot,258
Find no block!
GPR[SSUN]-1659850131640
org.jfree.chart.plot.PiePlot,262
Find no block!
GPR[SSUN]-1659850131978
org.jfree.chart.plot.PiePlot,265
Find no block!
GPR[SSUN]-1659850132323
org.jfree.chart.plot.PiePlot,269
Find no block!
GPR[SSUN]-1659850132735
org.jfree.chart.plot.PiePlot,468
Find no block!
GPR[SSUN]-1659850133082
org.jfree.chart.plot.AbstractPieLabelDistributor,60
Find no block!
GPR[SSUN]-1659850133412
org.jfree.chart.plot.AbstractPieLabelDistributor,61
GPR[ESUN]-1659850135233
GPR[SSUN]-1659850135233
org.jfree.chart.plot.AbstractPieLabelDistributor,62
Find no block!
GPR[SSUN]-1659850135591
org.jfree.chart.plot.PieLabelDistributor,63
GPR[ESUN]-1659850137374
GPR[SSUN]-1659850137374
org.jfree.chart.plot.PieLabelDistributor,55
Find no block!
GPR[SSUN]-1659850137747
org.jfree.chart.plot.PieLabelDistributor,64
Find no block!
GPR[SSUN]-1659850138086
org.jfree.chart.util.Rotation,81
Find no block!
GPR[SSUN]-1659850138428
org.jfree.chart.util.Rotation,82
========
this.name=name;
this.factor=MIN_VALUE;

========
MM Copying to MM
GPR[SPVS]-1659850140278
GPR[SPVAP]-1659850140278
GPR[EPVAP]-1659850142340
GPR[EPVS]-1659850142340
========
if(name==null){
throw new IllegalArgumentException("Null \'name\' argument.");
}
this.name=name;
this.factor=factor;

========
MM Copying to MM
GPR[SPVS]-1659850142342
GPR[SPVAP]-1659850142342
GPR[EPVAP]-1659850146124
GPR[SPVATF]-1659850146124
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850147277
GPR[EPVS]-1659850147277
========
this.name=licenceText;
this.factor=factor;

========
MM Copying to MM
GPR[SPVS]-1659850147278
GPR[SPVAP]-1659850147278
GPR[EPVAP]-1659850147957
GPR[EPVS]-1659850147957
========
this.name=prefix;
this.factor=factor;

========
MM Copying to MM
GPR[SPVS]-1659850147958
GPR[SPVAP]-1659850147958
GPR[EPVAP]-1659850148659
GPR[EPVS]-1659850148659
GPR[ESUN]-1659850148659
GPR[SSUN]-1659850148659
org.jfree.chart.util.Rotation,83
GPR[ESUN]-1659850149177
GPR[SSUN]-1659850149177
org.jfree.chart.util.Rotation,84
Find no block!
GPR[SSUN]-1659850149533
org.jfree.chart.util.Rotation,59
Find no block!
GPR[SSUN]-1659850149869
org.jfree.chart.util.Rotation,63
Find no block!
GPR[SSUN]-1659850150228
org.jfree.chart.labels.StandardPieSectionLabelGenerator,90
========
this(DEFAULT_ITEM_LABEL_FORMAT,NumberFormat.getNumberInstance(),NumberFormat.getPercentInstance());

========
MM Copying to MM
GPR[SPVS]-1659850152129
GPR[SPVAP]-1659850152129
GPR[EPVAP]-1659850154214
GPR[EPVS]-1659850154214
========
this(DEFAULT_TOOL_TIP_FORMAT,NumberFormat.getNumberInstance(),NumberFormat.getPercentInstance());

========
MM Copying to MM
GPR[SPVS]-1659850154216
GPR[SPVAP]-1659850154216
GPR[EPVAP]-1659850155734
GPR[EPVS]-1659850155734
GPR[ESUN]-1659850155735
GPR[SSUN]-1659850155735
org.jfree.chart.labels.StandardPieSectionLabelGenerator,92
Find no block!
GPR[SSUN]-1659850156113
org.jfree.chart.labels.StandardPieSectionLabelGenerator,141
========
super(labelFormat,numberFormat,percentFormat);
this.labelFormat=labelFormat;
this.attributedLabels=new ObjectList();

========
MM Copying to MM
GPR[SPVS]-1659850157931
GPR[SPVAP]-1659850157931
GPR[EPVAP]-1659850160077
GPR[EPVS]-1659850160077
========
this.percentFormat=NumberFormat.getPercentInstance();
super(labelFormat,numberFormat,percentFormat);
this.attributedLabels=new ObjectList();

========
MM Copying to MM
GPR[SPVS]-1659850160078
GPR[SPVAP]-1659850160078
GPR[EPVAP]-1659850161612
GPR[EPVS]-1659850161612
========
this.percentFormat=percentFormat;
super(labelFormat,numberFormat,percentFormat);
this.attributedLabels=new ObjectList();

========
MM Copying to MM
GPR[SPVS]-1659850161613
GPR[SPVAP]-1659850161614
GPR[EPVAP]-1659850163103
GPR[EPVS]-1659850163103
GPR[ESUN]-1659850163104
GPR[SSUN]-1659850163104
org.jfree.chart.labels.StandardPieSectionLabelGenerator,142
GPR[ESUN]-1659850163471
GPR[SSUN]-1659850163471
org.jfree.chart.labels.StandardPieSectionLabelGenerator,143
Find no block!
GPR[SSUN]-1659850163829
org.jfree.chart.labels.AbstractPieItemLabelGenerator,82
Find no block!
GPR[SSUN]-1659850164169
org.jfree.chart.labels.AbstractPieItemLabelGenerator,84
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'formatter\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850166032
GPR[SPVAP]-1659850166032
GPR[EPVAP]-1659850170375
GPR[SPVATF]-1659850170375
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850171524
GPR[EPVS]-1659850171524
========
this.labelFormat=labelFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850171525
GPR[SPVAP]-1659850171525
GPR[EPVAP]-1659850172767
GPR[SPVATF]-1659850172767
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850173938
GPR[EPVS]-1659850173938
========
this.numberFormat=null;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850173939
GPR[SPVAP]-1659850173939
GPR[EPVAP]-1659850175151
GPR[SPVATF]-1659850175151
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850176273
GPR[EPVS]-1659850176273
========
this.labelFormat=labelFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'formatter\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850176274
GPR[SPVAP]-1659850176274
GPR[EPVAP]-1659850177497
GPR[SPVATF]-1659850177497
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850178636
GPR[EPVS]-1659850178636
========
this.numberFormat=null;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'formatter\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850178637
GPR[SPVAP]-1659850178637
GPR[EPVAP]-1659850179904
GPR[SPVATF]-1659850179904
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850181051
GPR[EPVS]-1659850181051
========
this.labelFormat=labelFormat;
this.numberFormat=null;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850181053
GPR[SPVAP]-1659850181053
GPR[EPVAP]-1659850182269
GPR[SPVATF]-1659850182269
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850183428
GPR[EPVS]-1659850183428
========
this.labelFormat=labelFormat;
this.numberFormat=null;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'formatter\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850183430
GPR[SPVAP]-1659850183430
GPR[EPVAP]-1659850186667
GPR[SPVATF]-1659850186667
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850187869
GPR[EPVS]-1659850187869
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850187870
GPR[SPVAP]-1659850187870
GPR[EPVAP]-1659850189072
GPR[SPVATF]-1659850189072
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850190240
GPR[EPVS]-1659850190240
========
this.numberFormat=numberFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850190242
GPR[SPVAP]-1659850190242
GPR[EPVAP]-1659850191489
GPR[SPVATF]-1659850191489
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850192640
GPR[EPVS]-1659850192640
========
this.labelFormat=labelFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850192641
GPR[SPVAP]-1659850192641
GPR[EPVAP]-1659850193870
GPR[SPVATF]-1659850193870
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850195027
GPR[EPVS]-1659850195027
========
this.numberFormat=numberFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850195029
GPR[SPVAP]-1659850195029
GPR[EPVAP]-1659850196246
GPR[SPVATF]-1659850196246
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850197404
GPR[EPVS]-1659850197404
========
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850197405
GPR[SPVAP]-1659850197405
GPR[EPVAP]-1659850198638
GPR[SPVATF]-1659850198638
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850199786
GPR[EPVS]-1659850199786
========
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850199787
GPR[SPVAP]-1659850199787
GPR[EPVAP]-1659850201020
GPR[SPVATF]-1659850201020
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850202177
GPR[EPVS]-1659850202177
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'percentFormatter\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850202178
GPR[SPVAP]-1659850202178
GPR[EPVAP]-1659850203384
GPR[SPVATF]-1659850203384
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850204524
GPR[EPVS]-1659850204524
========
this.labelFormat=labelFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'percentFormatter\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850204525
GPR[SPVAP]-1659850204525
GPR[EPVAP]-1659850205734
GPR[SPVATF]-1659850205734
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850206880
GPR[EPVS]-1659850206880
========
this.numberFormat=numberFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'percentFormatter\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850206881
GPR[SPVAP]-1659850206881
GPR[EPVAP]-1659850208131
GPR[SPVATF]-1659850208131
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850209277
GPR[EPVS]-1659850209277
========
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
if(labelFormat==null){
throw new IllegalArgumentException("Null \'percentFormatter\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850209278
GPR[SPVAP]-1659850209278
GPR[EPVAP]-1659850210492
GPR[SPVATF]-1659850210492
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850211661
GPR[EPVS]-1659850211661
GPR[ESUN]-1659850211661
GPR[SSUN]-1659850211661
org.jfree.chart.labels.AbstractPieItemLabelGenerator,87
========
if(numberFormat!=null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850213672
GPR[SPVAP]-1659850213672
GPR[EPVAP]-1659850218048
GPR[SPVATF]-1659850218048
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850219177
GPR[EPVS]-1659850219177
========
if(this.numberFormat!=null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850219178
GPR[SPVAP]-1659850219178
GPR[EPVAP]-1659850220449
GPR[SPVATF]-1659850220449
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850221595
GPR[EPVS]-1659850221595
========
if(this.numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850221596
GPR[SPVAP]-1659850221596
GPR[EPVAP]-1659850222810
GPR[SPVATF]-1659850222810
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850223949
GPR[EPVS]-1659850223949
GPR[ESUN]-1659850223949
GPR[SSUN]-1659850223949
org.jfree.chart.labels.AbstractPieItemLabelGenerator,90
========
if(percentFormat!=null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850225916
GPR[SPVAP]-1659850225916
GPR[EPVAP]-1659850230233
GPR[SPVATF]-1659850230233
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850231376
GPR[EPVS]-1659850231376
========
if(this.percentFormat!=null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850231377
GPR[SPVAP]-1659850231377
GPR[EPVAP]-1659850232655
GPR[SPVATF]-1659850232655
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850233846
GPR[EPVS]-1659850233846
========
if(this.percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659850233847
GPR[SPVAP]-1659850233847
GPR[EPVAP]-1659850235069
GPR[SPVATF]-1659850235069
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850236191
GPR[EPVS]-1659850236191
GPR[ESUN]-1659850236191
GPR[SSUN]-1659850236191
org.jfree.chart.labels.AbstractPieItemLabelGenerator,95
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(formatter==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=formatter;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850238307
GPR[SPVAP]-1659850238307
GPR[EPVAP]-1659850240287
GPR[EPVS]-1659850240287
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormatter==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormatter;

========
MM Copying to MM
GPR[SPVS]-1659850240288
GPR[SPVAP]-1659850240288
GPR[EPVAP]-1659850241859
GPR[EPVS]-1659850241859
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(formatter==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850241860
GPR[SPVAP]-1659850241860
GPR[EPVAP]-1659850243413
GPR[EPVS]-1659850243414
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'formatter\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850243415
GPR[SPVAP]-1659850243415
GPR[EPVAP]-1659850247311
GPR[SPVATF]-1659850247311
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850248470
GPR[EPVS]-1659850248470
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormatter==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850248471
GPR[SPVAP]-1659850248471
GPR[EPVAP]-1659850249159
GPR[EPVS]-1659850249159
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormatter\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850249160
GPR[SPVAP]-1659850249160
GPR[EPVAP]-1659850250414
GPR[SPVATF]-1659850250414
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850251559
GPR[EPVS]-1659850251559
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=formatter;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850251560
GPR[SPVAP]-1659850251560
GPR[EPVAP]-1659850252244
GPR[EPVS]-1659850252244
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormatter;

========
MM Copying to MM
GPR[SPVS]-1659850252245
GPR[SPVAP]-1659850252245
GPR[EPVAP]-1659850252949
GPR[EPVS]-1659850252949
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'formatter\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormatter\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850252950
GPR[SPVAP]-1659850252950
GPR[EPVAP]-1659850254152
GPR[SPVATF]-1659850254152
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850255312
GPR[EPVS]-1659850255312
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat!=null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850255313
GPR[SPVAP]-1659850255313
GPR[EPVAP]-1659850256595
GPR[SPVATF]-1659850256595
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850259693
GPR[EPVS]-1659850259693
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(this.numberFormat!=null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850259694
GPR[SPVAP]-1659850259694
GPR[EPVAP]-1659850260927
GPR[SPVATF]-1659850260927
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850262057
GPR[EPVS]-1659850262057
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(this.numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850262058
GPR[SPVAP]-1659850262058
GPR[EPVAP]-1659850263257
GPR[SPVATF]-1659850263257
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850264396
GPR[EPVS]-1659850264396
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(percentFormat!=null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850264397
GPR[SPVAP]-1659850264397
GPR[EPVAP]-1659850265647
GPR[SPVATF]-1659850265647
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850266775
GPR[EPVS]-1659850266775
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(this.percentFormat!=null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850266776
GPR[SPVAP]-1659850266776
GPR[EPVAP]-1659850268011
GPR[SPVATF]-1659850268011
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850269164
GPR[EPVS]-1659850269164
========
if(labelFormat==null){
throw new IllegalArgumentException("Null \'labelFormat\' argument.");
}
if(numberFormat==null){
throw new IllegalArgumentException("Null \'numberFormat\' argument.");
}
if(this.percentFormat==null){
throw new IllegalArgumentException("Null \'percentFormat\' argument.");
}
this.labelFormat=labelFormat;
this.numberFormat=numberFormat;
this.percentFormat=percentFormat;

========
MM Copying to MM
GPR[SPVS]-1659850269166
GPR[SPVAP]-1659850269166
GPR[EPVAP]-1659850270372
GPR[SPVATF]-1659850270372
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850271486
GPR[EPVS]-1659850271486
GPR[ESUN]-1659850271486
GPR[SSUN]-1659850271486
org.jfree.chart.labels.AbstractPieItemLabelGenerator,96
GPR[ESUN]-1659850271990
GPR[SSUN]-1659850271990
org.jfree.chart.labels.AbstractPieItemLabelGenerator,97
GPR[ESUN]-1659850272302
GPR[SSUN]-1659850272302
org.jfree.chart.labels.AbstractPieItemLabelGenerator,99
Find no block!
GPR[SSUN]-1659850272620
org.jfree.chart.StrokeMap,75
Find no block!
GPR[SSUN]-1659850272926
org.jfree.chart.StrokeMap,76
GPR[ESUN]-1659850274756
GPR[SSUN]-1659850274756
org.jfree.chart.StrokeMap,77
Find no block!
GPR[SSUN]-1659850275092
org.jfree.data.DefaultKeyedValues2D,95
GPR[ESUN]-1659850276927
GPR[SSUN]-1659850276927
org.jfree.data.DefaultKeyedValues2D,96
Find no block!
GPR[SSUN]-1659850277241
org.jfree.data.DefaultKeyedValues2D,103
Find no block!
GPR[SSUN]-1659850277569
org.jfree.data.DefaultKeyedValues2D,104
GPR[ESUN]-1659850279405
GPR[SSUN]-1659850279405
org.jfree.data.DefaultKeyedValues2D,105
GPR[ESUN]-1659850279798
GPR[SSUN]-1659850279798
org.jfree.data.DefaultKeyedValues2D,106
GPR[ESUN]-1659850280155
GPR[SSUN]-1659850280155
org.jfree.data.DefaultKeyedValues2D,107
GPR[ESUN]-1659850280540
GPR[SSUN]-1659850280540
org.jfree.data.DefaultKeyedValues2D,108
Find no block!
GPR[SSUN]-1659850280881
org.jfree.data.category.DefaultCategoryDataset,73
Find no block!
GPR[SSUN]-1659850281236
org.jfree.data.category.DefaultCategoryDataset,74
GPR[ESUN]-1659850283091
GPR[SSUN]-1659850283091
org.jfree.data.category.DefaultCategoryDataset,75
Find no block!
GPR[SSUN]-1659850283418
org.jfree.chart.JFreeChart,1497
========
if(listeners[i]!=ChartChangeListener.class){
((ChartChangeListener)listeners[i+1]).chartChanged(event);
}

========
MM Copying to MM
GPR[SPVS]-1659850285813
GPR[SPVAP]-1659850285813
GPR[EPVAP]-1659850290195
GPR[SPVATF]-1659850290195
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850291336
GPR[EPVS]-1659850291336
========
if(clone.datasets[i]!=null){
((ChartChangeListener)listeners[i+1]).chartChanged(event);
}

========
MM Copying to MM
GPR[SPVS]-1659850291338
GPR[SPVAP]-1659850291338
GPR[EPVAP]-1659850292135
GPR[EPVS]-1659850292135
========
if(clone.datasets[listeners]==ChartChangeListener.class){
((ChartChangeListener)listeners[i+1]).chartChanged(event);
}

========
MM Copying to MM
GPR[SPVS]-1659850292137
GPR[SPVAP]-1659850292137
GPR[EPVAP]-1659850292940
GPR[EPVS]-1659850292940
========
if(listeners[i]==null){
((ChartChangeListener)listeners[i+1]).chartChanged(event);
}

========
MM Copying to MM
GPR[SPVS]-1659850292942
GPR[SPVAP]-1659850292942
GPR[EPVAP]-1659850294287
GPR[SPVATF]-1659850294287
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850295437
GPR[EPVS]-1659850295437
========
if(listeners[i]!=null){
((ChartChangeListener)listeners[i+1]).chartChanged(event);
}

========
MM Copying to MM
GPR[SPVS]-1659850295439
GPR[SPVAP]-1659850295439
GPR[EPVAP]-1659850296756
GPR[SPVATF]-1659850296756
TESTING : org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM:   - org.jfree.chart.plot.junit.MultiplePiePlotTests::testConstructor
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659850297880
GPR[EPVS]-1659850297880
========
if(listeners[i]==ChartChangeListener.class){
((ChartChangeListener)listeners[i+1]).setPaint(event);
}

========
MM Copying to MM
GPR[SPVS]-1659850297882
GPR[SPVAP]-1659850297882
GPR[EPVAP]-1659850298662
GPR[EPVS]-1659850298662
========
if(listeners[i]==ChartChangeListener.class){
start=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT+1;
((ChartChangeListener)listeners[i+1]).chartChanged(event);
}

========
MM Copying to MM
GPR[SPVS]-1659850298669
GPR[SPVAP]-1659850298669
GPR[EPVAP]-1659850299508
GPR[EPVS]-1659850299508
========
if(listeners[i]==ChartChangeListener.class){
DEFAULT_BACKGROUND_IMAGE_ALIGNMENT++;
((ChartChangeListener)listeners[i+1]).chartChanged(event);
}

========
MM Copying to MM
GPR[SPVS]-1659850299509
GPR[SPVAP]-1659850299509
GPR[EPVAP]-1659850300294
GPR[EPVS]-1659850300294
========
if(listeners[i]==ChartChangeListener.class){
start=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT+1;
DEFAULT_BACKGROUND_IMAGE_ALIGNMENT++;

((ChartChangeListener)listeners[i+1]).chartChanged(event);
}

========
MM Copying to MM
GPR[SPVS]-1659850300295
GPR[SPVAP]-1659850300295
GPR[EPVAP]-1659850301100
GPR[EPVS]-1659850301100
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f916a1bc351, pid=2763001, tid=140262891271936
#
# JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# J 5438 C2 cofix.core.parser.node.expr.InfixExpr.match(Lcofix/core/parser/node/Node;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)Z (1104 bytes) @ 0x00007f916a1bc351 [0x00007f916a1b9b20+0x2831]
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# script/workingdir/SimFix/chart/chart_12_buggy/hs_err_pid2763001.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#
End running Chart/12 results at /experiment_home///results/SimFix/Chart/12/seed_260/
\n\nNode: host-75\n
\n\nDate: Sat 06 Aug 2022 10:31:41 PM PDT\n
Removing checked out dir script/workingdir/SimFix/chart/chart_12_buggy
GPR[SSLE]-1659850301140
GPR[ESLE]-1659850361147
