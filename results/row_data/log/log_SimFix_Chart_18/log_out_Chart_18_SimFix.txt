Sleep 1m start
GPR[SSLI]-1659871933674
GPR[ESLI]-1659871993697
Running SimFix Chart 18b
Timezone: America/Los_Angeles
Seed 260
Java 8: /experiment_home/jdk1.8.0_45/bin 
DEFECTS4J_HOME: /experiment_home/defects4j/
Creating out dir /experiment_home///results/SimFix/Chart/18/seed_260/
Project lc: chart
New out script/workingdir/SimFix/chart/chart_18_buggy
The file script/workingdir/SimFix/chart/chart_18_buggy does not exist!
script/workingdir/SimFix/chart/chart_18_buggy
Current directory: script/workingdir/SimFix/chart/chart_18_buggy
classpath:  script/workingdir/SimFix/chart/chart_18_buggy/lib/servlet.jar:/experiment_home/defects4j/framework/projects/lib/junit-4.11.jar:script/workingdir/SimFix/chart/chart_18_buggy/build:script/workingdir/SimFix/chart/chart_18_buggy/build-tests
Src java:  /source
Classes Java:  /build
Src Test:  /tests
Classes Test:  /build-tests
GPR[SSLB]-1659872013248
GPR[ESLB]-1659872073253
Calling SimFix: at script/workingdir/SimFix/chart/chart_18_buggy
ant
build
build-tests
ChangeLog
checkstyle
d4j-info
defects4j.build.properties
experimental
lib
licence-LGPL.txt
maven-jfreechart-project.xml
NEWS
README.txt
source
swt
tests
content current dir: ant build build-tests ChangeLog checkstyle d4j-info defects4j.build.properties experimental lib licence-LGPL.txt maven-jfreechart-project.xml NEWS README.txt source swt tests
Node: host-76
Date init: Sun 07 Aug 2022 04:34:35 AM PDT
OAR_JOB_ID: 3720517
script/workingdir/SimFix/
GPR[SSUP]-1659872075496
=================================================
Project : chart_18	start : 22/08/07 04:34

TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_1
MM: Failing tests: 0
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_2
MM: Failing tests: 0
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
TESTING : org.jfree.data.category.junit.DefaultCategoryDatasetTests::testBug1835955
MM:   - org.jfree.data.category.junit.DefaultCategoryDatasetTests::testBug1835955
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
TESTING : org.jfree.data.junit.DefaultKeyedValues2DTests::testRemoveColumnByKey_purify_1
MM:   - org.jfree.data.junit.DefaultKeyedValues2DTests::testRemoveColumnByKey_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
TESTING : org.jfree.data.junit.DefaultKeyedValues2DTests::testRemoveColumnByKey_purify_2
MM:   - org.jfree.data.junit.DefaultKeyedValues2DTests::testRemoveColumnByKey_purify_2
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testRemoveValue_purify_1
MM: Failing tests: 0
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testRemoveValue_purify_2
MM: Failing tests: 0
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testRemoveValue_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testRemoveValue_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[ESUP]-1659872090889
MM Purify? true
GPR[SFL]-1659872091551
GPR[EFL]-1659872091555
GPR[SFP]-1659872091555
TIMEOUT : 3600000
GPR[SSUN]-1659872091564
org.jfree.data.DefaultKeyedValues,316
========
rebuildIndex();
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872094273
GPR[SPVAP]-1659872094273
GPR[EPVAP]-1659872098499
GPR[SPVATF]-1659872098499
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872099587
GPR[EPVS]-1659872099587
========
notifyListeners(new RendererChangeEvent(this));
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872099590
GPR[SPVAP]-1659872099590
GPR[EPVAP]-1659872100289
GPR[EPVS]-1659872100289
========
notifyListeners(new PlotChangeEvent(this));
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872100290
GPR[SPVAP]-1659872100290
GPR[EPVAP]-1659872101016
GPR[EPVS]-1659872101016
========
this.keys.get(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872101022
GPR[SPVAP]-1659872101022
GPR[EPVAP]-1659872102305
GPR[SPVATF]-1659872102305
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872103401
GPR[EPVS]-1659872103401
========
removeValue(index);
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872103404
GPR[SPVAP]-1659872103404
GPR[EPVAP]-1659872104622
GPR[SPVATF]-1659872104622
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872105736
GPR[EPVS]-1659872105736
========
removeRow(index);
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872105742
GPR[SPVAP]-1659872105742
GPR[EPVAP]-1659872106444
GPR[EPVS]-1659872106444
========
this.keys.setHighlightPaint(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872106446
GPR[SPVAP]-1659872106446
GPR[EPVAP]-1659872107179
GPR[EPVS]-1659872107179
========
fireDatasetChanged();
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872107182
GPR[SPVAP]-1659872107182
GPR[EPVAP]-1659872107884
GPR[EPVS]-1659872107884
========
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
fireSeriesChanged();
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872107887
GPR[SPVAP]-1659872107887
GPR[EPVAP]-1659872108589
GPR[EPVS]-1659872108589
========
this.keys.remove(index);
this.values.remove(index);
if(seen<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872108591
GPR[SPVAP]-1659872108591
GPR[EPVAP]-1659872109289
GPR[EPVS]-1659872109290
========
this.keys.remove(index);
this.values.remove(index);
if(series<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872109292
GPR[SPVAP]-1659872109292
GPR[EPVAP]-1659872109987
GPR[EPVS]-1659872109987
========
this.keys.remove(index);
this.values.remove(index);
if(seriesIndex<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872109988
GPR[SPVAP]-1659872109988
GPR[EPVAP]-1659872110699
GPR[EPVS]-1659872110699
========
fireDatasetChanged();
this.keys.remove(index);
this.values.remove(index);
if(series<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872110701
GPR[SPVAP]-1659872110701
GPR[EPVAP]-1659872111399
GPR[EPVS]-1659872111399
========
notifyListeners(new AxisChangeEvent(this));
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872111401
GPR[SPVAP]-1659872111402
GPR[EPVAP]-1659872112120
GPR[EPVS]-1659872112120
========
clone.indexMap=(HashMap)this.indexMap.clone();
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872112123
GPR[SPVAP]-1659872112123
GPR[EPVAP]-1659872112824
GPR[EPVS]-1659872112824
========
fireChartChanged();
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872112826
GPR[SPVAP]-1659872112826
GPR[EPVAP]-1659872113524
GPR[EPVS]-1659872113524
========
this.keys.remove(index);
this.values.setSelectedIndex(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872113526
GPR[SPVAP]-1659872113526
GPR[EPVAP]-1659872114232
GPR[EPVS]-1659872114233
========
this.keys.getColumnKey(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872114235
GPR[SPVAP]-1659872114235
GPR[EPVAP]-1659872114949
GPR[EPVS]-1659872114950
========
this.keys.getRowKey(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872114951
GPR[SPVAP]-1659872114951
GPR[EPVAP]-1659872115678
GPR[EPVS]-1659872115678
========
this.keys.remove(index);
this.values.remove(index);
if(startIndex<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872115680
GPR[SPVAP]-1659872115680
GPR[EPVAP]-1659872116376
GPR[EPVS]-1659872116376
========
this.index=index;
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872116378
GPR[SPVAP]-1659872116378
GPR[EPVAP]-1659872117084
GPR[EPVS]-1659872117084
========
invalidateRangeInfo();
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872117086
GPR[SPVAP]-1659872117086
GPR[EPVAP]-1659872117792
GPR[EPVS]-1659872117792
========
fireSeriesChanged();
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872117793
GPR[SPVAP]-1659872117793
GPR[EPVAP]-1659872118496
GPR[EPVS]-1659872118496
========
this.keys.substring(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872118499
GPR[SPVAP]-1659872118499
GPR[EPVAP]-1659872119240
GPR[EPVS]-1659872119240
========
this.keys.remove(index);
this.values.remove(index);
if(y<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872119241
GPR[SPVAP]-1659872119241
GPR[EPVAP]-1659872119946
GPR[EPVS]-1659872119946
========
clone.entities=new java.util.ArrayList(this.entities.size());
this.keys.remove(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872119949
GPR[SPVAP]-1659872119949
GPR[EPVAP]-1659872120649
GPR[EPVS]-1659872120649
========
this.keys.remove(index);
clone.subplotInfo=new java.util.ArrayList(this.subplotInfo.size());
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872120651
GPR[SPVAP]-1659872120651
GPR[EPVAP]-1659872121355
GPR[EPVS]-1659872121355
========
this.keys.writeInt(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872121358
GPR[SPVAP]-1659872121358
GPR[EPVAP]-1659872122147
GPR[EPVS]-1659872122147
========
this.keys.add(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872122153
GPR[SPVAP]-1659872122153
GPR[EPVAP]-1659872122852
GPR[EPVS]-1659872122852
========
this.keys.format(index);
this.values.remove(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872122854
GPR[SPVAP]-1659872122854
GPR[EPVAP]-1659872123565
GPR[EPVS]-1659872123565
GPR[ESUN]-1659872123568
GPR[SSUN]-1659872123569
org.jfree.data.DefaultKeyedValues,317
GPR[ESUN]-1659872124070
GPR[SSUN]-1659872124070
org.jfree.data.DefaultKeyedValues,318
========
if(startIndex<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872126268
GPR[SPVAP]-1659872126268
GPR[EPVAP]-1659872128549
GPR[EPVS]-1659872128549
========
if(count<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872128550
GPR[SPVAP]-1659872128550
GPR[EPVAP]-1659872129598
GPR[EPVS]-1659872129598
========
if(value<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872129600
GPR[SPVAP]-1659872129600
GPR[EPVAP]-1659872130633
GPR[EPVS]-1659872130633
========
if(item<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872130634
GPR[SPVAP]-1659872130634
GPR[EPVAP]-1659872131698
GPR[EPVS]-1659872131698
========
if(position<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872131700
GPR[SPVAP]-1659872131700
GPR[EPVAP]-1659872132752
GPR[EPVS]-1659872132752
========
if(index<=this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872132754
GPR[SPVAP]-1659872132754
GPR[EPVAP]-1659872135988
GPR[SPVATF]-1659872135988
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 0
GPR[EPVATF]-1659872137088
GPR[SPVATR]-1659872137089
TESTING : chart_18
MM messageFailing tests: 0
GPR[EPVATR]-1659872147354
GPR[EPVS]-1659872147354
GPR[PF]-1659872147354
sourceFile  script/workingdir/SimFix/chart/chart_18_buggy/source/org/jfree/data/DefaultKeyedValues.java
location   script/workingdir/SimFix/chart/chart_18_buggy
MM Out patch at /experiment_home///results/SimFix/Chart/18/seed_260/patch/chart/18/0/patch_55802_1_ts_1659872147354.diff
MM Command diff diff -w -b  --label=/source/org/jfree/data/DefaultKeyedValues.java --label=/source/org/jfree/data/DefaultKeyedValues.java /tmp/tmpDirMM951184745479549360/DefaultKeyedValues.java  /experiment_home///results/SimFix/Chart/18/seed_260/patch/chart/18/0/1_DefaultKeyedValues.java  --unified=3  > /experiment_home///results/SimFix/Chart/18/seed_260/patch/chart/18/0/patch_55802_1_ts_1659872147354.diff
MMOut command diff: []
========
removeValue(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872147365
GPR[SPVAP]-1659872147365
GPR[EPVAP]-1659872148624
GPR[SPVATF]-1659872148624
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872149723
GPR[EPVS]-1659872149723
========
if(m<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872149726
GPR[SPVAP]-1659872149726
GPR[EPVAP]-1659872150455
GPR[EPVS]-1659872150455
========
if(pos<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872150457
GPR[SPVAP]-1659872150457
GPR[EPVAP]-1659872151162
GPR[EPVS]-1659872151162
========
removeRow(index);
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872151164
GPR[SPVAP]-1659872151164
GPR[EPVAP]-1659872151873
GPR[EPVS]-1659872151873
========
if(index<this.keys.size()){
fireSeriesChanged();
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872151881
GPR[SPVAP]-1659872151882
GPR[EPVAP]-1659872152598
GPR[EPVS]-1659872152598
========
if(axisIndex<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872152600
GPR[SPVAP]-1659872152600
GPR[EPVAP]-1659872153303
GPR[EPVS]-1659872153303
========
if(start<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872153307
GPR[SPVAP]-1659872153307
GPR[EPVAP]-1659872154012
GPR[EPVS]-1659872154012
========
if(end<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872154014
GPR[SPVAP]-1659872154014
GPR[EPVAP]-1659872154731
GPR[EPVS]-1659872154731
========
notifyListeners(new PlotChangeEvent(this));
if(index<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872154732
GPR[SPVAP]-1659872154732
GPR[EPVAP]-1659872155452
GPR[EPVS]-1659872155452
========
if(middle<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872155453
GPR[SPVAP]-1659872155453
GPR[EPVAP]-1659872156988
GPR[EPVS]-1659872156989
========
if(seen<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872156990
GPR[SPVAP]-1659872156990
GPR[EPVAP]-1659872157751
GPR[EPVS]-1659872157751
========
if(keyIndex<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872157753
GPR[SPVAP]-1659872157753
GPR[EPVAP]-1659872158465
GPR[EPVS]-1659872158465
========
if(index<this.keys.size()){
moreInputToProcess=false;
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872158467
GPR[SPVAP]-1659872158467
GPR[EPVAP]-1659872159173
GPR[EPVS]-1659872159173
========
if(size<this.keys.size()){
rebuildIndex();
}

========
MM Copying to MM
GPR[SPVS]-1659872159177
GPR[SPVAP]-1659872159177
GPR[EPVAP]-1659872159918
GPR[EPVS]-1659872159918
GPR[ESUN]-1659872159919
GPR[SSUN]-1659872159919
org.jfree.data.DefaultKeyedValues,321
Find no block!
GPR[SSUN]-1659872160437
org.jfree.data.DefaultKeyedValues,333
========
default :

int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872162404
GPR[SPVAP]-1659872162404
GPR[EPVAP]-1659872163343
GPR[EPVS]-1659872163343
========
case 5 :

int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872163345
GPR[SPVAP]-1659872163345
GPR[EPVAP]-1659872164273
GPR[EPVS]-1659872164273
========
case 8 :

int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872164274
GPR[SPVAP]-1659872164274
GPR[EPVAP]-1659872165206
GPR[EPVS]-1659872165206
========
int index=getIndex(key);
if(keyIndex<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872165208
GPR[SPVAP]-1659872165208
GPR[EPVAP]-1659872167432
GPR[EPVS]-1659872167432
========
int index=getIndex(key);
if(index<0||index>=getDatasetCount()){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872167434
GPR[SPVAP]-1659872167434
GPR[EPVAP]-1659872168493
GPR[EPVS]-1659872168493
========
int index=getIndex(key);
if(index<0||index>=getItemCount()){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872168494
GPR[SPVAP]-1659872168495
GPR[EPVAP]-1659872171714
GPR[SPVATF]-1659872171714
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872172814
GPR[EPVS]-1659872172814
========
int index=getIndex(key);
if((index<0)||(index>=getSubtitleCount())){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872172816
GPR[SPVAP]-1659872172816
GPR[EPVAP]-1659872173519
GPR[EPVS]-1659872173519
========
int index=getIndex(key);
if(index<0){
return ;
}
setRotateY(index);

========
MM Copying to MM
GPR[SPVS]-1659872173520
GPR[SPVAP]-1659872173520
GPR[EPVAP]-1659872174224
GPR[EPVS]-1659872174224
========
case 3 :

int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872174226
GPR[SPVAP]-1659872174226
GPR[EPVAP]-1659872174841
GPR[EPVS]-1659872174841
========
int index=getIndex(key);
if(index<0){
return ;
}
removeRow(index);

========
MM Copying to MM
GPR[SPVS]-1659872174842
GPR[SPVAP]-1659872174842
GPR[EPVAP]-1659872175542
GPR[EPVS]-1659872175542
========
if(key==null){
throw new NullPointerException("Null \'key\' argument.");
}
int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872175544
GPR[SPVAP]-1659872175544
GPR[EPVAP]-1659872176798
GPR[SPVATF]-1659872176798
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872177893
GPR[EPVS]-1659872177893
========
int index=getIndex(key);
if(columnIndex<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872177895
GPR[SPVAP]-1659872177895
GPR[EPVAP]-1659872178598
GPR[EPVS]-1659872178598
========
int index=getIndex(key);
if(colIndex<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872178600
GPR[SPVAP]-1659872178600
GPR[EPVAP]-1659872179330
GPR[EPVS]-1659872179330
========
int index=getIndex(key);
if(seen<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872179331
GPR[SPVAP]-1659872179331
GPR[EPVAP]-1659872180026
GPR[EPVS]-1659872180026
========
int index=getIndex(key);
if(pos<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872180028
GPR[SPVAP]-1659872180028
GPR[EPVAP]-1659872180764
GPR[EPVS]-1659872180764
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872180765
GPR[SPVAP]-1659872180765
GPR[EPVAP]-1659872181998
GPR[SPVATF]-1659872181998
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872183100
GPR[EPVS]-1659872183100
========
case 1 :

int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872183102
GPR[SPVAP]-1659872183102
GPR[EPVAP]-1659872183690
GPR[EPVS]-1659872183690
========
int index=getIndex(key);
if(index<ORIENTATION_VERTICAL){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872183692
GPR[SPVAP]-1659872183692
GPR[EPVAP]-1659872184415
GPR[EPVS]-1659872184415
========
int index=getIndex(key);
if(index<0||index>3){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872184417
GPR[SPVAP]-1659872184417
GPR[EPVAP]-1659872185635
GPR[SPVATF]-1659872185635
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872186728
GPR[EPVS]-1659872186728
========
int index=getIndex(key);
this.keys.remove(index);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872186730
GPR[SPVAP]-1659872186730
GPR[EPVAP]-1659872187980
GPR[SPVATF]-1659872187980
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872189076
GPR[EPVS]-1659872189076
========
int index=getIndex(key);
this.values.remove(index);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872189078
GPR[SPVAP]-1659872189078
GPR[EPVAP]-1659872190323
GPR[SPVATF]-1659872190323
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872191402
GPR[EPVS]-1659872191402
========
int index=getIndex(key);
this.keys.remove(index);
this.values.remove(index);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872191403
GPR[SPVAP]-1659872191403
GPR[EPVAP]-1659872192626
GPR[SPVATF]-1659872192626
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872193719
GPR[EPVS]-1659872193719
========
int index=getIndex(key);
if(index<0||index>getSubtitleCount()){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872193721
GPR[SPVAP]-1659872193721
GPR[EPVAP]-1659872194418
GPR[EPVS]-1659872194418
========
fireChartChanged();
int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872194419
GPR[SPVAP]-1659872194419
GPR[EPVAP]-1659872195124
GPR[EPVS]-1659872195124
========
notifyListeners(new PlotChangeEvent(this));
int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872195125
GPR[SPVAP]-1659872195125
GPR[EPVAP]-1659872195837
GPR[EPVS]-1659872195837
========
int index=getIndex(key);
if(startIndex<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872195839
GPR[SPVAP]-1659872195839
GPR[EPVAP]-1659872196556
GPR[EPVS]-1659872196556
========
int index=getIndex(key);
if(index<0){
return ;
}
if(getDataset(index)!=null){
existing.removeChangeListener(this);
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872196558
GPR[SPVAP]-1659872196558
GPR[EPVAP]-1659872197256
GPR[EPVS]-1659872197256
========
fireSeriesChanged();
int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872197258
GPR[SPVAP]-1659872197258
GPR[EPVAP]-1659872197962
GPR[EPVS]-1659872197962
========
int index=getIndex(key);
if(middle<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872197964
GPR[SPVAP]-1659872197964
GPR[EPVAP]-1659872198682
GPR[EPVS]-1659872198682
========
int index=getIndex(key);
if(index<0){
return ;
}
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872198684
GPR[SPVAP]-1659872198684
GPR[EPVAP]-1659872199998
GPR[SPVATF]-1659872199998
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872201130
GPR[EPVS]-1659872201130
========
int index=getIndex(key);
if(index<0){
return ;
}
this.key=key;
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872201131
GPR[SPVAP]-1659872201131
GPR[EPVAP]-1659872201855
GPR[EPVS]-1659872201855
========
int index=getIndex(key);
if(index<0){
return ;
}
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
this.key=key;
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872201856
GPR[SPVAP]-1659872201856
GPR[EPVAP]-1659872202562
GPR[EPVS]-1659872202562
========
this.index=Math.max(this.size,index+1);
int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872202564
GPR[SPVAP]-1659872202564
GPR[EPVAP]-1659872203266
GPR[EPVS]-1659872203266
========
int index=getIndex(key);
if(index<0){
return ;
}
case Types.DECIMAL :

removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872203269
GPR[SPVAP]-1659872203269
GPR[EPVAP]-1659872203865
GPR[EPVS]-1659872203865
========
case Types.DATE :

int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872203867
GPR[SPVAP]-1659872203867
GPR[EPVAP]-1659872204455
GPR[EPVS]-1659872204455
========
int index=getIndex(key);
if(section<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872204456
GPR[SPVAP]-1659872204456
GPR[EPVAP]-1659872205159
GPR[EPVS]-1659872205159
========
if(key==null){
key=new Integer(index);
}
int index=getIndex(key);
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872205160
GPR[SPVAP]-1659872205160
GPR[EPVAP]-1659872205869
GPR[EPVS]-1659872205869
========
int index=getIndex(key);
new Object[4][0]=key.toString();
if(index<0){
return ;
}
removeValue(index);

========
MM Copying to MM
GPR[SPVS]-1659872205871
GPR[SPVAP]-1659872205871
GPR[EPVAP]-1659872206574
GPR[EPVS]-1659872206574
GPR[ESUN]-1659872206576
GPR[SSUN]-1659872206576
org.jfree.data.DefaultKeyedValues,334
========
if((index<0)||(index>=getSubtitleCount())){
return ;
}

========
MM Copying to MM
GPR[SPVS]-1659872208610
GPR[SPVAP]-1659872208610
GPR[EPVAP]-1659872210778
GPR[EPVS]-1659872210778
========
if(index<0||index>getSubtitleCount()){
return ;
}

========
MM Copying to MM
GPR[SPVS]-1659872210779
GPR[SPVAP]-1659872210779
GPR[EPVAP]-1659872211820
GPR[EPVS]-1659872211820
========
if(index<0||index>3){
return ;
}

========
MM Copying to MM
GPR[SPVS]-1659872211822
GPR[SPVAP]-1659872211822
GPR[EPVAP]-1659872215096
GPR[SPVATF]-1659872215096
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872216187
GPR[EPVS]-1659872216187
========
if(index<0||index>=getDatasetCount()){
return ;
}

========
MM Copying to MM
GPR[SPVS]-1659872216188
GPR[SPVAP]-1659872216188
GPR[EPVAP]-1659872216890
GPR[EPVS]-1659872216890
========
if(index<0||index>=getItemCount()){
return ;
}

========
MM Copying to MM
GPR[SPVS]-1659872216892
GPR[SPVAP]-1659872216892
GPR[EPVAP]-1659872218153
GPR[SPVATF]-1659872218153
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872219229
GPR[EPVS]-1659872219229
========
if(index<ORIENTATION_VERTICAL){
return ;
}

========
MM Copying to MM
GPR[SPVS]-1659872219230
GPR[SPVAP]-1659872219231
GPR[EPVAP]-1659872219930
GPR[EPVS]-1659872219930
========
if(seen<0){
return ;
}

========
MM Copying to MM
GPR[SPVS]-1659872219931
GPR[SPVAP]-1659872219931
GPR[EPVAP]-1659872220651
GPR[EPVS]-1659872220651
GPR[ESUN]-1659872220652
GPR[SSUN]-1659872220652
org.jfree.data.DefaultKeyedValues,337
GPR[ESUN]-1659872221014
GPR[SSUN]-1659872221015
org.jfree.data.DefaultKeyedValues,338
Find no block!
GPR[SSUN]-1659872221268
org.jfree.data.DefaultKeyedValues,335
GPR[ESUN]-1659872221520
GPR[SSUN]-1659872221520
org.jfree.data.DefaultKeyedValues2D,455
========
clearSubtitles();
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872223700
GPR[SPVAP]-1659872223700
GPR[EPVAP]-1659872225506
GPR[EPVS]-1659872225506
========
this.sortRowKeys=sortRowKeys;
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872225508
GPR[SPVAP]-1659872225508
GPR[EPVAP]-1659872229822
GPR[SPVATF]-1659872229822
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872230952
GPR[EPVS]-1659872230952
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
rows.add(rowData.getKey());
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872230954
GPR[SPVAP]-1659872230954
GPR[EPVAP]-1659872231653
GPR[EPVS]-1659872231653
========
Collections.sort(this.columnKeys);
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872231655
GPR[SPVAP]-1659872231655
GPR[EPVAP]-1659872232936
GPR[SPVATF]-1659872232936
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872234044
GPR[EPVS]-1659872234044
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
if(!new ArrayList().contains(columnKey)){
new ArrayList().add(columnKey);
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872234046
GPR[SPVAP]-1659872234046
GPR[EPVAP]-1659872234736
GPR[EPVS]-1659872234736
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
if(this.columnKeys.indexOf(rowData.getDescription())<0){
this.columnKeys.add(rowData.getDescription());
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872234738
GPR[SPVAP]-1659872234738
GPR[EPVAP]-1659872235431
GPR[EPVS]-1659872235431
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
previous=rowData.getValue();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872235433
GPR[SPVAP]-1659872235433
GPR[EPVAP]-1659872236131
GPR[EPVS]-1659872236131
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
fillBand=!sortRowKeys;
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872236132
GPR[SPVAP]-1659872236132
GPR[EPVAP]-1659872236850
GPR[EPVS]-1659872236850
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
previous=rowData.getValue();
fillBand=!sortRowKeys;

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872236851
GPR[SPVAP]-1659872236851
GPR[EPVAP]-1659872237567
GPR[EPVS]-1659872237567
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
previous=rowData.getValue();
fillBand=!sortRowKeys;
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872237569
GPR[SPVAP]-1659872237569
GPR[EPVAP]-1659872238288
GPR[EPVS]-1659872238288
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
previous=rowData.getValue();
previous=rowData.getValue();
fillBand=!sortRowKeys;

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872238290
GPR[SPVAP]-1659872238290
GPR[EPVAP]-1659872239022
GPR[EPVS]-1659872239022
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
fillBand=!sortRowKeys;
previous=rowData.getValue();
fillBand=!sortRowKeys;

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872239023
GPR[SPVAP]-1659872239023
GPR[EPVAP]-1659872239772
GPR[EPVS]-1659872239772
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
previous=rowData.getValue();
fillBand=!sortRowKeys;
previous=rowData.getValue();
fillBand=!sortRowKeys;

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872239773
GPR[SPVAP]-1659872239773
GPR[EPVAP]-1659872240480
GPR[EPVS]-1659872240480
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(rowData.getIndex(columnKey));
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872240482
GPR[SPVAP]-1659872240482
GPR[EPVAP]-1659872241791
GPR[SPVATF]-1659872241791
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872242864
GPR[EPVS]-1659872242864
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
if((Axis)iterator.next()!=null){
cursor=rowData.getCursor();
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872242867
GPR[SPVAP]-1659872242867
GPR[EPVAP]-1659872243571
GPR[EPVS]-1659872243571
========
rowData=new ArrayList(columnKeys.size());
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872243573
GPR[SPVAP]-1659872243573
GPR[EPVAP]-1659872244276
GPR[EPVS]-1659872244276
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
if((MeterInterval)iterator.next().getBackgroundPaint()==null){
color=(MeterInterval)iterator.next().getOutlinePaint();
}
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872244278
GPR[SPVAP]-1659872244278
GPR[EPVAP]-1659872244977
GPR[EPVS]-1659872244977
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
rowData.add(new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()));
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872244978
GPR[SPVAP]-1659872244978
GPR[EPVAP]-1659872245682
GPR[EPVS]-1659872245682
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
if((MeterInterval)iterator.next().getBackgroundPaint()==null){
color=(MeterInterval)iterator.next().getOutlinePaint();
}
rowData.add(new LegendItem((MeterInterval)iterator.next().getLabel(),mi.getLabel(),null,null,new Rectangle2D.Double(-4.0,-4.0,8.0,8.0),(MeterInterval)iterator.next().getBackgroundPaint()));

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872245684
GPR[SPVAP]-1659872245684
GPR[EPVAP]-1659872246407
GPR[EPVS]-1659872246407
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.setComposite(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872246409
GPR[SPVAP]-1659872246409
GPR[EPVAP]-1659872247112
GPR[EPVS]-1659872247112
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.setCompressionMode(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872247114
GPR[SPVAP]-1659872247114
GPR[EPVAP]-1659872247819
GPR[EPVS]-1659872247819
========
notifyListeners(new RendererChangeEvent(this));
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872247822
GPR[SPVAP]-1659872247822
GPR[EPVAP]-1659872248527
GPR[EPVS]-1659872248527
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.sortRowKeys=sortRowKeys;
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872248530
GPR[SPVAP]-1659872248530
GPR[EPVAP]-1659872249756
GPR[SPVATF]-1659872249756
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872250853
GPR[EPVS]-1659872250853
========
fireDatasetChanged();
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872250854
GPR[SPVAP]-1659872250854
GPR[EPVAP]-1659872251577
GPR[EPVS]-1659872251577
========
this.columnKeys.clear();
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872251579
GPR[SPVAP]-1659872251579
GPR[EPVAP]-1659872252838
GPR[SPVATF]-1659872252838
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872253940
GPR[EPVS]-1659872253940
========
this.rows.clear();
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872253942
GPR[SPVAP]-1659872253942
GPR[EPVAP]-1659872255216
GPR[SPVATF]-1659872255216
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872256299
GPR[EPVS]-1659872256299
========
this.columnKeys.clear();
this.rows.clear();
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872256300
GPR[SPVAP]-1659872256300
GPR[EPVAP]-1659872257520
GPR[SPVATF]-1659872257520
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872258607
GPR[EPVS]-1659872258607
========
fireSeriesChanged();
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872258609
GPR[SPVAP]-1659872258609
GPR[EPVAP]-1659872259309
GPR[EPVS]-1659872259309
========
fireChartChanged();
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872259310
GPR[SPVAP]-1659872259310
GPR[EPVAP]-1659872260020
GPR[EPVS]-1659872260020
========
removeValue(getIndex(columnKey));
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872260022
GPR[SPVAP]-1659872260022
GPR[EPVAP]-1659872260730
GPR[EPVS]-1659872260730
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
fireDatasetChanged();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872260732
GPR[SPVAP]-1659872260732
GPR[EPVAP]-1659872261448
GPR[EPVS]-1659872261448
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872261449
GPR[SPVAP]-1659872261449
GPR[EPVAP]-1659872262149
GPR[EPVS]-1659872262149
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872262151
GPR[SPVAP]-1659872262151
GPR[EPVAP]-1659872262864
GPR[EPVS]-1659872262864
========
notifyListeners(new PlotChangeEvent(this));
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872262865
GPR[SPVAP]-1659872262865
GPR[EPVAP]-1659872263587
GPR[EPVS]-1659872263587
========
if(sortRowKeys){
notifyListeners(new PlotChangeEvent(this));
}
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872263589
GPR[SPVAP]-1659872263589
GPR[EPVAP]-1659872264286
GPR[EPVS]-1659872264286
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
rowData.removeChangeListener(this);
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872264289
GPR[SPVAP]-1659872264289
GPR[EPVAP]-1659872265011
GPR[EPVS]-1659872265011
========
fireDatasetChanged();
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
rowData.removeChangeListener(this);
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872265013
GPR[SPVAP]-1659872265013
GPR[EPVAP]-1659872265706
GPR[EPVS]-1659872265706
========
this.columnKey=rowKey;
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872265708
GPR[SPVAP]-1659872265708
GPR[EPVAP]-1659872266410
GPR[EPVS]-1659872266410
========
this.columnKey=columnKey;
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872266411
GPR[SPVAP]-1659872266411
GPR[EPVAP]-1659872267113
GPR[EPVS]-1659872267114
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.setParent(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872267115
GPR[SPVAP]-1659872267115
GPR[EPVAP]-1659872267821
GPR[EPVS]-1659872267821
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
configureRangeAxes();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872267822
GPR[SPVAP]-1659872267822
GPR[EPVAP]-1659872268528
GPR[EPVS]-1659872268528
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
notifyListeners(new PlotChangeEvent(this));
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872268529
GPR[SPVAP]-1659872268529
GPR[EPVAP]-1659872269242
GPR[EPVS]-1659872269242
========
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
configureRangeAxes();
notifyListeners(new PlotChangeEvent(this));

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872269243
GPR[SPVAP]-1659872269243
GPR[EPVAP]-1659872269959
GPR[EPVS]-1659872269959
========
notifyListeners(new AxisChangeEvent(this));
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}
this.columnKeys.remove(columnKey);

========
MM Copying to MM
GPR[SPVS]-1659872269961
GPR[SPVAP]-1659872269961
GPR[EPVAP]-1659872270665
GPR[EPVS]-1659872270665
GPR[ESUN]-1659872270668
GPR[SSUN]-1659872270668
org.jfree.data.DefaultKeyedValues2D,456
========
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(rowData.getIndex(columnKey));
}

========
MM Copying to MM
GPR[SPVS]-1659872273035
GPR[SPVAP]-1659872273035
GPR[EPVAP]-1659872277271
GPR[SPVATF]-1659872277271
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872278393
GPR[EPVS]-1659872278393
========
this.columnKeys.remove(columnKey);
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872278395
GPR[SPVAP]-1659872278395
GPR[EPVAP]-1659872279708
GPR[SPVATF]-1659872279708
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872280830
GPR[EPVS]-1659872280830
========
this.columnKeys.remove(columnKey);
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(rowData.getIndex(columnKey));
}

========
MM Copying to MM
GPR[SPVS]-1659872280832
GPR[SPVAP]-1659872280832
GPR[EPVAP]-1659872282048
GPR[SPVATF]-1659872282048
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872283169
GPR[EPVS]-1659872283169
========
while(iterator.hasNext()){
subplot=(XYPlot)iterator.next();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872283170
GPR[SPVAP]-1659872283170
GPR[EPVAP]-1659872283866
GPR[EPVS]-1659872283866
========
while(iterator.hasNext()){
subplot=(CategoryPlot)iterator.next();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872283868
GPR[SPVAP]-1659872283868
GPR[EPVAP]-1659872284572
GPR[EPVS]-1659872284572
========
while(iterator.hasNext()){
clone.data.add(rowData.clone());
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872284573
GPR[SPVAP]-1659872284573
GPR[EPVAP]-1659872285275
GPR[EPVS]-1659872285275
========
while(iterator.hasNext()){
clone.rows.add(rowData.clone());
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872285276
GPR[SPVAP]-1659872285276
GPR[EPVAP]-1659872286008
GPR[EPVS]-1659872286008
========
clearSubtitles();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872286010
GPR[SPVAP]-1659872286010
GPR[EPVAP]-1659872286706
GPR[EPVS]-1659872286706
========
while(iterator.hasNext()){
if(rowData.getKey()!=null){
result=rowData;
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872286707
GPR[SPVAP]-1659872286707
GPR[EPVAP]-1659872287436
GPR[EPVS]-1659872287436
========
while(iterator.hasNext()){
totalXCoords+=rowData.getX();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872287438
GPR[SPVAP]-1659872287438
GPR[EPVAP]-1659872288151
GPR[EPVS]-1659872288151
========
while(iterator.hasNext()){
totalYCoords+=rowData.getY();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872288152
GPR[SPVAP]-1659872288152
GPR[EPVAP]-1659872288868
GPR[EPVS]-1659872288868
========
while(iterator.hasNext()){
totalXCoords+=rowData.getX();
totalYCoords+=rowData.getY();

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872288870
GPR[SPVAP]-1659872288870
GPR[EPVAP]-1659872289587
GPR[EPVS]-1659872289587
========
while(iterator.hasNext()){
new java.util.ArrayList().add(rowData.getKey());
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872289589
GPR[SPVAP]-1659872289589
GPR[EPVAP]-1659872290286
GPR[EPVS]-1659872290286
========
while(iterator.hasNext()){
if(!columnKeys.contains((Comparable)iterator.next())){
columnKeys.add((Comparable)iterator.next());
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872290288
GPR[SPVAP]-1659872290288
GPR[EPVAP]-1659872291529
GPR[SPVATF]-1659872291529
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872292633
GPR[EPVS]-1659872292633
========
columnKeys.add(this.columnKey);
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872292634
GPR[SPVAP]-1659872292634
GPR[EPVAP]-1659872293342
GPR[EPVS]-1659872293342
========
while(iterator.hasNext()){
previous=rowData.getValue();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872293343
GPR[SPVAP]-1659872293343
GPR[EPVAP]-1659872294061
GPR[EPVS]-1659872294061
========
while(iterator.hasNext()){
fillBand=!sortRowKeys;
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872294062
GPR[SPVAP]-1659872294062
GPR[EPVAP]-1659872294786
GPR[EPVS]-1659872294786
========
while(iterator.hasNext()){
previous=rowData.getValue();
fillBand=!sortRowKeys;

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872294787
GPR[SPVAP]-1659872294787
GPR[EPVAP]-1659872295483
GPR[EPVS]-1659872295483
========
while(iterator.hasNext()){
previous=rowData.getValue();
fillBand=!sortRowKeys;
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872295485
GPR[SPVAP]-1659872295485
GPR[EPVAP]-1659872296211
GPR[EPVS]-1659872296211
========
while(iterator.hasNext()){
previous=rowData.getValue();
previous=rowData.getValue();
fillBand=!sortRowKeys;

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872296212
GPR[SPVAP]-1659872296212
GPR[EPVAP]-1659872296963
GPR[EPVS]-1659872296963
========
while(iterator.hasNext()){
fillBand=!sortRowKeys;
previous=rowData.getValue();
fillBand=!sortRowKeys;

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872296964
GPR[SPVAP]-1659872296964
GPR[EPVAP]-1659872297695
GPR[EPVS]-1659872297695
========
while(iterator.hasNext()){
previous=rowData.getValue();
fillBand=!sortRowKeys;
previous=rowData.getValue();
fillBand=!sortRowKeys;

DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872297696
GPR[SPVAP]-1659872297696
GPR[EPVAP]-1659872298431
GPR[EPVS]-1659872298431
========
while(iterator.hasNext()){
if(columnKey!=null){
if(rowData!=null){
v=rowData.doubleValue();
}
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872298440
GPR[SPVAP]-1659872298440
GPR[EPVAP]-1659872299172
GPR[EPVS]-1659872299172
========
Collections.sort(this.columnKeys);
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872299173
GPR[SPVAP]-1659872299173
GPR[EPVAP]-1659872300399
GPR[SPVATF]-1659872300399
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872301480
GPR[EPVS]-1659872301480
========
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.clearDomainMarkers(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872301481
GPR[SPVAP]-1659872301481
GPR[EPVAP]-1659872302175
GPR[EPVS]-1659872302175
========
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.clearRangeMarkers(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872302176
GPR[SPVAP]-1659872302176
GPR[EPVAP]-1659872302870
GPR[EPVS]-1659872302870
========
Collections.sort(columnKeys);
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872302872
GPR[SPVAP]-1659872302872
GPR[EPVAP]-1659872304142
GPR[SPVATF]-1659872304142
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872305271
GPR[EPVS]-1659872305271
========
while(iterator.hasNext()){
if(rowData!=null){
double rowData.doubleValue()=rowData.doubleValue();
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872305273
GPR[SPVAP]-1659872305273
GPR[EPVAP]-1659872305898
GPR[EPVS]-1659872305898
========
iterator=columnKeys.iterator();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872305899
GPR[SPVAP]-1659872305899
GPR[EPVAP]-1659872307147
GPR[SPVATF]-1659872307147
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872308234
GPR[EPVS]-1659872308234
========
while(iterator.hasNext()){
if(this.columnKeys.indexOf(rowData.getDescription())<0){
this.columnKeys.add(rowData.getDescription());
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872308235
GPR[SPVAP]-1659872308235
GPR[EPVAP]-1659872308934
GPR[EPVS]-1659872308934
========
while(iter.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872308936
GPR[SPVAP]-1659872308936
GPR[EPVAP]-1659872309635
GPR[EPVS]-1659872309635
========
while(iterator.hasNext()){
if(rowData.exists()){
rowData.delete();
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872309637
GPR[SPVAP]-1659872309637
GPR[EPVAP]-1659872310343
GPR[EPVS]-1659872310343
========
rowData.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872310344
GPR[SPVAP]-1659872310344
GPR[EPVAP]-1659872311046
GPR[EPVS]-1659872311046
========
while(iterator.hasNext()){
if((TimeSeries)iterator.next().getItemCount()>0){
RegularTimePeriod rowData=(TimeSeries)iterator.next().getTimePeriod(0);
RegularTimePeriod (TimeSeries)iterator.next().getTimePeriod((TimeSeries)iterator.next().getItemCount()-1)=(TimeSeries)iterator.next().getTimePeriod((TimeSeries)iterator.next().getItemCount()-1);
if(!sortRowKeys){
temp=new Range(getX(rowData),getX((TimeSeries)iterator.next().getTimePeriod((TimeSeries)iterator.next().getItemCount()-1)));
}
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872311048
GPR[SPVAP]-1659872311048
GPR[EPVAP]-1659872311647
GPR[EPVS]-1659872311647
========
while(iterator.hasNext()){
if((Axis)iterator.next()!=null){
cursor=rowData.getCursor();
}
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872311649
GPR[SPVAP]-1659872311649
GPR[EPVAP]-1659872312368
GPR[EPVS]-1659872312368
========
while(iterator.hasNext()){
y+=rowData.getHeight();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872312370
GPR[SPVAP]-1659872312370
GPR[EPVAP]-1659872313091
GPR[EPVS]-1659872313091
========
while(iterator.hasNext()){
height+=rowData.getHeight();
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872313093
GPR[SPVAP]-1659872313093
GPR[EPVAP]-1659872313840
GPR[EPVS]-1659872313840
========
removeValue(getIndex(columnKey));
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872313841
GPR[SPVAP]-1659872313841
GPR[EPVAP]-1659872314550
GPR[EPVS]-1659872314550
========
fireDatasetChanged();
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872314554
GPR[SPVAP]-1659872314554
GPR[EPVAP]-1659872315259
GPR[EPVS]-1659872315259
========
this.columnKey=columnKey;
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872315261
GPR[SPVAP]-1659872315261
GPR[EPVAP]-1659872315957
GPR[EPVS]-1659872315957
========
if(this.columnKeys.indexOf(columnKey)<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872315959
GPR[SPVAP]-1659872315959
GPR[EPVAP]-1659872317199
GPR[SPVATF]-1659872317199
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872319284
GPR[EPVS]-1659872319284
========
if(getColumnIndex(columnKey)<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
rowData.removeValue(columnKey);
}

========
MM Copying to MM
GPR[SPVS]-1659872319286
GPR[SPVAP]-1659872319286
GPR[EPVAP]-1659872320657
GPR[SPVATF]-1659872320657
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872321940
GPR[EPVS]-1659872321940
GPR[ESUN]-1659872321940
GPR[SSUN]-1659872321940
org.jfree.data.DefaultKeyedValues2D,457
GPR[ESUN]-1659872322544
GPR[SSUN]-1659872322544
org.jfree.data.DefaultKeyedValues2D,458
GPR[ESUN]-1659872322922
GPR[SSUN]-1659872322922
org.jfree.data.DefaultKeyedValues2D,459
Find no block!
GPR[SSUN]-1659872323334
org.jfree.data.DefaultKeyedValues2D,460
GPR[ESUN]-1659872323701
GPR[SSUN]-1659872323702
org.jfree.data.DefaultKeyedValues2D,461
Find no block!
GPR[SSUN]-1659872324003
org.jfree.data.category.DefaultCategoryDataset,350
========
fireDatasetChanged();
this.data.removeColumn(columnKey);
fireDatasetChanged();

========
MM Copying to MM
GPR[SPVS]-1659872325767
GPR[SPVAP]-1659872325767
GPR[EPVAP]-1659872330010
GPR[SPVATF]-1659872330010
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872331161
GPR[EPVS]-1659872331161
========
this.data.removeColumn(columnKey);
this.data.clear();
fireDatasetChanged();

========
MM Copying to MM
GPR[SPVS]-1659872331163
GPR[SPVAP]-1659872331163
GPR[EPVAP]-1659872332443
GPR[SPVATF]-1659872332443
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872333580
GPR[EPVS]-1659872333580
========
if(seriesKeys.length!=getSeriesCount()){
throw new IllegalArgumentException("The number of series keys does not match the data.");
}
this.data.removeColumn(columnKey);
fireDatasetChanged();

========
MM Copying to MM
GPR[SPVS]-1659872333582
GPR[SPVAP]-1659872333582
GPR[EPVAP]-1659872334280
GPR[EPVS]-1659872334280
GPR[ESUN]-1659872334282
GPR[SSUN]-1659872334282
org.jfree.data.category.DefaultCategoryDataset,351
GPR[ESUN]-1659872334666
GPR[SSUN]-1659872334666
org.jfree.data.category.DefaultCategoryDataset,352
Find no block!
GPR[SSUN]-1659872334989
org.jfree.data.DefaultKeyedValues,319
GPR[ESUN]-1659872335286
GPR[SSUN]-1659872335286
org.jfree.data.DefaultKeyedValues,299
========
this.values.clear();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872338655
GPR[SPVAP]-1659872338655
GPR[EPVAP]-1659872343034
GPR[SPVATF]-1659872343034
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872344127
GPR[EPVS]-1659872344127
========
this.indexMap.clear();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872344128
GPR[SPVAP]-1659872344128
GPR[EPVAP]-1659872345368
GPR[SPVATF]-1659872345368
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872346473
GPR[EPVS]-1659872346473
========
this.values.clear();
this.indexMap.clear();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872346474
GPR[SPVAP]-1659872346474
GPR[EPVAP]-1659872347693
GPR[SPVATF]-1659872347693
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872348797
GPR[EPVS]-1659872348797
========
fireDatasetChanged();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872348799
GPR[SPVAP]-1659872348799
GPR[EPVAP]-1659872349504
GPR[EPVS]-1659872349504
========
notifyListeners(new PlotChangeEvent(this));
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872349506
GPR[SPVAP]-1659872349506
GPR[EPVAP]-1659872350230
GPR[EPVS]-1659872350230
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
markers=new java.util.ArrayList();
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872350235
GPR[SPVAP]-1659872350235
GPR[EPVAP]-1659872350943
GPR[EPVS]-1659872350943
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
x[i]=cpi.x;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872350945
GPR[SPVAP]-1659872350945
GPR[EPVAP]-1659872351687
GPR[EPVS]-1659872351687
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
d[i]=cpi.y;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872351689
GPR[SPVAP]-1659872351689
GPR[EPVAP]-1659872352412
GPR[EPVS]-1659872352412
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
x[i]=cpi.x;
d[i]=cpi.y;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872352413
GPR[SPVAP]-1659872352413
GPR[EPVAP]-1659872353126
GPR[EPVS]-1659872353126
========
this.indexMap.clear();
clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872353127
GPR[SPVAP]-1659872353127
GPR[EPVAP]-1659872354397
GPR[SPVATF]-1659872354397
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872355473
GPR[EPVS]-1659872355473
========
this.indexMap.clear();
for(int i=0;i<getSubtitleCount();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872355475
GPR[SPVAP]-1659872355475
GPR[EPVAP]-1659872356178
GPR[EPVS]-1659872356178
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getLegendItem(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872356184
GPR[SPVAP]-1659872356184
GPR[EPVAP]-1659872356888
GPR[EPVS]-1659872356888
========
this.indexMap.clear();
for(int i=0;i<getDatasetCount();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872356891
GPR[SPVAP]-1659872356891
GPR[EPVAP]-1659872357625
GPR[EPVS]-1659872357625
========
datasetChanged(new DatasetChangeEvent(this,getDataset(i)));
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872357626
GPR[SPVAP]-1659872357626
GPR[EPVAP]-1659872358321
GPR[EPVS]-1659872358321
========
this.indexMap.clear();
this.values.remove(i);
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872358323
GPR[SPVAP]-1659872358323
GPR[EPVAP]-1659872359039
GPR[EPVS]-1659872359039
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getRowKey(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872359041
GPR[SPVAP]-1659872359041
GPR[EPVAP]-1659872359781
GPR[EPVS]-1659872359781
========
keys.add(removeStringDelimiters(key));
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872359783
GPR[SPVAP]-1659872359783
GPR[EPVAP]-1659872360494
GPR[EPVS]-1659872360494
========
this.indexMap.clear();
for(int i=0;i<=this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872360496
GPR[SPVAP]-1659872360496
GPR[EPVAP]-1659872361714
GPR[SPVATF]-1659872361714
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872362792
GPR[EPVS]-1659872362792
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
if(!Double.isNaN(key)){
result+=key;
}
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872362793
GPR[SPVAP]-1659872362793
GPR[EPVAP]-1659872363520
GPR[EPVS]-1659872363520
========
drState.lowerCoordinates.clear();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872363522
GPR[SPVAP]-1659872363522
GPR[EPVAP]-1659872364238
GPR[EPVS]-1659872364238
========
drState.upperCoordinates.clear();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872364239
GPR[SPVAP]-1659872364239
GPR[EPVAP]-1659872364951
GPR[EPVS]-1659872364951
========
clone.values=(ArrayList)this.values.clone();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872364953
GPR[SPVAP]-1659872364953
GPR[EPVAP]-1659872365665
GPR[EPVS]-1659872365665
========
clone.indexMap=(HashMap)this.indexMap.clone();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872365666
GPR[SPVAP]-1659872365666
GPR[EPVAP]-1659872366364
GPR[EPVS]-1659872366364
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getComponent(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872366366
GPR[SPVAP]-1659872366366
GPR[EPVAP]-1659872367094
GPR[EPVS]-1659872367094
========
this.indexMap.clear();
invalidateRangeInfo();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872367095
GPR[SPVAP]-1659872367095
GPR[EPVAP]-1659872367804
GPR[EPVS]-1659872367804
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
Class.forName("org.jfree.chart.encoders.SunPNGEncoderAdapter");
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872367810
GPR[SPVAP]-1659872367810
GPR[EPVAP]-1659872368520
GPR[EPVS]-1659872368520
========
this.indexMap.clear();
i=i-2;
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872368523
GPR[SPVAP]-1659872368523
GPR[EPVAP]-1659872369244
GPR[EPVS]-1659872369244
========
notifyListeners(new RendererChangeEvent(this));
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872369247
GPR[SPVAP]-1659872369247
GPR[EPVAP]-1659872369941
GPR[EPVS]-1659872369941
========
removeValue(i);
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872369943
GPR[SPVAP]-1659872369943
GPR[EPVAP]-1659872370665
GPR[EPVS]-1659872370665
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.log(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872370666
GPR[SPVAP]-1659872370666
GPR[EPVAP]-1659872371375
GPR[EPVS]-1659872371376
========
key=0.0;
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872371377
GPR[SPVAP]-1659872371377
GPR[EPVAP]-1659872372080
GPR[EPVS]-1659872372080
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getValue(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872372081
GPR[SPVAP]-1659872372081
GPR[EPVAP]-1659872372797
GPR[EPVS]-1659872372797
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
fireSeriesChanged();
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872372800
GPR[SPVAP]-1659872372800
GPR[EPVAP]-1659872373499
GPR[EPVS]-1659872373499
========
(i>=0)?this.indexMap.clear():null;
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872373501
GPR[SPVAP]-1659872373501
GPR[EPVAP]-1659872374095
GPR[EPVS]-1659872374096
========
datasetChanged(key);
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872374097
GPR[SPVAP]-1659872374097
GPR[EPVAP]-1659872374793
GPR[EPVS]-1659872374793
========
default :

this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872374795
GPR[SPVAP]-1659872374795
GPR[EPVAP]-1659872375380
GPR[EPVS]-1659872375380
========
if(key!=null){
removeLayer(existing);
}
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872375382
GPR[SPVAP]-1659872375382
GPR[EPVAP]-1659872376079
GPR[EPVS]-1659872376079
========
fireChartChanged();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872376081
GPR[SPVAP]-1659872376081
GPR[EPVAP]-1659872376776
GPR[EPVS]-1659872376776
========
notifyListeners(new MarkerChangeEvent(this));
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872376778
GPR[SPVAP]-1659872376778
GPR[EPVAP]-1659872377493
GPR[EPVS]-1659872377493
========
notifyListeners(new AxisChangeEvent(this));
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872377495
GPR[SPVAP]-1659872377495
GPR[EPVAP]-1659872378192
GPR[EPVS]-1659872378192
========
this.notifyListeners(new ChartChangeEvent(this));
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872378193
GPR[SPVAP]-1659872378193
GPR[EPVAP]-1659872378907
GPR[EPVS]-1659872378907
========
new StringBuffer("CategoryLabelEntity: ").append(this.key);
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872378909
GPR[SPVAP]-1659872378909
GPR[EPVAP]-1659872379629
GPR[EPVS]-1659872379629
========
new StringBuffer("CategoryLabelEntity: ").append(", tooltip="+getToolTipText());
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872379630
GPR[SPVAP]-1659872379630
GPR[EPVAP]-1659872380363
GPR[EPVS]-1659872380363
========
new StringBuffer("CategoryLabelEntity: ").append(", url="+getURLText());
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872380364
GPR[SPVAP]-1659872380364
GPR[EPVAP]-1659872381087
GPR[EPVS]-1659872381087
========
fireSeriesChanged();
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872381089
GPR[SPVAP]-1659872381089
GPR[EPVAP]-1659872381803
GPR[EPVS]-1659872381803
========
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872381807
GPR[SPVAP]-1659872381807
GPR[EPVAP]-1659872382508
GPR[EPVS]-1659872382508
========
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872382509
GPR[SPVAP]-1659872382509
GPR[EPVAP]-1659872383231
GPR[EPVS]-1659872383231
========
clone.rows=new java.util.ArrayList(this.rows.size());
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872383232
GPR[SPVAP]-1659872383232
GPR[EPVAP]-1659872383956
GPR[EPVS]-1659872383956
========
case Types.DECIMAL :

this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872383959
GPR[SPVAP]-1659872383959
GPR[EPVAP]-1659872384560
GPR[EPVS]-1659872384560
========
case Types.DATE :

this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872384561
GPR[SPVAP]-1659872384561
GPR[EPVAP]-1659872385147
GPR[EPVS]-1659872385147
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872385150
GPR[SPVAP]-1659872385150
GPR[EPVAP]-1659872385867
GPR[EPVS]-1659872385867
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[0]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872385868
GPR[SPVAP]-1659872385868
GPR[EPVAP]-1659872386574
GPR[EPVS]-1659872386574
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
h[0]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872386575
GPR[SPVAP]-1659872386575
GPR[EPVAP]-1659872387291
GPR[EPVS]-1659872387291
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872387292
GPR[SPVAP]-1659872387292
GPR[EPVAP]-1659872388006
GPR[EPVS]-1659872388006
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[2]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872388007
GPR[SPVAP]-1659872388007
GPR[EPVAP]-1659872388746
GPR[EPVS]-1659872388746
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
h[2]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872388748
GPR[SPVAP]-1659872388748
GPR[EPVAP]-1659872389452
GPR[EPVS]-1659872389452
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872389453
GPR[SPVAP]-1659872389453
GPR[EPVAP]-1659872390159
GPR[EPVS]-1659872390159
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[3]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872390160
GPR[SPVAP]-1659872390160
GPR[EPVAP]-1659872390858
GPR[EPVS]-1659872390858
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
h[3]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872390859
GPR[SPVAP]-1659872390859
GPR[EPVAP]-1659872391556
GPR[EPVS]-1659872391556
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872391557
GPR[SPVAP]-1659872391557
GPR[EPVAP]-1659872392255
GPR[EPVS]-1659872392255
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[4]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872392257
GPR[SPVAP]-1659872392257
GPR[EPVAP]-1659872392958
GPR[EPVS]-1659872392958
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
h[4]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872392959
GPR[SPVAP]-1659872392959
GPR[EPVAP]-1659872393697
GPR[EPVS]-1659872393697
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872393698
GPR[SPVAP]-1659872393698
GPR[EPVAP]-1659872394392
GPR[EPVS]-1659872394392
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[1]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872394393
GPR[SPVAP]-1659872394393
GPR[EPVAP]-1659872395096
GPR[EPVS]-1659872395096
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
h[1]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872395097
GPR[SPVAP]-1659872395097
GPR[EPVAP]-1659872395811
GPR[EPVS]-1659872395811
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
h[0]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872395813
GPR[SPVAP]-1659872395813
GPR[EPVAP]-1659872396515
GPR[EPVS]-1659872396515
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
w[0]=size.width;
h[0]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872396517
GPR[SPVAP]-1659872396517
GPR[EPVAP]-1659872397212
GPR[EPVS]-1659872397212
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[0]=size.height;
w[0]=size.width;
h[0]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872397213
GPR[SPVAP]-1659872397213
GPR[EPVAP]-1659872397963
GPR[EPVS]-1659872397963
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
h[0]=size.height;
w[0]=size.width;
h[0]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872397964
GPR[SPVAP]-1659872397964
GPR[EPVAP]-1659872398686
GPR[EPVS]-1659872398686
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
h[1]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872399415
GPR[SPVAP]-1659872399415
GPR[EPVAP]-1659872400166
GPR[EPVS]-1659872400166
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
w[1]=size.width;
h[1]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872400167
GPR[SPVAP]-1659872400167
GPR[EPVAP]-1659872400871
GPR[EPVS]-1659872400871
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[1]=size.height;
w[1]=size.width;
h[1]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872400872
GPR[SPVAP]-1659872400872
GPR[EPVAP]-1659872401587
GPR[EPVS]-1659872401587
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
h[1]=size.height;
w[1]=size.width;
h[1]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872401589
GPR[SPVAP]-1659872401589
GPR[EPVAP]-1659872402282
GPR[EPVS]-1659872402282
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
h[2]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872402283
GPR[SPVAP]-1659872402283
GPR[EPVAP]-1659872402990
GPR[EPVS]-1659872402990
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
w[2]=size.width;
h[2]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872402991
GPR[SPVAP]-1659872402991
GPR[EPVAP]-1659872403707
GPR[EPVS]-1659872403707
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[2]=size.height;
w[2]=size.width;
h[2]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872403708
GPR[SPVAP]-1659872403708
GPR[EPVAP]-1659872404411
GPR[EPVS]-1659872404411
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
h[2]=size.height;
w[2]=size.width;
h[2]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872404413
GPR[SPVAP]-1659872404413
GPR[EPVAP]-1659872405124
GPR[EPVS]-1659872405124
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
h[3]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872405126
GPR[SPVAP]-1659872405126
GPR[EPVAP]-1659872405828
GPR[EPVS]-1659872405828
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
w[3]=size.width;
h[3]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872405829
GPR[SPVAP]-1659872405829
GPR[EPVAP]-1659872406549
GPR[EPVS]-1659872406549
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[3]=size.height;
w[3]=size.width;
h[3]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872406550
GPR[SPVAP]-1659872406550
GPR[EPVAP]-1659872407268
GPR[EPVS]-1659872407268
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
h[3]=size.height;
w[3]=size.width;
h[3]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872407269
GPR[SPVAP]-1659872407269
GPR[EPVAP]-1659872407973
GPR[EPVS]-1659872407973
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
h[4]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872407974
GPR[SPVAP]-1659872407974
GPR[EPVAP]-1659872408688
GPR[EPVS]-1659872408688
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
w[4]=size.width;
h[4]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872408689
GPR[SPVAP]-1659872408689
GPR[EPVAP]-1659872409422
GPR[EPVS]-1659872409422
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
h[4]=size.height;
w[4]=size.width;
h[4]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872409423
GPR[SPVAP]-1659872409423
GPR[EPVAP]-1659872410123
GPR[EPVS]-1659872410123
========
this.indexMap.clear();
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
h[4]=size.height;
w[4]=size.width;
h[4]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872410124
GPR[SPVAP]-1659872410124
GPR[EPVAP]-1659872410832
GPR[EPVS]-1659872410832
GPR[ESUN]-1659872410833
GPR[SSUN]-1659872410833
org.jfree.data.DefaultKeyedValues,300
========
for(int i=0;i<this.keys.size();i++){
count+=1;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872414285
GPR[SPVAP]-1659872414285
GPR[EPVAP]-1659872416476
GPR[EPVS]-1659872416476
========
for(int i=0;i<this.keys.size();i++){
if(!Arrays.equals(key,(double[][])that.seriesList.get(i)[0])){
return false;
}
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872416479
GPR[SPVAP]-1659872416479
GPR[EPVAP]-1659872417544
GPR[EPVS]-1659872417544
========
for(int i=0;i<=this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872417546
GPR[SPVAP]-1659872417546
GPR[EPVAP]-1659872420830
GPR[SPVATF]-1659872420830
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872421990
GPR[EPVS]-1659872421990
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
markers=new java.util.ArrayList();
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872421991
GPR[SPVAP]-1659872421991
GPR[EPVAP]-1659872422701
GPR[EPVS]-1659872422701
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
labelList=new java.util.ArrayList();
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872422703
GPR[SPVAP]-1659872422703
GPR[EPVAP]-1659872423426
GPR[EPVS]-1659872423426
========
for(int i=0;i<this.keys.size();i++){
x[i]=cpi.x;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872423428
GPR[SPVAP]-1659872423428
GPR[EPVAP]-1659872424141
GPR[EPVS]-1659872424141
========
for(int i=0;i<this.keys.size();i++){
d[i]=cpi.y;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872424142
GPR[SPVAP]-1659872424142
GPR[EPVAP]-1659872424864
GPR[EPVS]-1659872424864
========
for(int i=0;i<this.keys.size();i++){
x[i]=cpi.x;
d[i]=cpi.y;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872424865
GPR[SPVAP]-1659872424865
GPR[EPVAP]-1659872425591
GPR[EPVS]-1659872425591
========
for(int i=0;rowNum<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872425594
GPR[SPVAP]-1659872425594
GPR[EPVAP]-1659872426306
GPR[EPVS]-1659872426306
========
for(int i=0;i<this.keys.size();i++){
clone.seriesList.add(i,new double[][]{new double[x.length],new double[y.length]});
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872426308
GPR[SPVAP]-1659872426308
GPR[EPVAP]-1659872427012
GPR[EPVS]-1659872427012
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getKey(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872427014
GPR[SPVAP]-1659872427014
GPR[EPVAP]-1659872427732
GPR[EPVS]-1659872427732
========
for(int i=0;i<getSubtitleCount();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872427734
GPR[SPVAP]-1659872427734
GPR[EPVAP]-1659872428447
GPR[EPVS]-1659872428447
========
for(int i=0;i<getItemCount();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872428448
GPR[SPVAP]-1659872428448
GPR[EPVAP]-1659872429716
GPR[SPVATF]-1659872429716
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872430828
GPR[EPVS]-1659872430828
========
for(int i=0;i<getSeriesCount();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872430830
GPR[SPVAP]-1659872430830
GPR[EPVAP]-1659872431523
GPR[EPVS]-1659872431523
========
for(int i=0;i<this.keys.size();i++){
clone.seriesList.add(i,new double[][]{new double[x.length],new double[y.length],new double[z.length]});
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872431525
GPR[SPVAP]-1659872431525
GPR[EPVAP]-1659872432364
GPR[EPVS]-1659872432364
========
for(int i=0;column<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872432366
GPR[SPVAP]-1659872432366
GPR[EPVAP]-1659872433217
GPR[EPVS]-1659872433217
========
for(int i=0;s<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872433218
GPR[SPVAP]-1659872433218
GPR[EPVAP]-1659872433938
GPR[EPVS]-1659872433938
========
for(int i=0;datasetIndex<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872433939
GPR[SPVAP]-1659872433939
GPR[EPVAP]-1659872434641
GPR[EPVS]-1659872434641
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.addValue(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872434644
GPR[SPVAP]-1659872434644
GPR[EPVAP]-1659872435357
GPR[EPVS]-1659872435357
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getLegendItem(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872435358
GPR[SPVAP]-1659872435358
GPR[EPVAP]-1659872436073
GPR[EPVS]-1659872436073
========
for(int i=0;i<this.keys.size();i++){
i++;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872436075
GPR[SPVAP]-1659872436075
GPR[EPVAP]-1659872437314
GPR[SPVATF]-1659872437314
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872438437
GPR[EPVS]-1659872438437
========
for(int i=0;j<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872438439
GPR[SPVAP]-1659872438439
GPR[EPVAP]-1659872439134
GPR[EPVS]-1659872439134
========
for(int i=0;index<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872439135
GPR[SPVAP]-1659872439135
GPR[EPVAP]-1659872439837
GPR[EPVS]-1659872439837
========
for(int i=0;item<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872439839
GPR[SPVAP]-1659872439839
GPR[EPVAP]-1659872440551
GPR[EPVS]-1659872440551
========
for(int i=0;i<getDatasetCount();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872440553
GPR[SPVAP]-1659872440553
GPR[EPVAP]-1659872441262
GPR[EPVS]-1659872441262
========
invalidateRangeInfo();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872441264
GPR[SPVAP]-1659872441264
GPR[EPVAP]-1659872441993
GPR[EPVS]-1659872441993
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getColumnKey(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872441994
GPR[SPVAP]-1659872441994
GPR[EPVAP]-1659872442716
GPR[EPVS]-1659872442716
========
for(int i=0;i<this.keys.size();i++){
if(key>=0){
allNull=false;
break;
}
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872442717
GPR[SPVAP]-1659872442717
GPR[EPVAP]-1659872443428
GPR[EPVS]-1659872443428
========
for(int i=0;item<this.keys.size();i++){
if(key>=0){
allNull=false;
break;
}
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872443429
GPR[SPVAP]-1659872443429
GPR[EPVAP]-1659872444149
GPR[EPVS]-1659872444149
========
if(i==null){
return -1;
}
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872444150
GPR[SPVAP]-1659872444150
GPR[EPVAP]-1659872444858
GPR[EPVS]-1659872444858
========
this.keys.remove(i);
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872444859
GPR[SPVAP]-1659872444859
GPR[EPVAP]-1659872445570
GPR[EPVS]-1659872445570
========
this.values.remove(i);
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872445571
GPR[SPVAP]-1659872445571
GPR[EPVAP]-1659872446301
GPR[EPVS]-1659872446301
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getValue(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872446302
GPR[SPVAP]-1659872446302
GPR[EPVAP]-1659872447022
GPR[EPVS]-1659872447023
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getRowKey(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872447024
GPR[SPVAP]-1659872447024
GPR[EPVAP]-1659872447737
GPR[EPVS]-1659872447737
========
for(int i=0;i<this.keys.size();i++){
if(!Double.isNaN(key)){
result+=key;
}
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872447739
GPR[SPVAP]-1659872447739
GPR[EPVAP]-1659872448474
GPR[EPVS]-1659872448474
========
keys.add(removeStringDelimiters(key));
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872448477
GPR[SPVAP]-1659872448477
GPR[EPVAP]-1659872449177
GPR[EPVS]-1659872449177
========
for(int i=0;seriesNo<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872449179
GPR[SPVAP]-1659872449180
GPR[EPVAP]-1659872449887
GPR[EPVS]-1659872449887
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getComponent(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872449889
GPR[SPVAP]-1659872449889
GPR[EPVAP]-1659872450650
GPR[EPVS]-1659872450650
========
for(int i=0;i<this.keys.size();i++){
this.values.remove(i);
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872450656
GPR[SPVAP]-1659872450656
GPR[EPVAP]-1659872451932
GPR[SPVATF]-1659872451932
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872453052
GPR[EPVS]-1659872453052
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(RenderingHints.KEY_ANTIALIASING,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872453053
GPR[SPVAP]-1659872453053
GPR[EPVAP]-1659872453748
GPR[EPVS]-1659872453748
========
for(int i=0;i<this.keys.size();i++){
result[i]=new float[child.length];
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872453750
GPR[SPVAP]-1659872453750
GPR[EPVAP]-1659872454492
GPR[EPVS]-1659872454492
========
for(int i=0;i<this.keys.size();i++){
result[i]=new Number[child.length];
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872454493
GPR[SPVAP]-1659872454493
GPR[EPVAP]-1659872455186
GPR[EPVS]-1659872455186
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getEntity(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872455188
GPR[SPVAP]-1659872455188
GPR[EPVAP]-1659872455924
GPR[EPVS]-1659872455924
========
for(int i=0;i<this.keys.size();i++){
Class.forName("org.jfree.chart.encoders.SunPNGEncoderAdapter");
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872455927
GPR[SPVAP]-1659872455927
GPR[EPVAP]-1659872456643
GPR[EPVS]-1659872456643
========
for(int i=0;i<this.keys.size();i++){
if(getY(i)!=null){
result[1][i]=getY(i).doubleValue();
}else {
result[1][i]=Double.NaN;
}
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872456644
GPR[SPVAP]-1659872456644
GPR[EPVAP]-1659872457347
GPR[EPVS]-1659872457347
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.addPoint(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872457348
GPR[SPVAP]-1659872457348
GPR[EPVAP]-1659872458079
GPR[EPVS]-1659872458079
========
notifyListeners(new PlotChangeEvent(this));
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872458081
GPR[SPVAP]-1659872458081
GPR[EPVAP]-1659872458774
GPR[EPVS]-1659872458774
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.getPaint(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872458777
GPR[SPVAP]-1659872458777
GPR[EPVAP]-1659872459505
GPR[EPVS]-1659872459505
========
for(int i=0;axisIndex<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872459508
GPR[SPVAP]-1659872459508
GPR[EPVAP]-1659872460248
GPR[EPVS]-1659872460248
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
cursor=key.getCursor();
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872460250
GPR[SPVAP]-1659872460250
GPR[EPVAP]-1659872460944
GPR[EPVS]-1659872460944
========
for(int i=0;i<this.keys.size();i++){
dataRemoved=true;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872460947
GPR[SPVAP]-1659872460947
GPR[EPVAP]-1659872461644
GPR[EPVS]-1659872461644
========
for(int i=0;section<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872461646
GPR[SPVAP]-1659872461646
GPR[EPVAP]-1659872462368
GPR[EPVS]-1659872462368
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.log(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872462369
GPR[SPVAP]-1659872462369
GPR[EPVAP]-1659872463116
GPR[EPVS]-1659872463116
========
removeValue(i);
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872463117
GPR[SPVAP]-1659872463117
GPR[EPVAP]-1659872463827
GPR[EPVS]-1659872463827
========
for(int i=0;i<this.keys.size();i++){
row=new KeyedObjects();
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872463828
GPR[SPVAP]-1659872463828
GPR[EPVAP]-1659872464536
GPR[EPVS]-1659872464536
========
for(int i=0;i<this.keys.size();i++){
fireSeriesChanged();
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872464538
GPR[SPVAP]-1659872464538
GPR[EPVAP]-1659872465239
GPR[EPVS]-1659872465239
========
if(key!=null){
removeLayer(existing);
}
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872465241
GPR[SPVAP]-1659872465241
GPR[EPVAP]-1659872465954
GPR[EPVS]-1659872465954
========
fireDatasetChanged();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872465957
GPR[SPVAP]-1659872465957
GPR[EPVAP]-1659872466661
GPR[EPVS]-1659872466661
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872466663
GPR[SPVAP]-1659872466663
GPR[EPVAP]-1659872467402
GPR[EPVS]-1659872467402
========
for(int i=0;i<this.keys.size();i++){
this.internalMarkerWhenTicksOverlap=true;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872467403
GPR[SPVAP]-1659872467403
GPR[EPVAP]-1659872468131
GPR[EPVS]-1659872468131
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872468132
GPR[SPVAP]-1659872468132
GPR[EPVAP]-1659872468854
GPR[EPVS]-1659872468854
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872468855
GPR[SPVAP]-1659872468855
GPR[EPVAP]-1659872469565
GPR[EPVS]-1659872469565
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872469566
GPR[SPVAP]-1659872469566
GPR[EPVAP]-1659872470269
GPR[EPVS]-1659872470269
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872470270
GPR[SPVAP]-1659872470270
GPR[EPVAP]-1659872470991
GPR[EPVS]-1659872470991
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872470992
GPR[SPVAP]-1659872470992
GPR[EPVAP]-1659872471694
GPR[EPVS]-1659872471694
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.TOP_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872471695
GPR[SPVAP]-1659872471695
GPR[EPVAP]-1659872472399
GPR[EPVS]-1659872472399
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.TOP_LEFT;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872472400
GPR[SPVAP]-1659872472400
GPR[EPVAP]-1659872473107
GPR[EPVS]-1659872473107
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.TOP_LEFT;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872473108
GPR[SPVAP]-1659872473108
GPR[EPVAP]-1659872473816
GPR[EPVS]-1659872473816
========
for(int i=0;i<this.keys.size();i++){
this.internalMarkerWhenTicksOverlap=true;
 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872473818
GPR[SPVAP]-1659872473818
GPR[EPVAP]-1659872474954
GPR[EPVS]-1659872474954
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872474960
GPR[SPVAP]-1659872474960
GPR[EPVAP]-1659872475710
GPR[EPVS]-1659872475710
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872475711
GPR[SPVAP]-1659872475711
GPR[EPVAP]-1659872476472
GPR[EPVS]-1659872476472
========
for(int i=0;i<this.keys.size();i++){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872476473
GPR[SPVAP]-1659872476473
GPR[EPVAP]-1659872477240
GPR[EPVS]-1659872477240
========
for(int i=0;i<this.keys.size();i++){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872477241
GPR[SPVAP]-1659872477241
GPR[EPVAP]-1659872478000
GPR[EPVS]-1659872478000
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872478001
GPR[SPVAP]-1659872478001
GPR[EPVAP]-1659872478749
GPR[EPVS]-1659872478749
========
for(int i=0;i<this.keys.size();i++){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872478750
GPR[SPVAP]-1659872478750
GPR[EPVAP]-1659872479448
GPR[EPVS]-1659872479448
========
for(int i=0;i<this.keys.size();i++){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872479450
GPR[SPVAP]-1659872479450
GPR[EPVAP]-1659872480155
GPR[EPVS]-1659872480155
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872480156
GPR[SPVAP]-1659872480156
GPR[EPVAP]-1659872480879
GPR[EPVS]-1659872480880
========
for(int i=0;i<this.keys.size();i++){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872480880
GPR[SPVAP]-1659872480880
GPR[EPVAP]-1659872481587
GPR[EPVS]-1659872481587
========
for(int i=0;i<this.keys.size();i++){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872481588
GPR[SPVAP]-1659872481588
GPR[EPVAP]-1659872482315
GPR[EPVS]-1659872482315
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872482316
GPR[SPVAP]-1659872482316
GPR[EPVAP]-1659872483015
GPR[EPVS]-1659872483016
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872483017
GPR[SPVAP]-1659872483017
GPR[EPVAP]-1659872483713
GPR[EPVS]-1659872483713
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872483714
GPR[SPVAP]-1659872483714
GPR[EPVAP]-1659872484434
GPR[EPVS]-1659872484434
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872484435
GPR[SPVAP]-1659872484435
GPR[EPVAP]-1659872485139
GPR[EPVS]-1659872485139
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872485141
GPR[SPVAP]-1659872485141
GPR[EPVAP]-1659872485837
GPR[EPVS]-1659872485837
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872485838
GPR[SPVAP]-1659872485838
GPR[EPVAP]-1659872486537
GPR[EPVS]-1659872486537
========
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.TOP_LEFT;
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872486538
GPR[SPVAP]-1659872486538
GPR[EPVAP]-1659872487265
GPR[EPVS]-1659872487265
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.BOTTOM_LEFT;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872487266
GPR[SPVAP]-1659872487266
GPR[EPVAP]-1659872487999
GPR[EPVS]-1659872487999
========
for(int i=0;i<this.keys.size();i++){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.TOP_LEFT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.BOTTOM_LEFT;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872488000
GPR[SPVAP]-1659872488000
GPR[EPVAP]-1659872488701
GPR[EPVS]-1659872488701
========
notifyListeners(new MarkerChangeEvent(this));
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872488702
GPR[SPVAP]-1659872488702
GPR[EPVAP]-1659872489400
GPR[EPVS]-1659872489400
========
notifyListeners(new AxisChangeEvent(this));
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872489401
GPR[SPVAP]-1659872489401
GPR[EPVAP]-1659872490103
GPR[EPVS]-1659872490103
========
fireSeriesChanged();
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872490105
GPR[SPVAP]-1659872490105
GPR[EPVAP]-1659872490827
GPR[EPVS]-1659872490827
========
for(int i=0;i<this.keys.size();i++){
this.notifyListeners(new PlotChangeEvent(this));
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872490830
GPR[SPVAP]-1659872490830
GPR[EPVAP]-1659872491524
GPR[EPVS]-1659872491524
========
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872491526
GPR[SPVAP]-1659872491526
GPR[EPVAP]-1659872492228
GPR[EPVS]-1659872492228
========
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872492229
GPR[SPVAP]-1659872492229
GPR[EPVAP]-1659872492938
GPR[EPVS]-1659872492938
========
clone.rows=new java.util.ArrayList(this.rows.size());
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872492939
GPR[SPVAP]-1659872492939
GPR[EPVAP]-1659872493646
GPR[EPVS]-1659872493646
========
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872493649
GPR[SPVAP]-1659872493649
GPR[EPVAP]-1659872494347
GPR[EPVS]-1659872494347
========
for(int i=0;i<this.keys.size();i++){
h[0]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872494348
GPR[SPVAP]-1659872494348
GPR[EPVAP]-1659872495041
GPR[EPVS]-1659872495041
========
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
h[0]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872495042
GPR[SPVAP]-1659872495042
GPR[EPVAP]-1659872495750
GPR[EPVS]-1659872495750
========
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872495751
GPR[SPVAP]-1659872495751
GPR[EPVAP]-1659872496452
GPR[EPVS]-1659872496452
========
for(int i=0;i<this.keys.size();i++){
h[2]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872496453
GPR[SPVAP]-1659872496453
GPR[EPVAP]-1659872497167
GPR[EPVS]-1659872497167
========
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
h[2]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872497168
GPR[SPVAP]-1659872497168
GPR[EPVAP]-1659872497863
GPR[EPVS]-1659872497863
========
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872497864
GPR[SPVAP]-1659872497864
GPR[EPVAP]-1659872498563
GPR[EPVS]-1659872498563
========
for(int i=0;i<this.keys.size();i++){
h[3]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872498571
GPR[SPVAP]-1659872498571
GPR[EPVAP]-1659872499275
GPR[EPVS]-1659872499275
========
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
h[3]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872499276
GPR[SPVAP]-1659872499276
GPR[EPVAP]-1659872500025
GPR[EPVS]-1659872500025
========
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872500026
GPR[SPVAP]-1659872500026
GPR[EPVAP]-1659872500722
GPR[EPVS]-1659872500722
========
for(int i=0;i<this.keys.size();i++){
h[4]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872500724
GPR[SPVAP]-1659872500724
GPR[EPVAP]-1659872501428
GPR[EPVS]-1659872501428
========
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
h[4]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872501429
GPR[SPVAP]-1659872501429
GPR[EPVAP]-1659872502127
GPR[EPVS]-1659872502127
========
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872502128
GPR[SPVAP]-1659872502128
GPR[EPVAP]-1659872502849
GPR[EPVS]-1659872502849
========
for(int i=0;i<this.keys.size();i++){
h[1]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872502850
GPR[SPVAP]-1659872502850
GPR[EPVAP]-1659872503571
GPR[EPVS]-1659872503571
========
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
h[1]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872503572
GPR[SPVAP]-1659872503572
GPR[EPVAP]-1659872504295
GPR[EPVS]-1659872504295
========
for(int i=0;i<this.keys.size();i++){
this.objects=new Object[i+this.i];
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872504296
GPR[SPVAP]-1659872504296
GPR[EPVAP]-1659872505003
GPR[EPVS]-1659872505003
========
this.key=Math.max(this.size,i+1);
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872505005
GPR[SPVAP]-1659872505005
GPR[EPVAP]-1659872505754
GPR[EPVS]-1659872505754
========
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
h[0]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872505756
GPR[SPVAP]-1659872505756
GPR[EPVAP]-1659872506456
GPR[EPVS]-1659872506456
========
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
w[0]=size.width;
h[0]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872506457
GPR[SPVAP]-1659872506457
GPR[EPVAP]-1659872507201
GPR[EPVS]-1659872507201
========
for(int i=0;i<this.keys.size();i++){
h[0]=size.height;
w[0]=size.width;
h[0]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872507202
GPR[SPVAP]-1659872507202
GPR[EPVAP]-1659872507921
GPR[EPVS]-1659872507921
========
for(int i=0;i<this.keys.size();i++){
w[0]=size.width;
h[0]=size.height;
w[0]=size.width;
h[0]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872507922
GPR[SPVAP]-1659872507922
GPR[EPVAP]-1659872508640
GPR[EPVS]-1659872508640
========
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
h[1]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872508641
GPR[SPVAP]-1659872508641
GPR[EPVAP]-1659872509339
GPR[EPVS]-1659872509339
========
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
w[1]=size.width;
h[1]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872509340
GPR[SPVAP]-1659872509340
GPR[EPVAP]-1659872510040
GPR[EPVS]-1659872510040
========
for(int i=0;i<this.keys.size();i++){
h[1]=size.height;
w[1]=size.width;
h[1]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872510041
GPR[SPVAP]-1659872510041
GPR[EPVAP]-1659872510766
GPR[EPVS]-1659872510766
========
for(int i=0;i<this.keys.size();i++){
w[1]=size.width;
h[1]=size.height;
w[1]=size.width;
h[1]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872510767
GPR[SPVAP]-1659872510767
GPR[EPVAP]-1659872511491
GPR[EPVS]-1659872511491
========
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
h[2]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872511493
GPR[SPVAP]-1659872511493
GPR[EPVAP]-1659872512211
GPR[EPVS]-1659872512211
========
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
w[2]=size.width;
h[2]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872512212
GPR[SPVAP]-1659872512212
GPR[EPVAP]-1659872512911
GPR[EPVS]-1659872512911
========
for(int i=0;i<this.keys.size();i++){
h[2]=size.height;
w[2]=size.width;
h[2]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872512912
GPR[SPVAP]-1659872512912
GPR[EPVAP]-1659872513620
GPR[EPVS]-1659872513620
========
for(int i=0;i<this.keys.size();i++){
w[2]=size.width;
h[2]=size.height;
w[2]=size.width;
h[2]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872513621
GPR[SPVAP]-1659872513621
GPR[EPVAP]-1659872514332
GPR[EPVS]-1659872514332
========
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
h[3]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872514334
GPR[SPVAP]-1659872514334
GPR[EPVAP]-1659872515062
GPR[EPVS]-1659872515062
========
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
w[3]=size.width;
h[3]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872515063
GPR[SPVAP]-1659872515063
GPR[EPVAP]-1659872515780
GPR[EPVS]-1659872515780
========
for(int i=0;i<this.keys.size();i++){
h[3]=size.height;
w[3]=size.width;
h[3]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872515781
GPR[SPVAP]-1659872515781
GPR[EPVAP]-1659872516500
GPR[EPVS]-1659872516500
========
for(int i=0;i<this.keys.size();i++){
w[3]=size.width;
h[3]=size.height;
w[3]=size.width;
h[3]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872516501
GPR[SPVAP]-1659872516501
GPR[EPVAP]-1659872517204
GPR[EPVS]-1659872517204
========
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
h[4]=size.height;
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872517205
GPR[SPVAP]-1659872517205
GPR[EPVAP]-1659872517903
GPR[EPVS]-1659872517903
========
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
w[4]=size.width;
h[4]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872517905
GPR[SPVAP]-1659872517905
GPR[EPVAP]-1659872518641
GPR[EPVS]-1659872518641
========
for(int i=0;i<this.keys.size();i++){
h[4]=size.height;
w[4]=size.width;
h[4]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872518642
GPR[SPVAP]-1659872518642
GPR[EPVAP]-1659872519356
GPR[EPVS]-1659872519356
========
for(int i=0;i<this.keys.size();i++){
w[4]=size.width;
h[4]=size.height;
w[4]=size.width;
h[4]=size.height;

 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

========
MM Copying to MM
GPR[SPVS]-1659872519357
GPR[SPVAP]-1659872519357
GPR[EPVAP]-1659872520061
GPR[EPVS]-1659872520061
GPR[ESUN]-1659872520062
GPR[SSUN]-1659872520062
org.jfree.data.DefaultKeyedValues,301
GPR[ESUN]-1659872520523
GPR[SSUN]-1659872520523
org.jfree.data.DefaultKeyedValues,302
GPR[ESUN]-1659872520838
GPR[SSUN]-1659872520838
org.jfree.data.DefaultKeyedValues,304
Find no block!
GPR[SSUN]-1659872521142
org.jfree.data.DefaultKeyedValues,234
========
if(pos>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872524409
GPR[SPVAP]-1659872524409
GPR[EPVAP]-1659872526687
GPR[EPVS]-1659872526687
========
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
rebuildIndex();
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872526688
GPR[SPVAP]-1659872526688
GPR[EPVAP]-1659872529903
GPR[SPVATF]-1659872529903
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872530994
GPR[EPVS]-1659872530994
========
if(rowIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872530995
GPR[SPVAP]-1659872530995
GPR[EPVAP]-1659872531701
GPR[EPVS]-1659872531701
========
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
row=new DefaultKeyedValues();
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872531702
GPR[SPVAP]-1659872531702
GPR[EPVAP]-1659872532437
GPR[EPVS]-1659872532437
========
if(seriesIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872532438
GPR[SPVAP]-1659872532438
GPR[EPVAP]-1659872533159
GPR[EPVS]-1659872533159
========
if(position>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872533161
GPR[SPVAP]-1659872533161
GPR[EPVAP]-1659872533858
GPR[EPVS]-1659872533858
========
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(new KeyedObject(key,value));
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872533859
GPR[SPVAP]-1659872533859
GPR[EPVAP]-1659872535111
GPR[SPVATF]-1659872535111
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872536189
GPR[EPVS]-1659872536189
========
if(index>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872536190
GPR[SPVAP]-1659872536190
GPR[EPVAP]-1659872536887
GPR[EPVS]-1659872536887
========
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
row=new KeyedObjects();
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872536889
GPR[SPVAP]-1659872536889
GPR[EPVAP]-1659872537627
GPR[EPVS]-1659872537627
========
if(autoIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872537628
GPR[SPVAP]-1659872537628
GPR[EPVAP]-1659872538356
GPR[EPVS]-1659872538356
========
if(axisIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872538360
GPR[SPVAP]-1659872538360
GPR[EPVAP]-1659872539096
GPR[EPVS]-1659872539096
========
if(columnIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872539097
GPR[SPVAP]-1659872539097
GPR[EPVAP]-1659872539807
GPR[EPVS]-1659872539807
========
this.values.remove(keyIndex);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872539809
GPR[SPVAP]-1659872539809
GPR[EPVAP]-1659872541057
GPR[SPVATF]-1659872541057
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872542171
GPR[EPVS]-1659872542171
========
this.values.remove(keyIndex);
if(index>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872542172
GPR[SPVAP]-1659872542172
GPR[EPVAP]-1659872542870
GPR[EPVS]-1659872542870
========
if(keyIndex>0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872542872
GPR[SPVAP]-1659872542872
GPR[EPVAP]-1659872544090
GPR[SPVATF]-1659872544090
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872545167
GPR[EPVS]-1659872545167
========
if(fieldIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872545169
GPR[SPVAP]-1659872545169
GPR[EPVAP]-1659872545866
GPR[EPVS]-1659872545866
========
if(paint>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872545867
GPR[SPVAP]-1659872545867
GPR[EPVAP]-1659872546562
GPR[EPVS]-1659872546562
========
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
removeAgedItems(false);
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872546566
GPR[SPVAP]-1659872546566
GPR[EPVAP]-1659872547269
GPR[EPVS]-1659872547269
========
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
fireSeriesChanged();
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872547270
GPR[SPVAP]-1659872547270
GPR[EPVAP]-1659872547966
GPR[EPVS]-1659872547966
========
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
removeAgedItems(false);
fireSeriesChanged();

this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872547968
GPR[SPVAP]-1659872547968
GPR[EPVAP]-1659872548674
GPR[EPVS]-1659872548674
========
if(count>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872548675
GPR[SPVAP]-1659872548675
GPR[EPVAP]-1659872549379
GPR[EPVS]-1659872549379
========
if(valuesPerColor>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872549380
GPR[SPVAP]-1659872549380
GPR[EPVAP]-1659872550085
GPR[EPVS]-1659872550085
========
fireSeriesChanged();
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872550087
GPR[SPVAP]-1659872550087
GPR[EPVAP]-1659872550808
GPR[EPVS]-1659872550808
========
removeValue(keyIndex);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872550810
GPR[SPVAP]-1659872550810
GPR[EPVAP]-1659872552069
GPR[SPVATF]-1659872552069
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872553166
GPR[EPVS]-1659872553166
========
removeValue(keyIndex);
if(index>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872553168
GPR[SPVAP]-1659872553168
GPR[EPVAP]-1659872553873
GPR[EPVS]-1659872553873
========
notifyListeners(new PlotChangeEvent(this));
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872553876
GPR[SPVAP]-1659872553876
GPR[EPVAP]-1659872554576
GPR[EPVS]-1659872554576
========
this.notifyListeners(new PlotChangeEvent(this));
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872554577
GPR[SPVAP]-1659872554577
GPR[EPVAP]-1659872555282
GPR[EPVS]-1659872555282
========
notifyListeners(new AxisChangeEvent(this));
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872555283
GPR[SPVAP]-1659872555283
GPR[EPVAP]-1659872555982
GPR[EPVS]-1659872555982
========
if(section>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872555983
GPR[SPVAP]-1659872555983
GPR[EPVAP]-1659872556690
GPR[EPVS]-1659872556690
========
if((Integer)this.indexMap.get(key)==null){
return -1;
}
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872556691
GPR[SPVAP]-1659872556691
GPR[EPVAP]-1659872557393
GPR[EPVS]-1659872557394
========
fireChartChanged();
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872557395
GPR[SPVAP]-1659872557395
GPR[EPVAP]-1659872558098
GPR[EPVS]-1659872558098
========
if(column>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872558100
GPR[SPVAP]-1659872558100
GPR[EPVAP]-1659872558809
GPR[EPVS]-1659872558809
========
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.valueOf(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872558811
GPR[SPVAP]-1659872558811
GPR[EPVAP]-1659872559519
GPR[EPVS]-1659872559519
========
if(key==null){
throw new NullPointerException("Null \'key\' argument.");
}
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872559520
GPR[SPVAP]-1659872559520
GPR[EPVAP]-1659872560790
GPR[SPVATF]-1659872560790
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872561886
GPR[EPVS]-1659872561886
========
if(key==null){
throw new NullPointerException("Null \'key\' argument.");
}
if(index>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872561887
GPR[SPVAP]-1659872561887
GPR[EPVAP]-1659872562581
GPR[EPVS]-1659872562581
========
fireDatasetChanged();
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872562582
GPR[SPVAP]-1659872562582
GPR[EPVAP]-1659872563290
GPR[EPVS]-1659872563290
========
if(key!=null){
key=group;
}
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872563292
GPR[SPVAP]-1659872563292
GPR[EPVAP]-1659872564007
GPR[EPVS]-1659872564007
GPR[ESUN]-1659872564012
GPR[SSUN]-1659872564012
org.jfree.data.DefaultKeyedValues,209
========
setValue(value);

========
MM Copying to MM
GPR[SPVS]-1659872566050
GPR[SPVAP]-1659872566050
GPR[EPVAP]-1659872568282
GPR[EPVS]-1659872568282
========
fireDatasetChanged();
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872568283
GPR[SPVAP]-1659872568283
GPR[EPVAP]-1659872569324
GPR[EPVS]-1659872569324
========
fireSeriesChanged();
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872569326
GPR[SPVAP]-1659872569326
GPR[EPVAP]-1659872570422
GPR[EPVS]-1659872570422
========
fireSeriesChanged();
setValue(value);

========
MM Copying to MM
GPR[SPVS]-1659872570424
GPR[SPVAP]-1659872570424
GPR[EPVAP]-1659872571512
GPR[EPVS]-1659872571512
========
this.value=value;
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872571514
GPR[SPVAP]-1659872571514
GPR[EPVAP]-1659872572595
GPR[EPVS]-1659872572595
========
notifyListeners(new PlotChangeEvent(this));
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872572596
GPR[SPVAP]-1659872572596
GPR[EPVAP]-1659872573640
GPR[EPVS]-1659872573640
========
if(getIndex(key)<0){
return ;
}
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872573642
GPR[SPVAP]-1659872573642
GPR[EPVAP]-1659872576884
GPR[SPVATF]-1659872576884
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 0
GPR[EPVATF]-1659872577976
GPR[SPVATR]-1659872577977
TESTING : chart_18
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testRemoveValue_purify_1
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testGetKey
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testInsertAndRetrieve
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testSortByValueDescending
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testSortByValueAscending
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testSortByKeyAscending
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testGetKeys
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testAddValue
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testSortByKeyDescending
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testGetItemCount
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testClear
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testGetValue
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_2
MM messageFailing tests: 14
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1659872588242
GPR[EPVS]-1659872588242
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872588243
GPR[SPVAP]-1659872588243
GPR[EPVAP]-1659872589500
GPR[SPVATF]-1659872589500
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872590648
GPR[EPVS]-1659872590648
========
this.key=key;
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872590650
GPR[SPVAP]-1659872590650
GPR[EPVAP]-1659872591348
GPR[EPVS]-1659872591348
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
this.key=key;
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872591349
GPR[SPVAP]-1659872591349
GPR[EPVAP]-1659872592075
GPR[EPVS]-1659872592075
========
if(value==null){
throw new IllegalArgumentException("Null \'value\' argument.");
}
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872592076
GPR[SPVAP]-1659872592076
GPR[EPVAP]-1659872593316
GPR[SPVATF]-1659872593316
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872594436
GPR[EPVS]-1659872594436
========
if(value==null){
throw new IllegalArgumentException("Null \'value\' argument.");
}
this.value=value;
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872594438
GPR[SPVAP]-1659872594438
GPR[EPVAP]-1659872595138
GPR[EPVS]-1659872595138
========
if(getIndex(key)<0){
throw new UnknownKeyException("The key ("+key.toString());
}
setValue(key,value);

========
MM Copying to MM
GPR[SPVS]-1659872595140
GPR[SPVAP]-1659872595140
GPR[EPVAP]-1659872596394
GPR[SPVATF]-1659872596394
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872597526
GPR[EPVS]-1659872597526
GPR[ESUN]-1659872597528
GPR[SSUN]-1659872597528
org.jfree.data.DefaultKeyedValues,210
Find no block!
GPR[SSUN]-1659872597977
org.jfree.data.DefaultKeyedValues,197
========
fireDatasetChanged();
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872599912
GPR[SPVAP]-1659872599912
GPR[EPVAP]-1659872602098
GPR[EPVS]-1659872602098
========
this.value=value;
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872602100
GPR[SPVAP]-1659872602100
GPR[EPVAP]-1659872603144
GPR[EPVS]-1659872603144
========
notifyListeners(new PlotChangeEvent(this));
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872603146
GPR[SPVAP]-1659872603146
GPR[EPVAP]-1659872604170
GPR[EPVS]-1659872604170
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872604173
GPR[SPVAP]-1659872604173
GPR[EPVAP]-1659872607351
GPR[SPVATF]-1659872607351
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872608525
GPR[EPVS]-1659872608525
========
this.key=key;
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872608527
GPR[SPVAP]-1659872608527
GPR[EPVAP]-1659872609224
GPR[EPVS]-1659872609224
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
this.key=key;
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872609225
GPR[SPVAP]-1659872609225
GPR[EPVAP]-1659872609935
GPR[EPVS]-1659872609935
========
if(value<=0.0){
throw new IllegalArgumentException("Requires \'value\' > 0.0.");
}
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872609936
GPR[SPVAP]-1659872609936
GPR[EPVAP]-1659872611184
GPR[SPVATF]-1659872611184
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872612295
GPR[EPVS]-1659872612295
========
if(value<=0.0){
throw new IllegalArgumentException("Requires \'value\' > 0.0.");
}
this.value=value;
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872612297
GPR[SPVAP]-1659872612297
GPR[EPVAP]-1659872613023
GPR[EPVS]-1659872613023
========
if(getIndex(key)<0){
return ;
}
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872613024
GPR[SPVAP]-1659872613024
GPR[EPVAP]-1659872614282
GPR[SPVATF]-1659872614282
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 0
GPR[EPVATF]-1659872615388
GPR[SPVATR]-1659872615389
TESTING : chart_18
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testGetKeys
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testAddValue
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testGetItemCount
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testClear
MM message  - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_2
MM messageFailing tests: 5
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1659872625492
GPR[EPVS]-1659872625492
========
if(getIndex(key)<0){
throw new UnknownKeyException("The key ("+key.toString());
}
addValue(key,new Double(value));

========
MM Copying to MM
GPR[SPVS]-1659872625494
GPR[SPVAP]-1659872625494
GPR[EPVAP]-1659872626748
GPR[SPVATF]-1659872626748
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872627851
GPR[EPVS]-1659872627851
GPR[ESUN]-1659872627855
GPR[SSUN]-1659872627855
org.jfree.data.DefaultKeyedValues,198
Find no block!
GPR[SSUN]-1659872628292
org.jfree.data.DefaultKeyedValues,157
UNKNOWN ASTNode type : catch (UnsupportedEncodingException e) {
  encodedKey=key.toString();
}

========
if(key==null){
throw new NullPointerException("Null \'key\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659872630258
GPR[SPVAP]-1659872630258
GPR[EPVAP]-1659872634954
GPR[SPVATF]-1659872634954
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872636045
GPR[EPVS]-1659872636045
========
if(key==null){
throw new UnknownKeyException("The key ("+key.toString());
}

========
MM Copying to MM
GPR[SPVS]-1659872636046
GPR[SPVAP]-1659872636046
GPR[EPVAP]-1659872637331
GPR[SPVATF]-1659872637331
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872638440
GPR[EPVS]-1659872638440
========
if(key!=null){
throw new IllegalArgumentException("Null \'key\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659872638442
GPR[SPVAP]-1659872638442
GPR[EPVAP]-1659872639661
GPR[SPVATF]-1659872639661
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872640778
GPR[EPVS]-1659872640778
========
if(that.key!=null){
throw new IllegalArgumentException("Null \'key\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659872640779
GPR[SPVAP]-1659872640779
GPR[EPVAP]-1659872641477
GPR[EPVS]-1659872641477
========
if(that.key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659872641478
GPR[SPVAP]-1659872641478
GPR[EPVAP]-1659872642184
GPR[EPVS]-1659872642184
========
if(key==null){
if(this.key!=null?!this.key.equals(that.key):that.key!=null){
return false;
}
throw new IllegalArgumentException("Null \'key\' argument.");
}

========
MM Copying to MM
GPR[SPVS]-1659872642185
GPR[SPVAP]-1659872642185
GPR[EPVAP]-1659872642884
GPR[EPVS]-1659872642884
========
if(category==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872646367
GPR[SPVAP]-1659872646367
GPR[EPVAP]-1659872647095
GPR[EPVS]-1659872647095
========
if(key==null){
throw new IllegalArgumentException("Null \'category\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872647096
GPR[SPVAP]-1659872647096
GPR[EPVAP]-1659872648352
GPR[SPVATF]-1659872648352
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872649444
GPR[EPVS]-1659872649444
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i!=null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872649445
GPR[SPVAP]-1659872649445
GPR[EPVAP]-1659872650678
GPR[SPVATF]-1659872650678
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872651784
GPR[EPVS]-1659872651784
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(scaleIndex==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872651786
GPR[SPVAP]-1659872651786
GPR[EPVAP]-1659872652487
GPR[EPVS]-1659872652487
========
notifyListeners(new PlotChangeEvent(this));
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872652488
GPR[SPVAP]-1659872652488
GPR[EPVAP]-1659872653187
GPR[EPVS]-1659872653187
========
this.key=key;
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872653188
GPR[SPVAP]-1659872653188
GPR[EPVAP]-1659872653920
GPR[EPVS]-1659872653920
========
notifyListeners(new MarkerChangeEvent(this));
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872653921
GPR[SPVAP]-1659872653921
GPR[EPVAP]-1659872654623
GPR[EPVS]-1659872654623
========
if(key==null){
throw new IllegalArgumentException("Null \'zone\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872654624
GPR[SPVAP]-1659872654624
GPR[EPVAP]-1659872655851
GPR[SPVATF]-1659872655851
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872656951
GPR[EPVS]-1659872656951
========
if(category==null){
throw new IllegalArgumentException("Null \'category\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872656952
GPR[SPVAP]-1659872656952
GPR[EPVAP]-1659872657643
GPR[EPVS]-1659872657643
========
if(key==null){
throw new IllegalArgumentException("Series index out of bounds");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872657644
GPR[SPVAP]-1659872657644
GPR[EPVAP]-1659872658875
GPR[SPVATF]-1659872658875
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872660777
GPR[EPVS]-1659872660777
========
if(key==null){
throw new IllegalArgumentException("Index out of range.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872660778
GPR[SPVAP]-1659872660778
GPR[EPVAP]-1659872663309
GPR[SPVATF]-1659872663309
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872664427
GPR[EPVS]-1659872664427
========
if(key==null){
throw new IllegalArgumentException("Index outside valid range.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872664428
GPR[SPVAP]-1659872664428
GPR[EPVAP]-1659872665671
GPR[SPVATF]-1659872665671
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872666793
GPR[EPVS]-1659872666793
========
if(key==null){
throw new IllegalArgumentException("Index \'series\' out of range.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872666794
GPR[SPVAP]-1659872666794
GPR[EPVAP]-1659872668050
GPR[SPVATF]-1659872668050
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872669155
GPR[EPVS]-1659872669155
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(axisIndex==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872669157
GPR[SPVAP]-1659872669157
GPR[EPVAP]-1659872669858
GPR[EPVS]-1659872669858
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(axisIndex!=null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872669859
GPR[SPVAP]-1659872669859
GPR[EPVAP]-1659872670606
GPR[EPVS]-1659872670606
========
if(key!=null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872670607
GPR[SPVAP]-1659872670607
GPR[EPVAP]-1659872671830
GPR[SPVATF]-1659872671830
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872672914
GPR[EPVS]-1659872672914
========
if(columnKey==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872672915
GPR[SPVAP]-1659872672915
GPR[EPVAP]-1659872673639
GPR[EPVS]-1659872673639
========
if(that.key!=null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872673641
GPR[SPVAP]-1659872673641
GPR[EPVAP]-1659872674396
GPR[EPVS]-1659872674396
========
if(that.key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872674397
GPR[SPVAP]-1659872674397
GPR[EPVAP]-1659872675106
GPR[EPVS]-1659872675106
========
if(key==null){
if(this.key!=null?!this.key.equals(that.key):that.key!=null){
return false;
}
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872675107
GPR[SPVAP]-1659872675107
GPR[EPVAP]-1659872675800
GPR[EPVS]-1659872675800
========
fireDatasetChanged();
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872675801
GPR[SPVAP]-1659872675801
GPR[EPVAP]-1659872676527
GPR[EPVS]-1659872676527
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return VALUE_ANTIALIAS_ON.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872676528
GPR[SPVAP]-1659872676528
GPR[EPVAP]-1659872677224
GPR[EPVS]-1659872677224
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(paintLimit==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872677225
GPR[SPVAP]-1659872677225
GPR[EPVAP]-1659872677919
GPR[EPVS]-1659872677919
========
if(key==null){
throw new NullPointerException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872677921
GPR[SPVAP]-1659872677921
GPR[EPVAP]-1659872679159
GPR[SPVATF]-1659872679159
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872680260
GPR[EPVS]-1659872680260
========
notifyListeners(new PlotChangeEvent(this));
if(key!=null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872680261
GPR[SPVAP]-1659872680261
GPR[EPVAP]-1659872680972
GPR[EPVS]-1659872680972
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
if(keys.isEmpty()){
return null;
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872680973
GPR[SPVAP]-1659872680973
GPR[EPVAP]-1659872681710
GPR[EPVS]-1659872681710
========
if(key==null){
throw new SeriesException("TimeSeries.update(TimePeriod, Number):  period does not exist.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872681711
GPR[SPVAP]-1659872681711
GPR[EPVAP]-1659872682426
GPR[EPVS]-1659872682426
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return new StringBuffer("CategoryLabelEntity: ").toString();

========
MM Copying to MM
GPR[SPVS]-1659872682429
GPR[SPVAP]-1659872682429
GPR[EPVAP]-1659872683140
GPR[EPVS]-1659872683140
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
new StringBuffer("CategoryLabelEntity: ").append("category=");
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872683141
GPR[SPVAP]-1659872683141
GPR[EPVAP]-1659872684413
GPR[SPVATF]-1659872684413
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872685554
GPR[EPVS]-1659872685554
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
new StringBuffer("CategoryLabelEntity: ").append(this.key);
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872685555
GPR[SPVAP]-1659872685555
GPR[EPVAP]-1659872686277
GPR[EPVS]-1659872686277
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
new StringBuffer("CategoryLabelEntity: ").append(", tooltip="+getToolTipText());
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872686278
GPR[SPVAP]-1659872686278
GPR[EPVAP]-1659872686999
GPR[EPVS]-1659872686999
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
new StringBuffer("CategoryLabelEntity: ").append(", url="+getURLText());
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872687000
GPR[SPVAP]-1659872687000
GPR[EPVAP]-1659872687727
GPR[EPVS]-1659872687727
========
notifyListeners(new PlotChangeEvent(this));
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i!=null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872687731
GPR[SPVAP]-1659872687731
GPR[EPVAP]-1659872688430
GPR[EPVS]-1659872688430
========
clone.keys=(ArrayList)this.keys.clone();
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872688435
GPR[SPVAP]-1659872688435
GPR[EPVAP]-1659872689124
GPR[EPVS]-1659872689124
========
clone.values=(ArrayList)this.values.clone();
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872689125
GPR[SPVAP]-1659872689125
GPR[EPVAP]-1659872689823
GPR[EPVS]-1659872689823
========
clone.indexMap=(HashMap)this.indexMap.clone();
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
 final Integer i=(Integer)this.indexMap.get(key);
if(i==null){
return -1;
}
return i.intValue();

========
MM Copying to MM
GPR[SPVS]-1659872689824
GPR[SPVAP]-1659872689824
GPR[EPVAP]-1659872690555
GPR[EPVS]-1659872690555
GPR[ESUN]-1659872690557
GPR[SSUN]-1659872690557
org.jfree.data.DefaultKeyedValues,229
GPR[ESUN]-1659872691043
GPR[SSUN]-1659872691043
org.jfree.data.DefaultKeyedValues,232
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(pos>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872694697
GPR[SPVAP]-1659872694697
GPR[EPVAP]-1659872696894
GPR[EPVS]-1659872696894
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
rebuildIndex();
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872696895
GPR[SPVAP]-1659872696895
GPR[EPVAP]-1659872700090
GPR[SPVATF]-1659872700090
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872701221
GPR[EPVS]-1659872701221
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(rowIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872701223
GPR[SPVAP]-1659872701223
GPR[EPVAP]-1659872701924
GPR[EPVS]-1659872701924
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
row=new DefaultKeyedValues();
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872701925
GPR[SPVAP]-1659872701925
GPR[EPVAP]-1659872702656
GPR[EPVS]-1659872702656
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(seriesIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872702657
GPR[SPVAP]-1659872702657
GPR[EPVAP]-1659872703365
GPR[EPVS]-1659872703365
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(binIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872703366
GPR[SPVAP]-1659872703366
GPR[EPVAP]-1659872704072
GPR[EPVS]-1659872704072
========
new HashMap().put("key",key);
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872704073
GPR[SPVAP]-1659872704073
GPR[EPVAP]-1659872705356
GPR[SPVATF]-1659872705356
TESTING : org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM:   - org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2_purify_3
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1659872706482
GPR[EPVS]-1659872706482
========
new HashMap().put("values.length",new Integer(values.length));
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872706483
GPR[SPVAP]-1659872706483
GPR[EPVAP]-1659872707209
GPR[EPVS]-1659872707209
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.setBorder(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872707210
GPR[SPVAP]-1659872707210
GPR[EPVAP]-1659872707949
GPR[EPVS]-1659872707949
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(index>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872707950
GPR[SPVAP]-1659872707950
GPR[EPVAP]-1659872708668
GPR[EPVS]-1659872708668
========
notifyListeners(new PlotChangeEvent(this));
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872708670
GPR[SPVAP]-1659872708670
GPR[EPVAP]-1659872709370
GPR[EPVS]-1659872709370
========
removeValue(keyIndex);
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872709372
GPR[SPVAP]-1659872709372
GPR[EPVAP]-1659872710072
GPR[EPVS]-1659872710072
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
row=new KeyedObjects();
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872710073
GPR[SPVAP]-1659872710073
GPR[EPVAP]-1659872710770
GPR[EPVS]-1659872710770
========
removeValue(keyIndex);
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(index>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872710773
GPR[SPVAP]-1659872710773
GPR[EPVAP]-1659872711477
GPR[EPVS]-1659872711477
========
if((Integer)this.indexMap.get(key)==null){
return -1;
}
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872711478
GPR[SPVAP]-1659872711478
GPR[EPVAP]-1659872712195
GPR[EPVS]-1659872712195
========
this.key=key;
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872712196
GPR[SPVAP]-1659872712196
GPR[EPVAP]-1659872712905
GPR[EPVS]-1659872712905
========
notifyListeners(new MarkerChangeEvent(this));
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872712906
GPR[SPVAP]-1659872712906
GPR[EPVAP]-1659872713609
GPR[EPVS]-1659872713609
========
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(zoomOutIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872713611
GPR[SPVAP]-1659872713611
GPR[EPVAP]-1659872714302
GPR[EPVS]-1659872714302
========
fireDatasetChanged();
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872714303
GPR[SPVAP]-1659872714303
GPR[EPVAP]-1659872715008
GPR[EPVS]-1659872715008
========
fireChartChanged();
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int keyIndex=getIndex(key);
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

========
MM Copying to MM
GPR[SPVS]-1659872715010
GPR[SPVAP]-1659872715010
GPR[EPVAP]-1659872715722
GPR[EPVS]-1659872715722
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f6aca125562, pid=3688681, tid=140096963139328
#
# JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# J 5230 C2 cofix.core.parser.node.expr.InfixExpr.match(Lcofix/core/parser/node/Node;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)Z (1104 bytes) @ 0x00007f6aca125562 [0x00007f6aca123680+0x1ee2]
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# script/workingdir/SimFix/chart/chart_18_buggy/hs_err_pid3688681.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#
End running Chart/18 results at /experiment_home///results/SimFix/Chart/18/seed_260/
\n\nNode: host-76\n
\n\nDate: Sun 07 Aug 2022 04:45:15 AM PDT\n
Removing checked out dir script/workingdir/SimFix/chart/chart_18_buggy
GPR[SSLE]-1659872715764
GPR[ESLE]-1659872775768
