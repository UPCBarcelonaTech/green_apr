Sleep 1m start
GPR[SSLI]-1659869110979
GPR[ESLI]-1659869170984
Running FixMiner Chart 13b
Timezone: America/Los_Angeles
Seed 260
Java 8: /experiment_home/jdk1.8.0_45/bin 
DEFECTS4J_HOME: /experiment_home/defects4j/
Creating out dir /experiment_home///results/FixMiner/Chart/13/seed_260/
The file script/workingdir/FixMiner/Chart_13 does not exist!
script/workingdir/FixMiner/Chart_13
Current directory: script/workingdir/FixMiner/Chart_13
classpath:  script/workingdir/FixMiner/Chart_13/lib/servlet.jar:/experiment_home/defects4j/framework/projects/lib/junit-4.11.jar:script/workingdir/FixMiner/Chart_13/build:script/workingdir/FixMiner/Chart_13/build-tests
Src java:  /source
Classes Java:  /build
Src Test:  /tests
Classes Test:  /build-tests
GPR[SSLB]-1659869189344
GPR[ESLB]-1659869249349
Calling FixMiner:
content current dir: ant BugPositions.txt build build-tests ChangeLog checkstyle defects4j.build.properties experimental FailedTestCases lib licence-LGPL.txt LocalData maven-jfreechart-project.xml NEWS README.txt source SuspiciousCodePositions swt tests
Node: host-75
Date init: Sun 07 Aug 2022 03:47:30 AM PDT
OAR_JOB_ID: 3720517
Chart_13
MM stop first: false
Chart_13
GPR[SSUP]-1659869250327
03:47:40.829 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 Failed Tests: 1
GPR[ESUP]-1659869261354
GPR[SFL]-1659869261354
GPR[EFL]-1659869261356
03:47:41.356 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
GPR[SFP]-1659869261356
GPR[SSUN]-1659869261356
03:47:41.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===488
03:47:41.859 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return new Size2D(constraint.getWidth(), constraint.getHeight());
GPR[SPS]-1659869261866
GPR[EPS]-1659869261871
GPR[SPS]-1659869261871
GPR[EPS]-1659869261871
GPR[SPS]-1659869261871
GPR[EPS]-1659869261871
GPR[SPS]-1659869261872
GPR[EPS]-1659869261872
GPR[SPS]-1659869261872
GPR[EPS]-1659869261872
GPR[SPS]-1659869261872
if (constraint != null) {


}

if (constraint != null) {


}

GPR[EPS]-1659869261873
GPR[SPVA]-1659869261873
GPR[SPVS]-1659869261873
GPR[SPVAP]-1659869261873
03:47:41.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:47:42.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869262286
GPR[SPVS]-1659869262286
GPR[SPVAP]-1659869262286
03:47:42.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:47:42.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869262696
GPR[SPVESU]-1659869262696
GPR[EPVESU]-1659869262697
GPR[EPVA]-1659869262697
GPR[SPS]-1659869262697
if (constraint == null) {
    return null;
}

if (constraint == null) {
    throw new IllegalArgumentException("Empty variable: " + constraint);
}

if (constraint == null) {
    return null;
}

if (constraint == null) {
    throw new IllegalArgumentException("Empty variable: " + constraint);
}

GPR[EPS]-1659869262698
GPR[SPVA]-1659869262698
GPR[SPVS]-1659869262698
GPR[SPVAP]-1659869262698
03:47:42.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869263123
03:47:43.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:47:43.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869263123
GPR[EPVATF]-1659869263189
GPR[SPVATR]-1659869263189
GPR[EPVATR]-1659869273363
03:47:53.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869273363
GPR[SPVS]-1659869273363
GPR[SPVAP]-1659869273363
03:47:53.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869273802
03:47:53.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:47:53.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869273802
GPR[EPVATF]-1659869273864
GPR[SPVATR]-1659869273864
GPR[EPVATR]-1659869283942
03:48:03.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869283942
GPR[SPVS]-1659869283942
GPR[SPVAP]-1659869283942
03:48:03.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869284375
03:48:04.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:48:04.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869284375
GPR[EPVATF]-1659869284438
GPR[SPVATR]-1659869284438
GPR[EPVATR]-1659869295014
03:48:15.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869295014
GPR[SPVS]-1659869295014
GPR[SPVAP]-1659869295014
03:48:15.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869295454
03:48:15.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:48:15.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869295454
GPR[EPVATF]-1659869295520
GPR[SPVATR]-1659869295520
GPR[EPVATR]-1659869305637
03:48:25.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869305637
GPR[SPVESU]-1659869305638
GPR[EPVESU]-1659869305640
GPR[EPVA]-1659869305640
GPR[SPS]-1659869305640
GPR[EPS]-1659869305640
GPR[SPS]-1659869305640
GPR[EPS]-1659869305640
GPR[SPS]-1659869305640
GPR[EPS]-1659869305641
GPR[SPS]-1659869305641

GPR[EPS]-1659869305641
GPR[SPVA]-1659869305641
GPR[SPVS]-1659869305641
GPR[SPVAP]-1659869305641
03:48:25.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:26.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869306053
GPR[SPVESU]-1659869306053
GPR[EPVESU]-1659869306054
GPR[EPVA]-1659869306054
GPR[ESUN]-1659869306054
GPR[SSUN]-1659869306054
03:48:26.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===485
03:48:26.099 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
GPR[SPS]-1659869306101
this.centerBlock.setBounds(true, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(false, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), true);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), false);
GPR[EPS]-1659869306103
GPR[SPVA]-1659869306103
GPR[SPVS]-1659869306103
GPR[SPVAP]-1659869306103
03:48:26.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:26.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869306497
GPR[SPVS]-1659869306497
GPR[SPVAP]-1659869306497
03:48:26.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:26.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869306914
GPR[SPVS]-1659869306914
GPR[SPVAP]-1659869306914
03:48:26.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:27.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869307315
GPR[SPVS]-1659869307318
GPR[SPVAP]-1659869307318
03:48:27.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:27.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869307724
GPR[SPVESU]-1659869307724
GPR[EPVESU]-1659869307725
GPR[EPVA]-1659869307725
GPR[SPS]-1659869307725
this.centerBlock.setBounds(c5, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(h, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(w, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(container, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(g2, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(constraint, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(this.topBlock, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(this.bottomBlock, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(this.leftBlock, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(this.rightBlock, new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), c5);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), h);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), w);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), container);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), g2);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), constraint);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), this.topBlock);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), this.bottomBlock);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), this.leftBlock);
this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]), this.rightBlock);
GPR[EPS]-1659869307726
GPR[SPVA]-1659869307726
GPR[SPVS]-1659869307726
GPR[SPVAP]-1659869307726
03:48:27.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:28.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869308126
GPR[SPVS]-1659869308126
GPR[SPVAP]-1659869308126
03:48:28.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:28.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869308560
GPR[SPVS]-1659869308560
GPR[SPVAP]-1659869308560
03:48:28.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:28.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869308967
GPR[SPVS]-1659869308967
GPR[SPVAP]-1659869308967
03:48:28.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:29.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869309372
GPR[SPVS]-1659869309372
GPR[SPVAP]-1659869309372
03:48:29.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:29.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869309778
GPR[SPVS]-1659869309778
GPR[SPVAP]-1659869309778
03:48:29.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:30.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869310178
GPR[SPVS]-1659869310178
GPR[SPVAP]-1659869310178
03:48:30.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:30.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869310578
GPR[SPVS]-1659869310578
GPR[SPVAP]-1659869310578
03:48:30.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:30.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869310995
GPR[SPVS]-1659869310995
GPR[SPVAP]-1659869310995
03:48:30.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:31.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869311403
GPR[SPVS]-1659869311403
GPR[SPVAP]-1659869311403
03:48:31.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:31.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869311810
GPR[SPVS]-1659869311810
GPR[SPVAP]-1659869311810
03:48:31.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:32.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869312214
GPR[SPVS]-1659869312214
GPR[SPVAP]-1659869312214
03:48:32.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:32.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869312619
GPR[SPVS]-1659869312619
GPR[SPVAP]-1659869312619
03:48:32.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:33.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869313034
GPR[SPVS]-1659869313034
GPR[SPVAP]-1659869313034
03:48:33.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:33.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869313433
GPR[SPVS]-1659869313433
GPR[SPVAP]-1659869313433
03:48:33.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:33.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869313850
GPR[SPVS]-1659869313850
GPR[SPVAP]-1659869313850
03:48:33.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:34.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869314254
GPR[SPVS]-1659869314254
GPR[SPVAP]-1659869314254
03:48:34.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:34.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869314658
GPR[SPVS]-1659869314658
GPR[SPVAP]-1659869314659
03:48:34.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:35.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869315062
GPR[SPVS]-1659869315062
GPR[SPVAP]-1659869315062
03:48:35.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:35.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869315462
GPR[SPVS]-1659869315462
GPR[SPVAP]-1659869315462
03:48:35.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:35.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869315870
GPR[SPVESU]-1659869315870
GPR[EPVESU]-1659869315872
GPR[EPVA]-1659869315872
GPR[SPS]-1659869315872
GPR[EPS]-1659869315873
GPR[SPS]-1659869315873
this.centerBlock.arrange(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
this.centerBlock.setID(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
GPR[EPS]-1659869315877
GPR[SPVA]-1659869315877
GPR[SPVS]-1659869315877
GPR[SPVAP]-1659869315877
03:48:35.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:36.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869316281
GPR[SPVS]-1659869316281
GPR[SPVAP]-1659869316281
03:48:36.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:48:36.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869316701
GPR[SPVESU]-1659869316701
GPR[EPVESU]-1659869316703
GPR[EPVA]-1659869316703
GPR[SPS]-1659869316703
GPR[EPS]-1659869316703
GPR[SPS]-1659869316703
if (this.centerBlock != null) {


}

if (w != null) {


}

if (h != null) {


}

if (w != null) {


}

if (h != null) {


}

GPR[EPS]-1659869316703
GPR[SPVA]-1659869316703
GPR[SPVS]-1659869316703
GPR[SPVAP]-1659869316703
03:48:36.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869317140
03:48:37.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:48:37.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869317140
GPR[EPVATF]-1659869317204
GPR[SPVATR]-1659869317204
GPR[EPVATR]-1659869327666
03:48:47.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869327666
GPR[SPVS]-1659869327666
GPR[SPVAP]-1659869327666
03:48:47.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869328101
03:48:48.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:48:48.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869328101
GPR[EPVATF]-1659869328164
GPR[SPVATR]-1659869328165
GPR[EPVATR]-1659869338247
03:48:58.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869338247
GPR[SPVS]-1659869338247
GPR[SPVAP]-1659869338247
03:48:58.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869338680
03:48:58.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:48:58.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869338680
GPR[EPVATF]-1659869338744
GPR[SPVATR]-1659869338744
GPR[EPVATR]-1659869348954
03:49:08.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869348954
GPR[SPVS]-1659869348954
GPR[SPVAP]-1659869348954
03:49:08.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869349389
03:49:09.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:49:09.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869349389
GPR[EPVATF]-1659869349452
GPR[SPVATR]-1659869349452
GPR[EPVATR]-1659869359589
03:49:19.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869359590
GPR[SPVS]-1659869359590
GPR[SPVAP]-1659869359590
03:49:19.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869360027
03:49:20.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:49:20.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869360027
GPR[EPVATF]-1659869360092
GPR[SPVATR]-1659869360092
GPR[EPVATR]-1659869370187
03:49:30.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869370187
GPR[SPVESU]-1659869370187
GPR[EPVESU]-1659869370188
GPR[EPVA]-1659869370188
GPR[SPS]-1659869370188
if (this.centerBlock == null) {
    return null;
}

if (this.centerBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.centerBlock);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659869370189
GPR[SPVA]-1659869370189
GPR[SPVS]-1659869370189
GPR[SPVAP]-1659869370189
03:49:30.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869370618
03:49:30.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:49:30.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869370618
GPR[EPVATF]-1659869370683
GPR[SPVATR]-1659869370683
GPR[EPVATR]-1659869380961
03:49:40.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869380961
GPR[SPVS]-1659869380961
GPR[SPVAP]-1659869380961
03:49:40.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869381422
03:49:41.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:49:41.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869381422
GPR[EPVATF]-1659869381485
GPR[SPVATR]-1659869381485
GPR[EPVATR]-1659869391929
03:49:51.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869391929
GPR[SPVS]-1659869391929
GPR[SPVAP]-1659869391929
03:49:51.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869392365
03:49:52.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:49:52.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869392365
GPR[EPVATF]-1659869392428
GPR[SPVATR]-1659869392428
GPR[EPVATR]-1659869402682
03:50:02.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869402683
GPR[SPVS]-1659869402683
GPR[SPVAP]-1659869402683
03:50:02.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869403125
03:50:03.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:50:03.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869403126
GPR[EPVATF]-1659869403192
GPR[SPVATR]-1659869403192
GPR[EPVATR]-1659869413473
03:50:13.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869413473
GPR[SPVS]-1659869413473
GPR[SPVAP]-1659869413473
03:50:13.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869413903
03:50:13.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:50:13.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869413903
GPR[EPVATF]-1659869413969
GPR[SPVATR]-1659869413969
GPR[EPVATR]-1659869424078
03:50:24.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869424078
GPR[SPVS]-1659869424078
GPR[SPVAP]-1659869424078
03:50:24.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869424514
03:50:24.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:50:24.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869424515
GPR[EPVATF]-1659869424579
GPR[SPVATR]-1659869424579
GPR[EPVATR]-1659869434686
03:50:34.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869434686
GPR[SPVS]-1659869434686
GPR[SPVAP]-1659869434686
03:50:34.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869435119
03:50:35.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:50:35.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869435119
GPR[EPVATF]-1659869435184
GPR[SPVATR]-1659869435184
GPR[EPVATR]-1659869445196
03:50:45.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869445196
GPR[SPVS]-1659869445196
GPR[SPVAP]-1659869445196
03:50:45.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869445634
03:50:45.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:50:45.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869445634
GPR[EPVATF]-1659869445699
GPR[SPVATR]-1659869445699
GPR[EPVATR]-1659869456104
03:50:56.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869456104
GPR[SPVS]-1659869456104
GPR[SPVAP]-1659869456104
03:50:56.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869456550
03:50:56.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:50:56.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869456550
GPR[EPVATF]-1659869456612
GPR[SPVATR]-1659869456612
GPR[EPVATR]-1659869466694
03:51:06.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869466694
GPR[SPVS]-1659869466694
GPR[SPVAP]-1659869466694
03:51:06.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869467136
03:51:07.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:51:07.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869467136
GPR[EPVATF]-1659869467244
GPR[SPVATR]-1659869467244
GPR[EPVATR]-1659869477426
03:51:17.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869477426
GPR[SPVESU]-1659869477426
GPR[EPVESU]-1659869477428
GPR[EPVA]-1659869477428
GPR[SPS]-1659869477428
GPR[EPS]-1659869477428
GPR[SPS]-1659869477428
GPR[EPS]-1659869477429
GPR[SPS]-1659869477429
GPR[EPS]-1659869477429
GPR[SPS]-1659869477429

GPR[EPS]-1659869477429
GPR[SPVA]-1659869477429
GPR[SPVS]-1659869477429
GPR[SPVAP]-1659869477429
03:51:17.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869477859
03:51:17.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:51:17.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869477859
GPR[EPVATF]-1659869477924
GPR[SPVATR]-1659869477924
GPR[EPVATR]-1659869488147
03:51:28.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869488147
GPR[SPVESU]-1659869488147
GPR[EPVESU]-1659869488149
GPR[EPVA]-1659869488149
GPR[ESUN]-1659869488149
GPR[SSUN]-1659869488149
03:51:28.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===484
03:51:28.180 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
GPR[SPS]-1659869488182
if (this.centerBlock == null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
GPR[EPS]-1659869488182
GPR[SPVA]-1659869488182
GPR[SPVS]-1659869488182
GPR[SPVAP]-1659869488182
03:51:28.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869488617
03:51:28.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:51:28.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869488617
GPR[EPVATF]-1659869488680
GPR[SPVATR]-1659869488680
GPR[EPVATR]-1659869499070
03:51:39.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869499070
GPR[SPVESU]-1659869499070
GPR[EPVESU]-1659869499072
GPR[EPVA]-1659869499072
GPR[SPS]-1659869499072
GPR[EPS]-1659869499072
GPR[SPS]-1659869499072
GPR[EPS]-1659869499073
GPR[SPS]-1659869499073
GPR[EPS]-1659869499073
GPR[SPS]-1659869499073
GPR[EPS]-1659869499073
GPR[SPS]-1659869499073
if (this.centerBlock != null) {


}

GPR[EPS]-1659869499073
GPR[SPVA]-1659869499073
GPR[SPVS]-1659869499073
GPR[SPVAP]-1659869499073
03:51:39.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869499503
03:51:39.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:51:39.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869499504
GPR[EPVATF]-1659869499568
GPR[SPVATR]-1659869499568
GPR[EPVATR]-1659869509726
03:51:49.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869509726
GPR[SPVESU]-1659869509726
GPR[EPVESU]-1659869509728
GPR[EPVA]-1659869509728
GPR[SPS]-1659869509728
if (this.centerBlock == null) {
    return null;
}

if (this.centerBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.centerBlock);
}

GPR[EPS]-1659869509729
GPR[SPVA]-1659869509729
GPR[SPVS]-1659869509729
GPR[SPVAP]-1659869509729
03:51:49.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869510164
03:51:50.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:51:50.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869510164
GPR[EPVATF]-1659869510228
GPR[SPVATR]-1659869510228
GPR[EPVATR]-1659869520430
03:52:00.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869520430
GPR[SPVS]-1659869520430
GPR[SPVAP]-1659869520430
03:52:00.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869520866
03:52:00.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:52:00.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869520866
GPR[EPVATF]-1659869520929
GPR[SPVATR]-1659869520929
GPR[EPVATR]-1659869531058
03:52:11.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869531059
GPR[SPVESU]-1659869531059
GPR[EPVESU]-1659869531060
GPR[EPVA]-1659869531060
GPR[SPS]-1659869531060
GPR[EPS]-1659869531060
GPR[SPS]-1659869531060
clear();
	if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	clear();
GPR[EPS]-1659869531061
GPR[SPVA]-1659869531061
GPR[SPVS]-1659869531061
GPR[SPVAP]-1659869531061
03:52:11.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869531509
03:52:11.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:52:11.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869531509
GPR[EPVATF]-1659869531577
GPR[SPVATR]-1659869531577
GPR[EPVATR]-1659869541886
03:52:21.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869541887
GPR[SPVS]-1659869541887
GPR[SPVAP]-1659869541887
03:52:21.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869542325
03:52:22.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:52:22.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869542325
GPR[EPVATF]-1659869542392
GPR[SPVATR]-1659869542392
GPR[EPVATR]-1659869552579
03:52:32.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869552579
GPR[SPVESU]-1659869552579
GPR[EPVESU]-1659869552581
GPR[EPVA]-1659869552581
GPR[SPS]-1659869552581
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null
if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        
null

        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659869552582
GPR[SPVA]-1659869552582
GPR[SPVS]-1659869552582
GPR[SPVAP]-1659869552582
03:52:32.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:52:32.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869552993
GPR[SPVS]-1659869552993
GPR[SPVAP]-1659869552993
03:52:32.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:52:33.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869553408
GPR[SPVS]-1659869553408
GPR[SPVAP]-1659869553408
03:52:33.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869553845
03:52:33.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:52:33.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869553845
GPR[EPVATF]-1659869553908
GPR[SPVATR]-1659869553908
GPR[EPVATR]-1659869564078
03:52:44.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869564078
GPR[SPVS]-1659869564078
GPR[SPVAP]-1659869564078
03:52:44.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869564503
03:52:44.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:52:44.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869564504
GPR[EPVATF]-1659869564568
GPR[SPVATR]-1659869564568
GPR[EPVATR]-1659869574873
03:52:54.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869574874
GPR[SPVS]-1659869574874
GPR[SPVAP]-1659869574874
03:52:54.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869575310
03:52:55.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:52:55.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869575310
GPR[EPVATF]-1659869575375
GPR[SPVATR]-1659869575375
GPR[EPVATR]-1659869585585
03:53:05.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869585585
GPR[SPVS]-1659869585585
GPR[SPVAP]-1659869585585
03:53:05.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869586009
03:53:06.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:53:06.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869586009
GPR[EPVATF]-1659869586075
GPR[SPVATR]-1659869586075
GPR[EPVATR]-1659869596319
03:53:16.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869596319
GPR[SPVS]-1659869596319
GPR[SPVAP]-1659869596319
03:53:16.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869596757
03:53:16.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:53:16.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869596758
GPR[EPVATF]-1659869596820
GPR[SPVATR]-1659869596820
GPR[EPVATR]-1659869608145
03:53:28.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869608145
GPR[SPVS]-1659869608145
GPR[SPVAP]-1659869608145
03:53:28.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869608598
03:53:28.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:53:28.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869608598
GPR[EPVATF]-1659869608664
GPR[SPVATR]-1659869608664
GPR[EPVATR]-1659869618980
03:53:38.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869618981
GPR[SPVS]-1659869618981
GPR[SPVAP]-1659869618981
03:53:38.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869619418
03:53:39.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:53:39.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869619418
GPR[EPVATF]-1659869619480
GPR[SPVATR]-1659869619480
GPR[EPVATR]-1659869629906
03:53:49.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869629907
GPR[SPVS]-1659869629907
GPR[SPVAP]-1659869629907
03:53:49.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869630352
03:53:50.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:53:50.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869630352
GPR[EPVATF]-1659869630415
GPR[SPVATR]-1659869630415
GPR[EPVATR]-1659869640682
03:54:00.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869640682
GPR[SPVS]-1659869640682
GPR[SPVAP]-1659869640682
03:54:00.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869641133
03:54:01.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:54:01.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869641134
GPR[EPVATF]-1659869641196
GPR[SPVATR]-1659869641196
GPR[EPVATR]-1659869651422
03:54:11.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869651423
GPR[SPVS]-1659869651423
GPR[SPVAP]-1659869651423
03:54:11.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869651849
03:54:11.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:54:11.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869651849
GPR[EPVATF]-1659869651912
GPR[SPVATR]-1659869651912
GPR[EPVATR]-1659869662123
03:54:22.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869662123
GPR[SPVS]-1659869662123
GPR[SPVAP]-1659869662123
03:54:22.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869662557
03:54:22.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:54:22.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869662557
GPR[EPVATF]-1659869662621
GPR[SPVATR]-1659869662621
GPR[EPVATR]-1659869672814
03:54:32.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869672814
GPR[SPVS]-1659869672814
GPR[SPVAP]-1659869672814
03:54:32.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869673246
03:54:33.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:54:33.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869673246
GPR[EPVATF]-1659869673311
GPR[SPVATR]-1659869673311
GPR[EPVATR]-1659869683628
03:54:43.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869683628
GPR[SPVS]-1659869683628
GPR[SPVAP]-1659869683628
03:54:43.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869684059
03:54:44.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:54:44.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869684059
GPR[EPVATF]-1659869684123
GPR[SPVATR]-1659869684123
GPR[EPVATR]-1659869694294
03:54:54.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869694294
GPR[SPVS]-1659869694294
GPR[SPVAP]-1659869694294
03:54:54.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869694723
03:54:54.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:54:54.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869694724
GPR[EPVATF]-1659869694788
GPR[SPVATR]-1659869694788
GPR[EPVATR]-1659869704954
03:55:04.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869704954
GPR[SPVS]-1659869704954
GPR[SPVAP]-1659869704954
03:55:04.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869705393
03:55:05.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:55:05.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869705394
GPR[EPVATF]-1659869705459
GPR[SPVATR]-1659869705459
GPR[EPVATR]-1659869715682
03:55:15.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869715682
GPR[SPVS]-1659869715682
GPR[SPVAP]-1659869715682
03:55:15.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869716119
03:55:16.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:55:16.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869716119
GPR[EPVATF]-1659869716184
GPR[SPVATR]-1659869716184
GPR[EPVATR]-1659869726417
03:55:26.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869726417
GPR[SPVS]-1659869726417
GPR[SPVAP]-1659869726417
03:55:26.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:26.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869726824
GPR[SPVESU]-1659869726824
GPR[EPVESU]-1659869726826
GPR[EPVA]-1659869726826
GPR[SPS]-1659869726826

GPR[EPS]-1659869726826
GPR[SPVA]-1659869726826
GPR[SPVS]-1659869726826
GPR[SPVAP]-1659869726826
03:55:26.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869727262
03:55:27.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:55:27.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869727262
GPR[EPVATF]-1659869727324
GPR[SPVATR]-1659869727324
GPR[EPVATR]-1659869737715
03:55:37.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869737715
GPR[SPVESU]-1659869737715
GPR[EPVESU]-1659869737717
GPR[EPVA]-1659869737717
GPR[ESUN]-1659869737717
GPR[SSUN]-1659869737717
03:55:37.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===481
03:55:37.739 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
GPR[SPS]-1659869737741
this.rightBlock.setBounds(true, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(false, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), true);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), false);
GPR[EPS]-1659869737741
GPR[SPVA]-1659869737741
GPR[SPVS]-1659869737741
GPR[SPVAP]-1659869737741
03:55:37.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:38.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869738155
GPR[SPVS]-1659869738155
GPR[SPVAP]-1659869738155
03:55:38.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:38.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869738566
GPR[SPVS]-1659869738566
GPR[SPVAP]-1659869738566
03:55:38.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:38.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869738978
GPR[SPVS]-1659869738978
GPR[SPVAP]-1659869738978
03:55:38.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:39.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869739377
GPR[SPVESU]-1659869739377
GPR[EPVESU]-1659869739378
GPR[EPVA]-1659869739378
GPR[SPS]-1659869739379
this.rightBlock.setBounds(c5, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(h, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(w, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(container, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(g2, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(constraint, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(this.centerBlock, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(this.topBlock, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(this.bottomBlock, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(this.leftBlock, new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), c5);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), h);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), w);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), container);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), g2);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), constraint);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), this.centerBlock);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), this.topBlock);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), this.bottomBlock);
this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]), this.leftBlock);
GPR[EPS]-1659869739379
GPR[SPVA]-1659869739379
GPR[SPVS]-1659869739379
GPR[SPVAP]-1659869739379
03:55:39.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:39.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869739786
GPR[SPVS]-1659869739786
GPR[SPVAP]-1659869739786
03:55:39.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:40.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869740201
GPR[SPVS]-1659869740201
GPR[SPVAP]-1659869740201
03:55:40.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:40.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869740605
GPR[SPVS]-1659869740605
GPR[SPVAP]-1659869740605
03:55:40.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:41.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869741004
GPR[SPVS]-1659869741004
GPR[SPVAP]-1659869741004
03:55:41.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:41.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869741408
GPR[SPVS]-1659869741408
GPR[SPVAP]-1659869741408
03:55:41.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:41.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869741812
GPR[SPVS]-1659869741812
GPR[SPVAP]-1659869741812
03:55:41.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:42.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869742214
GPR[SPVS]-1659869742214
GPR[SPVAP]-1659869742214
03:55:42.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:42.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869742618
GPR[SPVS]-1659869742618
GPR[SPVAP]-1659869742618
03:55:42.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:43.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869743034
GPR[SPVS]-1659869743034
GPR[SPVAP]-1659869743034
03:55:43.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:43.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869743438
GPR[SPVS]-1659869743438
GPR[SPVAP]-1659869743438
03:55:43.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:43.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869743846
GPR[SPVS]-1659869743846
GPR[SPVAP]-1659869743846
03:55:43.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:44.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869744243
GPR[SPVS]-1659869744243
GPR[SPVAP]-1659869744243
03:55:44.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:44.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869744650
GPR[SPVS]-1659869744650
GPR[SPVAP]-1659869744650
03:55:44.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:45.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869745050
GPR[SPVS]-1659869745050
GPR[SPVAP]-1659869745050
03:55:45.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:45.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869745451
GPR[SPVS]-1659869745451
GPR[SPVAP]-1659869745451
03:55:45.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:45.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869745861
GPR[SPVS]-1659869745861
GPR[SPVAP]-1659869745861
03:55:45.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:46.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869746262
GPR[SPVS]-1659869746262
GPR[SPVAP]-1659869746262
03:55:46.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:46.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869746658
GPR[SPVS]-1659869746658
GPR[SPVAP]-1659869746658
03:55:46.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:47.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869747064
GPR[SPVS]-1659869747064
GPR[SPVAP]-1659869747064
03:55:47.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:47.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869747470
GPR[SPVESU]-1659869747470
GPR[EPVESU]-1659869747471
GPR[EPVA]-1659869747471
GPR[SPS]-1659869747471
GPR[EPS]-1659869747472
GPR[SPS]-1659869747472
this.rightBlock.arrange(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
this.rightBlock.setID(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
GPR[EPS]-1659869747474
GPR[SPVA]-1659869747474
GPR[SPVS]-1659869747474
GPR[SPVAP]-1659869747474
03:55:47.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:47.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869747879
GPR[SPVS]-1659869747879
GPR[SPVAP]-1659869747879
03:55:47.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:55:48.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659869748278
GPR[SPVESU]-1659869748278
GPR[EPVESU]-1659869748279
GPR[EPVA]-1659869748279
GPR[SPS]-1659869748279
GPR[EPS]-1659869748280
GPR[SPS]-1659869748280
if (this.rightBlock != null) {


}

if (w != null) {


}

if (w != null) {


}

if (h != null) {


}

if (w != null) {


}

if (h != null) {


}

GPR[EPS]-1659869748280
GPR[SPVA]-1659869748280
GPR[SPVS]-1659869748280
GPR[SPVAP]-1659869748280
03:55:48.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869748713
03:55:48.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:55:48.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869748714
GPR[EPVATF]-1659869748776
GPR[SPVATR]-1659869748776
GPR[EPVATR]-1659869760246
03:56:00.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869760246
GPR[SPVS]-1659869760246
GPR[SPVAP]-1659869760246
03:56:00.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869760690
03:56:00.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:56:00.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869760690
GPR[EPVATF]-1659869760756
GPR[SPVATR]-1659869760757
GPR[EPVATR]-1659869771013
03:56:11.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869771014
GPR[SPVS]-1659869771014
GPR[SPVAP]-1659869771014
03:56:11.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869771445
03:56:11.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:56:11.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869771445
GPR[EPVATF]-1659869771512
GPR[SPVATR]-1659869771512
GPR[EPVATR]-1659869781871
03:56:21.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869781871
GPR[SPVS]-1659869781871
GPR[SPVAP]-1659869781871
03:56:21.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869782310
03:56:22.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:56:22.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869782310
GPR[EPVATF]-1659869782375
GPR[SPVATR]-1659869782375
GPR[EPVATR]-1659869792757
03:56:32.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869792757
GPR[SPVS]-1659869792757
GPR[SPVAP]-1659869792757
03:56:32.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869793190
03:56:33.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:56:33.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869793190
GPR[EPVATF]-1659869793255
GPR[SPVATR]-1659869793255
GPR[EPVATR]-1659869803674
03:56:43.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869803674
GPR[SPVS]-1659869803674
GPR[SPVAP]-1659869803674
03:56:43.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869804106
03:56:44.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:56:44.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869804106
GPR[EPVATF]-1659869804172
GPR[SPVATR]-1659869804172
GPR[EPVATR]-1659869814446
03:56:54.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869814447
GPR[SPVESU]-1659869814447
GPR[EPVESU]-1659869814448
GPR[EPVA]-1659869814448
GPR[SPS]-1659869814448
if (this.rightBlock == null) {
    return null;
}

if (this.rightBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.rightBlock);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659869814449
GPR[SPVA]-1659869814449
GPR[SPVS]-1659869814449
GPR[SPVAP]-1659869814449
03:56:54.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869814883
03:56:54.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:56:54.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869814883
GPR[EPVATF]-1659869814948
GPR[SPVATR]-1659869814948
GPR[EPVATR]-1659869825218
03:57:05.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869825219
GPR[SPVS]-1659869825219
GPR[SPVAP]-1659869825219
03:57:05.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869825662
03:57:05.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:57:05.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869825662
GPR[EPVATF]-1659869825731
GPR[SPVATR]-1659869825731
GPR[EPVATR]-1659869836246
03:57:16.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869836247
GPR[SPVS]-1659869836247
GPR[SPVAP]-1659869836247
03:57:16.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869836706
03:57:16.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:57:16.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869836706
GPR[EPVATF]-1659869836772
GPR[SPVATR]-1659869836772
GPR[EPVATR]-1659869847017
03:57:27.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869847017
GPR[SPVS]-1659869847017
GPR[SPVAP]-1659869847017
03:57:27.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869847461
03:57:27.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:57:27.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869847462
GPR[EPVATF]-1659869847525
GPR[SPVATR]-1659869847525
GPR[EPVATR]-1659869857767
03:57:37.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869857767
GPR[SPVS]-1659869857767
GPR[SPVAP]-1659869857767
03:57:37.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869858206
03:57:38.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:57:38.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869858206
GPR[EPVATF]-1659869858271
GPR[SPVATR]-1659869858271
GPR[EPVATR]-1659869868421
03:57:48.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869868422
GPR[SPVS]-1659869868422
GPR[SPVAP]-1659869868422
03:57:48.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869868857
03:57:48.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:57:48.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869868857
GPR[EPVATF]-1659869868920
GPR[SPVATR]-1659869868920
GPR[EPVATR]-1659869879250
03:57:59.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869879250
GPR[SPVS]-1659869879250
GPR[SPVAP]-1659869879250
03:57:59.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869879680
03:57:59.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:57:59.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869879680
GPR[EPVATF]-1659869879744
GPR[SPVATR]-1659869879744
GPR[EPVATR]-1659869889837
03:58:09.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869889837
GPR[SPVS]-1659869889837
GPR[SPVAP]-1659869889837
03:58:09.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869890276
03:58:10.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:58:10.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869890276
GPR[EPVATF]-1659869890341
GPR[SPVATR]-1659869890341
GPR[EPVATR]-1659869900417
03:58:20.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869900417
GPR[SPVS]-1659869900417
GPR[SPVAP]-1659869900417
03:58:20.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869900866
03:58:20.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:58:20.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869900866
GPR[EPVATF]-1659869900932
GPR[SPVATR]-1659869900932
GPR[EPVATR]-1659869911203
03:58:31.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869911203
GPR[SPVS]-1659869911203
GPR[SPVAP]-1659869911203
03:58:31.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869911642
03:58:31.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:58:31.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869911642
GPR[EPVATF]-1659869911708
GPR[SPVATR]-1659869911708
GPR[EPVATR]-1659869922283
03:58:42.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869922283
GPR[SPVS]-1659869922283
GPR[SPVAP]-1659869922283
03:58:42.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869922726
03:58:42.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:58:42.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869922726
GPR[EPVATF]-1659869922788
GPR[SPVATR]-1659869922788
GPR[EPVATR]-1659869933047
03:58:53.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869933047
GPR[SPVS]-1659869933047
GPR[SPVAP]-1659869933047
03:58:53.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869933487
03:58:53.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:58:53.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869933487
GPR[EPVATF]-1659869933552
GPR[SPVATR]-1659869933552
GPR[EPVATR]-1659869943705
03:59:03.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869943706
GPR[SPVESU]-1659869943706
GPR[EPVESU]-1659869943707
GPR[EPVA]-1659869943707
GPR[SPS]-1659869943707
GPR[EPS]-1659869943708
GPR[SPS]-1659869943708
GPR[EPS]-1659869943708
GPR[SPS]-1659869943708
GPR[EPS]-1659869943708
GPR[SPS]-1659869943708

GPR[EPS]-1659869943708
GPR[SPVA]-1659869943708
GPR[SPVS]-1659869943708
GPR[SPVAP]-1659869943708
03:59:03.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869944140
03:59:04.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:59:04.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869944141
GPR[EPVATF]-1659869944203
GPR[SPVATR]-1659869944203
GPR[EPVATR]-1659869954423
03:59:14.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869954423
GPR[SPVESU]-1659869954423
GPR[EPVESU]-1659869954425
GPR[EPVA]-1659869954425
GPR[ESUN]-1659869954425
GPR[SSUN]-1659869954425
03:59:14.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===480
03:59:14.443 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
GPR[SPS]-1659869954444
if (this.rightBlock == null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
GPR[EPS]-1659869954445
GPR[SPVA]-1659869954445
GPR[SPVS]-1659869954445
GPR[SPVAP]-1659869954445
03:59:14.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869954879
03:59:14.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:59:14.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869954879
GPR[EPVATF]-1659869954944
GPR[SPVATR]-1659869954944
GPR[EPVATR]-1659869965080
03:59:25.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869965080
GPR[SPVESU]-1659869965080
GPR[EPVESU]-1659869965082
GPR[EPVA]-1659869965082
GPR[SPS]-1659869965082
GPR[EPS]-1659869965082
GPR[SPS]-1659869965082
GPR[EPS]-1659869965082
GPR[SPS]-1659869965082
GPR[EPS]-1659869965082
GPR[SPS]-1659869965082
GPR[EPS]-1659869965083
GPR[SPS]-1659869965083
if (this.rightBlock != null) {


}

GPR[EPS]-1659869965083
GPR[SPVA]-1659869965083
GPR[SPVS]-1659869965083
GPR[SPVAP]-1659869965083
03:59:25.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869965526
03:59:25.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:59:25.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869965526
GPR[EPVATF]-1659869965592
GPR[SPVATR]-1659869965592
GPR[EPVATR]-1659869975840
03:59:35.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869975840
GPR[SPVESU]-1659869975840
GPR[EPVESU]-1659869975841
GPR[EPVA]-1659869975841
GPR[SPS]-1659869975841
if (this.rightBlock == null) {
    return null;
}

if (this.rightBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.rightBlock);
}

GPR[EPS]-1659869975841
GPR[SPVA]-1659869975841
GPR[SPVS]-1659869975841
GPR[SPVAP]-1659869975841
03:59:35.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869976279
03:59:36.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:59:36.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869976279
GPR[EPVATF]-1659869976344
GPR[SPVATR]-1659869976344
GPR[EPVATR]-1659869986718
03:59:46.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869986718
GPR[SPVS]-1659869986718
GPR[SPVAP]-1659869986718
03:59:46.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869987158
03:59:47.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:59:47.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869987158
GPR[EPVATF]-1659869987220
GPR[SPVATR]-1659869987220
GPR[EPVATR]-1659869997470
03:59:57.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659869997470
GPR[SPVESU]-1659869997470
GPR[EPVESU]-1659869997472
GPR[EPVA]-1659869997472
GPR[SPS]-1659869997472
GPR[EPS]-1659869997472
GPR[SPS]-1659869997472
clear();
	if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	clear();
GPR[EPS]-1659869997473
GPR[SPVA]-1659869997473
GPR[SPVS]-1659869997473
GPR[SPVAP]-1659869997473
03:59:57.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659869997910
03:59:57.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:59:57.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659869997910
GPR[EPVATF]-1659869997973
GPR[SPVATR]-1659869997974
GPR[EPVATR]-1659870008158
04:00:08.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870008158
GPR[SPVS]-1659870008158
GPR[SPVAP]-1659870008158
04:00:08.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870008591
04:00:08.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:00:08.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870008591
GPR[EPVATF]-1659870008655
GPR[SPVATR]-1659870008655
GPR[EPVATR]-1659870018867
04:00:18.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870018867
GPR[SPVESU]-1659870018867
GPR[EPVESU]-1659870018869
GPR[EPVA]-1659870018869
GPR[SPS]-1659870018869
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null
if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        
null

        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }

MOVE-BUGGY-STATEMENT

        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659870018869
GPR[SPVA]-1659870018869
GPR[SPVS]-1659870018869
GPR[SPVAP]-1659870018869
04:00:18.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:00:19.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870019287
GPR[SPVS]-1659870019287
GPR[SPVAP]-1659870019287
04:00:19.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:00:19.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870019724
GPR[SPVS]-1659870019724
GPR[SPVAP]-1659870019724
04:00:19.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870020159
04:00:20.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:00:20.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870020159
GPR[EPVATF]-1659870020224
GPR[SPVATR]-1659870020224
GPR[EPVATR]-1659870030365
04:00:30.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870030365
GPR[SPVS]-1659870030365
GPR[SPVAP]-1659870030365
04:00:30.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870030802
04:00:30.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:00:30.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870030803
GPR[EPVATF]-1659870030867
GPR[SPVATR]-1659870030867
GPR[EPVATR]-1659870041136
04:00:41.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870041136
GPR[SPVS]-1659870041136
GPR[SPVAP]-1659870041136
04:00:41.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870041572
04:00:41.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:00:41.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870041572
GPR[EPVATF]-1659870041636
GPR[SPVATR]-1659870041636
GPR[EPVATR]-1659870051877
04:00:51.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870051877
GPR[SPVS]-1659870051877
GPR[SPVAP]-1659870051877
04:00:51.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870052307
04:00:52.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:00:52.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870052308
GPR[EPVATF]-1659870052372
GPR[SPVATR]-1659870052372
GPR[EPVATR]-1659870062655
04:01:02.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870062655
GPR[SPVS]-1659870062655
GPR[SPVAP]-1659870062655
04:01:02.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870063093
04:01:03.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:01:03.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870063093
GPR[EPVATF]-1659870063156
GPR[SPVATR]-1659870063156
GPR[EPVATR]-1659870074453
04:01:14.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870074454
GPR[SPVS]-1659870074454
GPR[SPVAP]-1659870074454
04:01:14.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870074903
04:01:14.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:01:14.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870074903
GPR[EPVATF]-1659870074968
GPR[SPVATR]-1659870074968
GPR[EPVATR]-1659870086166
04:01:26.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870086166
GPR[SPVS]-1659870086166
GPR[SPVAP]-1659870086166
04:01:26.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870086603
04:01:26.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:01:26.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870086603
GPR[EPVATF]-1659870086668
GPR[SPVATR]-1659870086668
GPR[EPVATR]-1659870098161
04:01:38.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870098161
GPR[SPVS]-1659870098161
GPR[SPVAP]-1659870098161
04:01:38.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870098594
04:01:38.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:01:38.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870098594
GPR[EPVATF]-1659870098659
GPR[SPVATR]-1659870098659
GPR[EPVATR]-1659870108994
04:01:48.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870108994
GPR[SPVS]-1659870108994
GPR[SPVAP]-1659870108994
04:01:48.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870109441
04:01:49.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:01:49.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870109441
GPR[EPVATF]-1659870109504
GPR[SPVATR]-1659870109504
GPR[EPVATR]-1659870119686
04:01:59.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870119686
GPR[SPVS]-1659870119686
GPR[SPVAP]-1659870119686
04:01:59.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870120123
04:02:00.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:02:00.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870120123
GPR[EPVATF]-1659870120185
GPR[SPVATR]-1659870120185
GPR[EPVATR]-1659870130417
04:02:10.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870130417
GPR[SPVS]-1659870130417
GPR[SPVAP]-1659870130417
04:02:10.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870130875
04:02:10.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:02:10.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870130875
GPR[EPVATF]-1659870130940
GPR[SPVATR]-1659870130940
GPR[EPVATR]-1659870141146
04:02:21.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870141146
GPR[SPVS]-1659870141146
GPR[SPVAP]-1659870141146
04:02:21.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870141583
04:02:21.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:02:21.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870141583
GPR[EPVATF]-1659870141647
GPR[SPVATR]-1659870141647
GPR[EPVATR]-1659870151754
04:02:31.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870151754
GPR[SPVS]-1659870151754
GPR[SPVAP]-1659870151754
04:02:31.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870152194
04:02:32.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:02:32.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870152194
GPR[EPVATF]-1659870152260
GPR[SPVATR]-1659870152260
GPR[EPVATR]-1659870162312
04:02:42.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870162312
GPR[SPVS]-1659870162312
GPR[SPVAP]-1659870162312
04:02:42.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870162748
04:02:42.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:02:42.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870162748
GPR[EPVATF]-1659870162812
GPR[SPVATR]-1659870162812
GPR[EPVATR]-1659870172925
04:02:52.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870172925
GPR[SPVS]-1659870172925
GPR[SPVAP]-1659870172925
04:02:52.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870173362
04:02:53.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:02:53.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870173362
GPR[EPVATF]-1659870173428
GPR[SPVATR]-1659870173428
GPR[EPVATR]-1659870183793
04:03:03.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870183793
GPR[SPVS]-1659870183793
GPR[SPVAP]-1659870183793
04:03:03.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870184230
04:03:04.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:03:04.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870184230
GPR[EPVATF]-1659870184291
GPR[SPVATR]-1659870184291
GPR[EPVATR]-1659870194519
04:03:14.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870194519
GPR[SPVS]-1659870194519
GPR[SPVAP]-1659870194519
04:03:14.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:14.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870194934
GPR[SPVESU]-1659870194934
GPR[EPVESU]-1659870194936
GPR[EPVA]-1659870194936
GPR[SPS]-1659870194936

GPR[EPS]-1659870194936
GPR[SPVA]-1659870194936
GPR[SPVS]-1659870194936
GPR[SPVAP]-1659870194936
04:03:14.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870195371
04:03:15.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:03:15.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870195371
GPR[EPVATF]-1659870195435
GPR[SPVATR]-1659870195435
GPR[EPVATR]-1659870205581
04:03:25.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870205581
GPR[SPVESU]-1659870205581
GPR[EPVESU]-1659870205583
GPR[EPVA]-1659870205583
GPR[ESUN]-1659870205583
GPR[SSUN]-1659870205583
04:03:25.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===477
04:03:25.599 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
GPR[SPS]-1659870205600
this.leftBlock.setBounds(true, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(false, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), true);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), false);
GPR[EPS]-1659870205601
GPR[SPVA]-1659870205601
GPR[SPVS]-1659870205601
GPR[SPVAP]-1659870205601
04:03:25.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:26.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870206004
GPR[SPVS]-1659870206004
GPR[SPVAP]-1659870206004
04:03:26.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:26.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870206407
GPR[SPVS]-1659870206407
GPR[SPVAP]-1659870206407
04:03:26.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:26.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870206808
GPR[SPVS]-1659870206808
GPR[SPVAP]-1659870206808
04:03:26.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:27.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870207206
GPR[SPVESU]-1659870207206
GPR[EPVESU]-1659870207208
GPR[EPVA]-1659870207208
GPR[SPS]-1659870207208
this.leftBlock.setBounds(c5, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(h, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(w, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(container, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(g2, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(constraint, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(this.centerBlock, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(this.topBlock, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(this.bottomBlock, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(this.rightBlock, new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), c5);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), h);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), w);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), container);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), g2);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), constraint);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), this.centerBlock);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), this.topBlock);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), this.bottomBlock);
this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]), this.rightBlock);
GPR[EPS]-1659870207208
GPR[SPVA]-1659870207208
GPR[SPVS]-1659870207208
GPR[SPVAP]-1659870207208
04:03:27.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:27.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870207633
GPR[SPVS]-1659870207633
GPR[SPVAP]-1659870207633
04:03:27.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:28.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870208035
GPR[SPVS]-1659870208035
GPR[SPVAP]-1659870208035
04:03:28.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:28.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870208441
GPR[SPVS]-1659870208441
GPR[SPVAP]-1659870208441
04:03:28.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:28.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870208848
GPR[SPVS]-1659870208848
GPR[SPVAP]-1659870208848
04:03:28.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:29.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870209258
GPR[SPVS]-1659870209258
GPR[SPVAP]-1659870209258
04:03:29.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:29.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870209671
GPR[SPVS]-1659870209671
GPR[SPVAP]-1659870209671
04:03:29.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:30.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870210067
GPR[SPVS]-1659870210067
GPR[SPVAP]-1659870210067
04:03:30.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:30.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870210488
GPR[SPVS]-1659870210488
GPR[SPVAP]-1659870210488
04:03:30.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:30.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870210889
GPR[SPVS]-1659870210889
GPR[SPVAP]-1659870210889
04:03:30.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:31.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870211300
GPR[SPVS]-1659870211300
GPR[SPVAP]-1659870211300
04:03:31.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:31.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870211701
GPR[SPVS]-1659870211701
GPR[SPVAP]-1659870211701
04:03:31.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:32.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870212102
GPR[SPVS]-1659870212102
GPR[SPVAP]-1659870212102
04:03:32.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:32.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870212506
GPR[SPVS]-1659870212506
GPR[SPVAP]-1659870212506
04:03:32.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:32.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870212921
GPR[SPVS]-1659870212921
GPR[SPVAP]-1659870212921
04:03:32.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:33.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870213322
GPR[SPVS]-1659870213322
GPR[SPVAP]-1659870213322
04:03:33.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:33.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870213727
GPR[SPVS]-1659870213727
GPR[SPVAP]-1659870213727
04:03:33.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:34.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870214127
GPR[SPVS]-1659870214127
GPR[SPVAP]-1659870214127
04:03:34.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:34.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870214531
GPR[SPVS]-1659870214531
GPR[SPVAP]-1659870214531
04:03:34.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:34.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870214936
GPR[SPVS]-1659870214936
GPR[SPVAP]-1659870214936
04:03:34.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:35.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870215345
GPR[SPVESU]-1659870215345
GPR[EPVESU]-1659870215347
GPR[EPVA]-1659870215347
GPR[SPS]-1659870215347
GPR[EPS]-1659870215347
GPR[SPS]-1659870215347
this.leftBlock.arrange(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
this.leftBlock.setID(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
GPR[EPS]-1659870215349
GPR[SPVA]-1659870215349
GPR[SPVS]-1659870215349
GPR[SPVAP]-1659870215349
04:03:35.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:35.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870215761
GPR[SPVS]-1659870215761
GPR[SPVAP]-1659870215761
04:03:35.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:03:36.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870216164
GPR[SPVESU]-1659870216164
GPR[EPVESU]-1659870216165
GPR[EPVA]-1659870216165
GPR[SPS]-1659870216165
GPR[EPS]-1659870216165
GPR[SPS]-1659870216165
if (this.leftBlock != null) {


}

if (h != null) {


}

if (w != null) {


}

if (h != null) {


}

GPR[EPS]-1659870216166
GPR[SPVA]-1659870216166
GPR[SPVS]-1659870216166
GPR[SPVAP]-1659870216166
04:03:36.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870216595
04:03:36.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:03:36.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870216595
GPR[EPVATF]-1659870216660
GPR[SPVATR]-1659870216660
GPR[EPVATR]-1659870226806
04:03:46.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870226806
GPR[SPVS]-1659870226806
GPR[SPVAP]-1659870226806
04:03:46.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870227239
04:03:47.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:03:47.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870227239
GPR[EPVATF]-1659870227303
GPR[SPVATR]-1659870227303
GPR[EPVATR]-1659870238670
04:03:58.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870238670
GPR[SPVS]-1659870238670
GPR[SPVAP]-1659870238670
04:03:58.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870239109
04:03:59.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:03:59.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870239109
GPR[EPVATF]-1659870239175
GPR[SPVATR]-1659870239175
GPR[EPVATR]-1659870249483
04:04:09.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870249483
GPR[SPVS]-1659870249483
GPR[SPVAP]-1659870249483
04:04:09.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870249929
04:04:09.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:04:09.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870249930
GPR[EPVATF]-1659870249992
GPR[SPVATR]-1659870249992
GPR[EPVATR]-1659870260427
04:04:20.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870260427
GPR[SPVESU]-1659870260427
GPR[EPVESU]-1659870260429
GPR[EPVA]-1659870260429
GPR[SPS]-1659870260429
if (this.leftBlock == null) {
    return null;
}

if (this.leftBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.leftBlock);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659870260429
GPR[SPVA]-1659870260429
GPR[SPVS]-1659870260429
GPR[SPVAP]-1659870260429
04:04:20.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870260862
04:04:20.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:04:20.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870260862
GPR[EPVATF]-1659870260923
GPR[SPVATR]-1659870260924
GPR[EPVATR]-1659870271167
04:04:31.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870271167
GPR[SPVS]-1659870271167
GPR[SPVAP]-1659870271167
04:04:31.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870271605
04:04:31.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:04:31.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870271605
GPR[EPVATF]-1659870271671
GPR[SPVATR]-1659870271672
GPR[EPVATR]-1659870281866
04:04:41.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870281866
GPR[SPVS]-1659870281866
GPR[SPVAP]-1659870281866
04:04:41.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870282293
04:04:42.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:04:42.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870282293
GPR[EPVATF]-1659870282356
GPR[SPVATR]-1659870282356
GPR[EPVATR]-1659870292450
04:04:52.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870292450
GPR[SPVS]-1659870292450
GPR[SPVAP]-1659870292450
04:04:52.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870292918
04:04:52.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:04:52.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870292918
GPR[EPVATF]-1659870292984
GPR[SPVATR]-1659870292984
GPR[EPVATR]-1659870303198
04:05:03.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870303198
GPR[SPVS]-1659870303198
GPR[SPVAP]-1659870303198
04:05:03.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870303629
04:05:03.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:05:03.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870303629
GPR[EPVATF]-1659870303696
GPR[SPVATR]-1659870303696
GPR[EPVATR]-1659870313967
04:05:13.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870313967
GPR[SPVS]-1659870313967
GPR[SPVAP]-1659870313967
04:05:13.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870314405
04:05:14.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:05:14.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870314405
GPR[EPVATF]-1659870314467
GPR[SPVATR]-1659870314467
GPR[EPVATR]-1659870324766
04:05:24.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870324766
GPR[SPVS]-1659870324766
GPR[SPVAP]-1659870324766
04:05:24.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870325205
04:05:25.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:05:25.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870325205
GPR[EPVATF]-1659870325272
GPR[SPVATR]-1659870325272
GPR[EPVATR]-1659870335554
04:05:35.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870335554
GPR[SPVS]-1659870335554
GPR[SPVAP]-1659870335554
04:05:35.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870335994
04:05:35.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:05:35.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870335994
GPR[EPVATF]-1659870336060
GPR[SPVATR]-1659870336060
GPR[EPVATR]-1659870346440
04:05:46.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870346440
GPR[SPVESU]-1659870346440
GPR[EPVESU]-1659870346442
GPR[EPVA]-1659870346442
GPR[SPS]-1659870346442
GPR[EPS]-1659870346442
GPR[SPS]-1659870346442
GPR[EPS]-1659870346442
GPR[SPS]-1659870346442
GPR[EPS]-1659870346443
GPR[SPS]-1659870346443

GPR[EPS]-1659870346443
GPR[SPVA]-1659870346443
GPR[SPVS]-1659870346443
GPR[SPVAP]-1659870346443
04:05:46.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870346881
04:05:46.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:05:46.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870346881
GPR[EPVATF]-1659870346945
GPR[SPVATR]-1659870346945
GPR[EPVATR]-1659870357261
04:05:57.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870357261
GPR[SPVESU]-1659870357261
GPR[EPVESU]-1659870357262
GPR[EPVA]-1659870357262
GPR[ESUN]-1659870357262
GPR[SSUN]-1659870357262
04:05:57.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===476
04:05:57.277 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
GPR[SPS]-1659870357279
if (this.leftBlock == null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
GPR[EPS]-1659870357282
GPR[SPVA]-1659870357282
GPR[SPVS]-1659870357282
GPR[SPVAP]-1659870357282
04:05:57.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870357751
04:05:57.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:05:57.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870357751
GPR[EPVATF]-1659870357817
GPR[SPVATR]-1659870357817
GPR[EPVATR]-1659870367967
04:06:07.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870367967
GPR[SPVESU]-1659870367967
GPR[EPVESU]-1659870367969
GPR[EPVA]-1659870367969
GPR[SPS]-1659870367969
GPR[EPS]-1659870367969
GPR[SPS]-1659870367969
GPR[EPS]-1659870367969
GPR[SPS]-1659870367969
GPR[EPS]-1659870367970
GPR[SPS]-1659870367970
GPR[EPS]-1659870367970
GPR[SPS]-1659870367970
if (this.leftBlock != null) {


}

GPR[EPS]-1659870367970
GPR[SPVA]-1659870367970
GPR[SPVS]-1659870367970
GPR[SPVAP]-1659870367970
04:06:07.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870368404
04:06:08.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:06:08.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870368404
GPR[EPVATF]-1659870368468
GPR[SPVATR]-1659870368468
GPR[EPVATR]-1659870378520
04:06:18.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870378520
GPR[SPVESU]-1659870378520
GPR[EPVESU]-1659870378522
GPR[EPVA]-1659870378522
GPR[SPS]-1659870378522
if (this.leftBlock == null) {
    return null;
}

if (this.leftBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.leftBlock);
}

GPR[EPS]-1659870378522
GPR[SPVA]-1659870378522
GPR[SPVS]-1659870378522
GPR[SPVAP]-1659870378522
04:06:18.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870378962
04:06:18.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:06:18.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870378962
GPR[EPVATF]-1659870379028
GPR[SPVATR]-1659870379028
GPR[EPVATR]-1659870389084
04:06:29.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870389084
GPR[SPVS]-1659870389084
GPR[SPVAP]-1659870389084
04:06:29.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870389521
04:06:29.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:06:29.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870389522
GPR[EPVATF]-1659870389585
GPR[SPVATR]-1659870389585
GPR[EPVATR]-1659870400198
04:06:40.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870400198
GPR[SPVESU]-1659870400198
GPR[EPVESU]-1659870400200
GPR[EPVA]-1659870400200
GPR[SPS]-1659870400200
GPR[EPS]-1659870400200
GPR[SPS]-1659870400200
clear();
	if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	clear();
GPR[EPS]-1659870400201
GPR[SPVA]-1659870400201
GPR[SPVS]-1659870400201
GPR[SPVAP]-1659870400201
04:06:40.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870400634
04:06:40.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:06:40.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870400634
GPR[EPVATF]-1659870400696
GPR[SPVATR]-1659870400696
GPR[EPVATR]-1659870410842
04:06:50.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870410842
GPR[SPVS]-1659870410842
GPR[SPVAP]-1659870410842
04:06:50.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870411286
04:06:51.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:06:51.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870411286
GPR[EPVATF]-1659870411349
GPR[SPVATR]-1659870411349
GPR[EPVATR]-1659870421446
04:07:01.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870421446
GPR[SPVESU]-1659870421446
GPR[EPVESU]-1659870421447
GPR[EPVA]-1659870421447
GPR[SPS]-1659870421447
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null
if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        
null

        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659870421448
GPR[SPVA]-1659870421448
GPR[SPVS]-1659870421448
GPR[SPVAP]-1659870421448
04:07:01.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:07:01.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870421861
GPR[SPVS]-1659870421861
GPR[SPVAP]-1659870421861
04:07:01.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:07:02.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870422279
GPR[SPVS]-1659870422279
GPR[SPVAP]-1659870422279
04:07:02.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870422713
04:07:02.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:07:02.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870422713
GPR[EPVATF]-1659870422777
GPR[SPVATR]-1659870422777
GPR[EPVATR]-1659870433190
04:07:13.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870433190
GPR[SPVS]-1659870433191
GPR[SPVAP]-1659870433191
04:07:13.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870433630
04:07:13.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:07:13.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870433630
GPR[EPVATF]-1659870433695
GPR[SPVATR]-1659870433696
GPR[EPVATR]-1659870443779
04:07:23.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870443779
GPR[SPVS]-1659870443779
GPR[SPVAP]-1659870443779
04:07:23.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870444208
04:07:24.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:07:24.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870444208
GPR[EPVATF]-1659870444271
GPR[SPVATR]-1659870444271
GPR[EPVATR]-1659870454930
04:07:34.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870454930
GPR[SPVS]-1659870454930
GPR[SPVAP]-1659870454930
04:07:34.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870455363
04:07:35.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:07:35.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870455363
GPR[EPVATF]-1659870455428
GPR[SPVATR]-1659870455428
GPR[EPVATR]-1659870465734
04:07:45.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870465734
GPR[SPVS]-1659870465734
GPR[SPVAP]-1659870465734
04:07:45.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870466174
04:07:46.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:07:46.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870466175
GPR[EPVATF]-1659870466239
GPR[SPVATR]-1659870466239
GPR[EPVATR]-1659870476598
04:07:56.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870476598
GPR[SPVS]-1659870476598
GPR[SPVAP]-1659870476598
04:07:56.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870477031
04:07:57.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:07:57.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870477031
GPR[EPVATF]-1659870477095
GPR[SPVATR]-1659870477095
GPR[EPVATR]-1659870487462
04:08:07.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870487462
GPR[SPVS]-1659870487462
GPR[SPVAP]-1659870487462
04:08:07.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870487907
04:08:07.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:08:07.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870487907
GPR[EPVATF]-1659870487971
GPR[SPVATR]-1659870487971
GPR[EPVATR]-1659870498154
04:08:18.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870498154
GPR[SPVS]-1659870498154
GPR[SPVAP]-1659870498154
04:08:18.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870498583
04:08:18.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:08:18.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870498583
GPR[EPVATF]-1659870498648
GPR[SPVATR]-1659870498648
GPR[EPVATR]-1659870508902
04:08:28.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870508902
GPR[SPVS]-1659870508902
GPR[SPVAP]-1659870508902
04:08:28.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870509339
04:08:29.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:08:29.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870509339
GPR[EPVATF]-1659870509403
GPR[SPVATR]-1659870509403
GPR[EPVATR]-1659870519509
04:08:39.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870519509
GPR[SPVS]-1659870519509
GPR[SPVAP]-1659870519509
04:08:39.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870519943
04:08:39.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:08:39.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870519943
GPR[EPVATF]-1659870520007
GPR[SPVATR]-1659870520007
GPR[EPVATR]-1659870530146
04:08:50.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870530146
GPR[SPVS]-1659870530146
GPR[SPVAP]-1659870530146
04:08:50.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870530577
04:08:50.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:08:50.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870530577
GPR[EPVATF]-1659870530640
GPR[SPVATR]-1659870530640
GPR[EPVATR]-1659870540751
04:09:00.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870540751
GPR[SPVS]-1659870540751
GPR[SPVAP]-1659870540751
04:09:00.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870541185
04:09:01.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:09:01.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870541185
GPR[EPVATF]-1659870541249
GPR[SPVATR]-1659870541249
GPR[EPVATR]-1659870552390
04:09:12.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870552390
GPR[SPVS]-1659870552390
GPR[SPVAP]-1659870552390
04:09:12.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870552828
04:09:12.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:09:12.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870552828
GPR[EPVATF]-1659870552892
GPR[SPVATR]-1659870552892
GPR[EPVATR]-1659870563297
04:09:23.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870563297
GPR[SPVS]-1659870563297
GPR[SPVAP]-1659870563297
04:09:23.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870563733
04:09:23.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:09:23.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870563733
GPR[EPVATF]-1659870563799
GPR[SPVATR]-1659870563799
GPR[EPVATR]-1659870574005
04:09:34.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870574005
GPR[SPVS]-1659870574005
GPR[SPVAP]-1659870574006
04:09:34.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870574442
04:09:34.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:09:34.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870574442
GPR[EPVATF]-1659870574508
GPR[SPVATR]-1659870574508
GPR[EPVATR]-1659870584747
04:09:44.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870584747
GPR[SPVS]-1659870584747
GPR[SPVAP]-1659870584747
04:09:44.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870585185
04:09:45.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:09:45.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870585185
GPR[EPVATF]-1659870585252
GPR[SPVATR]-1659870585252
GPR[EPVATR]-1659870595415
04:09:55.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870595415
GPR[SPVS]-1659870595415
GPR[SPVAP]-1659870595415
04:09:55.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:09:55.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870595824
GPR[SPVESU]-1659870595824
GPR[EPVESU]-1659870595825
GPR[EPVA]-1659870595825
GPR[SPS]-1659870595825

GPR[EPS]-1659870595825
GPR[SPVA]-1659870595825
GPR[SPVS]-1659870595825
GPR[SPVAP]-1659870595825
04:09:55.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870596258
04:09:56.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:09:56.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870596258
GPR[EPVATF]-1659870596321
GPR[SPVATR]-1659870596321
GPR[EPVATR]-1659870606523
04:10:06.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870606523
GPR[SPVESU]-1659870606523
GPR[EPVESU]-1659870606524
GPR[EPVA]-1659870606524
GPR[ESUN]-1659870606524
GPR[SSUN]-1659870606524
04:10:06.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===472
04:10:06.539 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
GPR[SPS]-1659870606540
if (this.bottomBlock == null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
GPR[EPS]-1659870606540
GPR[SPVA]-1659870606540
GPR[SPVS]-1659870606540
GPR[SPVAP]-1659870606540
04:10:06.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870606975
04:10:06.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:10:06.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870606975
GPR[EPVATF]-1659870607040
GPR[SPVATR]-1659870607040
GPR[EPVATR]-1659870617125
04:10:17.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870617125
GPR[SPVESU]-1659870617125
GPR[EPVESU]-1659870617127
GPR[EPVA]-1659870617127
GPR[SPS]-1659870617127
GPR[EPS]-1659870617127
GPR[SPS]-1659870617127
GPR[EPS]-1659870617127
GPR[SPS]-1659870617127
GPR[EPS]-1659870617127
GPR[SPS]-1659870617127
GPR[EPS]-1659870617128
GPR[SPS]-1659870617128
if (this.bottomBlock != null) {


}

GPR[EPS]-1659870617128
GPR[SPVA]-1659870617128
GPR[SPVS]-1659870617128
GPR[SPVAP]-1659870617128
04:10:17.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870617561
04:10:17.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:10:17.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870617562
GPR[EPVATF]-1659870617624
GPR[SPVATR]-1659870617624
GPR[EPVATR]-1659870627807
04:10:27.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870627807
GPR[SPVESU]-1659870627807
GPR[EPVESU]-1659870627810
GPR[EPVA]-1659870627810
GPR[SPS]-1659870627810
if (this.bottomBlock == null) {
    return null;
}

if (this.bottomBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.bottomBlock);
}

GPR[EPS]-1659870627810
GPR[SPVA]-1659870627810
GPR[SPVS]-1659870627810
GPR[SPVAP]-1659870627810
04:10:27.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870628246
04:10:28.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:10:28.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870628246
GPR[EPVATF]-1659870628310
GPR[SPVATR]-1659870628310
GPR[EPVATR]-1659870638486
04:10:38.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870638486
GPR[SPVS]-1659870638486
GPR[SPVAP]-1659870638486
04:10:38.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870638930
04:10:38.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:10:38.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870638930
GPR[EPVATF]-1659870638993
GPR[SPVATR]-1659870638993
GPR[EPVATR]-1659870649117
04:10:49.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870649117
GPR[SPVESU]-1659870649117
GPR[EPVESU]-1659870649118
GPR[EPVA]-1659870649118
GPR[SPS]-1659870649118
GPR[EPS]-1659870649119
GPR[SPS]-1659870649119
clear();
	if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	clear();
GPR[EPS]-1659870649119
GPR[SPVA]-1659870649119
GPR[SPVS]-1659870649119
GPR[SPVAP]-1659870649119
04:10:49.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870649553
04:10:49.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:10:49.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870649553
GPR[EPVATF]-1659870649615
GPR[SPVATR]-1659870649615
GPR[EPVATR]-1659870659879
04:10:59.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870659879
GPR[SPVS]-1659870659879
GPR[SPVAP]-1659870659879
04:10:59.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870660313
04:11:00.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:11:00.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870660313
GPR[EPVATF]-1659870660375
GPR[SPVATR]-1659870660375
GPR[EPVATR]-1659870670518
04:11:10.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870670518
GPR[SPVESU]-1659870670518
GPR[EPVESU]-1659870670519
GPR[EPVA]-1659870670519
GPR[SPS]-1659870670519
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null
if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        
null

        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659870670520
GPR[SPVA]-1659870670520
GPR[SPVS]-1659870670520
GPR[SPVAP]-1659870670520
04:11:10.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:11:10.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870670934
GPR[SPVS]-1659870670934
GPR[SPVAP]-1659870670934
04:11:10.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:11:11.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870671346
GPR[SPVS]-1659870671346
GPR[SPVAP]-1659870671346
04:11:11.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870671787
04:11:11.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:11:11.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870671787
GPR[EPVATF]-1659870671851
GPR[SPVATR]-1659870671851
GPR[EPVATR]-1659870682006
04:11:22.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870682006
GPR[SPVS]-1659870682006
GPR[SPVAP]-1659870682006
04:11:22.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870682439
04:11:22.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:11:22.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870682439
GPR[EPVATF]-1659870682503
GPR[SPVATR]-1659870682503
GPR[EPVATR]-1659870692820
04:11:32.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870692820
GPR[SPVS]-1659870692820
GPR[SPVAP]-1659870692820
04:11:32.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870693267
04:11:33.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:11:33.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870693267
GPR[EPVATF]-1659870693331
GPR[SPVATR]-1659870693331
GPR[EPVATR]-1659870703646
04:11:43.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870703646
GPR[SPVS]-1659870703646
GPR[SPVAP]-1659870703646
04:11:43.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870704089
04:11:44.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:11:44.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870704089
GPR[EPVATF]-1659870704153
GPR[SPVATR]-1659870704153
GPR[EPVATR]-1659870714943
04:11:54.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870714943
GPR[SPVS]-1659870714943
GPR[SPVAP]-1659870714943
04:11:54.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870715453
04:11:55.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:11:55.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870715453
GPR[EPVATF]-1659870715520
GPR[SPVATR]-1659870715520
GPR[EPVATR]-1659870725866
04:12:05.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870725866
GPR[SPVS]-1659870725866
GPR[SPVAP]-1659870725866
04:12:05.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870726299
04:12:06.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:12:06.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870726299
GPR[EPVATF]-1659870726359
GPR[SPVATR]-1659870726359
GPR[EPVATR]-1659870736546
04:12:16.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870736546
GPR[SPVS]-1659870736546
GPR[SPVAP]-1659870736546
04:12:16.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870736985
04:12:16.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:12:16.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870736985
GPR[EPVATF]-1659870737053
GPR[SPVATR]-1659870737053
GPR[EPVATR]-1659870747322
04:12:27.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870747322
GPR[SPVS]-1659870747322
GPR[SPVAP]-1659870747322
04:12:27.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870747761
04:12:27.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:12:27.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870747761
GPR[EPVATF]-1659870747824
GPR[SPVATR]-1659870747824
GPR[EPVATR]-1659870758241
04:12:38.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870758241
GPR[SPVS]-1659870758241
GPR[SPVAP]-1659870758241
04:12:38.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870758674
04:12:38.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:12:38.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870758674
GPR[EPVATF]-1659870758736
GPR[SPVATR]-1659870758736
GPR[EPVATR]-1659870768900
04:12:48.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870768900
GPR[SPVS]-1659870768900
GPR[SPVAP]-1659870768900
04:12:48.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870769326
04:12:49.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:12:49.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870769326
GPR[EPVATF]-1659870769389
GPR[SPVATR]-1659870769389
GPR[EPVATR]-1659870779673
04:12:59.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870779673
GPR[SPVS]-1659870779673
GPR[SPVAP]-1659870779673
04:12:59.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870780107
04:13:00.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:13:00.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870780107
GPR[EPVATF]-1659870780172
GPR[SPVATR]-1659870780172
GPR[EPVATR]-1659870790569
04:13:10.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870790569
GPR[SPVS]-1659870790569
GPR[SPVAP]-1659870790569
04:13:10.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870791016
04:13:11.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:13:11.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870791016
GPR[EPVATF]-1659870791080
GPR[SPVATR]-1659870791080
GPR[EPVATR]-1659870801402
04:13:21.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870801402
GPR[SPVS]-1659870801402
GPR[SPVAP]-1659870801402
04:13:21.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870801851
04:13:21.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:13:21.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870801852
GPR[EPVATF]-1659870801917
GPR[SPVATR]-1659870801917
GPR[EPVATR]-1659870812130
04:13:32.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870812131
GPR[SPVS]-1659870812131
GPR[SPVAP]-1659870812131
04:13:32.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870812573
04:13:32.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:13:32.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870812573
GPR[EPVATF]-1659870812636
GPR[SPVATR]-1659870812636
GPR[EPVATR]-1659870823100
04:13:43.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870823100
GPR[SPVS]-1659870823100
GPR[SPVAP]-1659870823100
04:13:43.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870823543
04:13:43.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:13:43.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870823543
GPR[EPVATF]-1659870823607
GPR[SPVATR]-1659870823607
GPR[EPVATR]-1659870833691
04:13:53.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870833691
GPR[SPVS]-1659870833691
GPR[SPVAP]-1659870833691
04:13:53.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870834124
04:13:54.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:13:54.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870834124
GPR[EPVATF]-1659870834189
GPR[SPVATR]-1659870834189
GPR[EPVATR]-1659870844490
04:14:04.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870844490
GPR[SPVS]-1659870844490
GPR[SPVAP]-1659870844490
04:14:04.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:14:04.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870844903
GPR[SPVESU]-1659870844903
GPR[EPVESU]-1659870844905
GPR[EPVA]-1659870844905
GPR[SPS]-1659870844905

GPR[EPS]-1659870844905
GPR[SPVA]-1659870844905
GPR[SPVS]-1659870844905
GPR[SPVAP]-1659870844905
04:14:04.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870845337
04:14:05.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:14:05.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870845337
GPR[EPVATF]-1659870845404
GPR[SPVATR]-1659870845404
GPR[EPVATR]-1659870855581
04:14:15.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870855581
GPR[SPVESU]-1659870855581
GPR[EPVESU]-1659870855583
GPR[EPVA]-1659870855583
GPR[ESUN]-1659870855583
GPR[SSUN]-1659870855583
04:14:15.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===468
04:14:15.599 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
GPR[SPS]-1659870855600
if (this.topBlock == null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
GPR[EPS]-1659870855601
GPR[SPVA]-1659870855601
GPR[SPVS]-1659870855601
GPR[SPVAP]-1659870855601
04:14:15.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870856060
04:14:16.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:14:16.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870856060
GPR[EPVATF]-1659870856124
GPR[SPVATR]-1659870856124
GPR[EPVATR]-1659870866425
04:14:26.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870866425
GPR[SPVESU]-1659870866425
GPR[EPVESU]-1659870866427
GPR[EPVA]-1659870866427
GPR[SPS]-1659870866427
GPR[EPS]-1659870866427
GPR[SPS]-1659870866427
GPR[EPS]-1659870866427
GPR[SPS]-1659870866427
GPR[EPS]-1659870866427
GPR[SPS]-1659870866427
GPR[EPS]-1659870866427
GPR[SPS]-1659870866428
if (this.topBlock != null) {


}

GPR[EPS]-1659870866428
GPR[SPVA]-1659870866428
GPR[SPVS]-1659870866428
GPR[SPVAP]-1659870866428
04:14:26.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870866859
04:14:26.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:14:26.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870866859
GPR[EPVATF]-1659870866924
GPR[SPVATR]-1659870866924
GPR[EPVATR]-1659870878329
04:14:38.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870878329
GPR[SPVESU]-1659870878329
GPR[EPVESU]-1659870878331
GPR[EPVA]-1659870878331
GPR[SPS]-1659870878331
if (this.topBlock == null) {
    return null;
}

if (this.topBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.topBlock);
}

GPR[EPS]-1659870878331
GPR[SPVA]-1659870878331
GPR[SPVS]-1659870878331
GPR[SPVAP]-1659870878331
04:14:38.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870878770
04:14:38.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:14:38.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870878770
GPR[EPVATF]-1659870878832
GPR[SPVATR]-1659870878832
GPR[EPVATR]-1659870889078
04:14:49.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870889078
GPR[SPVS]-1659870889078
GPR[SPVAP]-1659870889078
04:14:49.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870889516
04:14:49.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:14:49.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870889516
GPR[EPVATF]-1659870889579
GPR[SPVATR]-1659870889579
GPR[EPVATR]-1659870899756
04:14:59.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870899756
GPR[SPVESU]-1659870899756
GPR[EPVESU]-1659870899757
GPR[EPVA]-1659870899757
GPR[SPS]-1659870899758
GPR[EPS]-1659870899758
GPR[SPS]-1659870899758
clear();
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	clear();
GPR[EPS]-1659870899758
GPR[SPVA]-1659870899758
GPR[SPVS]-1659870899758
GPR[SPVAP]-1659870899758
04:14:59.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870900189
04:15:00.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:15:00.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870900189
GPR[EPVATF]-1659870900252
GPR[SPVATR]-1659870900252
GPR[EPVATR]-1659870910651
04:15:10.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870910651
GPR[SPVS]-1659870910651
GPR[SPVAP]-1659870910651
04:15:10.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870911094
04:15:11.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:15:11.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870911094
GPR[EPVATF]-1659870911159
GPR[SPVATR]-1659870911159
GPR[EPVATR]-1659870921363
04:15:21.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870921363
GPR[SPVESU]-1659870921363
GPR[EPVESU]-1659870921365
GPR[EPVA]-1659870921365
GPR[SPS]-1659870921365
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null
if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        
null

        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659870921365
GPR[SPVA]-1659870921365
GPR[SPVS]-1659870921365
GPR[SPVAP]-1659870921365
04:15:21.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:15:21.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870921773
GPR[SPVS]-1659870921773
GPR[SPVAP]-1659870921773
04:15:21.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:15:22.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659870922187
GPR[SPVS]-1659870922187
GPR[SPVAP]-1659870922187
04:15:22.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870922620
04:15:22.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:15:22.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870922620
GPR[EPVATF]-1659870922686
GPR[SPVATR]-1659870922686
GPR[EPVATR]-1659870932827
04:15:32.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870932827
GPR[SPVS]-1659870932828
GPR[SPVAP]-1659870932828
04:15:32.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870933265
04:15:33.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:15:33.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870933265
GPR[EPVATF]-1659870933327
GPR[SPVATR]-1659870933327
GPR[EPVATR]-1659870943575
04:15:43.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870943575
GPR[SPVS]-1659870943575
GPR[SPVAP]-1659870943575
04:15:43.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870944125
04:15:44.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:15:44.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870944125
GPR[EPVATF]-1659870944253
GPR[SPVATR]-1659870944253
GPR[EPVATR]-1659870956121
04:15:56.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870956121
GPR[SPVS]-1659870956121
GPR[SPVAP]-1659870956121
04:15:56.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870956551
04:15:56.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:15:56.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870956551
GPR[EPVATF]-1659870956616
GPR[SPVATR]-1659870956616
GPR[EPVATR]-1659870966930
04:16:06.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870966930
GPR[SPVS]-1659870966930
GPR[SPVAP]-1659870966930
04:16:06.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870967359
04:16:07.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:16:07.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870967359
GPR[EPVATF]-1659870967425
GPR[SPVATR]-1659870967425
GPR[EPVATR]-1659870977583
04:16:17.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870977583
GPR[SPVS]-1659870977583
GPR[SPVAP]-1659870977583
04:16:17.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870978021
04:16:18.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:16:18.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870978021
GPR[EPVATF]-1659870978084
GPR[SPVATR]-1659870978084
GPR[EPVATR]-1659870988369
04:16:28.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870988369
GPR[SPVS]-1659870988369
GPR[SPVAP]-1659870988369
04:16:28.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870988801
04:16:28.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:16:28.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870988801
GPR[EPVATF]-1659870988864
GPR[SPVATR]-1659870988864
GPR[EPVATR]-1659870999102
04:16:39.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659870999102
GPR[SPVS]-1659870999102
GPR[SPVAP]-1659870999102
04:16:39.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659870999542
04:16:39.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:16:39.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659870999542
GPR[EPVATF]-1659870999608
GPR[SPVATR]-1659870999608
GPR[EPVATR]-1659871009843
04:16:49.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871009843
GPR[SPVS]-1659871009843
GPR[SPVAP]-1659871009843
04:16:49.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871010274
04:16:50.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:16:50.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871010274
GPR[EPVATF]-1659871010337
GPR[SPVATR]-1659871010337
GPR[EPVATR]-1659871020674
04:17:00.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871020674
GPR[SPVS]-1659871020674
GPR[SPVAP]-1659871020674
04:17:00.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871021109
04:17:01.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:17:01.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871021109
GPR[EPVATF]-1659871021177
GPR[SPVATR]-1659871021177
GPR[EPVATR]-1659871031584
04:17:11.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871031584
GPR[SPVS]-1659871031584
GPR[SPVAP]-1659871031584
04:17:11.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871032013
04:17:12.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:17:12.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871032013
GPR[EPVATF]-1659871032076
GPR[SPVATR]-1659871032076
GPR[EPVATR]-1659871043272
04:17:23.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871043272
GPR[SPVS]-1659871043272
GPR[SPVAP]-1659871043272
04:17:23.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871043713
04:17:23.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:17:23.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871043714
GPR[EPVATF]-1659871043775
GPR[SPVATR]-1659871043775
GPR[EPVATR]-1659871053841
04:17:33.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871053842
GPR[SPVS]-1659871053842
GPR[SPVAP]-1659871053842
04:17:33.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871054271
04:17:34.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:17:34.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871054271
GPR[EPVATF]-1659871054335
GPR[SPVATR]-1659871054335
GPR[EPVATR]-1659871064517
04:17:44.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871064518
GPR[SPVS]-1659871064518
GPR[SPVAP]-1659871064518
04:17:44.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871064953
04:17:44.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:17:44.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871064953
GPR[EPVATF]-1659871065015
GPR[SPVATR]-1659871065015
GPR[EPVATR]-1659871075222
04:17:55.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871075222
GPR[SPVS]-1659871075222
GPR[SPVAP]-1659871075222
04:17:55.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871075656
04:17:55.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:17:55.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871075656
GPR[EPVATF]-1659871075719
GPR[SPVATR]-1659871075719
GPR[EPVATR]-1659871085861
04:18:05.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871085861
GPR[SPVS]-1659871085861
GPR[SPVAP]-1659871085861
04:18:05.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871086325
04:18:06.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:18:06.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871086325
GPR[EPVATF]-1659871086389
GPR[SPVATR]-1659871086389
GPR[EPVATR]-1659871096606
04:18:16.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871096606
GPR[SPVS]-1659871096606
GPR[SPVAP]-1659871096606
04:18:16.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:17.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871097015
GPR[SPVESU]-1659871097015
GPR[EPVESU]-1659871097016
GPR[EPVA]-1659871097016
GPR[SPS]-1659871097016

GPR[EPS]-1659871097017
GPR[SPVA]-1659871097017
GPR[SPVS]-1659871097017
GPR[SPVAP]-1659871097017
04:18:17.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871097470
04:18:17.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:18:17.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871097470
GPR[EPVATF]-1659871097536
GPR[SPVATR]-1659871097536
GPR[EPVATR]-1659871107652
04:18:27.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871107652
GPR[SPVESU]-1659871107652
GPR[EPVESU]-1659871107654
GPR[EPVA]-1659871107654
GPR[ESUN]-1659871107654
GPR[SSUN]-1659871107654
04:18:27.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===465
04:18:27.667 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.centerBlock.arrange(g2, c5);
GPR[SPS]-1659871107668
this.centerBlock.arrange(true, g2, c5);
this.centerBlock.arrange(false, g2, c5);
this.centerBlock.arrange(g2, true, c5);
this.centerBlock.arrange(g2, false, c5);
this.centerBlock.arrange(g2, c5, true);
this.centerBlock.arrange(g2, c5, false);
GPR[EPS]-1659871107668
GPR[SPVA]-1659871107668
GPR[SPVS]-1659871107668
GPR[SPVAP]-1659871107668
04:18:27.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:28.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871108082
GPR[SPVS]-1659871108082
GPR[SPVAP]-1659871108082
04:18:28.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:28.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871108489
GPR[SPVS]-1659871108489
GPR[SPVAP]-1659871108489
04:18:28.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:28.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871108890
GPR[SPVS]-1659871108890
GPR[SPVAP]-1659871108890
04:18:28.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:29.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871109293
GPR[SPVS]-1659871109293
GPR[SPVAP]-1659871109293
04:18:29.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:29.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871109692
GPR[SPVS]-1659871109692
GPR[SPVAP]-1659871109692
04:18:29.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:30.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871110096
GPR[SPVESU]-1659871110096
GPR[EPVESU]-1659871110097
GPR[EPVA]-1659871110097
GPR[SPS]-1659871110097
this.centerBlock.arrange(h, c5);
this.centerBlock.arrange(w, c5);
this.centerBlock.arrange(container, c5);
this.centerBlock.arrange(constraint, c5);
this.centerBlock.arrange(this.topBlock, c5);
this.centerBlock.arrange(this.bottomBlock, c5);
this.centerBlock.arrange(this.leftBlock, c5);
this.centerBlock.arrange(this.rightBlock, c5);
this.centerBlock.arrange( c5);
this.centerBlock.arrange(h, g2, c5);
this.centerBlock.arrange(w, g2, c5);
this.centerBlock.arrange(container, g2, c5);
this.centerBlock.arrange(constraint, g2, c5);
this.centerBlock.arrange(this.topBlock, g2, c5);
this.centerBlock.arrange(this.bottomBlock, g2, c5);
this.centerBlock.arrange(this.leftBlock, g2, c5);
this.centerBlock.arrange(this.rightBlock, g2, c5);
this.centerBlock.arrange(g2, h);
this.centerBlock.arrange(g2, w);
this.centerBlock.arrange(g2, container);
this.centerBlock.arrange(g2, constraint);
this.centerBlock.arrange(g2, this.topBlock);
this.centerBlock.arrange(g2, this.bottomBlock);
this.centerBlock.arrange(g2, this.leftBlock);
this.centerBlock.arrange(g2, this.rightBlock);
this.centerBlock.arrange(g2, );
this.centerBlock.arrange(g2, h, c5);
this.centerBlock.arrange(g2, w, c5);
this.centerBlock.arrange(g2, container, c5);
this.centerBlock.arrange(g2, constraint, c5);
this.centerBlock.arrange(g2, this.topBlock, c5);
this.centerBlock.arrange(g2, this.bottomBlock, c5);
this.centerBlock.arrange(g2, this.leftBlock, c5);
this.centerBlock.arrange(g2, this.rightBlock, c5);
this.centerBlock.arrange(g2, c5, h);
this.centerBlock.arrange(g2, c5, w);
this.centerBlock.arrange(g2, c5, container);
this.centerBlock.arrange(g2, c5, constraint);
this.centerBlock.arrange(g2, c5, this.topBlock);
this.centerBlock.arrange(g2, c5, this.bottomBlock);
this.centerBlock.arrange(g2, c5, this.leftBlock);
this.centerBlock.arrange(g2, c5, this.rightBlock);
GPR[EPS]-1659871110097
GPR[SPVA]-1659871110098
GPR[SPVS]-1659871110098
GPR[SPVAP]-1659871110098
04:18:30.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:30.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871110518
GPR[SPVS]-1659871110518
GPR[SPVAP]-1659871110518
04:18:30.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:30.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871110918
GPR[SPVS]-1659871110918
GPR[SPVAP]-1659871110918
04:18:30.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:31.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871111331
GPR[SPVS]-1659871111331
GPR[SPVAP]-1659871111331
04:18:31.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:31.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871111734
GPR[SPVS]-1659871111734
GPR[SPVAP]-1659871111734
04:18:31.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:32.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871112131
GPR[SPVS]-1659871112131
GPR[SPVAP]-1659871112131
04:18:32.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:32.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871112534
GPR[SPVS]-1659871112534
GPR[SPVAP]-1659871112534
04:18:32.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:32.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871112954
GPR[SPVS]-1659871112954
GPR[SPVAP]-1659871112954
04:18:32.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:33.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871113367
GPR[SPVS]-1659871113367
GPR[SPVAP]-1659871113367
04:18:33.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:33.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871113777
GPR[SPVS]-1659871113777
GPR[SPVAP]-1659871113777
04:18:33.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:34.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871114175
GPR[SPVS]-1659871114175
GPR[SPVAP]-1659871114175
04:18:34.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:34.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871114578
GPR[SPVS]-1659871114578
GPR[SPVAP]-1659871114578
04:18:34.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:34.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871114986
GPR[SPVS]-1659871114986
GPR[SPVAP]-1659871114986
04:18:34.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:35.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871115390
GPR[SPVS]-1659871115390
GPR[SPVAP]-1659871115390
04:18:35.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:35.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871115795
GPR[SPVS]-1659871115795
GPR[SPVAP]-1659871115795
04:18:35.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:36.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871116220
GPR[SPVS]-1659871116220
GPR[SPVAP]-1659871116220
04:18:36.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:36.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871116632
GPR[SPVS]-1659871116632
GPR[SPVAP]-1659871116632
04:18:36.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:37.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871117042
GPR[SPVS]-1659871117042
GPR[SPVAP]-1659871117042
04:18:37.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:37.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871117445
GPR[SPVS]-1659871117445
GPR[SPVAP]-1659871117445
04:18:37.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:37.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871117857
GPR[SPVS]-1659871117857
GPR[SPVAP]-1659871117858
04:18:37.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:38.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871118260
GPR[SPVS]-1659871118260
GPR[SPVAP]-1659871118260
04:18:38.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871118690
04:18:38.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:18:38.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871118690
GPR[EPVATF]-1659871118755
GPR[SPVATR]-1659871118755
GPR[EPVATR]-1659871129185
04:18:49.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871129185
GPR[SPVS]-1659871129185
GPR[SPVAP]-1659871129185
04:18:49.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:49.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871129585
GPR[SPVS]-1659871129585
GPR[SPVAP]-1659871129585
04:18:49.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:49.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871129988
GPR[SPVS]-1659871129988
GPR[SPVAP]-1659871129988
04:18:49.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:50.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871130403
GPR[SPVS]-1659871130403
GPR[SPVAP]-1659871130403
04:18:50.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:50.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871130808
GPR[SPVS]-1659871130809
GPR[SPVAP]-1659871130809
04:18:50.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:51.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871131080
GPR[SPVS]-1659871131080
GPR[SPVAP]-1659871131080
04:18:51.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:51.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871131485
GPR[SPVS]-1659871131485
GPR[SPVAP]-1659871131485
04:18:51.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:51.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871131885
GPR[SPVS]-1659871131885
GPR[SPVAP]-1659871131885
04:18:51.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:52.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871132286
GPR[SPVS]-1659871132286
GPR[SPVAP]-1659871132286
04:18:52.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:52.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871132688
GPR[SPVS]-1659871132688
GPR[SPVAP]-1659871132688
04:18:52.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:53.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871133090
GPR[SPVS]-1659871133090
GPR[SPVAP]-1659871133090
04:18:53.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:53.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871133491
GPR[SPVS]-1659871133491
GPR[SPVAP]-1659871133491
04:18:53.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:53.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871133895
GPR[SPVS]-1659871133895
GPR[SPVAP]-1659871133895
04:18:53.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:54.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871134302
GPR[SPVS]-1659871134302
GPR[SPVAP]-1659871134302
04:18:54.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:54.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871134706
GPR[SPVS]-1659871134706
GPR[SPVAP]-1659871134706
04:18:54.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:55.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871135114
GPR[SPVS]-1659871135114
GPR[SPVAP]-1659871135114
04:18:55.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:55.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871135515
GPR[SPVS]-1659871135515
GPR[SPVAP]-1659871135515
04:18:55.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:55.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871135922
GPR[SPVS]-1659871135922
GPR[SPVAP]-1659871135922
04:18:55.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:56.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871136322
GPR[SPVS]-1659871136322
GPR[SPVAP]-1659871136322
04:18:56.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:56.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871136731
GPR[SPVS]-1659871136731
GPR[SPVAP]-1659871136731
04:18:56.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:57.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871137138
GPR[SPVS]-1659871137138
GPR[SPVAP]-1659871137138
04:18:57.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:18:57.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871137537
GPR[SPVESU]-1659871137537
GPR[EPVESU]-1659871137539
GPR[EPVA]-1659871137539
GPR[SPS]-1659871137539
GPR[EPS]-1659871137540
GPR[SPS]-1659871137540
GPR[EPS]-1659871137541
GPR[SPS]-1659871137541
GPR[EPS]-1659871137541
GPR[SPS]-1659871137542
if (this.centerBlock != null) {


}

if (g2 != null) {


}

if (c5 != null) {


}

GPR[EPS]-1659871137542
GPR[SPVA]-1659871137542
GPR[SPVS]-1659871137542
GPR[SPVAP]-1659871137542
04:18:57.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871137977
04:18:57.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:18:57.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871137977
GPR[EPVATF]-1659871138039
GPR[SPVATR]-1659871138039
GPR[EPVATR]-1659871148136
04:19:08.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871148136
GPR[SPVS]-1659871148136
GPR[SPVAP]-1659871148136
04:19:08.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871148571
04:19:08.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:19:08.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871148571
GPR[EPVATF]-1659871148637
GPR[SPVATR]-1659871148637
GPR[EPVATR]-1659871158799
04:19:18.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871158799
GPR[SPVS]-1659871158799
GPR[SPVAP]-1659871158799
04:19:18.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871159231
04:19:19.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:19:19.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871159231
GPR[EPVATF]-1659871159295
GPR[SPVATR]-1659871159295
GPR[EPVATR]-1659871169608
04:19:29.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871169608
GPR[SPVESU]-1659871169608
GPR[EPVESU]-1659871169610
GPR[EPVA]-1659871169610
GPR[SPS]-1659871169610
if (this.centerBlock == null) {
    return null;
}

if (this.centerBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.centerBlock);
}

if (g2 == null) {
    return null;
}

if (g2 == null) {
    throw new IllegalArgumentException("Empty variable: " + g2);
}

if (c5 == null) {
    return null;
}

if (c5 == null) {
    throw new IllegalArgumentException("Empty variable: " + c5);
}

GPR[EPS]-1659871169610
GPR[SPVA]-1659871169610
GPR[SPVS]-1659871169610
GPR[SPVAP]-1659871169610
04:19:29.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871170051
04:19:30.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:19:30.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871170051
GPR[EPVATF]-1659871170113
GPR[SPVATR]-1659871170113
GPR[EPVATR]-1659871180473
04:19:40.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871180473
GPR[SPVS]-1659871180473
GPR[SPVAP]-1659871180473
04:19:40.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871180911
04:19:40.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:19:40.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871180911
GPR[EPVATF]-1659871180975
GPR[SPVATR]-1659871180975
GPR[EPVATR]-1659871191314
04:19:51.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871191314
GPR[SPVS]-1659871191314
GPR[SPVAP]-1659871191314
04:19:51.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871191759
04:19:51.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:19:51.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871191759
GPR[EPVATF]-1659871191826
GPR[SPVATR]-1659871191826
GPR[EPVATR]-1659871202289
04:20:02.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871202289
GPR[SPVS]-1659871202290
GPR[SPVAP]-1659871202290
04:20:02.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871202729
04:20:02.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:20:02.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871202729
GPR[EPVATF]-1659871202795
GPR[SPVATR]-1659871202795
GPR[EPVATR]-1659871213098
04:20:13.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871213098
GPR[SPVS]-1659871213098
GPR[SPVAP]-1659871213098
04:20:13.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871213531
04:20:13.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:20:13.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871213531
GPR[EPVATF]-1659871213595
GPR[SPVATR]-1659871213595
GPR[EPVATR]-1659871223726
04:20:23.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871223726
GPR[SPVS]-1659871223726
GPR[SPVAP]-1659871223726
04:20:23.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871224162
04:20:24.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:20:24.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871224162
GPR[EPVATF]-1659871224227
GPR[SPVATR]-1659871224227
GPR[EPVATR]-1659871234410
04:20:34.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871234411
GPR[SPVESU]-1659871234411
GPR[EPVESU]-1659871234412
GPR[EPVA]-1659871234412
GPR[SPS]-1659871234412
GPR[EPS]-1659871234412
GPR[SPS]-1659871234412
GPR[EPS]-1659871234413
GPR[SPS]-1659871234413
GPR[EPS]-1659871234413
GPR[SPS]-1659871234413

GPR[EPS]-1659871234413
GPR[SPVA]-1659871234413
GPR[SPVS]-1659871234413
GPR[SPVAP]-1659871234413
04:20:34.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871234854
04:20:34.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:20:34.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871234854
GPR[EPVATF]-1659871234920
GPR[SPVATR]-1659871234920
GPR[EPVATR]-1659871245387
04:20:45.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871245387
GPR[SPVESU]-1659871245387
GPR[EPVESU]-1659871245388
GPR[EPVA]-1659871245389
GPR[ESUN]-1659871245389
GPR[SSUN]-1659871245389
04:20:45.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===464
04:20:45.402 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
GPR[SPS]-1659871245403
if (this.centerBlock == null) {
            this.centerBlock.arrange(g2, c5);
        }
GPR[EPS]-1659871245403
GPR[SPVA]-1659871245403
GPR[SPVS]-1659871245404
GPR[SPVAP]-1659871245404
04:20:45.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871245828
04:20:45.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:20:45.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871245828
GPR[EPVATF]-1659871245892
GPR[SPVATR]-1659871245892
GPR[EPVATR]-1659871256139
04:20:56.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871256139
GPR[SPVESU]-1659871256139
GPR[EPVESU]-1659871256141
GPR[EPVA]-1659871256141
GPR[SPS]-1659871256141
GPR[EPS]-1659871256141
GPR[SPS]-1659871256141
GPR[EPS]-1659871256141
GPR[SPS]-1659871256141
GPR[EPS]-1659871256141
GPR[SPS]-1659871256141
GPR[EPS]-1659871256141
GPR[SPS]-1659871256141
if (this.centerBlock != null) {


}

GPR[EPS]-1659871256141
GPR[SPVA]-1659871256141
GPR[SPVS]-1659871256141
GPR[SPVAP]-1659871256141
04:20:56.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871256579
04:20:56.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:20:56.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871256579
GPR[EPVATF]-1659871256645
GPR[SPVATR]-1659871256645
GPR[EPVATR]-1659871266798
04:21:06.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871266799
GPR[SPVESU]-1659871266799
GPR[EPVESU]-1659871266800
GPR[EPVA]-1659871266800
GPR[SPS]-1659871266800
if (this.centerBlock == null) {
    return null;
}

if (this.centerBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.centerBlock);
}

GPR[EPS]-1659871266800
GPR[SPVA]-1659871266800
GPR[SPVS]-1659871266800
GPR[SPVAP]-1659871266800
04:21:06.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871267231
04:21:07.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:21:07.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871267231
GPR[EPVATF]-1659871267295
GPR[SPVATR]-1659871267295
GPR[EPVATR]-1659871277711
04:21:17.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871277711
GPR[SPVS]-1659871277711
GPR[SPVAP]-1659871277711
04:21:17.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871278151
04:21:18.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:21:18.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871278151
GPR[EPVATF]-1659871278215
GPR[SPVATR]-1659871278215
GPR[EPVATR]-1659871288307
04:21:28.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871288307
GPR[SPVESU]-1659871288307
GPR[EPVESU]-1659871288308
GPR[EPVA]-1659871288308
GPR[SPS]-1659871288308
GPR[EPS]-1659871288309
GPR[SPS]-1659871288309
clear();
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	clear();
GPR[EPS]-1659871288309
GPR[SPVA]-1659871288309
GPR[SPVS]-1659871288309
GPR[SPVAP]-1659871288309
04:21:28.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871288746
04:21:28.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:21:28.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871288746
GPR[EPVATF]-1659871288811
GPR[SPVATR]-1659871288811
GPR[EPVATR]-1659871299034
04:21:39.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871299034
GPR[SPVS]-1659871299034
GPR[SPVAP]-1659871299034
04:21:39.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871299472
04:21:39.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:21:39.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871299472
GPR[EPVATF]-1659871299537
GPR[SPVATR]-1659871299537
GPR[EPVATR]-1659871309956
04:21:49.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871309956
GPR[SPVESU]-1659871309956
GPR[EPVESU]-1659871309958
GPR[EPVA]-1659871309958
GPR[SPS]-1659871309958
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null
if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        
null


        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

MOVE-BUGGY-STATEMENT


        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

MOVE-BUGGY-STATEMENT


        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

MOVE-BUGGY-STATEMENT


        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

MOVE-BUGGY-STATEMENT


        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

MOVE-BUGGY-STATEMENT


        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659871309958
GPR[SPVA]-1659871309958
GPR[SPVS]-1659871309958
GPR[SPVAP]-1659871309958
04:21:49.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:50.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871310375
GPR[SPVS]-1659871310375
GPR[SPVAP]-1659871310375
04:21:50.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:50.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871310787
GPR[SPVS]-1659871310787
GPR[SPVAP]-1659871310787
04:21:50.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:51.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871311201
GPR[SPVS]-1659871311201
GPR[SPVAP]-1659871311201
04:21:51.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:51.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871311609
GPR[SPVS]-1659871311609
GPR[SPVAP]-1659871311609
04:21:51.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:52.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871312021
GPR[SPVS]-1659871312021
GPR[SPVAP]-1659871312021
04:21:52.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:52.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871312429
GPR[SPVS]-1659871312429
GPR[SPVAP]-1659871312429
04:21:52.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:52.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871312845
GPR[SPVS]-1659871312845
GPR[SPVAP]-1659871312845
04:21:52.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:53.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871313255
GPR[SPVS]-1659871313255
GPR[SPVAP]-1659871313255
04:21:53.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:53.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871313672
GPR[SPVS]-1659871313672
GPR[SPVAP]-1659871313672
04:21:53.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:54.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871314097
GPR[SPVS]-1659871314097
GPR[SPVAP]-1659871314097
04:21:54.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:54.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871314528
GPR[SPVS]-1659871314528
GPR[SPVAP]-1659871314528
04:21:54.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:54.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871314941
GPR[SPVS]-1659871314941
GPR[SPVAP]-1659871314941
04:21:54.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:21:55.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871315353
GPR[SPVS]-1659871315353
GPR[SPVAP]-1659871315353
04:21:55.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871315793
04:21:55.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:21:55.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871315793
GPR[EPVATF]-1659871315859
GPR[SPVATR]-1659871315859
GPR[EPVATR]-1659871326122
04:22:06.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871326122
GPR[SPVS]-1659871326122
GPR[SPVAP]-1659871326122
04:22:06.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871326555
04:22:06.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:22:06.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871326555
GPR[EPVATF]-1659871326619
GPR[SPVATR]-1659871326619
GPR[EPVATR]-1659871336969
04:22:16.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871336969
GPR[SPVS]-1659871336969
GPR[SPVAP]-1659871336969
04:22:16.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871337401
04:22:17.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:22:17.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871337401
GPR[EPVATF]-1659871337464
GPR[SPVATR]-1659871337464
GPR[EPVATR]-1659871347949
04:22:27.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871347949
GPR[SPVS]-1659871347949
GPR[SPVAP]-1659871347949
04:22:27.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871348378
04:22:28.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:22:28.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871348378
GPR[EPVATF]-1659871348440
GPR[SPVATR]-1659871348440
GPR[EPVATR]-1659871360006
04:22:40.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871360006
GPR[SPVS]-1659871360006
GPR[SPVAP]-1659871360006
04:22:40.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871360441
04:22:40.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:22:40.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871360441
GPR[EPVATF]-1659871360506
GPR[SPVATR]-1659871360506
GPR[EPVATR]-1659871370811
04:22:50.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871370811
GPR[SPVS]-1659871370811
GPR[SPVAP]-1659871370811
04:22:50.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:22:51.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871371228
GPR[SPVESU]-1659871371228
GPR[EPVESU]-1659871371229
GPR[EPVA]-1659871371229
GPR[SPS]-1659871371229

GPR[EPS]-1659871371229
GPR[SPVA]-1659871371229
GPR[SPVS]-1659871371229
GPR[SPVAP]-1659871371229
04:22:51.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871371658
04:22:51.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:22:51.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871371658
GPR[EPVATF]-1659871371722
GPR[SPVATR]-1659871371722
GPR[EPVATR]-1659871381921
04:23:01.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871381921
GPR[SPVESU]-1659871381921
GPR[EPVESU]-1659871381923
GPR[EPVA]-1659871381923
GPR[ESUN]-1659871381923
GPR[SSUN]-1659871381923
04:23:01.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===463
04:23:01.937 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
GPR[SPS]-1659871381939
GPR[EPS]-1659871381939
GPR[SPS]-1659871381939
GPR[EPS]-1659871381940
GPR[SPS]-1659871381940
GPR[EPS]-1659871381940
GPR[SPS]-1659871381940
GPR[EPS]-1659871381940
GPR[SPS]-1659871381940
GPR[EPS]-1659871381940
GPR[SPS]-1659871381940
if (w != null) {


}

if (h != null) {


}

GPR[EPS]-1659871381940
GPR[SPVA]-1659871381940
GPR[SPVS]-1659871381940
GPR[SPVAP]-1659871381940
04:23:01.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:23:02.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871382350
GPR[SPVS]-1659871382350
GPR[SPVAP]-1659871382350
04:23:02.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:23:02.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871382759
GPR[SPVESU]-1659871382759
GPR[EPVESU]-1659871382760
GPR[EPVA]-1659871382760
GPR[SPS]-1659871382760
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659871382761
GPR[SPVA]-1659871382761
GPR[SPVS]-1659871382761
GPR[SPVAP]-1659871382761
04:23:02.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871383199
04:23:03.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:23:03.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871383199
GPR[EPVATF]-1659871383264
GPR[SPVATR]-1659871383264
GPR[EPVATR]-1659871393326
04:23:13.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871393326
GPR[SPVS]-1659871393326
GPR[SPVAP]-1659871393326
04:23:13.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871393773
04:23:13.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:23:13.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871393773
GPR[EPVATF]-1659871393836
GPR[SPVATR]-1659871393836
GPR[EPVATR]-1659871404001
04:23:24.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871404001
GPR[SPVS]-1659871404001
GPR[SPVAP]-1659871404001
04:23:24.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871404436
04:23:24.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:23:24.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871404436
GPR[EPVATF]-1659871404500
GPR[SPVATR]-1659871404500
GPR[EPVATR]-1659871414774
04:23:34.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871414774
GPR[SPVS]-1659871414774
GPR[SPVAP]-1659871414774
04:23:34.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871415218
04:23:35.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:23:35.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871415218
GPR[EPVATF]-1659871415283
GPR[SPVATR]-1659871415283
GPR[EPVATR]-1659871425688
04:23:45.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871425688
GPR[SPVESU]-1659871425688
GPR[EPVESU]-1659871425690
GPR[EPVA]-1659871425690
GPR[SPS]-1659871425690
GPR[EPS]-1659871425690
GPR[SPS]-1659871425690
clear();
	RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	clear();
GPR[EPS]-1659871425690
GPR[SPVA]-1659871425690
GPR[SPVS]-1659871425690
GPR[SPVAP]-1659871425690
04:23:45.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871426121
04:23:46.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:23:46.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871426121
GPR[EPVATF]-1659871426184
GPR[SPVATR]-1659871426184
GPR[EPVATR]-1659871436407
04:23:56.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871436407
GPR[SPVS]-1659871436407
GPR[SPVAP]-1659871436407
04:23:56.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871436840
04:23:56.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:23:56.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871436840
GPR[EPVATF]-1659871436905
GPR[SPVATR]-1659871436905
GPR[EPVATR]-1659871446987
04:24:06.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871446987
GPR[SPVESU]-1659871446987
GPR[EPVESU]-1659871446989
GPR[EPVA]-1659871446989
GPR[SPS]-1659871446989
GPR[EPS]-1659871446989
GPR[SPS]-1659871446989

GPR[EPS]-1659871446989
GPR[SPVA]-1659871446989
GPR[SPVS]-1659871446989
GPR[SPVAP]-1659871446989
04:24:06.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:24:07.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871447401
GPR[SPVESU]-1659871447401
GPR[EPVESU]-1659871447402
GPR[EPVA]-1659871447402
GPR[ESUN]-1659871447402
GPR[SSUN]-1659871447402
04:24:07.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===462
04:24:07.416 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
w[4] = constraint.getWidth() - w[3] - w[2];
GPR[SPS]-1659871447418
GPR[EPS]-1659871447418
GPR[SPS]-1659871447418
GPR[EPS]-1659871447418
GPR[SPS]-1659871447418
GPR[EPS]-1659871447418
GPR[SPS]-1659871447418
GPR[EPS]-1659871447418
GPR[SPS]-1659871447418
GPR[EPS]-1659871447418
GPR[SPS]-1659871447418
if (w != null) {


}

if (constraint != null) {


}

if (w != null) {


}

if (w != null) {


}

GPR[EPS]-1659871447419
GPR[SPVA]-1659871447419
GPR[SPVS]-1659871447419
GPR[SPVAP]-1659871447419
04:24:07.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:24:07.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871447844
GPR[SPVS]-1659871447844
GPR[SPVAP]-1659871447844
04:24:07.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:24:08.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871448278
GPR[SPVS]-1659871448278
GPR[SPVAP]-1659871448278
04:24:08.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:24:08.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871448690
GPR[SPVS]-1659871448690
GPR[SPVAP]-1659871448690
04:24:08.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:24:09.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871449100
GPR[SPVESU]-1659871449100
GPR[EPVESU]-1659871449101
GPR[EPVA]-1659871449101
GPR[SPS]-1659871449101
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (constraint == null) {
    return null;
}

if (constraint == null) {
    throw new IllegalArgumentException("Empty variable: " + constraint);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659871449102
GPR[SPVA]-1659871449102
GPR[SPVS]-1659871449102
GPR[SPVAP]-1659871449102
04:24:09.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871449535
04:24:09.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:24:09.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871449535
GPR[EPVATF]-1659871449601
GPR[SPVATR]-1659871449601
GPR[EPVATR]-1659871459874
04:24:19.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871459874
GPR[SPVS]-1659871459874
GPR[SPVAP]-1659871459874
04:24:19.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871460321
04:24:20.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:24:20.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871460321
GPR[EPVATF]-1659871460383
GPR[SPVATR]-1659871460384
GPR[EPVATR]-1659871470609
04:24:30.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871470610
GPR[SPVS]-1659871470610
GPR[SPVAP]-1659871470610
04:24:30.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871471043
04:24:31.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:24:31.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871471043
GPR[EPVATF]-1659871471108
GPR[SPVATR]-1659871471108
GPR[EPVATR]-1659871481257
04:24:41.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871481257
GPR[SPVS]-1659871481257
GPR[SPVAP]-1659871481257
04:24:41.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871481691
04:24:41.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:24:41.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871481692
GPR[EPVATF]-1659871481755
GPR[SPVATR]-1659871481755
GPR[EPVATR]-1659871491782
04:24:51.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871491782
GPR[SPVS]-1659871491782
GPR[SPVAP]-1659871491782
04:24:51.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871492215
04:24:52.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:24:52.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871492215
GPR[EPVATF]-1659871492280
GPR[SPVATR]-1659871492280
GPR[EPVATR]-1659871502532
04:25:02.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871502532
GPR[SPVS]-1659871502532
GPR[SPVAP]-1659871502532
04:25:02.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871502985
04:25:02.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:25:02.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871502985
GPR[EPVATF]-1659871503048
GPR[SPVATR]-1659871503048
GPR[EPVATR]-1659871513701
04:25:13.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871513701
GPR[SPVS]-1659871513701
GPR[SPVAP]-1659871513701
04:25:13.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871514237
04:25:14.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:25:14.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871514237
GPR[EPVATF]-1659871514300
GPR[SPVATR]-1659871514300
GPR[EPVATR]-1659871524877
04:25:24.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871524877
GPR[SPVS]-1659871524877
GPR[SPVAP]-1659871524877
04:25:24.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871525314
04:25:25.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:25:25.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871525314
GPR[EPVATF]-1659871525377
GPR[SPVATR]-1659871525377
GPR[EPVATR]-1659871535731
04:25:35.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871535731
GPR[SPVESU]-1659871535731
GPR[EPVESU]-1659871535733
GPR[EPVA]-1659871535733
GPR[SPS]-1659871535733
GPR[EPS]-1659871535734
GPR[SPS]-1659871535734
clear();
	w[4] = constraint.getWidth() - w[3] - w[2];
w[4] = constraint.getWidth() - w[3] - w[2];
	clear();
GPR[EPS]-1659871535734
GPR[SPVA]-1659871535734
GPR[SPVS]-1659871535734
GPR[SPVAP]-1659871535734
04:25:35.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871536176
04:25:36.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:25:36.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871536176
GPR[EPVATF]-1659871536240
GPR[SPVATR]-1659871536240
GPR[EPVATR]-1659871546410
04:25:46.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871546410
GPR[SPVS]-1659871546410
GPR[SPVAP]-1659871546410
04:25:46.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871546861
04:25:46.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:25:46.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871546862
GPR[EPVATF]-1659871546923
GPR[SPVATR]-1659871546923
GPR[EPVATR]-1659871557078
04:25:57.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871557078
GPR[SPVESU]-1659871557078
GPR[EPVESU]-1659871557080
GPR[EPVA]-1659871557080
GPR[SPS]-1659871557080
w[4] = constraint.getWidth() - w[3] - w[2];
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        
null
w[4] = constraint.getWidth() - w[3] - w[2];
	h[4] = h[2];
        
null

        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	w[4] = constraint.getWidth() - w[3] - w[2];

MOVE-BUGGY-STATEMENT

        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	w[4] = constraint.getWidth() - w[3] - w[2];

MOVE-BUGGY-STATEMENT

        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];

MOVE-BUGGY-STATEMENT

        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];

MOVE-BUGGY-STATEMENT

        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];

MOVE-BUGGY-STATEMENT

        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];

MOVE-BUGGY-STATEMENT

        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	w[4] = constraint.getWidth() - w[3] - w[2];

MOVE-BUGGY-STATEMENT

        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	w[4] = constraint.getWidth() - w[3] - w[2];

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659871557080
GPR[SPVA]-1659871557080
GPR[SPVS]-1659871557080
GPR[SPVAP]-1659871557080
04:25:57.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:25:57.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871557496
GPR[SPVS]-1659871557496
GPR[SPVAP]-1659871557496
04:25:57.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871557946
04:25:57.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:25:57.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871557946
GPR[EPVATF]-1659871558008
GPR[SPVATR]-1659871558008
GPR[EPVATR]-1659871568259
04:26:08.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871568259
GPR[SPVS]-1659871568259
GPR[SPVAP]-1659871568259
04:26:08.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871568697
04:26:08.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:26:08.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871568697
GPR[EPVATF]-1659871568760
GPR[SPVATR]-1659871568760
GPR[EPVATR]-1659871579003
04:26:19.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871579003
GPR[SPVS]-1659871579003
GPR[SPVAP]-1659871579003
04:26:19.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871579440
04:26:19.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:26:19.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871579440
GPR[EPVATF]-1659871579505
GPR[SPVATR]-1659871579505
GPR[EPVATR]-1659871589656
04:26:29.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871589656
GPR[SPVS]-1659871589656
GPR[SPVAP]-1659871589656
04:26:29.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871590091
04:26:30.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:26:30.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871590091
GPR[EPVATF]-1659871590155
GPR[SPVATR]-1659871590156
GPR[EPVATR]-1659871600274
04:26:40.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871600274
GPR[SPVS]-1659871600274
GPR[SPVAP]-1659871600274
04:26:40.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871600726
04:26:40.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:26:40.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871600726
GPR[EPVATF]-1659871600788
GPR[SPVATR]-1659871600788
GPR[EPVATR]-1659871610974
04:26:50.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871610975
GPR[SPVS]-1659871610975
GPR[SPVAP]-1659871610975
04:26:50.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871611407
04:26:51.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:26:51.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871611407
GPR[EPVATF]-1659871611471
GPR[SPVATR]-1659871611471
GPR[EPVATR]-1659871621658
04:27:01.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871621658
GPR[SPVS]-1659871621658
GPR[SPVAP]-1659871621658
04:27:01.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871622094
04:27:02.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:27:02.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871622094
GPR[EPVATF]-1659871622161
GPR[SPVATR]-1659871622161
GPR[EPVATR]-1659871632394
04:27:12.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871632394
GPR[SPVS]-1659871632394
GPR[SPVAP]-1659871632394
04:27:12.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871632829
04:27:12.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:27:12.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871632829
GPR[EPVATF]-1659871632895
GPR[SPVATR]-1659871632895
GPR[EPVATR]-1659871643213
04:27:23.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871643213
GPR[SPVS]-1659871643213
GPR[SPVAP]-1659871643213
04:27:23.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871643649
04:27:23.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:27:23.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871643649
GPR[EPVATF]-1659871643711
GPR[SPVATR]-1659871643711
GPR[EPVATR]-1659871653753
04:27:33.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871653754
GPR[SPVS]-1659871653754
GPR[SPVAP]-1659871653754
04:27:33.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871654191
04:27:34.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:27:34.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871654191
GPR[EPVATF]-1659871654256
GPR[SPVATR]-1659871654256
GPR[EPVATR]-1659871664598
04:27:44.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871664598
GPR[SPVS]-1659871664598
GPR[SPVAP]-1659871664598
04:27:44.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871665035
04:27:45.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:27:45.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871665035
GPR[EPVATF]-1659871665099
GPR[SPVATR]-1659871665099
GPR[EPVATR]-1659871676522
04:27:56.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871676522
GPR[SPVS]-1659871676522
GPR[SPVAP]-1659871676522
04:27:56.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871676962
04:27:56.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:27:56.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871676962
GPR[EPVATF]-1659871677028
GPR[SPVATR]-1659871677028
GPR[EPVATR]-1659871687223
04:28:07.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871687223
GPR[SPVS]-1659871687223
GPR[SPVAP]-1659871687223
04:28:07.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871687686
04:28:07.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:28:07.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871687686
GPR[EPVATF]-1659871687751
GPR[SPVATR]-1659871687751
GPR[EPVATR]-1659871698009
04:28:18.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871698009
GPR[SPVS]-1659871698009
GPR[SPVAP]-1659871698009
04:28:18.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871698443
04:28:18.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:28:18.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871698443
GPR[EPVATF]-1659871698507
GPR[SPVATR]-1659871698507
GPR[EPVATR]-1659871708615
04:28:28.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871708615
GPR[SPVS]-1659871708615
GPR[SPVAP]-1659871708615
04:28:28.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871709051
04:28:29.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:28:29.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871709051
GPR[EPVATF]-1659871709116
GPR[SPVATR]-1659871709116
GPR[EPVATR]-1659871719178
04:28:39.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871719178
GPR[SPVS]-1659871719178
GPR[SPVAP]-1659871719178
04:28:39.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871719617
04:28:39.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:28:39.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871719617
GPR[EPVATF]-1659871719682
GPR[SPVATR]-1659871719682
GPR[EPVATR]-1659871730028
04:28:50.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871730028
GPR[SPVS]-1659871730028
GPR[SPVAP]-1659871730028
04:28:50.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871730465
04:28:50.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:28:50.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871730465
GPR[EPVATF]-1659871730531
GPR[SPVATR]-1659871730531
GPR[EPVATR]-1659871740717
04:29:00.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871740718
GPR[SPVS]-1659871740718
GPR[SPVAP]-1659871740718
04:29:00.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:29:01.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871741125
GPR[SPVESU]-1659871741125
GPR[EPVESU]-1659871741127
GPR[EPVA]-1659871741127
GPR[SPS]-1659871741127

GPR[EPS]-1659871741127
GPR[SPVA]-1659871741127
GPR[SPVS]-1659871741127
GPR[SPVAP]-1659871741127
04:29:01.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871741568
04:29:01.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:29:01.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871741568
GPR[EPVATF]-1659871741631
GPR[SPVATR]-1659871741631
GPR[EPVATR]-1659871751979
04:29:11.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871751979
GPR[SPVESU]-1659871751979
GPR[EPVESU]-1659871751980
GPR[EPVA]-1659871751980
GPR[ESUN]-1659871751980
GPR[SSUN]-1659871751980
04:29:11.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===461
04:29:11.993 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
h[4] = h[2];
GPR[SPS]-1659871751994
GPR[EPS]-1659871751994
GPR[SPS]-1659871751994
GPR[EPS]-1659871751995
GPR[SPS]-1659871751995
GPR[EPS]-1659871751995
GPR[SPS]-1659871751995
GPR[EPS]-1659871751995
GPR[SPS]-1659871751995
GPR[EPS]-1659871751995
GPR[SPS]-1659871751995
if (h != null) {


}

if (h != null) {


}

GPR[EPS]-1659871751995
GPR[SPVA]-1659871751995
GPR[SPVS]-1659871751995
GPR[SPVAP]-1659871751995
04:29:11.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871752427
04:29:12.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:29:12.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871752427
GPR[EPVATF]-1659871752492
GPR[SPVATR]-1659871752492
GPR[EPVATR]-1659871762710
04:29:22.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871762710
GPR[SPVS]-1659871762710
GPR[SPVAP]-1659871762710
04:29:22.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871763143
04:29:23.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:29:23.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871763143
GPR[EPVATF]-1659871763209
GPR[SPVATR]-1659871763209
GPR[EPVATR]-1659871773406
04:29:33.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871773406
GPR[SPVESU]-1659871773406
GPR[EPVESU]-1659871773408
GPR[EPVA]-1659871773408
GPR[SPS]-1659871773408
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659871773409
GPR[SPVA]-1659871773409
GPR[SPVS]-1659871773409
GPR[SPVAP]-1659871773409
04:29:33.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871773838
04:29:33.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:29:33.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871773838
GPR[EPVATF]-1659871773904
GPR[SPVATR]-1659871773904
GPR[EPVATR]-1659871784073
04:29:44.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871784073
GPR[SPVS]-1659871784073
GPR[SPVAP]-1659871784073
04:29:44.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871784521
04:29:44.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:29:44.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871784521
GPR[EPVATF]-1659871784584
GPR[SPVATR]-1659871784584
GPR[EPVATR]-1659871794695
04:29:54.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871794695
GPR[SPVS]-1659871794695
GPR[SPVAP]-1659871794695
04:29:54.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871795131
04:29:55.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:29:55.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871795131
GPR[EPVATF]-1659871795196
GPR[SPVATR]-1659871795196
GPR[EPVATR]-1659871807470
04:30:07.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871807470
GPR[SPVS]-1659871807470
GPR[SPVAP]-1659871807470
04:30:07.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871807909
04:30:07.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:30:07.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871807910
GPR[EPVATF]-1659871807971
GPR[SPVATR]-1659871807971
GPR[EPVATR]-1659871818121
04:30:18.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871818121
GPR[SPVESU]-1659871818121
GPR[EPVESU]-1659871818123
GPR[EPVA]-1659871818123
GPR[SPS]-1659871818123
GPR[EPS]-1659871818123
GPR[SPS]-1659871818123
clear();
	h[4] = h[2];
h[4] = h[2];
	clear();
GPR[EPS]-1659871818123
GPR[SPVA]-1659871818123
GPR[SPVS]-1659871818123
GPR[SPVAP]-1659871818123
04:30:18.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871818555
04:30:18.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:30:18.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871818555
GPR[EPVATF]-1659871818621
GPR[SPVATR]-1659871818621
GPR[EPVATR]-1659871828703
04:30:28.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871828703
GPR[SPVS]-1659871828703
GPR[SPVAP]-1659871828703
04:30:28.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871829139
04:30:29.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:30:29.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871829139
GPR[EPVATF]-1659871829204
GPR[SPVATR]-1659871829204
GPR[EPVATR]-1659871840422
04:30:40.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871840422
GPR[SPVESU]-1659871840422
GPR[EPVESU]-1659871840424
GPR[EPVA]-1659871840424
GPR[SPS]-1659871840424
h[4] = h[2];
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null
h[4] = h[2];
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null
h[4] = h[2];
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null
h[4] = h[2];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null
h[4] = h[2];
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null
h[4] = h[2];
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null
h[4] = h[2];
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null
h[4] = h[2];
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null
h[4] = h[2];
	h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null
h[4] = h[2];
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        
null

        w[4] = constraint.getWidth() - w[3] - w[2];
	h[4] = h[2];

MOVE-BUGGY-STATEMENT

        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	h[4] = h[2];

MOVE-BUGGY-STATEMENT

        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	h[4] = h[2];

MOVE-BUGGY-STATEMENT

        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	h[4] = h[2];

MOVE-BUGGY-STATEMENT

        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	h[4] = h[2];

MOVE-BUGGY-STATEMENT

        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	h[4] = h[2];

MOVE-BUGGY-STATEMENT

        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	h[4] = h[2];

MOVE-BUGGY-STATEMENT

        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	h[4] = h[2];

MOVE-BUGGY-STATEMENT

        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	h[4] = h[2];

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659871840424
GPR[SPVA]-1659871840424
GPR[SPVS]-1659871840424
GPR[SPVAP]-1659871840424
04:30:40.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:30:40.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871840834
GPR[SPVS]-1659871840834
GPR[SPVAP]-1659871840834
04:30:40.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:30:41.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659871841247
GPR[SPVS]-1659871841247
GPR[SPVAP]-1659871841247
04:30:41.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871841682
04:30:41.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:30:41.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871841682
GPR[EPVATF]-1659871841744
GPR[SPVATR]-1659871841744
GPR[EPVATR]-1659871851891
04:30:51.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871851891
GPR[SPVS]-1659871851891
GPR[SPVAP]-1659871851891
04:30:51.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871852325
04:30:52.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:30:52.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871852326
GPR[EPVATF]-1659871852393
GPR[SPVATR]-1659871852393
GPR[EPVATR]-1659871862534
04:31:02.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871862534
GPR[SPVS]-1659871862534
GPR[SPVAP]-1659871862534
04:31:02.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871862993
04:31:02.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:31:02.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871862993
GPR[EPVATF]-1659871863057
GPR[SPVATR]-1659871863057
GPR[EPVATR]-1659871873202
04:31:13.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871873202
GPR[SPVS]-1659871873202
GPR[SPVAP]-1659871873202
04:31:13.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871873637
04:31:13.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:31:13.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871873637
GPR[EPVATF]-1659871873706
GPR[SPVATR]-1659871873706
GPR[EPVATR]-1659871883937
04:31:23.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871883937
GPR[SPVS]-1659871883937
GPR[SPVAP]-1659871883937
04:31:23.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871884374
04:31:24.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:31:24.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871884374
GPR[EPVATF]-1659871884437
GPR[SPVATR]-1659871884437
GPR[EPVATR]-1659871894679
04:31:34.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871894679
GPR[SPVS]-1659871894679
GPR[SPVAP]-1659871894679
04:31:34.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871895115
04:31:35.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:31:35.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871895115
GPR[EPVATF]-1659871895180
GPR[SPVATR]-1659871895180
GPR[EPVATR]-1659871905282
04:31:45.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871905282
GPR[SPVS]-1659871905282
GPR[SPVAP]-1659871905282
04:31:45.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871905713
04:31:45.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:31:45.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871905713
GPR[EPVATF]-1659871905780
GPR[SPVATR]-1659871905780
GPR[EPVATR]-1659871915886
04:31:55.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871915887
GPR[SPVS]-1659871915887
GPR[SPVAP]-1659871915887
04:31:55.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871916321
04:31:56.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:31:56.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871916321
GPR[EPVATF]-1659871916388
GPR[SPVATR]-1659871916388
GPR[EPVATR]-1659871926482
04:32:06.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871926482
GPR[SPVS]-1659871926482
GPR[SPVAP]-1659871926482
04:32:06.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871926920
04:32:06.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:32:06.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871926920
GPR[EPVATF]-1659871926984
GPR[SPVATR]-1659871926984
GPR[EPVATR]-1659871937174
04:32:17.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871937174
GPR[SPVS]-1659871937174
GPR[SPVAP]-1659871937174
04:32:17.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871937610
04:32:17.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:32:17.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871937610
GPR[EPVATF]-1659871937672
GPR[SPVATR]-1659871937672
GPR[EPVATR]-1659871947858
04:32:27.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871947858
GPR[SPVS]-1659871947858
GPR[SPVAP]-1659871947858
04:32:27.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871948297
04:32:28.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:32:28.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871948297
GPR[EPVATF]-1659871948364
GPR[SPVATR]-1659871948364
GPR[EPVATR]-1659871958522
04:32:38.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871958522
GPR[SPVS]-1659871958522
GPR[SPVAP]-1659871958522
04:32:38.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871958969
04:32:38.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:32:38.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871958969
GPR[EPVATF]-1659871959032
GPR[SPVATR]-1659871959032
GPR[EPVATR]-1659871969265
04:32:49.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871969266
GPR[SPVS]-1659871969266
GPR[SPVAP]-1659871969266
04:32:49.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871969701
04:32:49.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:32:49.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871969701
GPR[EPVATF]-1659871969768
GPR[SPVATR]-1659871969768
GPR[EPVATR]-1659871979982
04:32:59.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871979982
GPR[SPVS]-1659871979982
GPR[SPVAP]-1659871979982
04:32:59.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871980429
04:33:00.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:33:00.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871980429
GPR[EPVATF]-1659871980496
GPR[SPVATR]-1659871980496
GPR[EPVATR]-1659871990662
04:33:10.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659871990662
GPR[SPVS]-1659871990662
GPR[SPVAP]-1659871990662
04:33:10.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659871991099
04:33:11.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:33:11.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659871991099
GPR[EPVATF]-1659871991163
GPR[SPVATR]-1659871991163
GPR[EPVATR]-1659872001515
04:33:21.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872001515
GPR[SPVS]-1659872001515
GPR[SPVAP]-1659872001515
04:33:21.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872001952
04:33:21.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:33:21.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872001952
GPR[EPVATF]-1659872002016
GPR[SPVATR]-1659872002016
GPR[EPVATR]-1659872012262
04:33:32.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872012262
GPR[SPVS]-1659872012262
GPR[SPVAP]-1659872012262
04:33:32.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:33:32.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872012679
GPR[SPVESU]-1659872012679
GPR[EPVESU]-1659872012680
GPR[EPVA]-1659872012680
GPR[SPS]-1659872012680

GPR[EPS]-1659872012680
GPR[SPVA]-1659872012680
GPR[SPVS]-1659872012680
GPR[SPVAP]-1659872012680
04:33:32.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872013121
04:33:33.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:33:33.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872013121
GPR[EPVATF]-1659872013184
GPR[SPVATR]-1659872013184
GPR[EPVATR]-1659872023317
04:33:43.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872023317
GPR[SPVESU]-1659872023317
GPR[EPVESU]-1659872023319
GPR[EPVA]-1659872023319
GPR[ESUN]-1659872023319
GPR[SSUN]-1659872023320
04:33:43.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===459
04:33:43.331 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
w[3] = size.width;
GPR[SPS]-1659872023333
GPR[EPS]-1659872023334
GPR[SPS]-1659872023334
GPR[EPS]-1659872023334
GPR[SPS]-1659872023334
GPR[EPS]-1659872023334
GPR[SPS]-1659872023334
GPR[EPS]-1659872023334
GPR[SPS]-1659872023334
GPR[EPS]-1659872023334
GPR[SPS]-1659872023334
if (w != null) {


}

GPR[EPS]-1659872023334
GPR[SPVA]-1659872023334
GPR[SPVS]-1659872023334
GPR[SPVAP]-1659872023334
04:33:43.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872023767
04:33:43.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:33:43.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872023767
GPR[EPVATF]-1659872023832
GPR[SPVATR]-1659872023832
GPR[EPVATR]-1659872033998
04:33:53.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872033998
GPR[SPVESU]-1659872033998
GPR[EPVESU]-1659872033999
GPR[EPVA]-1659872033999
GPR[SPS]-1659872033999
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659872033999
GPR[SPVA]-1659872033999
GPR[SPVS]-1659872033999
GPR[SPVAP]-1659872033999
04:33:54.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872034430
04:33:54.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:33:54.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872034430
GPR[EPVATF]-1659872034491
GPR[SPVATR]-1659872034491
GPR[EPVATR]-1659872044562
04:34:04.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872044562
GPR[SPVS]-1659872044562
GPR[SPVAP]-1659872044562
04:34:04.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872045001
04:34:05.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:34:05.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872045001
GPR[EPVATF]-1659872045065
GPR[SPVATR]-1659872045065
GPR[EPVATR]-1659872055192
04:34:15.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872055192
GPR[SPVESU]-1659872055192
GPR[EPVESU]-1659872055194
GPR[EPVA]-1659872055194
GPR[SPS]-1659872055194
GPR[EPS]-1659872055194
GPR[SPS]-1659872055194
clear();
	w[3] = size.width;
w[3] = size.width;
	clear();
GPR[EPS]-1659872055194
GPR[SPVA]-1659872055194
GPR[SPVS]-1659872055194
GPR[SPVAP]-1659872055194
04:34:15.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872055618
04:34:15.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:34:15.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872055618
GPR[EPVATF]-1659872055682
GPR[SPVATR]-1659872055682
GPR[EPVATR]-1659872065746
04:34:25.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872065746
GPR[SPVS]-1659872065746
GPR[SPVAP]-1659872065746
04:34:25.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872066175
04:34:26.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:34:26.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872066175
GPR[EPVATF]-1659872066239
GPR[SPVATR]-1659872066239
GPR[EPVATR]-1659872076668
04:34:36.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872076668
GPR[SPVESU]-1659872076668
GPR[EPVESU]-1659872076670
GPR[EPVA]-1659872076670
GPR[SPS]-1659872076670
w[3] = size.width;
	RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            
null
w[3] = size.width;
	Size2D size = this.rightBlock.arrange(g2, c4);
            
null
GPR[EPS]-1659872076670
GPR[SPVA]-1659872076670
GPR[SPVS]-1659872076670
GPR[SPVAP]-1659872076670
04:34:36.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:37.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872077083
GPR[SPVS]-1659872077083
GPR[SPVAP]-1659872077083
04:34:37.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:37.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872077494
GPR[SPVESU]-1659872077494
GPR[EPVESU]-1659872077496
GPR[EPVA]-1659872077496
GPR[SPS]-1659872077496

GPR[EPS]-1659872077496
GPR[SPVA]-1659872077496
GPR[SPVS]-1659872077496
GPR[SPVAP]-1659872077496
04:34:37.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872077939
04:34:37.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:34:37.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872077939
GPR[EPVATF]-1659872078004
GPR[SPVATR]-1659872078004
GPR[EPVATR]-1659872088251
04:34:48.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872088251
GPR[SPVESU]-1659872088251
GPR[EPVESU]-1659872088253
GPR[EPVA]-1659872088253
GPR[ESUN]-1659872088253
GPR[SSUN]-1659872088253
04:34:48.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===458
04:34:48.265 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Size2D size = this.rightBlock.arrange(g2, c4);
GPR[SPS]-1659872088266
GPR[EPS]-1659872088267
GPR[SPS]-1659872088267
GPR[EPS]-1659872088268
GPR[SPS]-1659872088268
Size2D size = this.rightBlock.arrange(size, c4);
Size2D size = this.rightBlock.arrange(h, c4);
Size2D size = this.rightBlock.arrange(w, c4);
Size2D size = this.rightBlock.arrange(container, c4);
Size2D size = this.rightBlock.arrange(constraint, c4);
Size2D size = this.rightBlock.arrange(this.centerBlock, c4);
Size2D size = this.rightBlock.arrange(this.topBlock, c4);
Size2D size = this.rightBlock.arrange(this.bottomBlock, c4);
Size2D size = this.rightBlock.arrange(this.leftBlock, c4);
Size2D size = this.rightBlock.arrange( c4);
Size2D size = this.rightBlock.arrange(size, g2, c4);
Size2D size = this.rightBlock.arrange(h, g2, c4);
Size2D size = this.rightBlock.arrange(w, g2, c4);
Size2D size = this.rightBlock.arrange(container, g2, c4);
Size2D size = this.rightBlock.arrange(constraint, g2, c4);
Size2D size = this.rightBlock.arrange(this.centerBlock, g2, c4);
Size2D size = this.rightBlock.arrange(this.topBlock, g2, c4);
Size2D size = this.rightBlock.arrange(this.bottomBlock, g2, c4);
Size2D size = this.rightBlock.arrange(this.leftBlock, g2, c4);
Size2D size = this.rightBlock.arrange(g2, size);
Size2D size = this.rightBlock.arrange(g2, h);
Size2D size = this.rightBlock.arrange(g2, w);
Size2D size = this.rightBlock.arrange(g2, container);
Size2D size = this.rightBlock.arrange(g2, constraint);
Size2D size = this.rightBlock.arrange(g2, this.centerBlock);
Size2D size = this.rightBlock.arrange(g2, this.topBlock);
Size2D size = this.rightBlock.arrange(g2, this.bottomBlock);
Size2D size = this.rightBlock.arrange(g2, this.leftBlock);
Size2D size = this.rightBlock.arrange(g2, );
Size2D size = this.rightBlock.arrange(g2, size, c4);
Size2D size = this.rightBlock.arrange(g2, h, c4);
Size2D size = this.rightBlock.arrange(g2, w, c4);
Size2D size = this.rightBlock.arrange(g2, container, c4);
Size2D size = this.rightBlock.arrange(g2, constraint, c4);
Size2D size = this.rightBlock.arrange(g2, this.centerBlock, c4);
Size2D size = this.rightBlock.arrange(g2, this.topBlock, c4);
Size2D size = this.rightBlock.arrange(g2, this.bottomBlock, c4);
Size2D size = this.rightBlock.arrange(g2, this.leftBlock, c4);
Size2D size = this.rightBlock.arrange(g2, c4, size);
Size2D size = this.rightBlock.arrange(g2, c4, h);
Size2D size = this.rightBlock.arrange(g2, c4, w);
Size2D size = this.rightBlock.arrange(g2, c4, container);
Size2D size = this.rightBlock.arrange(g2, c4, constraint);
Size2D size = this.rightBlock.arrange(g2, c4, this.centerBlock);
Size2D size = this.rightBlock.arrange(g2, c4, this.topBlock);
Size2D size = this.rightBlock.arrange(g2, c4, this.bottomBlock);
Size2D size = this.rightBlock.arrange(g2, c4, this.leftBlock);
GPR[EPS]-1659872088269
GPR[SPVA]-1659872088269
GPR[SPVS]-1659872088269
GPR[SPVAP]-1659872088269
04:34:48.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:48.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872088683
GPR[SPVS]-1659872088683
GPR[SPVAP]-1659872088683
04:34:48.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:49.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872089099
GPR[SPVS]-1659872089099
GPR[SPVAP]-1659872089099
04:34:49.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:49.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872089515
GPR[SPVS]-1659872089515
GPR[SPVAP]-1659872089515
04:34:49.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:49.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872089927
GPR[SPVS]-1659872089927
GPR[SPVAP]-1659872089927
04:34:49.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:50.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872090343
GPR[SPVS]-1659872090343
GPR[SPVAP]-1659872090343
04:34:50.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:50.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872090758
GPR[SPVS]-1659872090758
GPR[SPVAP]-1659872090758
04:34:50.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:51.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872091175
GPR[SPVS]-1659872091175
GPR[SPVAP]-1659872091175
04:34:51.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:51.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872091591
GPR[SPVS]-1659872091591
GPR[SPVAP]-1659872091591
04:34:51.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:52.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872092009
GPR[SPVS]-1659872092009
GPR[SPVAP]-1659872092009
04:34:52.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:52.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872092422
GPR[SPVS]-1659872092422
GPR[SPVAP]-1659872092422
04:34:52.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:52.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872092832
GPR[SPVS]-1659872092832
GPR[SPVAP]-1659872092832
04:34:52.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:53.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872093245
GPR[SPVS]-1659872093245
GPR[SPVAP]-1659872093245
04:34:53.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:53.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872093666
GPR[SPVS]-1659872093666
GPR[SPVAP]-1659872093666
04:34:53.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:54.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872094102
GPR[SPVS]-1659872094102
GPR[SPVAP]-1659872094102
04:34:54.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:54.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872094515
GPR[SPVS]-1659872094515
GPR[SPVAP]-1659872094515
04:34:54.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:54.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872094927
GPR[SPVS]-1659872094927
GPR[SPVAP]-1659872094927
04:34:54.928 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:55.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872095349
GPR[SPVS]-1659872095349
GPR[SPVAP]-1659872095349
04:34:55.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:55.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872095763
GPR[SPVS]-1659872095763
GPR[SPVAP]-1659872095763
04:34:55.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:56.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872096183
GPR[SPVS]-1659872096183
GPR[SPVAP]-1659872096183
04:34:56.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:56.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872096598
GPR[SPVS]-1659872096598
GPR[SPVAP]-1659872096598
04:34:56.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:57.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872097026
GPR[SPVS]-1659872097026
GPR[SPVAP]-1659872097026
04:34:57.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:57.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872097438
GPR[SPVS]-1659872097438
GPR[SPVAP]-1659872097438
04:34:57.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:34:57.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872097848
GPR[SPVS]-1659872097848
GPR[SPVAP]-1659872097848
04:34:57.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872098279
04:34:58.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:34:58.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872098279
GPR[EPVATF]-1659872098343
GPR[SPVATR]-1659872098344
GPR[EPVATR]-1659872108474
04:35:08.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872108475
GPR[SPVS]-1659872108475
GPR[SPVAP]-1659872108475
04:35:08.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:08.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872108893
GPR[SPVS]-1659872108893
GPR[SPVAP]-1659872108893
04:35:08.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:09.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872109305
GPR[SPVS]-1659872109305
GPR[SPVAP]-1659872109305
04:35:09.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:09.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872109716
GPR[SPVS]-1659872109716
GPR[SPVAP]-1659872109716
04:35:09.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:10.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872110146
GPR[SPVS]-1659872110146
GPR[SPVAP]-1659872110146
04:35:10.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:10.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872110417
GPR[SPVS]-1659872110417
GPR[SPVAP]-1659872110417
04:35:10.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:10.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872110832
GPR[SPVS]-1659872110832
GPR[SPVAP]-1659872110832
04:35:10.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:11.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872111249
GPR[SPVS]-1659872111249
GPR[SPVAP]-1659872111249
04:35:11.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:11.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872111662
GPR[SPVS]-1659872111662
GPR[SPVAP]-1659872111662
04:35:11.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:12.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872112084
GPR[SPVS]-1659872112084
GPR[SPVAP]-1659872112084
04:35:12.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:12.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872112496
GPR[SPVS]-1659872112496
GPR[SPVAP]-1659872112496
04:35:12.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:12.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872112913
GPR[SPVS]-1659872112913
GPR[SPVAP]-1659872112913
04:35:12.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:13.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872113328
GPR[SPVS]-1659872113328
GPR[SPVAP]-1659872113328
04:35:13.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:13.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872113744
GPR[SPVS]-1659872113744
GPR[SPVAP]-1659872113744
04:35:13.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:14.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872114155
GPR[SPVS]-1659872114156
GPR[SPVAP]-1659872114156
04:35:14.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:14.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872114572
GPR[SPVS]-1659872114572
GPR[SPVAP]-1659872114572
04:35:14.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:14.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872114984
GPR[SPVS]-1659872114984
GPR[SPVAP]-1659872114984
04:35:14.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:15.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872115396
GPR[SPVS]-1659872115396
GPR[SPVAP]-1659872115396
04:35:15.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:15.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872115812
GPR[SPVS]-1659872115812
GPR[SPVAP]-1659872115812
04:35:15.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:16.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872116240
GPR[SPVS]-1659872116240
GPR[SPVAP]-1659872116240
04:35:16.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:16.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872116657
GPR[SPVS]-1659872116657
GPR[SPVAP]-1659872116657
04:35:16.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:17.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872117090
GPR[SPVS]-1659872117090
GPR[SPVAP]-1659872117090
04:35:17.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:17.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872117529
GPR[SPVS]-1659872117529
GPR[SPVAP]-1659872117529
04:35:17.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:17.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872117944
GPR[SPVESU]-1659872117944
GPR[EPVESU]-1659872117945
GPR[EPVA]-1659872117945
GPR[SPS]-1659872117945
GPR[EPS]-1659872117946
GPR[SPS]-1659872117946
GPR[EPS]-1659872117946
GPR[SPS]-1659872117946
if (this.rightBlock != null) {


}

if (g2 != null) {


}

if (c4 != null) {


}

GPR[EPS]-1659872117946
GPR[SPVA]-1659872117946
GPR[SPVS]-1659872117946
GPR[SPVAP]-1659872117946
04:35:17.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:18.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872118359
GPR[SPVS]-1659872118359
GPR[SPVAP]-1659872118359
04:35:18.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:18.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872118776
GPR[SPVS]-1659872118776
GPR[SPVAP]-1659872118776
04:35:18.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:35:19.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872119191
GPR[SPVESU]-1659872119191
GPR[EPVESU]-1659872119192
GPR[EPVA]-1659872119192
GPR[SPS]-1659872119192
if (this.rightBlock == null) {
    return null;
}

if (this.rightBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.rightBlock);
}

if (g2 == null) {
    return null;
}

if (g2 == null) {
    throw new IllegalArgumentException("Empty variable: " + g2);
}

if (c4 == null) {
    return null;
}

if (c4 == null) {
    throw new IllegalArgumentException("Empty variable: " + c4);
}

GPR[EPS]-1659872119193
GPR[SPVA]-1659872119193
GPR[SPVS]-1659872119193
GPR[SPVAP]-1659872119193
04:35:19.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872119628
04:35:19.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:35:19.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872119628
GPR[EPVATF]-1659872119692
GPR[SPVATR]-1659872119692
GPR[EPVATR]-1659872129898
04:35:29.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872129898
GPR[SPVS]-1659872129898
GPR[SPVAP]-1659872129898
04:35:29.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872130329
04:35:30.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:35:30.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872130329
GPR[EPVATF]-1659872130395
GPR[SPVATR]-1659872130395
GPR[EPVATR]-1659872140541
04:35:40.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872140542
GPR[SPVS]-1659872140542
GPR[SPVAP]-1659872140542
04:35:40.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872140977
04:35:40.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:35:40.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872140977
GPR[EPVATF]-1659872141040
GPR[SPVATR]-1659872141040
GPR[EPVATR]-1659872151268
04:35:51.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872151268
GPR[SPVS]-1659872151268
GPR[SPVAP]-1659872151268
04:35:51.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872151703
04:35:51.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:35:51.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872151703
GPR[EPVATF]-1659872151769
GPR[SPVATR]-1659872151769
GPR[EPVATR]-1659872163077
04:36:03.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872163077
GPR[SPVS]-1659872163077
GPR[SPVAP]-1659872163077
04:36:03.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872163510
04:36:03.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:36:03.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872163510
GPR[EPVATF]-1659872163572
GPR[SPVATR]-1659872163572
GPR[EPVATR]-1659872173991
04:36:13.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872173991
GPR[SPVS]-1659872173991
GPR[SPVAP]-1659872173991
04:36:13.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872174426
04:36:14.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:36:14.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872174426
GPR[EPVATF]-1659872174488
GPR[SPVATR]-1659872174488
GPR[EPVATR]-1659872184707
04:36:24.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872184707
GPR[SPVESU]-1659872184707
GPR[EPVESU]-1659872184709
GPR[EPVA]-1659872184709
GPR[SPS]-1659872184709
GPR[EPS]-1659872184709
GPR[SPS]-1659872184709
clear();
	Size2D size = this.rightBlock.arrange(g2, c4);
Size2D size = this.rightBlock.arrange(g2, c4);
	clear();
GPR[EPS]-1659872184710
GPR[SPVA]-1659872184710
GPR[SPVS]-1659872184710
GPR[SPVAP]-1659872184710
04:36:24.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872185144
04:36:25.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:36:25.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872185145
GPR[EPVATF]-1659872185208
GPR[SPVATR]-1659872185208
GPR[EPVATR]-1659872195350
04:36:35.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872195350
GPR[SPVS]-1659872195350
GPR[SPVAP]-1659872195350
04:36:35.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872195792
04:36:35.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:36:35.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872195792
GPR[EPVATF]-1659872195857
GPR[SPVATR]-1659872195857
GPR[EPVATR]-1659872205962
04:36:45.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872205962
GPR[SPVESU]-1659872205962
GPR[EPVESU]-1659872205964
GPR[EPVA]-1659872205964
GPR[SPS]-1659872205964
GPR[EPS]-1659872205964
GPR[SPS]-1659872205964

GPR[EPS]-1659872205965
GPR[SPVA]-1659872205965
GPR[SPVS]-1659872205965
GPR[SPVAP]-1659872205965
04:36:45.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:36:46.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872206379
GPR[SPVESU]-1659872206379
GPR[EPVESU]-1659872206380
GPR[EPVA]-1659872206380
GPR[ESUN]-1659872206380
GPR[SSUN]-1659872206380
04:36:46.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===454
04:36:46.392 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
GPR[SPS]-1659872206394
GPR[EPS]-1659872206394
GPR[SPS]-1659872206394
GPR[EPS]-1659872206394
GPR[SPS]-1659872206394
GPR[EPS]-1659872206394
GPR[SPS]-1659872206394
GPR[EPS]-1659872206395
GPR[SPS]-1659872206395
GPR[EPS]-1659872206395
GPR[SPS]-1659872206395
if (constraint != null) {


}

if (w != null) {


}

if (h != null) {


}

GPR[EPS]-1659872206395
GPR[SPVA]-1659872206395
GPR[SPVS]-1659872206395
GPR[SPVAP]-1659872206395
04:36:46.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:36:46.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872206807
GPR[SPVS]-1659872206807
GPR[SPVAP]-1659872206807
04:36:46.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872207237
04:36:47.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:36:47.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872207237
GPR[EPVATF]-1659872207300
GPR[SPVATR]-1659872207300
GPR[EPVATR]-1659872217470
04:36:57.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872217470
GPR[SPVS]-1659872217470
GPR[SPVAP]-1659872217470
04:36:57.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:36:57.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872217891
GPR[SPVESU]-1659872217891
GPR[EPVESU]-1659872217892
GPR[EPVA]-1659872217892
GPR[SPS]-1659872217892
if (constraint == null) {
    return null;
}

if (constraint == null) {
    throw new IllegalArgumentException("Empty variable: " + constraint);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659872217892
GPR[SPVA]-1659872217892
GPR[SPVS]-1659872217892
GPR[SPVAP]-1659872217892
04:36:57.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872218329
04:36:58.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:36:58.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872218329
GPR[EPVATF]-1659872218394
GPR[SPVATR]-1659872218394
GPR[EPVATR]-1659872228570
04:37:08.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872228570
GPR[SPVS]-1659872228570
GPR[SPVAP]-1659872228570
04:37:08.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872229014
04:37:09.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:37:09.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872229014
GPR[EPVATF]-1659872229075
GPR[SPVATR]-1659872229075
GPR[EPVATR]-1659872239389
04:37:19.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872239389
GPR[SPVS]-1659872239389
GPR[SPVAP]-1659872239389
04:37:19.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872239841
04:37:19.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:37:19.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872239841
GPR[EPVATF]-1659872239904
GPR[SPVATR]-1659872239904
GPR[EPVATR]-1659872249961
04:37:29.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872249961
GPR[SPVS]-1659872249961
GPR[SPVAP]-1659872249961
04:37:29.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872250398
04:37:30.398 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:37:30.398 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872250398
GPR[EPVATF]-1659872250461
GPR[SPVATR]-1659872250461
GPR[EPVATR]-1659872260875
04:37:40.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872260875
GPR[SPVS]-1659872260875
GPR[SPVAP]-1659872260875
04:37:40.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872261313
04:37:41.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:37:41.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872261313
GPR[EPVATF]-1659872261376
GPR[SPVATR]-1659872261376
GPR[EPVATR]-1659872271502
04:37:51.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872271502
GPR[SPVS]-1659872271502
GPR[SPVAP]-1659872271502
04:37:51.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872271941
04:37:51.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:37:51.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872271941
GPR[EPVATF]-1659872272004
GPR[SPVATR]-1659872272004
GPR[EPVATR]-1659872282181
04:38:02.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872282181
GPR[SPVESU]-1659872282181
GPR[EPVESU]-1659872282183
GPR[EPVA]-1659872282183
GPR[SPS]-1659872282183
GPR[EPS]-1659872282183
GPR[SPS]-1659872282183
clear();
	RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
	clear();
GPR[EPS]-1659872282184
GPR[SPVA]-1659872282184
GPR[SPVS]-1659872282184
GPR[SPVAP]-1659872282184
04:38:02.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872282649
04:38:02.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:38:02.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872282650
GPR[EPVATF]-1659872282717
GPR[SPVATR]-1659872282717
GPR[EPVATR]-1659872293112
04:38:13.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872293112
GPR[SPVS]-1659872293113
GPR[SPVAP]-1659872293113
04:38:13.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872293546
04:38:13.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:38:13.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872293547
GPR[EPVATF]-1659872293612
GPR[SPVATR]-1659872293612
GPR[EPVATR]-1659872303913
04:38:23.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872303914
GPR[SPVESU]-1659872303914
GPR[EPVESU]-1659872303915
GPR[EPVA]-1659872303915
GPR[SPS]-1659872303915
GPR[EPS]-1659872303915
GPR[SPS]-1659872303915

GPR[EPS]-1659872303915
GPR[SPVA]-1659872303915
GPR[SPVS]-1659872303915
GPR[SPVAP]-1659872303915
04:38:23.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:24.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872304336
GPR[SPVESU]-1659872304336
GPR[EPVESU]-1659872304337
GPR[EPVA]-1659872304337
GPR[ESUN]-1659872304337
GPR[SSUN]-1659872304337
04:38:24.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===453
04:38:24.350 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
GPR[SPS]-1659872304352
if (this.rightBlock == null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
GPR[EPS]-1659872304352
GPR[SPVA]-1659872304352
GPR[SPVS]-1659872304352
GPR[SPVAP]-1659872304352
04:38:24.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872304798
04:38:24.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:38:24.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872304798
GPR[EPVATF]-1659872304863
GPR[SPVATR]-1659872304863
GPR[EPVATR]-1659872315207
04:38:35.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872315207
GPR[SPVESU]-1659872315207
GPR[EPVESU]-1659872315209
GPR[EPVA]-1659872315209
GPR[SPS]-1659872315209
GPR[EPS]-1659872315209
GPR[SPS]-1659872315209
GPR[EPS]-1659872315209
GPR[SPS]-1659872315209
GPR[EPS]-1659872315210
GPR[SPS]-1659872315210
GPR[EPS]-1659872315210
GPR[SPS]-1659872315210
if (this.rightBlock != null) {


}

GPR[EPS]-1659872315210
GPR[SPVA]-1659872315210
GPR[SPVS]-1659872315210
GPR[SPVAP]-1659872315210
04:38:35.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872315645
04:38:35.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:38:35.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872315645
GPR[EPVATF]-1659872315708
GPR[SPVATR]-1659872315708
GPR[EPVATR]-1659872326415
04:38:46.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872326415
GPR[SPVESU]-1659872326415
GPR[EPVESU]-1659872326417
GPR[EPVA]-1659872326417
GPR[SPS]-1659872326417
if (this.rightBlock == null) {
    return null;
}

if (this.rightBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.rightBlock);
}

GPR[EPS]-1659872326417
GPR[SPVA]-1659872326417
GPR[SPVS]-1659872326417
GPR[SPVAP]-1659872326417
04:38:46.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872326853
04:38:46.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:38:46.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872326854
GPR[EPVATF]-1659872326917
GPR[SPVATR]-1659872326917
GPR[EPVATR]-1659872337142
04:38:57.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872337142
GPR[SPVS]-1659872337142
GPR[SPVAP]-1659872337142
04:38:57.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872337601
04:38:57.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:38:57.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872337601
GPR[EPVATF]-1659872337667
GPR[SPVATR]-1659872337667
GPR[EPVATR]-1659872347922
04:39:07.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872347923
GPR[SPVESU]-1659872347923
GPR[EPVESU]-1659872347925
GPR[EPVA]-1659872347925
GPR[SPS]-1659872347925
GPR[EPS]-1659872347925
GPR[SPS]-1659872347925
clear();
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	clear();
GPR[EPS]-1659872347925
GPR[SPVA]-1659872347925
GPR[SPVS]-1659872347925
GPR[SPVAP]-1659872347925
04:39:07.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872348357
04:39:08.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:39:08.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872348357
GPR[EPVATF]-1659872348423
GPR[SPVATR]-1659872348423
GPR[EPVATR]-1659872358809
04:39:18.809 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872358824
GPR[EPVS]-1659872358826
GPR[SPVS]-1659872358826
GPR[SPVAP]-1659872358826
04:39:18.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872359262
04:39:19.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:39:19.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872359262
GPR[EPVATF]-1659872359323
GPR[SPVATR]-1659872359323
GPR[EPVATR]-1659872369566
04:39:29.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872369566
GPR[SPVESU]-1659872369566
GPR[EPVESU]-1659872369568
GPR[EPVA]-1659872369568
GPR[SPS]-1659872369568
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        
null
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        
null
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        
null
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        
null
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        
null
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        
null
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        
null
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        
null
if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	h[3] = h[2];
        
null

        h[4] = h[2];
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659872369568
GPR[SPVA]-1659872369568
GPR[SPVS]-1659872369568
GPR[SPVAP]-1659872369568
04:39:29.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:29.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872369977
GPR[SPVS]-1659872369977
GPR[SPVAP]-1659872369977
04:39:29.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:30.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872370386
GPR[SPVS]-1659872370386
GPR[SPVAP]-1659872370386
04:39:30.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872370818
04:39:30.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:39:30.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872370818
GPR[EPVATF]-1659872370881
GPR[SPVATR]-1659872370881
GPR[EPVATR]-1659872380947
04:39:40.947 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872380961
GPR[EPVS]-1659872380961
GPR[SPVS]-1659872380961
GPR[SPVAP]-1659872380961
04:39:40.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872381393
04:39:41.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:39:41.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872381393
GPR[EPVATF]-1659872381456
GPR[SPVATR]-1659872381456
GPR[EPVATR]-1659872391649
04:39:51.649 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872391661
GPR[EPVS]-1659872391662
GPR[SPVS]-1659872391662
GPR[SPVAP]-1659872391662
04:39:51.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872392094
04:39:52.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:39:52.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872392094
GPR[EPVATF]-1659872392155
GPR[SPVATR]-1659872392155
GPR[EPVATR]-1659872402269
04:40:02.269 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872402281
GPR[EPVS]-1659872402282
GPR[SPVS]-1659872402282
GPR[SPVAP]-1659872402282
04:40:02.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872402717
04:40:02.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:40:02.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872402717
GPR[EPVATF]-1659872402780
GPR[SPVATR]-1659872402780
GPR[EPVATR]-1659872413090
04:40:13.090 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872413107
GPR[EPVS]-1659872413108
GPR[SPVS]-1659872413108
GPR[SPVAP]-1659872413108
04:40:13.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872413545
04:40:13.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:40:13.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872413545
GPR[EPVATF]-1659872413608
GPR[SPVATR]-1659872413608
GPR[EPVATR]-1659872423869
04:40:23.869 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872423882
GPR[EPVS]-1659872423883
GPR[SPVS]-1659872423883
GPR[SPVAP]-1659872423883
04:40:23.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872424325
04:40:24.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:40:24.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872424325
GPR[EPVATF]-1659872424388
GPR[SPVATR]-1659872424388
GPR[EPVATR]-1659872434917
04:40:34.917 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872434931
GPR[EPVS]-1659872434932
GPR[SPVS]-1659872434932
GPR[SPVAP]-1659872434932
04:40:34.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872435365
04:40:35.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:40:35.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872435366
GPR[EPVATF]-1659872435428
GPR[SPVATR]-1659872435428
GPR[EPVATR]-1659872445637
04:40:45.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872445637
GPR[SPVS]-1659872445637
GPR[SPVAP]-1659872445637
04:40:45.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872446076
04:40:46.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:40:46.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872446076
GPR[EPVATF]-1659872446140
GPR[SPVATR]-1659872446140
GPR[EPVATR]-1659872456299
04:40:56.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872456299
GPR[SPVS]-1659872456299
GPR[SPVAP]-1659872456299
04:40:56.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872456737
04:40:56.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:40:56.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872456737
GPR[EPVATF]-1659872456805
GPR[SPVATR]-1659872456805
GPR[EPVATR]-1659872467037
04:41:07.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872467037
GPR[SPVS]-1659872467037
GPR[SPVAP]-1659872467037
04:41:07.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872467469
04:41:07.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:41:07.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872467469
GPR[EPVATF]-1659872467532
GPR[SPVATR]-1659872467532
GPR[EPVATR]-1659872479021
04:41:19.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872479022
GPR[SPVS]-1659872479022
GPR[SPVAP]-1659872479022
04:41:19.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872479457
04:41:19.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:41:19.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872479457
GPR[EPVATF]-1659872479523
GPR[SPVATR]-1659872479523
GPR[EPVATR]-1659872489771
04:41:29.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872489771
GPR[SPVS]-1659872489771
GPR[SPVAP]-1659872489771
04:41:29.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872490210
04:41:30.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:41:30.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872490210
GPR[EPVATF]-1659872490277
GPR[SPVATR]-1659872490277
GPR[EPVATR]-1659872500590
04:41:40.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872500590
GPR[SPVS]-1659872500590
GPR[SPVAP]-1659872500590
04:41:40.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872501024
04:41:41.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:41:41.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872501024
GPR[EPVATF]-1659872501088
GPR[SPVATR]-1659872501088
GPR[EPVATR]-1659872511347
04:41:51.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872511347
GPR[SPVS]-1659872511347
GPR[SPVAP]-1659872511347
04:41:51.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872511779
04:41:51.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:41:51.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872511779
GPR[EPVATF]-1659872511843
GPR[SPVATR]-1659872511843
GPR[EPVATR]-1659872522043
04:42:02.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872522043
GPR[SPVS]-1659872522043
GPR[SPVAP]-1659872522043
04:42:02.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872522481
04:42:02.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:42:02.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872522482
GPR[EPVATF]-1659872522544
GPR[SPVATR]-1659872522544
GPR[EPVATR]-1659872532970
04:42:12.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872532971
GPR[SPVS]-1659872532971
GPR[SPVAP]-1659872532971
04:42:12.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872533407
04:42:13.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:42:13.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872533407
GPR[EPVATF]-1659872533472
GPR[SPVATR]-1659872533472
GPR[EPVATR]-1659872543592
04:42:23.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872543593
GPR[SPVS]-1659872543593
GPR[SPVAP]-1659872543593
04:42:23.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:24.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872544001
GPR[SPVESU]-1659872544001
GPR[EPVESU]-1659872544002
GPR[EPVA]-1659872544002
GPR[SPS]-1659872544002

GPR[EPS]-1659872544002
GPR[SPVA]-1659872544002
GPR[SPVS]-1659872544002
GPR[SPVAP]-1659872544002
04:42:24.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872544430
04:42:24.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:42:24.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872544430
GPR[EPVATF]-1659872544491
GPR[SPVATR]-1659872544491
GPR[EPVATR]-1659872554665
04:42:34.665 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872554679
GPR[EPVS]-1659872554680
GPR[SPVESU]-1659872554680
GPR[EPVESU]-1659872554681
GPR[EPVA]-1659872554681
GPR[ESUN]-1659872554681
GPR[SSUN]-1659872554681
04:42:34.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.AbstractBlock ===453
04:42:34.696 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return null;
GPR[SPS]-1659872554697
GPR[EPS]-1659872554698
GPR[SPS]-1659872554698
GPR[EPS]-1659872554698
GPR[SPS]-1659872554698
GPR[EPS]-1659872554698
GPR[SPS]-1659872554698
GPR[EPS]-1659872554698
GPR[SPS]-1659872554698
GPR[EPS]-1659872554698
GPR[SPS]-1659872554698
GPR[EPS]-1659872554698
GPR[SPS]-1659872554698
GPR[EPS]-1659872554698
GPR[SPS]-1659872554698
GPR[EPS]-1659872554698
GPR[SPS]-1659872554698
GPR[EPS]-1659872554699
GPR[SPS]-1659872554699
GPR[EPS]-1659872554699
GPR[SPS]-1659872554699

GPR[EPS]-1659872554699
GPR[SPVA]-1659872554699
GPR[SPVS]-1659872554699
GPR[SPVAP]-1659872554699
04:42:34.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872555115
04:42:35.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:42:35.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872555115
GPR[EPVATF]-1659872555180
GPR[SPVATR]-1659872555180
GPR[EPVATR]-1659872565389
04:42:45.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872565389
GPR[SPVESU]-1659872565389
GPR[EPVESU]-1659872565391
GPR[EPVA]-1659872565391
GPR[ESUN]-1659872565391
GPR[SSUN]-1659872565391
04:42:45.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===452
04:42:45.404 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
h[3] = h[2];
GPR[SPS]-1659872565405
GPR[EPS]-1659872565406
GPR[SPS]-1659872565406
GPR[EPS]-1659872565406
GPR[SPS]-1659872565406
GPR[EPS]-1659872565406
GPR[SPS]-1659872565406
GPR[EPS]-1659872565406
GPR[SPS]-1659872565406
GPR[EPS]-1659872565406
GPR[SPS]-1659872565406
if (h != null) {


}

if (h != null) {


}

GPR[EPS]-1659872565406
GPR[SPVA]-1659872565406
GPR[SPVS]-1659872565406
GPR[SPVAP]-1659872565406
04:42:45.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872565849
04:42:45.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:42:45.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872565849
GPR[EPVATF]-1659872565912
GPR[SPVATR]-1659872565912
GPR[EPVATR]-1659872576131
04:42:56.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872576131
GPR[SPVS]-1659872576131
GPR[SPVAP]-1659872576131
04:42:56.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872576567
04:42:56.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:42:56.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872576567
GPR[EPVATF]-1659872576632
GPR[SPVATR]-1659872576632
GPR[EPVATR]-1659872586746
04:43:06.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872586746
GPR[SPVESU]-1659872586746
GPR[EPVESU]-1659872586748
GPR[EPVA]-1659872586748
GPR[SPS]-1659872586748
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659872586748
GPR[SPVA]-1659872586748
GPR[SPVS]-1659872586748
GPR[SPVAP]-1659872586748
04:43:06.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872587183
04:43:07.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:43:07.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872587183
GPR[EPVATF]-1659872587248
GPR[SPVATR]-1659872587248
GPR[EPVATR]-1659872597531
04:43:17.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872597531
GPR[SPVS]-1659872597531
GPR[SPVAP]-1659872597531
04:43:17.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872597971
04:43:17.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:43:17.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872597972
GPR[EPVATF]-1659872598036
GPR[SPVATR]-1659872598036
GPR[EPVATR]-1659872608192
04:43:28.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872608193
GPR[SPVS]-1659872608193
GPR[SPVAP]-1659872608193
04:43:28.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872608623
04:43:28.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:43:28.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872608623
GPR[EPVATF]-1659872608688
GPR[SPVATR]-1659872608688
GPR[EPVATR]-1659872618994
04:43:38.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872618994
GPR[SPVS]-1659872618994
GPR[SPVAP]-1659872618994
04:43:38.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872619443
04:43:39.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:43:39.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872619443
GPR[EPVATF]-1659872619506
GPR[SPVATR]-1659872619506
GPR[EPVATR]-1659872630133
04:43:50.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872630133
GPR[SPVESU]-1659872630133
GPR[EPVESU]-1659872630159
GPR[EPVA]-1659872630159
GPR[SPS]-1659872630159
GPR[EPS]-1659872630161
GPR[SPS]-1659872630161
clear();
	h[3] = h[2];
h[3] = h[2];
	clear();
GPR[EPS]-1659872630163
GPR[SPVA]-1659872630163
GPR[SPVS]-1659872630163
GPR[SPVAP]-1659872630163
04:43:50.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872630845
04:43:50.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:43:50.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872630845
GPR[EPVATF]-1659872630941
GPR[SPVATR]-1659872630941
GPR[EPVATR]-1659872641231
04:44:01.231 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872641255
GPR[EPVS]-1659872641257
GPR[SPVS]-1659872641257
GPR[SPVAP]-1659872641257
04:44:01.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872641693
04:44:01.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:44:01.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872641693
GPR[EPVATF]-1659872641755
GPR[SPVATR]-1659872641756
GPR[EPVATR]-1659872651905
04:44:11.905 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872651913
GPR[EPVS]-1659872651914
GPR[SPVESU]-1659872651914
GPR[EPVESU]-1659872651915
GPR[EPVA]-1659872651915
GPR[SPS]-1659872651915
h[3] = h[2];
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        
null
h[3] = h[2];
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        
null
h[3] = h[2];
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        
null
h[3] = h[2];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        
null
h[3] = h[2];
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        
null
h[3] = h[2];
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        
null
h[3] = h[2];
	h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        
null
h[3] = h[2];
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        
null

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	h[3] = h[2];

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	h[3] = h[2];

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659872651915
GPR[SPVA]-1659872651915
GPR[SPVS]-1659872651915
GPR[SPVAP]-1659872651915
04:44:11.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:12.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872652326
GPR[SPVS]-1659872652326
GPR[SPVAP]-1659872652326
04:44:12.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:12.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872652737
GPR[SPVS]-1659872652737
GPR[SPVAP]-1659872652737
04:44:12.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872653172
04:44:13.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:44:13.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872653172
GPR[EPVATF]-1659872653235
GPR[SPVATR]-1659872653235
GPR[EPVATR]-1659872665356
04:44:25.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872665356
GPR[SPVS]-1659872665356
GPR[SPVAP]-1659872665356
04:44:25.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872665788
04:44:25.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:44:25.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872665788
GPR[EPVATF]-1659872665852
GPR[SPVATR]-1659872665852
GPR[EPVATR]-1659872675998
04:44:35.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872675998
GPR[SPVS]-1659872675998
GPR[SPVAP]-1659872675998
04:44:35.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872676435
04:44:36.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:44:36.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872676435
GPR[EPVATF]-1659872676501
GPR[SPVATR]-1659872676501
GPR[EPVATR]-1659872686614
04:44:46.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872686614
GPR[SPVS]-1659872686614
GPR[SPVAP]-1659872686614
04:44:46.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872687051
04:44:47.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:44:47.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872687051
GPR[EPVATF]-1659872687115
GPR[SPVATR]-1659872687115
GPR[EPVATR]-1659872697262
04:44:57.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872697262
GPR[SPVS]-1659872697262
GPR[SPVAP]-1659872697262
04:44:57.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872697707
04:44:57.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:44:57.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872697707
GPR[EPVATF]-1659872697772
GPR[SPVATR]-1659872697772
GPR[EPVATR]-1659872708013
04:45:08.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872708013
GPR[SPVS]-1659872708013
GPR[SPVAP]-1659872708013
04:45:08.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872708454
04:45:08.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:45:08.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872708454
GPR[EPVATF]-1659872708519
GPR[SPVATR]-1659872708519
GPR[EPVATR]-1659872718746
04:45:18.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872718746
GPR[SPVS]-1659872718746
GPR[SPVAP]-1659872718746
04:45:18.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872719181
04:45:19.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:45:19.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872719181
GPR[EPVATF]-1659872719245
GPR[SPVATR]-1659872719245
GPR[EPVATR]-1659872729318
04:45:29.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872729318
GPR[SPVS]-1659872729318
GPR[SPVAP]-1659872729318
04:45:29.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872729754
04:45:29.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:45:29.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872729754
GPR[EPVATF]-1659872729816
GPR[SPVATR]-1659872729816
GPR[EPVATR]-1659872739954
04:45:39.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872739954
GPR[SPVS]-1659872739954
GPR[SPVAP]-1659872739954
04:45:39.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872740391
04:45:40.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:45:40.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872740391
GPR[EPVATF]-1659872740456
GPR[SPVATR]-1659872740456
GPR[EPVATR]-1659872750503
04:45:50.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872750503
GPR[SPVS]-1659872750503
GPR[SPVAP]-1659872750503
04:45:50.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872750943
04:45:50.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:45:50.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872750943
GPR[EPVATF]-1659872751007
GPR[SPVATR]-1659872751007
GPR[EPVATR]-1659872761362
04:46:01.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872761362
GPR[SPVS]-1659872761362
GPR[SPVAP]-1659872761362
04:46:01.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872761803
04:46:01.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:46:01.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872761804
GPR[EPVATF]-1659872761867
GPR[SPVATR]-1659872761867
GPR[EPVATR]-1659872772141
04:46:12.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872772141
GPR[SPVS]-1659872772141
GPR[SPVAP]-1659872772141
04:46:12.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872772582
04:46:12.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:46:12.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872772582
GPR[EPVATF]-1659872772648
GPR[SPVATR]-1659872772648
GPR[EPVATR]-1659872782859
04:46:22.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872782859
GPR[SPVS]-1659872782859
GPR[SPVAP]-1659872782859
04:46:22.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872783309
04:46:23.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:46:23.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872783309
GPR[EPVATF]-1659872783376
GPR[SPVATR]-1659872783376
GPR[EPVATR]-1659872794815
04:46:34.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872794815
GPR[SPVS]-1659872794815
GPR[SPVAP]-1659872794815
04:46:34.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872795251
04:46:35.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:46:35.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872795251
GPR[EPVATF]-1659872795315
GPR[SPVATR]-1659872795315
GPR[EPVATR]-1659872805440
04:46:45.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872805440
GPR[SPVS]-1659872805440
GPR[SPVAP]-1659872805440
04:46:45.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872805876
04:46:45.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:46:45.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872805876
GPR[EPVATF]-1659872805940
GPR[SPVATR]-1659872805940
GPR[EPVATR]-1659872816226
04:46:56.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872816226
GPR[SPVS]-1659872816226
GPR[SPVAP]-1659872816226
04:46:56.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872816657
04:46:56.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:46:56.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872816657
GPR[EPVATF]-1659872816720
GPR[SPVATR]-1659872816720
GPR[EPVATR]-1659872827081
04:47:07.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872827081
GPR[SPVS]-1659872827081
GPR[SPVAP]-1659872827081
04:47:07.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:47:07.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872827489
GPR[SPVESU]-1659872827489
GPR[EPVESU]-1659872827490
GPR[EPVA]-1659872827490
GPR[SPS]-1659872827490

GPR[EPS]-1659872827491
GPR[SPVA]-1659872827491
GPR[SPVS]-1659872827491
GPR[SPVAP]-1659872827491
04:47:07.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872827922
04:47:07.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:47:07.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872827922
GPR[EPVATF]-1659872827987
GPR[SPVATR]-1659872827987
GPR[EPVATR]-1659872838505
04:47:18.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872838505
GPR[SPVESU]-1659872838505
GPR[EPVESU]-1659872838507
GPR[EPVA]-1659872838507
GPR[ESUN]-1659872838507
GPR[SSUN]-1659872838507
04:47:18.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===450
04:47:18.519 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
w[2] = size.width;
GPR[SPS]-1659872838521
GPR[EPS]-1659872838522
GPR[SPS]-1659872838522
GPR[EPS]-1659872838522
GPR[SPS]-1659872838522
GPR[EPS]-1659872838522
GPR[SPS]-1659872838522
GPR[EPS]-1659872838522
GPR[SPS]-1659872838522
GPR[EPS]-1659872838522
GPR[SPS]-1659872838522
if (w != null) {


}

GPR[EPS]-1659872838522
GPR[SPVA]-1659872838522
GPR[SPVS]-1659872838522
GPR[SPVAP]-1659872838522
04:47:18.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872838961
04:47:18.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:47:18.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872838961
GPR[EPVATF]-1659872839028
GPR[SPVATR]-1659872839028
GPR[EPVATR]-1659872849289
04:47:29.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872849289
GPR[SPVESU]-1659872849289
GPR[EPVESU]-1659872849291
GPR[EPVA]-1659872849291
GPR[SPS]-1659872849291
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659872849292
GPR[SPVA]-1659872849292
GPR[SPVS]-1659872849292
GPR[SPVAP]-1659872849292
04:47:29.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872849727
04:47:29.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:47:29.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872849727
GPR[EPVATF]-1659872849792
GPR[SPVATR]-1659872849792
GPR[EPVATR]-1659872860201
04:47:40.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872860201
GPR[SPVS]-1659872860201
GPR[SPVAP]-1659872860201
04:47:40.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872860646
04:47:40.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:47:40.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872860646
GPR[EPVATF]-1659872860713
GPR[SPVATR]-1659872860713
GPR[EPVATR]-1659872870985
04:47:50.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872870985
GPR[SPVESU]-1659872870985
GPR[EPVESU]-1659872870986
GPR[EPVA]-1659872870986
GPR[SPS]-1659872870986
GPR[EPS]-1659872870987
GPR[SPS]-1659872870987
clear();
	w[2] = size.width;
w[2] = size.width;
	clear();
GPR[EPS]-1659872870987
GPR[SPVA]-1659872870987
GPR[SPVS]-1659872870987
GPR[SPVAP]-1659872870987
04:47:50.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872871419
04:47:51.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:47:51.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872871419
GPR[EPVATF]-1659872871485
GPR[SPVATR]-1659872871485
GPR[EPVATR]-1659872881661
04:48:01.661 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872881670
GPR[EPVS]-1659872881671
GPR[SPVS]-1659872881671
GPR[SPVAP]-1659872881671
04:48:01.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872882111
04:48:02.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:48:02.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872882111
GPR[EPVATF]-1659872882176
GPR[SPVATR]-1659872882176
GPR[EPVATR]-1659872892641
04:48:12.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872892650
GPR[EPVS]-1659872892651
GPR[SPVESU]-1659872892651
GPR[EPVESU]-1659872892652
GPR[EPVA]-1659872892652
GPR[SPS]-1659872892652
w[2] = size.width;
	RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            
null
w[2] = size.width;
	Size2D size = this.leftBlock.arrange(g2, c3);
            
null
GPR[EPS]-1659872892652
GPR[SPVA]-1659872892652
GPR[SPVS]-1659872892652
GPR[SPVAP]-1659872892652
04:48:12.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:13.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872893066
GPR[SPVS]-1659872893066
GPR[SPVAP]-1659872893066
04:48:13.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:13.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872893474
GPR[SPVESU]-1659872893474
GPR[EPVESU]-1659872893476
GPR[EPVA]-1659872893476
GPR[SPS]-1659872893476

GPR[EPS]-1659872893476
GPR[SPVA]-1659872893476
GPR[SPVS]-1659872893476
GPR[SPVAP]-1659872893476
04:48:13.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872893907
04:48:13.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:48:13.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872893907
GPR[EPVATF]-1659872893973
GPR[SPVATR]-1659872893973
GPR[EPVATR]-1659872904171
04:48:24.171 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659872904180
GPR[EPVS]-1659872904180
GPR[SPVESU]-1659872904180
GPR[EPVESU]-1659872904182
GPR[EPVA]-1659872904182
GPR[ESUN]-1659872904182
GPR[SSUN]-1659872904182
04:48:24.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===449
04:48:24.195 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Size2D size = this.leftBlock.arrange(g2, c3);
GPR[SPS]-1659872904196
GPR[EPS]-1659872904196
GPR[SPS]-1659872904196
GPR[EPS]-1659872904197
GPR[SPS]-1659872904197
Size2D size = this.leftBlock.arrange(size, c3);
Size2D size = this.leftBlock.arrange(h, c3);
Size2D size = this.leftBlock.arrange(w, c3);
Size2D size = this.leftBlock.arrange(container, c3);
Size2D size = this.leftBlock.arrange(constraint, c3);
Size2D size = this.leftBlock.arrange(this.centerBlock, c3);
Size2D size = this.leftBlock.arrange(this.topBlock, c3);
Size2D size = this.leftBlock.arrange(this.bottomBlock, c3);
Size2D size = this.leftBlock.arrange(this.rightBlock, c3);
Size2D size = this.leftBlock.arrange( c3);
Size2D size = this.leftBlock.arrange(size, g2, c3);
Size2D size = this.leftBlock.arrange(h, g2, c3);
Size2D size = this.leftBlock.arrange(w, g2, c3);
Size2D size = this.leftBlock.arrange(container, g2, c3);
Size2D size = this.leftBlock.arrange(constraint, g2, c3);
Size2D size = this.leftBlock.arrange(this.centerBlock, g2, c3);
Size2D size = this.leftBlock.arrange(this.topBlock, g2, c3);
Size2D size = this.leftBlock.arrange(this.bottomBlock, g2, c3);
Size2D size = this.leftBlock.arrange(this.rightBlock, g2, c3);
Size2D size = this.leftBlock.arrange(g2, size);
Size2D size = this.leftBlock.arrange(g2, h);
Size2D size = this.leftBlock.arrange(g2, w);
Size2D size = this.leftBlock.arrange(g2, container);
Size2D size = this.leftBlock.arrange(g2, constraint);
Size2D size = this.leftBlock.arrange(g2, this.centerBlock);
Size2D size = this.leftBlock.arrange(g2, this.topBlock);
Size2D size = this.leftBlock.arrange(g2, this.bottomBlock);
Size2D size = this.leftBlock.arrange(g2, this.rightBlock);
Size2D size = this.leftBlock.arrange(g2, );
Size2D size = this.leftBlock.arrange(g2, size, c3);
Size2D size = this.leftBlock.arrange(g2, h, c3);
Size2D size = this.leftBlock.arrange(g2, w, c3);
Size2D size = this.leftBlock.arrange(g2, container, c3);
Size2D size = this.leftBlock.arrange(g2, constraint, c3);
Size2D size = this.leftBlock.arrange(g2, this.centerBlock, c3);
Size2D size = this.leftBlock.arrange(g2, this.topBlock, c3);
Size2D size = this.leftBlock.arrange(g2, this.bottomBlock, c3);
Size2D size = this.leftBlock.arrange(g2, this.rightBlock, c3);
Size2D size = this.leftBlock.arrange(g2, c3, size);
Size2D size = this.leftBlock.arrange(g2, c3, h);
Size2D size = this.leftBlock.arrange(g2, c3, w);
Size2D size = this.leftBlock.arrange(g2, c3, container);
Size2D size = this.leftBlock.arrange(g2, c3, constraint);
Size2D size = this.leftBlock.arrange(g2, c3, this.centerBlock);
Size2D size = this.leftBlock.arrange(g2, c3, this.topBlock);
Size2D size = this.leftBlock.arrange(g2, c3, this.bottomBlock);
Size2D size = this.leftBlock.arrange(g2, c3, this.rightBlock);
GPR[EPS]-1659872904198
GPR[SPVA]-1659872904198
GPR[SPVS]-1659872904198
GPR[SPVAP]-1659872904198
04:48:24.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:24.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872904615
GPR[SPVS]-1659872904615
GPR[SPVAP]-1659872904615
04:48:24.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:25.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872905030
GPR[SPVS]-1659872905030
GPR[SPVAP]-1659872905030
04:48:25.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:25.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872905456
GPR[SPVS]-1659872905456
GPR[SPVAP]-1659872905456
04:48:25.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:25.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872905873
GPR[SPVS]-1659872905873
GPR[SPVAP]-1659872905873
04:48:25.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:26.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872906287
GPR[SPVS]-1659872906287
GPR[SPVAP]-1659872906287
04:48:26.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:26.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872906705
GPR[SPVS]-1659872906705
GPR[SPVAP]-1659872906705
04:48:26.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:27.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872907113
GPR[SPVS]-1659872907113
GPR[SPVAP]-1659872907113
04:48:27.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:27.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872907538
GPR[SPVS]-1659872907538
GPR[SPVAP]-1659872907538
04:48:27.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:27.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872907958
GPR[SPVS]-1659872907958
GPR[SPVAP]-1659872907958
04:48:27.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:28.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872908378
GPR[SPVS]-1659872908378
GPR[SPVAP]-1659872908378
04:48:28.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:28.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872908792
GPR[SPVS]-1659872908793
GPR[SPVAP]-1659872908793
04:48:28.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:29.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872909204
GPR[SPVS]-1659872909204
GPR[SPVAP]-1659872909204
04:48:29.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:29.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872909617
GPR[SPVS]-1659872909617
GPR[SPVAP]-1659872909617
04:48:29.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:30.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872910026
GPR[SPVS]-1659872910026
GPR[SPVAP]-1659872910026
04:48:30.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:30.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872910442
GPR[SPVS]-1659872910442
GPR[SPVAP]-1659872910442
04:48:30.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:30.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872910861
GPR[SPVS]-1659872910861
GPR[SPVAP]-1659872910861
04:48:30.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:31.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872911274
GPR[SPVS]-1659872911274
GPR[SPVAP]-1659872911274
04:48:31.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:31.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872911683
GPR[SPVS]-1659872911683
GPR[SPVAP]-1659872911683
04:48:31.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:32.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872912099
GPR[SPVS]-1659872912099
GPR[SPVAP]-1659872912099
04:48:32.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:32.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872912529
GPR[SPVS]-1659872912529
GPR[SPVAP]-1659872912529
04:48:32.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:32.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872912940
GPR[SPVS]-1659872912940
GPR[SPVAP]-1659872912940
04:48:32.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:33.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872913356
GPR[SPVS]-1659872913356
GPR[SPVAP]-1659872913356
04:48:33.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:33.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872913768
GPR[SPVS]-1659872913768
GPR[SPVAP]-1659872913768
04:48:33.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872914203
04:48:34.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:48:34.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872914203
GPR[EPVATF]-1659872914267
GPR[SPVATR]-1659872914267
GPR[EPVATR]-1659872924622
04:48:44.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872924622
GPR[SPVS]-1659872924622
GPR[SPVAP]-1659872924622
04:48:44.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:45.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872925038
GPR[SPVS]-1659872925038
GPR[SPVAP]-1659872925038
04:48:45.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:45.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872925452
GPR[SPVS]-1659872925452
GPR[SPVAP]-1659872925452
04:48:45.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:45.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872925863
GPR[SPVS]-1659872925863
GPR[SPVAP]-1659872925863
04:48:45.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:46.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872926268
GPR[SPVS]-1659872926268
GPR[SPVAP]-1659872926268
04:48:46.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:46.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872926542
GPR[SPVS]-1659872926543
GPR[SPVAP]-1659872926543
04:48:46.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:46.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872926959
GPR[SPVS]-1659872926959
GPR[SPVAP]-1659872926959
04:48:46.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:47.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872927374
GPR[SPVS]-1659872927374
GPR[SPVAP]-1659872927374
04:48:47.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:47.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872927790
GPR[SPVS]-1659872927790
GPR[SPVAP]-1659872927790
04:48:47.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:48.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872928211
GPR[SPVS]-1659872928211
GPR[SPVAP]-1659872928211
04:48:48.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:48.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872928622
GPR[SPVS]-1659872928622
GPR[SPVAP]-1659872928622
04:48:48.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:49.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872929031
GPR[SPVS]-1659872929031
GPR[SPVAP]-1659872929031
04:48:49.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:49.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872929459
GPR[SPVS]-1659872929459
GPR[SPVAP]-1659872929459
04:48:49.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:49.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872929871
GPR[SPVS]-1659872929871
GPR[SPVAP]-1659872929871
04:48:49.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:50.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872930288
GPR[SPVS]-1659872930288
GPR[SPVAP]-1659872930288
04:48:50.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:50.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872930704
GPR[SPVS]-1659872930704
GPR[SPVAP]-1659872930704
04:48:50.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:51.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872931119
GPR[SPVS]-1659872931119
GPR[SPVAP]-1659872931119
04:48:51.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:51.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872931532
GPR[SPVS]-1659872931532
GPR[SPVAP]-1659872931532
04:48:51.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:51.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872931949
GPR[SPVS]-1659872931949
GPR[SPVAP]-1659872931949
04:48:51.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:52.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872932379
GPR[SPVS]-1659872932379
GPR[SPVAP]-1659872932379
04:48:52.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:52.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872932795
GPR[SPVS]-1659872932795
GPR[SPVAP]-1659872932795
04:48:52.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:53.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872933207
GPR[SPVS]-1659872933207
GPR[SPVAP]-1659872933207
04:48:53.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:53.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872933624
GPR[SPVS]-1659872933624
GPR[SPVAP]-1659872933624
04:48:53.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:54.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872934042
GPR[SPVESU]-1659872934042
GPR[EPVESU]-1659872934044
GPR[EPVA]-1659872934044
GPR[SPS]-1659872934044
GPR[EPS]-1659872934044
GPR[SPS]-1659872934044
GPR[EPS]-1659872934044
GPR[SPS]-1659872934044
if (this.leftBlock != null) {


}

if (g2 != null) {


}

if (c3 != null) {


}

GPR[EPS]-1659872934045
GPR[SPVA]-1659872934045
GPR[SPVS]-1659872934045
GPR[SPVAP]-1659872934045
04:48:54.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:54.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872934458
GPR[SPVS]-1659872934458
GPR[SPVAP]-1659872934458
04:48:54.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:54.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872934871
GPR[SPVS]-1659872934871
GPR[SPVAP]-1659872934871
04:48:54.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:48:55.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659872935300
GPR[SPVESU]-1659872935300
GPR[EPVESU]-1659872935301
GPR[EPVA]-1659872935301
GPR[SPS]-1659872935301
if (this.leftBlock == null) {
    return null;
}

if (this.leftBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.leftBlock);
}

if (g2 == null) {
    return null;
}

if (g2 == null) {
    throw new IllegalArgumentException("Empty variable: " + g2);
}

if (c3 == null) {
    return null;
}

if (c3 == null) {
    throw new IllegalArgumentException("Empty variable: " + c3);
}

GPR[EPS]-1659872935301
GPR[SPVA]-1659872935301
GPR[SPVS]-1659872935301
GPR[SPVAP]-1659872935301
04:48:55.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872935733
04:48:55.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:48:55.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872935733
GPR[EPVATF]-1659872935796
GPR[SPVATR]-1659872935796
GPR[EPVATR]-1659872945961
04:49:05.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872945961
GPR[SPVS]-1659872945961
GPR[SPVAP]-1659872945961
04:49:05.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872946400
04:49:06.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:49:06.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872946400
GPR[EPVATF]-1659872946467
GPR[SPVATR]-1659872946467
GPR[EPVATR]-1659872957022
04:49:17.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872957022
GPR[SPVS]-1659872957022
GPR[SPVAP]-1659872957022
04:49:17.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872957455
04:49:17.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:49:17.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872957455
GPR[EPVATF]-1659872957519
GPR[SPVATR]-1659872957519
GPR[EPVATR]-1659872967622
04:49:27.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872967622
GPR[SPVS]-1659872967622
GPR[SPVAP]-1659872967622
04:49:27.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872968059
04:49:28.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:49:28.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872968059
GPR[EPVATF]-1659872968123
GPR[SPVATR]-1659872968123
GPR[EPVATR]-1659872978296
04:49:38.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872978296
GPR[SPVS]-1659872978296
GPR[SPVAP]-1659872978296
04:49:38.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872978731
04:49:38.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:49:38.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872978731
GPR[EPVATF]-1659872978792
GPR[SPVATR]-1659872978792
GPR[EPVATR]-1659872988991
04:49:48.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872988991
GPR[SPVS]-1659872988991
GPR[SPVAP]-1659872988991
04:49:48.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659872989435
04:49:49.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:49:49.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659872989435
GPR[EPVATF]-1659872989501
GPR[SPVATR]-1659872989501
GPR[EPVATR]-1659872999606
04:49:59.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659872999606
GPR[SPVESU]-1659872999606
GPR[EPVESU]-1659872999608
GPR[EPVA]-1659872999608
GPR[SPS]-1659872999608
GPR[EPS]-1659872999608
GPR[SPS]-1659872999608
clear();
	Size2D size = this.leftBlock.arrange(g2, c3);
Size2D size = this.leftBlock.arrange(g2, c3);
	clear();
GPR[EPS]-1659872999608
GPR[SPVA]-1659872999608
GPR[SPVS]-1659872999608
GPR[SPVAP]-1659872999608
04:49:59.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873000045
04:50:00.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:50:00.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873000045
GPR[EPVATF]-1659873000108
GPR[SPVATR]-1659873000108
GPR[EPVATR]-1659873010503
04:50:10.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873010503
GPR[SPVS]-1659873010503
GPR[SPVAP]-1659873010503
04:50:10.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873010936
04:50:10.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:50:10.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873010936
GPR[EPVATF]-1659873011000
GPR[SPVATR]-1659873011000
GPR[EPVATR]-1659873021311
04:50:21.311 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873021321
GPR[EPVS]-1659873021322
GPR[SPVESU]-1659873021322
GPR[EPVESU]-1659873021324
GPR[EPVA]-1659873021324
GPR[SPS]-1659873021324
GPR[EPS]-1659873021324
GPR[SPS]-1659873021324

GPR[EPS]-1659873021324
GPR[SPVA]-1659873021324
GPR[SPVS]-1659873021324
GPR[SPVAP]-1659873021324
04:50:21.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:50:21.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873021730
GPR[SPVESU]-1659873021730
GPR[EPVESU]-1659873021731
GPR[EPVA]-1659873021731
GPR[ESUN]-1659873021731
GPR[SSUN]-1659873021731
04:50:21.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===445
04:50:21.742 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
GPR[SPS]-1659873021744
GPR[EPS]-1659873021744
GPR[SPS]-1659873021744
GPR[EPS]-1659873021744
GPR[SPS]-1659873021744
GPR[EPS]-1659873021744
GPR[SPS]-1659873021744
GPR[EPS]-1659873021744
GPR[SPS]-1659873021744
GPR[EPS]-1659873021744
GPR[SPS]-1659873021744
if (constraint != null) {


}

if (h != null) {


}

GPR[EPS]-1659873021744
GPR[SPVA]-1659873021744
GPR[SPVS]-1659873021744
GPR[SPVAP]-1659873021744
04:50:21.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:50:22.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873022155
GPR[SPVS]-1659873022155
GPR[SPVAP]-1659873022155
04:50:22.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:50:22.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873022578
GPR[SPVESU]-1659873022578
GPR[EPVESU]-1659873022580
GPR[EPVA]-1659873022580
GPR[SPS]-1659873022580
if (constraint == null) {
    return null;
}

if (constraint == null) {
    throw new IllegalArgumentException("Empty variable: " + constraint);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659873022580
GPR[SPVA]-1659873022580
GPR[SPVS]-1659873022580
GPR[SPVAP]-1659873022580
04:50:22.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873023016
04:50:23.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:50:23.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873023016
GPR[EPVATF]-1659873023080
GPR[SPVATR]-1659873023080
GPR[EPVATR]-1659873033282
04:50:33.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873033282
GPR[SPVS]-1659873033282
GPR[SPVAP]-1659873033282
04:50:33.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873033719
04:50:33.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:50:33.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873033719
GPR[EPVATF]-1659873033784
GPR[SPVATR]-1659873033784
GPR[EPVATR]-1659873044142
04:50:44.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873044142
GPR[SPVS]-1659873044142
GPR[SPVAP]-1659873044142
04:50:44.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873044579
04:50:44.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:50:44.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873044579
GPR[EPVATF]-1659873044643
GPR[SPVATR]-1659873044643
GPR[EPVATR]-1659873054793
04:50:54.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873054793
GPR[SPVS]-1659873054793
GPR[SPVAP]-1659873054793
04:50:54.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873055233
04:50:55.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:50:55.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873055233
GPR[EPVATF]-1659873055296
GPR[SPVATR]-1659873055296
GPR[EPVATR]-1659873065377
04:51:05.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873065377
GPR[SPVESU]-1659873065377
GPR[EPVESU]-1659873065379
GPR[EPVA]-1659873065379
GPR[SPS]-1659873065379
GPR[EPS]-1659873065379
GPR[SPS]-1659873065380
clear();
	RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
	clear();
GPR[EPS]-1659873065380
GPR[SPVA]-1659873065380
GPR[SPVS]-1659873065380
GPR[SPVAP]-1659873065380
04:51:05.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873065815
04:51:05.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:51:05.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873065815
GPR[EPVATF]-1659873065877
GPR[SPVATR]-1659873065877
GPR[EPVATR]-1659873076127
04:51:16.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873076127
GPR[SPVS]-1659873076127
GPR[SPVAP]-1659873076127
04:51:16.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873076560
04:51:16.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:51:16.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873076560
GPR[EPVATF]-1659873076624
GPR[SPVATR]-1659873076624
GPR[EPVATR]-1659873086887
04:51:26.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873086887
GPR[SPVESU]-1659873086887
GPR[EPVESU]-1659873086889
GPR[EPVA]-1659873086889
GPR[SPS]-1659873086889
GPR[EPS]-1659873086889
GPR[SPS]-1659873086889

GPR[EPS]-1659873086889
GPR[SPVA]-1659873086889
GPR[SPVS]-1659873086889
GPR[SPVAP]-1659873086889
04:51:26.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:51:27.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873087300
GPR[SPVESU]-1659873087300
GPR[EPVESU]-1659873087301
GPR[EPVA]-1659873087301
GPR[ESUN]-1659873087301
GPR[SSUN]-1659873087301
04:51:27.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===444
04:51:27.313 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
GPR[SPS]-1659873087315
if (this.leftBlock == null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
GPR[EPS]-1659873087315
GPR[SPVA]-1659873087315
GPR[SPVS]-1659873087315
GPR[SPVAP]-1659873087315
04:51:27.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873087739
04:51:27.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:51:27.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873087739
GPR[EPVATF]-1659873087804
GPR[SPVATR]-1659873087804
GPR[EPVATR]-1659873098116
04:51:38.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873098117
GPR[SPVESU]-1659873098117
GPR[EPVESU]-1659873098118
GPR[EPVA]-1659873098118
GPR[SPS]-1659873098118
GPR[EPS]-1659873098119
GPR[SPS]-1659873098119
GPR[EPS]-1659873098119
GPR[SPS]-1659873098119
GPR[EPS]-1659873098119
GPR[SPS]-1659873098119
GPR[EPS]-1659873098119
GPR[SPS]-1659873098119
if (this.leftBlock != null) {


}

GPR[EPS]-1659873098119
GPR[SPVA]-1659873098119
GPR[SPVS]-1659873098119
GPR[SPVAP]-1659873098119
04:51:38.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873098552
04:51:38.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:51:38.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873098552
GPR[EPVATF]-1659873098616
GPR[SPVATR]-1659873098616
GPR[EPVATR]-1659873108765
04:51:48.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873108765
GPR[SPVESU]-1659873108765
GPR[EPVESU]-1659873108767
GPR[EPVA]-1659873108767
GPR[SPS]-1659873108767
if (this.leftBlock == null) {
    return null;
}

if (this.leftBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.leftBlock);
}

GPR[EPS]-1659873108767
GPR[SPVA]-1659873108767
GPR[SPVS]-1659873108767
GPR[SPVAP]-1659873108767
04:51:48.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873109204
04:51:49.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:51:49.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873109204
GPR[EPVATF]-1659873109269
GPR[SPVATR]-1659873109269
GPR[EPVATR]-1659873120355
04:52:00.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873120355
GPR[SPVS]-1659873120355
GPR[SPVAP]-1659873120355
04:52:00.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873120798
04:52:00.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:52:00.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873120798
GPR[EPVATF]-1659873120863
GPR[SPVATR]-1659873120863
GPR[EPVATR]-1659873131166
04:52:11.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873131166
GPR[SPVESU]-1659873131166
GPR[EPVESU]-1659873131167
GPR[EPVA]-1659873131167
GPR[SPS]-1659873131167
GPR[EPS]-1659873131168
GPR[SPS]-1659873131168
clear();
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	clear();
GPR[EPS]-1659873131168
GPR[SPVA]-1659873131168
GPR[SPVS]-1659873131168
GPR[SPVAP]-1659873131168
04:52:11.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873131601
04:52:11.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:52:11.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873131601
GPR[EPVATF]-1659873131665
GPR[SPVATR]-1659873131665
GPR[EPVATR]-1659873141850
04:52:21.850 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873141861
GPR[EPVS]-1659873141863
GPR[SPVS]-1659873141863
GPR[SPVAP]-1659873141863
04:52:21.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873142296
04:52:22.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:52:22.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873142297
GPR[EPVATF]-1659873142359
GPR[SPVATR]-1659873142359
GPR[EPVATR]-1659873152563
04:52:32.563 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873152571
GPR[EPVS]-1659873152572
GPR[SPVESU]-1659873152572
GPR[EPVESU]-1659873152573
GPR[EPVA]-1659873152573
GPR[SPS]-1659873152573
if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        
null
if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        
null
if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        
null
if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        
null
if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        
null
if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        
null
if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	h[2] = constraint.getHeight() - h[1] - h[0];
        
null

        h[3] = h[2];
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT

        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659873152573
GPR[SPVA]-1659873152573
GPR[SPVS]-1659873152573
GPR[SPVAP]-1659873152573
04:52:32.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:52:32.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873152987
GPR[SPVS]-1659873152987
GPR[SPVAP]-1659873152987
04:52:32.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:52:33.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873153403
GPR[SPVS]-1659873153403
GPR[SPVAP]-1659873153403
04:52:33.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873153840
04:52:33.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:52:33.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873153840
GPR[EPVATF]-1659873153904
GPR[SPVATR]-1659873153904
GPR[EPVATR]-1659873164153
04:52:44.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873164153
GPR[SPVS]-1659873164153
GPR[SPVAP]-1659873164153
04:52:44.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873164593
04:52:44.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:52:44.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873164593
GPR[EPVATF]-1659873164656
GPR[SPVATR]-1659873164657
GPR[EPVATR]-1659873174869
04:52:54.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873174869
GPR[SPVS]-1659873174869
GPR[SPVAP]-1659873174869
04:52:54.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873175301
04:52:55.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:52:55.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873175301
GPR[EPVATF]-1659873175364
GPR[SPVATR]-1659873175364
GPR[EPVATR]-1659873185633
04:53:05.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873185633
GPR[SPVS]-1659873185633
GPR[SPVAP]-1659873185633
04:53:05.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873186087
04:53:06.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:53:06.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873186087
GPR[EPVATF]-1659873186152
GPR[SPVATR]-1659873186152
GPR[EPVATR]-1659873196599
04:53:16.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873196599
GPR[SPVS]-1659873196599
GPR[SPVAP]-1659873196599
04:53:16.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873197029
04:53:17.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:53:17.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873197029
GPR[EPVATF]-1659873197092
GPR[SPVATR]-1659873197092
GPR[EPVATR]-1659873207195
04:53:27.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873207195
GPR[SPVS]-1659873207195
GPR[SPVAP]-1659873207195
04:53:27.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873207629
04:53:27.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:53:27.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873207630
GPR[EPVATF]-1659873207692
GPR[SPVATR]-1659873207692
GPR[EPVATR]-1659873217808
04:53:37.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873217808
GPR[SPVS]-1659873217808
GPR[SPVAP]-1659873217808
04:53:37.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873218245
04:53:38.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:53:38.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873218245
GPR[EPVATF]-1659873218308
GPR[SPVATR]-1659873218308
GPR[EPVATR]-1659873228429
04:53:48.429 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873228441
GPR[EPVS]-1659873228442
GPR[SPVS]-1659873228442
GPR[SPVAP]-1659873228442
04:53:48.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873228876
04:53:48.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:53:48.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873228876
GPR[EPVATF]-1659873228940
GPR[SPVATR]-1659873228940
GPR[EPVATR]-1659873239211
04:53:59.211 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873239219
GPR[EPVS]-1659873239220
GPR[SPVS]-1659873239220
GPR[SPVAP]-1659873239220
04:53:59.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873239657
04:53:59.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:53:59.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873239658
GPR[EPVATF]-1659873239719
GPR[SPVATR]-1659873239719
GPR[EPVATR]-1659873250102
04:54:10.102 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873250111
GPR[EPVS]-1659873250111
GPR[SPVS]-1659873250111
GPR[SPVAP]-1659873250111
04:54:10.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873250549
04:54:10.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:54:10.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873250549
GPR[EPVATF]-1659873250612
GPR[SPVATR]-1659873250612
GPR[EPVATR]-1659873260774
04:54:20.774 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873260783
GPR[EPVS]-1659873260783
GPR[SPVS]-1659873260783
GPR[SPVAP]-1659873260783
04:54:20.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873261218
04:54:21.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:54:21.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873261218
GPR[EPVATF]-1659873261283
GPR[SPVATR]-1659873261283
GPR[EPVATR]-1659873272552
04:54:32.552 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873272562
GPR[EPVS]-1659873272563
GPR[SPVS]-1659873272563
GPR[SPVAP]-1659873272563
04:54:32.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873273007
04:54:33.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:54:33.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873273007
GPR[EPVATF]-1659873273072
GPR[SPVATR]-1659873273072
GPR[EPVATR]-1659873283491
04:54:43.491 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873283499
GPR[EPVS]-1659873283499
GPR[SPVS]-1659873283499
GPR[SPVAP]-1659873283499
04:54:43.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873283932
04:54:43.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:54:43.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873283932
GPR[EPVATF]-1659873283996
GPR[SPVATR]-1659873283996
GPR[EPVATR]-1659873294215
04:54:54.215 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873294227
GPR[EPVS]-1659873294228
GPR[SPVS]-1659873294228
GPR[SPVAP]-1659873294228
04:54:54.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873294667
04:54:54.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:54:54.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873294667
GPR[EPVATF]-1659873294734
GPR[SPVATR]-1659873294734
GPR[EPVATR]-1659873304964
04:55:04.964 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873304972
GPR[EPVS]-1659873304973
GPR[SPVS]-1659873304973
GPR[SPVAP]-1659873304973
04:55:04.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873305405
04:55:05.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:55:05.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873305405
GPR[EPVATF]-1659873305469
GPR[SPVATR]-1659873305469
GPR[EPVATR]-1659873315603
04:55:15.603 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873315613
GPR[EPVS]-1659873315613
GPR[SPVS]-1659873315613
GPR[SPVAP]-1659873315613
04:55:15.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873316047
04:55:16.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:55:16.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873316047
GPR[EPVATF]-1659873316111
GPR[SPVATR]-1659873316111
GPR[EPVATR]-1659873326306
04:55:26.306 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873326315
GPR[EPVS]-1659873326316
GPR[SPVS]-1659873326316
GPR[SPVAP]-1659873326316
04:55:26.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:55:26.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873326731
GPR[SPVESU]-1659873326731
GPR[EPVESU]-1659873326732
GPR[EPVA]-1659873326732
GPR[SPS]-1659873326732

GPR[EPS]-1659873326732
GPR[SPVA]-1659873326732
GPR[SPVS]-1659873326732
GPR[SPVAP]-1659873326732
04:55:26.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873327165
04:55:27.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:55:27.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873327165
GPR[EPVATF]-1659873327228
GPR[SPVATR]-1659873327228
GPR[EPVATR]-1659873337353
04:55:37.353 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873337362
GPR[EPVS]-1659873337362
GPR[SPVESU]-1659873337362
GPR[EPVESU]-1659873337363
GPR[EPVA]-1659873337363
GPR[ESUN]-1659873337363
GPR[SSUN]-1659873337363
04:55:37.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===443
04:55:37.374 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
h[2] = constraint.getHeight() - h[1] - h[0];
GPR[SPS]-1659873337375
GPR[EPS]-1659873337375
GPR[SPS]-1659873337375
GPR[EPS]-1659873337375
GPR[SPS]-1659873337375
GPR[EPS]-1659873337376
GPR[SPS]-1659873337376
GPR[EPS]-1659873337376
GPR[SPS]-1659873337376
GPR[EPS]-1659873337376
GPR[SPS]-1659873337376
if (h != null) {


}

if (constraint != null) {


}

if (h != null) {


}

if (h != null) {


}

GPR[EPS]-1659873337376
GPR[SPVA]-1659873337376
GPR[SPVS]-1659873337376
GPR[SPVAP]-1659873337376
04:55:37.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873337825
04:55:37.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:55:37.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873337826
GPR[EPVATF]-1659873337888
GPR[SPVATR]-1659873337888
GPR[EPVATR]-1659873348032
04:55:48.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873348032
GPR[SPVS]-1659873348032
GPR[SPVAP]-1659873348032
04:55:48.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:55:48.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873348443
GPR[SPVS]-1659873348443
GPR[SPVAP]-1659873348443
04:55:48.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873348873
04:55:48.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:55:48.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873348873
GPR[EPVATF]-1659873348936
GPR[SPVATR]-1659873348936
GPR[EPVATR]-1659873359271
04:55:59.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873359271
GPR[SPVS]-1659873359271
GPR[SPVAP]-1659873359271
04:55:59.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873359706
04:55:59.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:55:59.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873359706
GPR[EPVATF]-1659873359768
GPR[SPVATR]-1659873359768
GPR[EPVATR]-1659873369850
04:56:09.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873369850
GPR[SPVESU]-1659873369850
GPR[EPVESU]-1659873369852
GPR[EPVA]-1659873369852
GPR[SPS]-1659873369852
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (constraint == null) {
    return null;
}

if (constraint == null) {
    throw new IllegalArgumentException("Empty variable: " + constraint);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659873369852
GPR[SPVA]-1659873369852
GPR[SPVS]-1659873369852
GPR[SPVAP]-1659873369852
04:56:09.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873370285
04:56:10.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:56:10.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873370286
GPR[EPVATF]-1659873370349
GPR[SPVATR]-1659873370349
GPR[EPVATR]-1659873380626
04:56:20.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873380627
GPR[SPVS]-1659873380627
GPR[SPVAP]-1659873380627
04:56:20.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873381067
04:56:21.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:56:21.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873381067
GPR[EPVATF]-1659873381130
GPR[SPVATR]-1659873381130
GPR[EPVATR]-1659873391400
04:56:31.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873391400
GPR[SPVS]-1659873391400
GPR[SPVAP]-1659873391400
04:56:31.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873391833
04:56:31.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:56:31.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873391833
GPR[EPVATF]-1659873391895
GPR[SPVATR]-1659873391895
GPR[EPVATR]-1659873402282
04:56:42.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873402282
GPR[SPVS]-1659873402282
GPR[SPVAP]-1659873402282
04:56:42.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873402737
04:56:42.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:56:42.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873402737
GPR[EPVATF]-1659873402799
GPR[SPVATR]-1659873402799
GPR[EPVATR]-1659873412945
04:56:52.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873412945
GPR[SPVS]-1659873412945
GPR[SPVAP]-1659873412945
04:56:52.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873413379
04:56:53.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:56:53.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873413379
GPR[EPVATF]-1659873413446
GPR[SPVATR]-1659873413446
GPR[EPVATR]-1659873423806
04:57:03.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873423806
GPR[SPVS]-1659873423806
GPR[SPVAP]-1659873423806
04:57:03.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873424253
04:57:04.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:57:04.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873424253
GPR[EPVATF]-1659873424315
GPR[SPVATR]-1659873424315
GPR[EPVATR]-1659873435970
04:57:15.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873435970
GPR[SPVS]-1659873435970
GPR[SPVAP]-1659873435970
04:57:15.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873436402
04:57:16.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:57:16.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873436402
GPR[EPVATF]-1659873436465
GPR[SPVATR]-1659873436465
GPR[EPVATR]-1659873446704
04:57:26.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873446704
GPR[SPVS]-1659873446704
GPR[SPVAP]-1659873446704
04:57:26.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873447154
04:57:27.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:57:27.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873447154
GPR[EPVATF]-1659873447220
GPR[SPVATR]-1659873447220
GPR[EPVATR]-1659873457384
04:57:37.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873457384
GPR[SPVESU]-1659873457384
GPR[EPVESU]-1659873457386
GPR[EPVA]-1659873457386
GPR[SPS]-1659873457386
GPR[EPS]-1659873457386
GPR[SPS]-1659873457386
clear();
	h[2] = constraint.getHeight() - h[1] - h[0];
h[2] = constraint.getHeight() - h[1] - h[0];
	clear();
GPR[EPS]-1659873457386
GPR[SPVA]-1659873457386
GPR[SPVS]-1659873457386
GPR[SPVAP]-1659873457386
04:57:37.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873457821
04:57:37.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:57:37.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873457821
GPR[EPVATF]-1659873457884
GPR[SPVATR]-1659873457884
GPR[EPVATR]-1659873468170
04:57:48.170 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873468181
GPR[EPVS]-1659873468182
GPR[SPVS]-1659873468182
GPR[SPVAP]-1659873468182
04:57:48.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873468606
04:57:48.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:57:48.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873468606
GPR[EPVATF]-1659873468672
GPR[SPVATR]-1659873468672
GPR[EPVATR]-1659873478806
04:57:58.806 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873478815
GPR[EPVS]-1659873478815
GPR[SPVESU]-1659873478815
GPR[EPVESU]-1659873478817
GPR[EPVA]-1659873478817
GPR[SPS]-1659873478817
h[2] = constraint.getHeight() - h[1] - h[0];
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        
null
h[2] = constraint.getHeight() - h[1] - h[0];
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        
null
h[2] = constraint.getHeight() - h[1] - h[0];
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        
null
h[2] = constraint.getHeight() - h[1] - h[0];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        
null
h[2] = constraint.getHeight() - h[1] - h[0];
	w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        
null
h[2] = constraint.getHeight() - h[1] - h[0];
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        
null

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT

        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	h[2] = constraint.getHeight() - h[1] - h[0];

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659873478817
GPR[SPVA]-1659873478817
GPR[SPVS]-1659873478817
GPR[SPVAP]-1659873478817
04:57:58.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:57:59.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873479230
GPR[SPVS]-1659873479230
GPR[SPVAP]-1659873479230
04:57:59.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:57:59.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873479643
GPR[SPVS]-1659873479643
GPR[SPVAP]-1659873479643
04:57:59.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873480091
04:58:00.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:58:00.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873480091
GPR[EPVATF]-1659873480155
GPR[SPVATR]-1659873480155
GPR[EPVATR]-1659873490221
04:58:10.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873490221
GPR[SPVS]-1659873490221
GPR[SPVAP]-1659873490221
04:58:10.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873490661
04:58:10.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:58:10.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873490661
GPR[EPVATF]-1659873490723
GPR[SPVATR]-1659873490723
GPR[EPVATR]-1659873500832
04:58:20.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873500832
GPR[SPVS]-1659873500832
GPR[SPVAP]-1659873500832
04:58:20.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873501274
04:58:21.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:58:21.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873501274
GPR[EPVATF]-1659873501337
GPR[SPVATR]-1659873501337
GPR[EPVATR]-1659873511585
04:58:31.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873511585
GPR[SPVS]-1659873511585
GPR[SPVAP]-1659873511585
04:58:31.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873512019
04:58:32.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:58:32.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873512019
GPR[EPVATF]-1659873512084
GPR[SPVATR]-1659873512084
GPR[EPVATR]-1659873524311
04:58:44.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873524311
GPR[SPVS]-1659873524311
GPR[SPVAP]-1659873524311
04:58:44.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873524749
04:58:44.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:58:44.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873524749
GPR[EPVATF]-1659873524811
GPR[SPVATR]-1659873524811
GPR[EPVATR]-1659873535143
04:58:55.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873535143
GPR[SPVS]-1659873535143
GPR[SPVAP]-1659873535143
04:58:55.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873535579
04:58:55.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:58:55.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873535579
GPR[EPVATF]-1659873535645
GPR[SPVATR]-1659873535645
GPR[EPVATR]-1659873545848
04:59:05.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873545848
GPR[SPVS]-1659873545848
GPR[SPVAP]-1659873545848
04:59:05.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873546286
04:59:06.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:59:06.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873546286
GPR[EPVATF]-1659873546352
GPR[SPVATR]-1659873546352
GPR[EPVATR]-1659873556670
04:59:16.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873556670
GPR[SPVS]-1659873556670
GPR[SPVAP]-1659873556670
04:59:16.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873557110
04:59:17.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:59:17.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873557110
GPR[EPVATF]-1659873557172
GPR[SPVATR]-1659873557172
GPR[EPVATR]-1659873567346
04:59:27.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873567346
GPR[SPVS]-1659873567346
GPR[SPVAP]-1659873567346
04:59:27.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873567815
04:59:27.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:59:27.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873567815
GPR[EPVATF]-1659873567879
GPR[SPVATR]-1659873567879
GPR[EPVATR]-1659873578232
04:59:38.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873578232
GPR[SPVS]-1659873578232
GPR[SPVAP]-1659873578232
04:59:38.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873578671
04:59:38.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:59:38.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873578672
GPR[EPVATF]-1659873578736
GPR[SPVATR]-1659873578736
GPR[EPVATR]-1659873589011
04:59:49.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873589011
GPR[SPVS]-1659873589011
GPR[SPVAP]-1659873589011
04:59:49.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873589440
04:59:49.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:59:49.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873589440
GPR[EPVATF]-1659873589505
GPR[SPVATR]-1659873589505
GPR[EPVATR]-1659873600221
05:00:00.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873600221
GPR[SPVS]-1659873600221
GPR[SPVAP]-1659873600221
05:00:00.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873600650
05:00:00.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:00:00.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873600650
GPR[EPVATF]-1659873600715
GPR[SPVATR]-1659873600715
GPR[EPVATR]-1659873610901
05:00:10.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873610901
GPR[SPVS]-1659873610901
GPR[SPVAP]-1659873610901
05:00:10.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873611338
05:00:11.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:00:11.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873611338
GPR[EPVATF]-1659873611401
GPR[SPVATR]-1659873611401
GPR[EPVATR]-1659873621681
05:00:21.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873621681
GPR[SPVS]-1659873621681
GPR[SPVAP]-1659873621681
05:00:21.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873622129
05:00:22.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:00:22.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873622129
GPR[EPVATF]-1659873622196
GPR[SPVATR]-1659873622196
GPR[EPVATR]-1659873632585
05:00:32.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873632585
GPR[SPVS]-1659873632585
GPR[SPVAP]-1659873632585
05:00:32.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873633023
05:00:33.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:00:33.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873633023
GPR[EPVATF]-1659873633087
GPR[SPVATR]-1659873633087
GPR[EPVATR]-1659873643324
05:00:43.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873643324
GPR[SPVS]-1659873643324
GPR[SPVAP]-1659873643324
05:00:43.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873643758
05:00:43.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:00:43.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873643759
GPR[EPVATF]-1659873643824
GPR[SPVATR]-1659873643824
GPR[EPVATR]-1659873654389
05:00:54.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873654389
GPR[SPVS]-1659873654389
GPR[SPVAP]-1659873654389
05:00:54.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:00:54.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873654809
GPR[SPVESU]-1659873654809
GPR[EPVESU]-1659873654810
GPR[EPVA]-1659873654810
GPR[SPS]-1659873654810

GPR[EPS]-1659873654811
GPR[SPVA]-1659873654811
GPR[SPVS]-1659873654811
GPR[SPVAP]-1659873654811
05:00:54.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873655243
05:00:55.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:00:55.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873655243
GPR[EPVATF]-1659873655310
GPR[SPVATR]-1659873655310
GPR[EPVATR]-1659873665507
05:01:05.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873665507
GPR[SPVESU]-1659873665507
GPR[EPVESU]-1659873665508
GPR[EPVA]-1659873665508
GPR[ESUN]-1659873665508
GPR[SSUN]-1659873665508
05:01:05.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.AbstractBlock ===443
05:01:05.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
lowerBound = trimToContentWidth(r.getLowerBound());
GPR[SPS]-1659873665527
lowerBound = trimToContentWidth(true, r.getLowerBound());
lowerBound = trimToContentWidth(false, r.getLowerBound());
lowerBound = trimToContentWidth(r.getLowerBound(), true);
lowerBound = trimToContentWidth(r.getLowerBound(), false);
GPR[EPS]-1659873665527
GPR[SPVA]-1659873665527
GPR[SPVS]-1659873665527
GPR[SPVAP]-1659873665527
05:01:05.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:01:05.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873665981
GPR[SPVS]-1659873665981
GPR[SPVAP]-1659873665981
05:01:05.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:01:06.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873666383
GPR[SPVS]-1659873666383
GPR[SPVAP]-1659873666383
05:01:06.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:01:06.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873666784
GPR[SPVS]-1659873666784
GPR[SPVAP]-1659873666784
05:01:06.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:01:07.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873667191
GPR[SPVESU]-1659873667191
GPR[EPVESU]-1659873667193
GPR[EPVA]-1659873667193
GPR[SPS]-1659873667193
GPR[EPS]-1659873667193
GPR[SPS]-1659873667193
GPR[EPS]-1659873667193
GPR[SPS]-1659873667193
GPR[EPS]-1659873667193
GPR[SPS]-1659873667193
lowerBound = trimToContentHeight(r.getLowerBound());
lowerBound = calculateTotalWidth(r.getLowerBound());
lowerBound = calculateTotalHeight(r.getLowerBound());
GPR[EPS]-1659873667193
GPR[SPVA]-1659873667193
GPR[SPVS]-1659873667193
GPR[SPVAP]-1659873667193
05:01:07.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873667622
05:01:07.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:01:07.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873667622
GPR[EPVATF]-1659873667687
GPR[SPVATR]-1659873667687
GPR[EPVATR]-1659873677854
05:01:17.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873677854
GPR[SPVS]-1659873677854
GPR[SPVAP]-1659873677854
05:01:17.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873678270
05:01:18.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:01:18.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873678270
GPR[EPVATF]-1659873678332
GPR[SPVATR]-1659873678332
GPR[EPVATR]-1659873688562
05:01:28.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873688562
GPR[SPVS]-1659873688562
GPR[SPVAP]-1659873688562
05:01:28.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873688978
05:01:28.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:01:28.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873688978
GPR[EPVATF]-1659873689040
GPR[SPVATR]-1659873689040
GPR[EPVATR]-1659873699551
05:01:39.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873699551
GPR[SPVESU]-1659873699551
GPR[EPVESU]-1659873699553
GPR[EPVA]-1659873699553
GPR[SPS]-1659873699553
if (r != null) {


}

GPR[EPS]-1659873699553
GPR[SPVA]-1659873699553
GPR[SPVS]-1659873699553
GPR[SPVAP]-1659873699553
05:01:39.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873699970
05:01:39.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:01:39.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873699970
GPR[EPVATF]-1659873700033
GPR[SPVATR]-1659873700033
GPR[EPVATR]-1659873710486
05:01:50.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873710486
GPR[SPVESU]-1659873710486
GPR[EPVESU]-1659873710487
GPR[EPVA]-1659873710487
GPR[SPS]-1659873710487
if (r == null) {
    return null;
}

if (r == null) {
    throw new IllegalArgumentException("Empty variable: " + r);
}

GPR[EPS]-1659873710488
GPR[SPVA]-1659873710488
GPR[SPVS]-1659873710488
GPR[SPVAP]-1659873710488
05:01:50.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873710906
05:01:50.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:01:50.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873710906
GPR[EPVATF]-1659873710969
GPR[SPVATR]-1659873710969
GPR[EPVATR]-1659873721283
05:02:01.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873721283
GPR[SPVS]-1659873721283
GPR[SPVAP]-1659873721283
05:02:01.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873721712
05:02:01.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:02:01.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873721713
GPR[EPVATF]-1659873721776
GPR[SPVATR]-1659873721776
GPR[EPVATR]-1659873732014
05:02:12.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873732014
GPR[SPVESU]-1659873732014
GPR[EPVESU]-1659873732016
GPR[EPVA]-1659873732016
GPR[SPS]-1659873732016
GPR[EPS]-1659873732017
GPR[SPS]-1659873732017
setWidth(lowerBound);
setWidth(lowerBound);
	lowerBound = trimToContentWidth(r.getLowerBound());
lowerBound = trimToContentWidth(r.getLowerBound());
	setWidth(lowerBound);
setHeight(lowerBound);
setHeight(lowerBound);
	lowerBound = trimToContentWidth(r.getLowerBound());
lowerBound = trimToContentWidth(r.getLowerBound());
	setHeight(lowerBound);
GPR[EPS]-1659873732017
GPR[SPVA]-1659873732017
GPR[SPVS]-1659873732017
GPR[SPVAP]-1659873732017
05:02:12.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873732430
05:02:12.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:02:12.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873732430
GPR[EPVATF]-1659873732497
GPR[SPVATR]-1659873732497
GPR[EPVATR]-1659873742533
05:02:22.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873742533
GPR[SPVS]-1659873742533
GPR[SPVAP]-1659873742533
05:02:22.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873742950
05:02:22.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:02:22.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873742950
GPR[EPVATF]-1659873743017
GPR[SPVATR]-1659873743017
GPR[EPVATR]-1659873753874
05:02:33.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873753874
GPR[SPVS]-1659873753874
GPR[SPVAP]-1659873753874
05:02:33.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873754374
05:02:34.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:02:34.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873754374
GPR[EPVATF]-1659873754437
GPR[SPVATR]-1659873754437
GPR[EPVATR]-1659873764814
05:02:44.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873764814
GPR[SPVS]-1659873764814
GPR[SPVAP]-1659873764814
05:02:44.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873765229
05:02:45.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:02:45.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873765229
GPR[EPVATF]-1659873765296
GPR[SPVATR]-1659873765296
GPR[EPVATR]-1659873775374
05:02:55.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873775374
GPR[SPVS]-1659873775374
GPR[SPVAP]-1659873775374
05:02:55.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873775797
05:02:55.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:02:55.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873775797
GPR[EPVATF]-1659873775860
GPR[SPVATR]-1659873775860
GPR[EPVATR]-1659873786023
05:03:06.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873786023
GPR[SPVS]-1659873786023
GPR[SPVAP]-1659873786023
05:03:06.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873786439
05:03:06.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:03:06.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873786439
GPR[EPVATF]-1659873786500
GPR[SPVATR]-1659873786500
GPR[EPVATR]-1659873796637
05:03:16.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873796637
GPR[SPVESU]-1659873796637
GPR[EPVESU]-1659873796639
GPR[EPVA]-1659873796639
GPR[SPS]-1659873796639
GPR[EPS]-1659873796639
GPR[SPS]-1659873796639

GPR[EPS]-1659873796639
GPR[SPVA]-1659873796639
GPR[SPVS]-1659873796639
GPR[SPVAP]-1659873796639
05:03:16.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873797068
05:03:17.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:03:17.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873797068
GPR[EPVATF]-1659873797133
GPR[SPVATR]-1659873797133
GPR[EPVATR]-1659873807314
05:03:27.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873807314
GPR[SPVESU]-1659873807314
GPR[EPVESU]-1659873807316
GPR[EPVA]-1659873807316
GPR[ESUN]-1659873807316
GPR[SSUN]-1659873807316
05:03:27.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.AbstractBlock ===438
05:03:27.324 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return null;
GPR[SPS]-1659873807326
GPR[EPS]-1659873807326
GPR[SPS]-1659873807326
GPR[EPS]-1659873807326
GPR[SPS]-1659873807326
GPR[EPS]-1659873807326
GPR[SPS]-1659873807326
GPR[EPS]-1659873807326
GPR[SPS]-1659873807326
GPR[EPS]-1659873807326
GPR[SPS]-1659873807326
GPR[EPS]-1659873807327
GPR[SPS]-1659873807327
GPR[EPS]-1659873807327
GPR[SPS]-1659873807327
GPR[EPS]-1659873807327
GPR[SPS]-1659873807327
GPR[EPS]-1659873807327
GPR[SPS]-1659873807327
GPR[EPS]-1659873807328
GPR[SPS]-1659873807328

GPR[EPS]-1659873807328
GPR[SPVA]-1659873807328
GPR[SPVS]-1659873807328
GPR[SPVAP]-1659873807328
05:03:27.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873807754
05:03:27.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:03:27.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873807754
GPR[EPVATF]-1659873807815
GPR[SPVATR]-1659873807815
GPR[EPVATR]-1659873818066
05:03:38.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873818066
GPR[SPVESU]-1659873818066
GPR[EPVESU]-1659873818068
GPR[EPVA]-1659873818068
GPR[ESUN]-1659873818068
GPR[SSUN]-1659873818068
05:03:38.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===436
05:03:38.079 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
GPR[SPS]-1659873818081
if (this.bottomBlock == null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
GPR[EPS]-1659873818081
GPR[SPVA]-1659873818081
GPR[SPVS]-1659873818081
GPR[SPVAP]-1659873818081
05:03:38.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873818521
05:03:38.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:03:38.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873818521
GPR[EPVATF]-1659873818585
GPR[SPVATR]-1659873818585
GPR[EPVATR]-1659873828815
05:03:48.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873828815
GPR[SPVESU]-1659873828815
GPR[EPVESU]-1659873828817
GPR[EPVA]-1659873828817
GPR[SPS]-1659873828817
GPR[EPS]-1659873828817
GPR[SPS]-1659873828817
GPR[EPS]-1659873828817
GPR[SPS]-1659873828817
GPR[EPS]-1659873828818
GPR[SPS]-1659873828818
GPR[EPS]-1659873828818
GPR[SPS]-1659873828818
if (this.bottomBlock != null) {


}

GPR[EPS]-1659873828818
GPR[SPVA]-1659873828818
GPR[SPVS]-1659873828818
GPR[SPVAP]-1659873828818
05:03:48.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873829247
05:03:49.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:03:49.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873829247
GPR[EPVATF]-1659873829312
GPR[SPVATR]-1659873829312
GPR[EPVATR]-1659873839492
05:03:59.492 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873839507
GPR[EPVS]-1659873839508
GPR[SPVESU]-1659873839508
GPR[EPVESU]-1659873839510
GPR[EPVA]-1659873839510
GPR[SPS]-1659873839510
if (this.bottomBlock == null) {
    return null;
}

if (this.bottomBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.bottomBlock);
}

GPR[EPS]-1659873839510
GPR[SPVA]-1659873839510
GPR[SPVS]-1659873839510
GPR[SPVAP]-1659873839510
05:03:59.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873839941
05:03:59.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:03:59.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873839942
GPR[EPVATF]-1659873840004
GPR[SPVATR]-1659873840004
GPR[EPVATR]-1659873850263
05:04:10.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873850263
GPR[SPVS]-1659873850263
GPR[SPVAP]-1659873850263
05:04:10.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873850704
05:04:10.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:04:10.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873850704
GPR[EPVATF]-1659873850768
GPR[SPVATR]-1659873850768
GPR[EPVATR]-1659873860993
05:04:20.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873860994
GPR[SPVESU]-1659873860994
GPR[EPVESU]-1659873860995
GPR[EPVA]-1659873860995
GPR[SPS]-1659873860995
GPR[EPS]-1659873860995
GPR[SPS]-1659873860995
clear();
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
	clear();
GPR[EPS]-1659873860996
GPR[SPVA]-1659873860996
GPR[SPVS]-1659873860996
GPR[SPVAP]-1659873860996
05:04:20.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873861428
05:04:21.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:04:21.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873861428
GPR[EPVATF]-1659873861492
GPR[SPVATR]-1659873861492
GPR[EPVATR]-1659873871850
05:04:31.850 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873871859
GPR[EPVS]-1659873871859
GPR[SPVS]-1659873871859
GPR[SPVAP]-1659873871859
05:04:31.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873872296
05:04:32.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:04:32.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873872296
GPR[EPVATF]-1659873872359
GPR[SPVATR]-1659873872359
GPR[EPVATR]-1659873882458
05:04:42.458 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659873882466
GPR[EPVS]-1659873882467
GPR[SPVESU]-1659873882467
GPR[EPVESU]-1659873882468
GPR[EPVA]-1659873882468
GPR[SPS]-1659873882468
if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        
null
if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        
null
if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        
null
if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        
null
if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
	w[1] = w[0];
        
null

        h[2] = constraint.getHeight() - h[1] - h[0];
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659873882469
GPR[SPVA]-1659873882469
GPR[SPVS]-1659873882469
GPR[SPVAP]-1659873882469
05:04:42.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:04:42.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873882884
GPR[SPVS]-1659873882884
GPR[SPVAP]-1659873882884
05:04:42.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:04:43.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659873883322
GPR[SPVS]-1659873883322
GPR[SPVAP]-1659873883322
05:04:43.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873883758
05:04:43.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:04:43.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873883758
GPR[EPVATF]-1659873883820
GPR[SPVATR]-1659873883820
GPR[EPVATR]-1659873894215
05:04:54.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873894215
GPR[SPVS]-1659873894215
GPR[SPVAP]-1659873894215
05:04:54.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873894649
05:04:54.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:04:54.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873894649
GPR[EPVATF]-1659873894712
GPR[SPVATR]-1659873894712
GPR[EPVATR]-1659873905116
05:05:05.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873905116
GPR[SPVS]-1659873905116
GPR[SPVAP]-1659873905116
05:05:05.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873905553
05:05:05.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:05:05.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873905553
GPR[EPVATF]-1659873905616
GPR[SPVATR]-1659873905616
GPR[EPVATR]-1659873917238
05:05:17.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873917238
GPR[SPVS]-1659873917238
GPR[SPVAP]-1659873917238
05:05:17.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873917675
05:05:17.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:05:17.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873917675
GPR[EPVATF]-1659873917740
GPR[SPVATR]-1659873917740
GPR[EPVATR]-1659873928105
05:05:28.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873928105
GPR[SPVS]-1659873928105
GPR[SPVAP]-1659873928105
05:05:28.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873928534
05:05:28.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:05:28.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873928534
GPR[EPVATF]-1659873928599
GPR[SPVATR]-1659873928599
GPR[EPVATR]-1659873939031
05:05:39.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873939031
GPR[SPVS]-1659873939031
GPR[SPVAP]-1659873939031
05:05:39.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873939467
05:05:39.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:05:39.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873939467
GPR[EPVATF]-1659873939532
GPR[SPVATR]-1659873939532
GPR[EPVATR]-1659873949729
05:05:49.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873949729
GPR[SPVS]-1659873949729
GPR[SPVAP]-1659873949729
05:05:49.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873950178
05:05:50.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:05:50.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873950178
GPR[EPVATF]-1659873950240
GPR[SPVATR]-1659873950240
GPR[EPVATR]-1659873960311
05:06:00.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873960311
GPR[SPVS]-1659873960311
GPR[SPVAP]-1659873960311
05:06:00.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873960738
05:06:00.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:06:00.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873960738
GPR[EPVATF]-1659873960800
GPR[SPVATR]-1659873960800
GPR[EPVATR]-1659873971044
05:06:11.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873971044
GPR[SPVS]-1659873971044
GPR[SPVAP]-1659873971044
05:06:11.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873971480
05:06:11.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:06:11.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873971480
GPR[EPVATF]-1659873971543
GPR[SPVATR]-1659873971543
GPR[EPVATR]-1659873981679
05:06:21.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873981679
GPR[SPVS]-1659873981679
GPR[SPVAP]-1659873981679
05:06:21.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873982112
05:06:22.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:06:22.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873982112
GPR[EPVATF]-1659873982175
GPR[SPVATR]-1659873982175
GPR[EPVATR]-1659873992318
05:06:32.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659873992318
GPR[SPVS]-1659873992318
GPR[SPVAP]-1659873992318
05:06:32.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659873992751
05:06:32.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:06:32.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659873992751
GPR[EPVATF]-1659873992816
GPR[SPVATR]-1659873992816
GPR[EPVATR]-1659874002987
05:06:42.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874002987
GPR[SPVS]-1659874002987
GPR[SPVAP]-1659874002987
05:06:42.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874003425
05:06:43.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:06:43.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874003425
GPR[EPVATF]-1659874003488
GPR[SPVATR]-1659874003488
GPR[EPVATR]-1659874013861
05:06:53.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874013861
GPR[SPVS]-1659874013861
GPR[SPVAP]-1659874013861
05:06:53.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874014299
05:06:54.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:06:54.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874014299
GPR[EPVATF]-1659874014364
GPR[SPVATR]-1659874014364
GPR[EPVATR]-1659874024721
05:07:04.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874024721
GPR[SPVS]-1659874024721
GPR[SPVAP]-1659874024721
05:07:04.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874025156
05:07:05.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:07:05.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874025156
GPR[EPVATF]-1659874025220
GPR[SPVATR]-1659874025220
GPR[EPVATR]-1659874035545
05:07:15.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874035545
GPR[SPVS]-1659874035545
GPR[SPVAP]-1659874035545
05:07:15.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874035980
05:07:15.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:07:15.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874035980
GPR[EPVATF]-1659874036044
GPR[SPVATR]-1659874036044
GPR[EPVATR]-1659874046288
05:07:26.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874046288
GPR[SPVS]-1659874046288
GPR[SPVAP]-1659874046288
05:07:26.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874046723
05:07:26.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:07:26.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874046723
GPR[EPVATF]-1659874046788
GPR[SPVATR]-1659874046788
GPR[EPVATR]-1659874056949
05:07:36.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874056950
GPR[SPVS]-1659874056950
GPR[SPVAP]-1659874056950
05:07:36.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:07:37.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874057371
GPR[SPVESU]-1659874057371
GPR[EPVESU]-1659874057373
GPR[EPVA]-1659874057373
GPR[SPS]-1659874057373

GPR[EPS]-1659874057373
GPR[SPVA]-1659874057373
GPR[SPVS]-1659874057373
GPR[SPVAP]-1659874057373
05:07:37.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874057818
05:07:37.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:07:37.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874057818
GPR[EPVATF]-1659874057879
GPR[SPVATR]-1659874057879
GPR[EPVATR]-1659874068093
05:07:48.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874068093
GPR[SPVESU]-1659874068093
GPR[EPVESU]-1659874068094
GPR[EPVA]-1659874068094
GPR[ESUN]-1659874068094
GPR[SSUN]-1659874068094
05:07:48.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===435
05:07:48.104 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
w[1] = w[0];
GPR[SPS]-1659874068106
GPR[EPS]-1659874068106
GPR[SPS]-1659874068106
GPR[EPS]-1659874068106
GPR[SPS]-1659874068106
GPR[EPS]-1659874068106
GPR[SPS]-1659874068106
GPR[EPS]-1659874068106
GPR[SPS]-1659874068106
GPR[EPS]-1659874068106
GPR[SPS]-1659874068106
if (w != null) {


}

if (w != null) {


}

GPR[EPS]-1659874068106
GPR[SPVA]-1659874068106
GPR[SPVS]-1659874068106
GPR[SPVAP]-1659874068106
05:07:48.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:07:48.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874068519
GPR[SPVS]-1659874068519
GPR[SPVAP]-1659874068519
05:07:48.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:07:48.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874068930
GPR[SPVESU]-1659874068930
GPR[EPVESU]-1659874068931
GPR[EPVA]-1659874068931
GPR[SPS]-1659874068931
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659874068932
GPR[SPVA]-1659874068932
GPR[SPVS]-1659874068932
GPR[SPVAP]-1659874068932
05:07:48.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874069366
05:07:49.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:07:49.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874069366
GPR[EPVATF]-1659874069427
GPR[SPVATR]-1659874069427
GPR[EPVATR]-1659874079898
05:07:59.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874079898
GPR[SPVS]-1659874079898
GPR[SPVAP]-1659874079898
05:07:59.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874080342
05:08:00.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:08:00.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874080342
GPR[EPVATF]-1659874080407
GPR[SPVATR]-1659874080407
GPR[EPVATR]-1659874090586
05:08:10.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874090586
GPR[SPVS]-1659874090586
GPR[SPVAP]-1659874090586
05:08:10.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874091019
05:08:11.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:08:11.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874091019
GPR[EPVATF]-1659874091082
GPR[SPVATR]-1659874091082
GPR[EPVATR]-1659874101369
05:08:21.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874101369
GPR[SPVS]-1659874101369
GPR[SPVAP]-1659874101369
05:08:21.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874101814
05:08:21.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:08:21.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874101814
GPR[EPVATF]-1659874101881
GPR[SPVATR]-1659874101881
GPR[EPVATR]-1659874112269
05:08:32.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874112269
GPR[SPVESU]-1659874112269
GPR[EPVESU]-1659874112272
GPR[EPVA]-1659874112272
GPR[SPS]-1659874112272
GPR[EPS]-1659874112272
GPR[SPS]-1659874112272
clear();
	w[1] = w[0];
w[1] = w[0];
	clear();
GPR[EPS]-1659874112272
GPR[SPVA]-1659874112272
GPR[SPVS]-1659874112272
GPR[SPVAP]-1659874112272
05:08:32.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874112699
05:08:32.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:08:32.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874112699
GPR[EPVATF]-1659874112763
GPR[SPVATR]-1659874112763
GPR[EPVATR]-1659874123080
05:08:43.080 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874123091
GPR[EPVS]-1659874123092
GPR[SPVS]-1659874123092
GPR[SPVAP]-1659874123092
05:08:43.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874123528
05:08:43.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:08:43.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874123529
GPR[EPVATF]-1659874123592
GPR[SPVATR]-1659874123592
GPR[EPVATR]-1659874133745
05:08:53.745 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874133754
GPR[EPVS]-1659874133755
GPR[SPVESU]-1659874133755
GPR[EPVESU]-1659874133756
GPR[EPVA]-1659874133756
GPR[SPS]-1659874133756
w[1] = w[0];
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        
null
w[1] = w[0];
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        
null
w[1] = w[0];
	w[0] = constraint.getWidth();
        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        
null
w[1] = w[0];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        
null

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	w[1] = w[0];

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	w[1] = w[0];

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659874133757
GPR[SPVA]-1659874133757
GPR[SPVS]-1659874133757
GPR[SPVAP]-1659874133757
05:08:53.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:08:54.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874134168
GPR[SPVS]-1659874134168
GPR[SPVAP]-1659874134168
05:08:54.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874134601
05:08:54.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:08:54.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874134601
GPR[EPVATF]-1659874134664
GPR[SPVATR]-1659874134664
GPR[EPVATR]-1659874144870
05:09:04.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874144870
GPR[SPVS]-1659874144870
GPR[SPVAP]-1659874144870
05:09:04.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874145329
05:09:05.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:09:05.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874145329
GPR[EPVATF]-1659874145392
GPR[SPVATR]-1659874145392
GPR[EPVATR]-1659874155541
05:09:15.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874155541
GPR[SPVS]-1659874155541
GPR[SPVAP]-1659874155541
05:09:15.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874155978
05:09:15.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:09:15.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874155978
GPR[EPVATF]-1659874156044
GPR[SPVATR]-1659874156044
GPR[EPVATR]-1659874166283
05:09:26.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874166283
GPR[SPVS]-1659874166283
GPR[SPVAP]-1659874166283
05:09:26.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874166724
05:09:26.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:09:26.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874166724
GPR[EPVATF]-1659874166789
GPR[SPVATR]-1659874166789
GPR[EPVATR]-1659874177020
05:09:37.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874177020
GPR[SPVS]-1659874177020
GPR[SPVAP]-1659874177020
05:09:37.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874177458
05:09:37.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:09:37.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874177459
GPR[EPVATF]-1659874177524
GPR[SPVATR]-1659874177524
GPR[EPVATR]-1659874187777
05:09:47.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874187777
GPR[SPVS]-1659874187777
GPR[SPVAP]-1659874187777
05:09:47.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874188213
05:09:48.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:09:48.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874188213
GPR[EPVATF]-1659874188280
GPR[SPVATR]-1659874188280
GPR[EPVATR]-1659874198549
05:09:58.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874198549
GPR[SPVS]-1659874198549
GPR[SPVAP]-1659874198549
05:09:58.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874198987
05:09:58.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:09:58.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874198987
GPR[EPVATF]-1659874199052
GPR[SPVATR]-1659874199052
GPR[EPVATR]-1659874209113
05:10:09.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874209113
GPR[SPVS]-1659874209113
GPR[SPVAP]-1659874209113
05:10:09.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874209549
05:10:09.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:10:09.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874209549
GPR[EPVATF]-1659874209612
GPR[SPVATR]-1659874209612
GPR[EPVATR]-1659874219752
05:10:19.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874219753
GPR[SPVS]-1659874219753
GPR[SPVAP]-1659874219753
05:10:19.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874220199
05:10:20.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:10:20.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874220199
GPR[EPVATF]-1659874220264
GPR[SPVATR]-1659874220264
GPR[EPVATR]-1659874230602
05:10:30.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874230602
GPR[SPVS]-1659874230602
GPR[SPVAP]-1659874230602
05:10:30.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874231039
05:10:31.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:10:31.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874231039
GPR[EPVATF]-1659874231103
GPR[SPVATR]-1659874231103
GPR[EPVATR]-1659874241697
05:10:41.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874241697
GPR[SPVS]-1659874241697
GPR[SPVAP]-1659874241697
05:10:41.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874242135
05:10:42.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:10:42.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874242135
GPR[EPVATF]-1659874242199
GPR[SPVATR]-1659874242199
GPR[EPVATR]-1659874252339
05:10:52.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874252339
GPR[SPVS]-1659874252339
GPR[SPVAP]-1659874252339
05:10:52.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874252777
05:10:52.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:10:52.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874252777
GPR[EPVATF]-1659874252839
GPR[SPVATR]-1659874252839
GPR[EPVATR]-1659874263038
05:11:03.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874263038
GPR[SPVS]-1659874263038
GPR[SPVAP]-1659874263038
05:11:03.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874263475
05:11:03.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:11:03.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874263475
GPR[EPVATF]-1659874263540
GPR[SPVATR]-1659874263540
GPR[EPVATR]-1659874273710
05:11:13.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874273710
GPR[SPVS]-1659874273710
GPR[SPVAP]-1659874273710
05:11:13.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874274141
05:11:14.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:11:14.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874274141
GPR[EPVATF]-1659874274209
GPR[SPVATR]-1659874274209
GPR[EPVATR]-1659874284424
05:11:24.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874284424
GPR[SPVS]-1659874284424
GPR[SPVAP]-1659874284424
05:11:24.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874284868
05:11:24.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:11:24.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874284868
GPR[EPVATF]-1659874284933
GPR[SPVATR]-1659874284933
GPR[EPVATR]-1659874295169
05:11:35.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874295169
GPR[SPVS]-1659874295169
GPR[SPVAP]-1659874295169
05:11:35.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874295622
05:11:35.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:11:35.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874295622
GPR[EPVATF]-1659874295684
GPR[SPVATR]-1659874295684
GPR[EPVATR]-1659874306054
05:11:46.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874306054
GPR[SPVS]-1659874306054
GPR[SPVAP]-1659874306054
05:11:46.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874306485
05:11:46.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:11:46.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874306485
GPR[EPVATF]-1659874306551
GPR[SPVATR]-1659874306551
GPR[EPVATR]-1659874316716
05:11:56.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874316716
GPR[SPVS]-1659874316716
GPR[SPVAP]-1659874316716
05:11:56.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:11:57.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874317131
GPR[SPVESU]-1659874317131
GPR[EPVESU]-1659874317132
GPR[EPVA]-1659874317132
GPR[SPS]-1659874317132

GPR[EPS]-1659874317132
GPR[SPVA]-1659874317132
GPR[SPVS]-1659874317132
GPR[SPVAP]-1659874317132
05:11:57.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874317577
05:11:57.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:11:57.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874317577
GPR[EPVATF]-1659874317643
GPR[SPVATR]-1659874317643
GPR[EPVATR]-1659874327720
05:12:07.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874327720
GPR[SPVESU]-1659874327720
GPR[EPVESU]-1659874327721
GPR[EPVA]-1659874327721
GPR[ESUN]-1659874327721
GPR[SSUN]-1659874327721
05:12:07.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===427
05:12:07.731 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
GPR[SPS]-1659874327732
if (this.topBlock == null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
GPR[EPS]-1659874327733
GPR[SPVA]-1659874327733
GPR[SPVS]-1659874327733
GPR[SPVAP]-1659874327733
05:12:07.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874328177
05:12:08.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:12:08.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874328177
GPR[EPVATF]-1659874328245
GPR[SPVATR]-1659874328245
GPR[EPVATR]-1659874338522
05:12:18.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874338522
GPR[SPVESU]-1659874338522
GPR[EPVESU]-1659874338524
GPR[EPVA]-1659874338524
GPR[SPS]-1659874338524
GPR[EPS]-1659874338524
GPR[SPS]-1659874338524
GPR[EPS]-1659874338524
GPR[SPS]-1659874338524
GPR[EPS]-1659874338525
GPR[SPS]-1659874338525
GPR[EPS]-1659874338525
GPR[SPS]-1659874338525
if (this.topBlock != null) {


}

GPR[EPS]-1659874338525
GPR[SPVA]-1659874338525
GPR[SPVS]-1659874338525
GPR[SPVAP]-1659874338525
05:12:18.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874338957
05:12:18.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:12:18.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874338957
GPR[EPVATF]-1659874339020
GPR[SPVATR]-1659874339020
GPR[EPVATR]-1659874349103
05:12:29.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874349103
GPR[SPVESU]-1659874349103
GPR[EPVESU]-1659874349105
GPR[EPVA]-1659874349105
GPR[SPS]-1659874349105
if (this.topBlock == null) {
    return null;
}

if (this.topBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.topBlock);
}

GPR[EPS]-1659874349105
GPR[SPVA]-1659874349105
GPR[SPVS]-1659874349105
GPR[SPVAP]-1659874349105
05:12:29.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874349539
05:12:29.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:12:29.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874349539
GPR[EPVATF]-1659874349603
GPR[SPVATR]-1659874349603
GPR[EPVATR]-1659874359757
05:12:39.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874359758
GPR[SPVS]-1659874359758
GPR[SPVAP]-1659874359758
05:12:39.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874360191
05:12:40.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:12:40.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874360191
GPR[EPVATF]-1659874360256
GPR[SPVATR]-1659874360256
GPR[EPVATR]-1659874370603
05:12:50.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874370603
GPR[SPVESU]-1659874370603
GPR[EPVESU]-1659874370604
GPR[EPVA]-1659874370604
GPR[SPS]-1659874370604
GPR[EPS]-1659874370605
GPR[SPS]-1659874370605
clear();
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
	clear();
GPR[EPS]-1659874370605
GPR[SPVA]-1659874370605
GPR[SPVS]-1659874370605
GPR[SPVAP]-1659874370605
05:12:50.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874371034
05:12:51.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:12:51.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874371034
GPR[EPVATF]-1659874371099
GPR[SPVATR]-1659874371099
GPR[EPVATR]-1659874383502
05:13:03.502 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874383512
GPR[EPVS]-1659874383513
GPR[SPVS]-1659874383513
GPR[SPVAP]-1659874383513
05:13:03.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874383953
05:13:03.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:13:03.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874383953
GPR[EPVATF]-1659874384016
GPR[SPVATR]-1659874384016
GPR[EPVATR]-1659874395472
05:13:15.472 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874395483
GPR[EPVS]-1659874395485
GPR[SPVESU]-1659874395485
GPR[EPVESU]-1659874395487
GPR[EPVA]-1659874395487
GPR[SPS]-1659874395487
if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
	double[] w = new double[5];
        double[] h = new double[5];
        w[0] = constraint.getWidth();
        
null
if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
	double[] h = new double[5];
        w[0] = constraint.getWidth();
        
null
if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
	w[0] = constraint.getWidth();
        
null

        w[1] = w[0];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659874395488
GPR[SPVA]-1659874395488
GPR[SPVS]-1659874395488
GPR[SPVAP]-1659874395488
05:13:15.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:13:15.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874395899
GPR[SPVS]-1659874395899
GPR[SPVAP]-1659874395899
05:13:15.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:13:16.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874396311
GPR[SPVS]-1659874396311
GPR[SPVAP]-1659874396311
05:13:16.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874396747
05:13:16.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:13:16.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874396747
GPR[EPVATF]-1659874396812
GPR[SPVATR]-1659874396812
GPR[EPVATR]-1659874406933
05:13:26.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874406933
GPR[SPVS]-1659874406933
GPR[SPVAP]-1659874406933
05:13:26.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874407366
05:13:27.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:13:27.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874407366
GPR[EPVATF]-1659874407433
GPR[SPVATR]-1659874407433
GPR[EPVATR]-1659874417520
05:13:37.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874417520
GPR[SPVS]-1659874417520
GPR[SPVAP]-1659874417520
05:13:37.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874417964
05:13:37.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:13:37.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874417964
GPR[EPVATF]-1659874418044
GPR[SPVATR]-1659874418044
GPR[EPVATR]-1659874428297
05:13:48.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874428297
GPR[SPVS]-1659874428297
GPR[SPVAP]-1659874428297
05:13:48.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874428758
05:13:48.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:13:48.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874428758
GPR[EPVATF]-1659874428824
GPR[SPVATR]-1659874428824
GPR[EPVATR]-1659874439099
05:13:59.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874439099
GPR[SPVS]-1659874439099
GPR[SPVAP]-1659874439099
05:13:59.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874439533
05:13:59.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:13:59.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874439533
GPR[EPVATF]-1659874439599
GPR[SPVATR]-1659874439599
GPR[EPVATR]-1659874449821
05:14:09.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874449821
GPR[SPVS]-1659874449821
GPR[SPVAP]-1659874449821
05:14:09.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874450253
05:14:10.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:14:10.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874450253
GPR[EPVATF]-1659874450320
GPR[SPVATR]-1659874450320
GPR[EPVATR]-1659874460433
05:14:20.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874460433
GPR[SPVS]-1659874460433
GPR[SPVAP]-1659874460433
05:14:20.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874460880
05:14:20.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:14:20.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874460880
GPR[EPVATF]-1659874460944
GPR[SPVATR]-1659874460944
GPR[EPVATR]-1659874471291
05:14:31.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874471291
GPR[SPVS]-1659874471291
GPR[SPVAP]-1659874471291
05:14:31.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874471726
05:14:31.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:14:31.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874471726
GPR[EPVATF]-1659874471790
GPR[SPVATR]-1659874471790
GPR[EPVATR]-1659874482067
05:14:42.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874482067
GPR[SPVS]-1659874482067
GPR[SPVAP]-1659874482067
05:14:42.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874482506
05:14:42.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:14:42.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874482506
GPR[EPVATF]-1659874482568
GPR[SPVATR]-1659874482568
GPR[EPVATR]-1659874492954
05:14:52.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874492954
GPR[SPVS]-1659874492954
GPR[SPVAP]-1659874492954
05:14:52.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874493385
05:14:53.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:14:53.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874493385
GPR[EPVATF]-1659874493449
GPR[SPVATR]-1659874493449
GPR[EPVATR]-1659874503581
05:15:03.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874503581
GPR[SPVS]-1659874503581
GPR[SPVAP]-1659874503581
05:15:03.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874504011
05:15:04.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:15:04.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874504011
GPR[EPVATF]-1659874504072
GPR[SPVATR]-1659874504072
GPR[EPVATR]-1659874514281
05:15:14.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874514281
GPR[SPVS]-1659874514281
GPR[SPVAP]-1659874514281
05:15:14.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874514718
05:15:14.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:15:14.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874514718
GPR[EPVATF]-1659874514781
GPR[SPVATR]-1659874514781
GPR[EPVATR]-1659874524918
05:15:24.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874524918
GPR[SPVS]-1659874524918
GPR[SPVAP]-1659874524918
05:15:24.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874525340
05:15:25.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:15:25.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874525340
GPR[EPVATF]-1659874525404
GPR[SPVATR]-1659874525404
GPR[EPVATR]-1659874535710
05:15:35.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874535710
GPR[SPVS]-1659874535710
GPR[SPVAP]-1659874535710
05:15:35.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874536143
05:15:36.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:15:36.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874536143
GPR[EPVATF]-1659874536209
GPR[SPVATR]-1659874536209
GPR[EPVATR]-1659874546569
05:15:46.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874546569
GPR[SPVS]-1659874546569
GPR[SPVAP]-1659874546569
05:15:46.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874547003
05:15:47.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:15:47.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874547003
GPR[EPVATF]-1659874547067
GPR[SPVATR]-1659874547068
GPR[EPVATR]-1659874558382
05:15:58.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874558382
GPR[SPVS]-1659874558382
GPR[SPVAP]-1659874558382
05:15:58.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874558817
05:15:58.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:15:58.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874558817
GPR[EPVATF]-1659874558879
GPR[SPVATR]-1659874558879
GPR[EPVATR]-1659874569253
05:16:09.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874569253
GPR[SPVS]-1659874569253
GPR[SPVAP]-1659874569253
05:16:09.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:09.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874569662
GPR[SPVESU]-1659874569662
GPR[EPVESU]-1659874569663
GPR[EPVA]-1659874569663
GPR[SPS]-1659874569663

GPR[EPS]-1659874569663
GPR[SPVA]-1659874569663
GPR[SPVS]-1659874569663
GPR[SPVAP]-1659874569663
05:16:09.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874570097
05:16:10.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:16:10.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874570097
GPR[EPVATF]-1659874570160
GPR[SPVATR]-1659874570160
GPR[EPVATR]-1659874581698
05:16:21.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874581698
GPR[SPVESU]-1659874581698
GPR[EPVESU]-1659874581699
GPR[EPVA]-1659874581699
GPR[ESUN]-1659874581699
GPR[SSUN]-1659874581699
05:16:21.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===426
05:16:21.709 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
w[0] = constraint.getWidth();
GPR[SPS]-1659874581711
w[0] = constraint.getWidth(true);
w[0] = constraint.getWidth(false);
GPR[EPS]-1659874581711
GPR[SPVA]-1659874581711
GPR[SPVS]-1659874581711
GPR[SPVAP]-1659874581711
05:16:21.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:22.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874582123
GPR[SPVS]-1659874582123
GPR[SPVAP]-1659874582123
05:16:22.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:22.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874582536
GPR[SPVESU]-1659874582536
GPR[EPVESU]-1659874582537
GPR[EPVA]-1659874582537
GPR[SPS]-1659874582537
GPR[EPS]-1659874582538
GPR[SPS]-1659874582538
GPR[EPS]-1659874582538
GPR[SPS]-1659874582538
GPR[EPS]-1659874582538
GPR[SPS]-1659874582538
w[0] = constraint.getHeight();
w[0] = constraint.getWidthConstraintType();
w[0] = constraint.getHeightConstraintType();
w[0] = constraint.toUnconstrainedWidth();
w[0] = constraint.toUnconstrainedHeight();
w[0] = constraint.toString();
w[0] = constraint.getWidthRange();
w[0] = constraint.getHeightRange();
GPR[EPS]-1659874582542
GPR[SPVA]-1659874582542
GPR[SPVS]-1659874582542
GPR[SPVAP]-1659874582542
05:16:22.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874582978
05:16:22.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:16:22.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874582978
GPR[EPVATF]-1659874583043
GPR[SPVATR]-1659874583043
GPR[EPVATR]-1659874593120
05:16:33.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874593120
GPR[SPVS]-1659874593120
GPR[SPVAP]-1659874593120
05:16:33.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:33.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874593529
GPR[SPVS]-1659874593529
GPR[SPVAP]-1659874593529
05:16:33.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:33.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874593943
GPR[SPVS]-1659874593943
GPR[SPVAP]-1659874593943
05:16:33.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:34.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874594358
GPR[SPVS]-1659874594358
GPR[SPVAP]-1659874594358
05:16:34.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:34.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874594769
GPR[SPVS]-1659874594769
GPR[SPVAP]-1659874594769
05:16:34.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:35.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874595184
GPR[SPVS]-1659874595184
GPR[SPVAP]-1659874595184
05:16:35.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:35.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874595599
GPR[SPVS]-1659874595599
GPR[SPVAP]-1659874595599
05:16:35.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:36.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874596017
GPR[SPVESU]-1659874596017
GPR[EPVESU]-1659874596019
GPR[EPVA]-1659874596019
GPR[SPS]-1659874596019
if (w != null) {


}

if (constraint != null) {


}

GPR[EPS]-1659874596019
GPR[SPVA]-1659874596019
GPR[SPVS]-1659874596019
GPR[SPVAP]-1659874596019
05:16:36.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:36.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874596433
GPR[SPVS]-1659874596433
GPR[SPVAP]-1659874596433
05:16:36.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:16:36.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874596850
GPR[SPVESU]-1659874596850
GPR[EPVESU]-1659874596851
GPR[EPVA]-1659874596851
GPR[SPS]-1659874596851
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (constraint == null) {
    return null;
}

if (constraint == null) {
    throw new IllegalArgumentException("Empty variable: " + constraint);
}

GPR[EPS]-1659874596852
GPR[SPVA]-1659874596852
GPR[SPVS]-1659874596852
GPR[SPVAP]-1659874596852
05:16:36.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874597288
05:16:37.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:16:37.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874597288
GPR[EPVATF]-1659874597352
GPR[SPVATR]-1659874597352
GPR[EPVATR]-1659874607814
05:16:47.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874607814
GPR[SPVS]-1659874607814
GPR[SPVAP]-1659874607814
05:16:47.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874608253
05:16:48.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:16:48.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874608253
GPR[EPVATF]-1659874608320
GPR[SPVATR]-1659874608320
GPR[EPVATR]-1659874618497
05:16:58.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874618497
GPR[SPVS]-1659874618497
GPR[SPVAP]-1659874618497
05:16:58.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874618932
05:16:58.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:16:58.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874618932
GPR[EPVATF]-1659874618997
GPR[SPVATR]-1659874618997
GPR[EPVATR]-1659874629203
05:17:09.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874629203
GPR[SPVS]-1659874629203
GPR[SPVAP]-1659874629203
05:17:09.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874629645
05:17:09.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:17:09.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874629645
GPR[EPVATF]-1659874629711
GPR[SPVATR]-1659874629711
GPR[EPVATR]-1659874639874
05:17:19.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874639874
GPR[SPVESU]-1659874639874
GPR[EPVESU]-1659874639876
GPR[EPVA]-1659874639876
GPR[SPS]-1659874639876
GPR[EPS]-1659874639876
GPR[SPS]-1659874639876
clear();
	w[0] = constraint.getWidth();
w[0] = constraint.getWidth();
	clear();
GPR[EPS]-1659874639876
GPR[SPVA]-1659874639876
GPR[SPVS]-1659874639876
GPR[SPVAP]-1659874639876
05:17:19.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874640311
05:17:20.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:17:20.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874640311
GPR[EPVATF]-1659874640372
GPR[SPVATR]-1659874640372
GPR[EPVATR]-1659874650460
05:17:30.460 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874650471
GPR[EPVS]-1659874650472
GPR[SPVS]-1659874650472
GPR[SPVAP]-1659874650472
05:17:30.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874650910
05:17:30.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:17:30.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874650910
GPR[EPVATF]-1659874650971
GPR[SPVATR]-1659874650972
GPR[EPVATR]-1659874661305
05:17:41.305 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874661314
GPR[EPVS]-1659874661315
GPR[SPVESU]-1659874661315
GPR[EPVESU]-1659874661316
GPR[EPVA]-1659874661316
GPR[SPS]-1659874661316
w[0] = constraint.getWidth();
	double[] w = new double[5];
        double[] h = new double[5];
        
null
w[0] = constraint.getWidth();
	double[] h = new double[5];
        
null

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT

        if (this.topBlock != null) {
            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0,
                    new Range(0.0, constraint.getHeight()),
                    LengthConstraintType.RANGE);
            Size2D size = this.topBlock.arrange(g2, c1);
            h[0] = size.height;
        }
        w[1] = w[0];
        if (this.bottomBlock != null) {
            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
            Size2D size = this.bottomBlock.arrange(g2, c2);
            h[1] = size.height;
        }
        h[2] = constraint.getHeight() - h[1] - h[0];
        if (this.leftBlock != null) {
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth()),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.leftBlock.arrange(g2, c3);
            w[2] = size.width;
        }
        h[3] = h[2];
        if (this.rightBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(0.0,
                    new Range(0.0, constraint.getWidth() - w[2]),
                    LengthConstraintType.RANGE, h[2], null,
                    LengthConstraintType.FIXED);
            Size2D size = this.rightBlock.arrange(g2, c4);
            w[3] = size.width;
        }
        h[4] = h[2];
        w[4] = constraint.getWidth() - w[3] - w[2];
        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
        if (this.centerBlock != null) {
            this.centerBlock.arrange(g2, c5);
        }

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
                    w[1], h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],
                    w[3], h[3]));
        }
        if (this.centerBlock != null) {
            this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4],
                    h[4]));
        }
        return new Size2D(constraint.getWidth(), constraint.getHeight());
	w[0] = constraint.getWidth();

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659874661316
GPR[SPVA]-1659874661316
GPR[SPVS]-1659874661316
GPR[SPVAP]-1659874661316
05:17:41.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:17:41.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874661724
GPR[SPVS]-1659874661724
GPR[SPVAP]-1659874661724
05:17:41.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874662161
05:17:42.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:17:42.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874662161
GPR[EPVATF]-1659874662223
GPR[SPVATR]-1659874662223
GPR[EPVATR]-1659874672396
05:17:52.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874672396
GPR[SPVS]-1659874672396
GPR[SPVAP]-1659874672396
05:17:52.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874672827
05:17:52.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:17:52.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874672827
GPR[EPVATF]-1659874672893
GPR[SPVATR]-1659874672893
GPR[EPVATR]-1659874683216
05:18:03.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874683216
GPR[SPVS]-1659874683216
GPR[SPVAP]-1659874683216
05:18:03.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874683655
05:18:03.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:18:03.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874683655
GPR[EPVATF]-1659874683720
GPR[SPVATR]-1659874683720
GPR[EPVATR]-1659874693834
05:18:13.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874693834
GPR[SPVS]-1659874693834
GPR[SPVAP]-1659874693834
05:18:13.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874694270
05:18:14.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:18:14.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874694270
GPR[EPVATF]-1659874694335
GPR[SPVATR]-1659874694335
GPR[EPVATR]-1659874704442
05:18:24.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874704442
GPR[SPVS]-1659874704442
GPR[SPVAP]-1659874704442
05:18:24.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874704894
05:18:24.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:18:24.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874704894
GPR[EPVATF]-1659874704956
GPR[SPVATR]-1659874704956
GPR[EPVATR]-1659874716460
05:18:36.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874716461
GPR[SPVS]-1659874716461
GPR[SPVAP]-1659874716461
05:18:36.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874716896
05:18:36.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:18:36.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874716896
GPR[EPVATF]-1659874716964
GPR[SPVATR]-1659874716964
GPR[EPVATR]-1659874727148
05:18:47.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874727148
GPR[SPVS]-1659874727148
GPR[SPVAP]-1659874727148
05:18:47.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874727583
05:18:47.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:18:47.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874727583
GPR[EPVATF]-1659874727648
GPR[SPVATR]-1659874727648
GPR[EPVATR]-1659874737779
05:18:57.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874737779
GPR[SPVS]-1659874737779
GPR[SPVAP]-1659874737779
05:18:57.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874738212
05:18:58.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:18:58.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874738212
GPR[EPVATF]-1659874738282
GPR[SPVATR]-1659874738282
GPR[EPVATR]-1659874748394
05:19:08.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874748394
GPR[SPVS]-1659874748394
GPR[SPVAP]-1659874748394
05:19:08.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874748838
05:19:08.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:19:08.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874748838
GPR[EPVATF]-1659874748904
GPR[SPVATR]-1659874748904
GPR[EPVATR]-1659874759210
05:19:19.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874759210
GPR[SPVS]-1659874759210
GPR[SPVAP]-1659874759210
05:19:19.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874759642
05:19:19.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:19:19.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874759642
GPR[EPVATF]-1659874759705
GPR[SPVATR]-1659874759705
GPR[EPVATR]-1659874769934
05:19:29.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874769934
GPR[SPVS]-1659874769934
GPR[SPVAP]-1659874769934
05:19:29.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874770370
05:19:30.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:19:30.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874770370
GPR[EPVATF]-1659874770431
GPR[SPVATR]-1659874770432
GPR[EPVATR]-1659874780649
05:19:40.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874780649
GPR[SPVS]-1659874780649
GPR[SPVAP]-1659874780649
05:19:40.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874781078
05:19:41.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:19:41.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874781078
GPR[EPVATF]-1659874781140
GPR[SPVATR]-1659874781140
GPR[EPVATR]-1659874791166
05:19:51.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874791166
GPR[SPVS]-1659874791166
GPR[SPVAP]-1659874791166
05:19:51.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874791599
05:19:51.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:19:51.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874791599
GPR[EPVATF]-1659874791665
GPR[SPVATR]-1659874791665
GPR[EPVATR]-1659874801787
05:20:01.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874801787
GPR[SPVS]-1659874801787
GPR[SPVAP]-1659874801787
05:20:01.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874802226
05:20:02.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:20:02.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874802226
GPR[EPVATF]-1659874802287
GPR[SPVATR]-1659874802287
GPR[EPVATR]-1659874812546
05:20:12.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874812546
GPR[SPVS]-1659874812546
GPR[SPVAP]-1659874812546
05:20:12.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874812984
05:20:12.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:20:12.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874812984
GPR[EPVATF]-1659874813047
GPR[SPVATR]-1659874813047
GPR[EPVATR]-1659874823239
05:20:23.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874823239
GPR[SPVS]-1659874823239
GPR[SPVAP]-1659874823239
05:20:23.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874823679
05:20:23.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:20:23.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874823679
GPR[EPVATF]-1659874823744
GPR[SPVATR]-1659874823744
GPR[EPVATR]-1659874833989
05:20:33.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874833989
GPR[SPVS]-1659874833989
GPR[SPVAP]-1659874833989
05:20:33.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874834426
05:20:34.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:20:34.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874834426
GPR[EPVATF]-1659874834491
GPR[SPVATR]-1659874834491
GPR[EPVATR]-1659874844558
05:20:44.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874844558
GPR[SPVS]-1659874844558
GPR[SPVAP]-1659874844558
05:20:44.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:20:44.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874844978
GPR[SPVESU]-1659874844978
GPR[EPVESU]-1659874844979
GPR[EPVA]-1659874844980
GPR[SPS]-1659874844980

GPR[EPS]-1659874844980
GPR[SPVA]-1659874844980
GPR[SPVS]-1659874844980
GPR[SPVAP]-1659874844980
05:20:44.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874845411
05:20:45.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:20:45.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874845411
GPR[EPVATF]-1659874845477
GPR[SPVATR]-1659874845477
GPR[EPVATR]-1659874855728
05:20:55.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874855728
GPR[SPVESU]-1659874855728
GPR[EPVESU]-1659874855730
GPR[EPVA]-1659874855730
GPR[ESUN]-1659874855730
GPR[SSUN]-1659874855730
05:20:55.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===425
05:20:55.742 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
double[] h = new double[5];
GPR[SPS]-1659874855744
GPR[EPS]-1659874855744
GPR[SPS]-1659874855744
GPR[EPS]-1659874855744
GPR[SPS]-1659874855744
GPR[EPS]-1659874855744
GPR[SPS]-1659874855744
GPR[EPS]-1659874855744
GPR[SPS]-1659874855744
GPR[EPS]-1659874855744
GPR[SPS]-1659874855744
GPR[EPS]-1659874855745
GPR[SPS]-1659874855745
GPR[EPS]-1659874855745
GPR[SPS]-1659874855745
GPR[EPS]-1659874855745
GPR[SPS]-1659874855745
clear();
	double[] h = new double[5];
double[] h = new double[5];
	clear();
GPR[EPS]-1659874855745
GPR[SPVA]-1659874855745
GPR[SPVS]-1659874855745
GPR[SPVAP]-1659874855745
05:20:55.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874856183
05:20:56.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:20:56.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874856183
GPR[EPVATF]-1659874856248
GPR[SPVATR]-1659874856248
GPR[EPVATR]-1659874866499
05:21:06.499 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874866512
GPR[EPVS]-1659874866513
GPR[SPVS]-1659874866513
GPR[SPVAP]-1659874866513
05:21:06.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874866947
05:21:06.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:21:06.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874866947
GPR[EPVATF]-1659874867009
GPR[SPVATR]-1659874867009
GPR[EPVATR]-1659874878291
05:21:18.291 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874878299
GPR[EPVS]-1659874878300
GPR[SPVESU]-1659874878300
GPR[EPVESU]-1659874878301
GPR[EPVA]-1659874878301
GPR[SPS]-1659874878301
GPR[EPS]-1659874878301
GPR[SPS]-1659874878301

GPR[EPS]-1659874878301
GPR[SPVA]-1659874878301
GPR[SPVS]-1659874878301
GPR[SPVAP]-1659874878301
05:21:18.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:18.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874878715
GPR[SPVESU]-1659874878715
GPR[EPVESU]-1659874878717
GPR[EPVA]-1659874878717
GPR[ESUN]-1659874878717
GPR[SSUN]-1659874878717
05:21:18.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===424
05:21:18.733 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
double[] w = new double[5];
GPR[SPS]-1659874878735
GPR[EPS]-1659874878736
GPR[SPS]-1659874878736
GPR[EPS]-1659874878736
GPR[SPS]-1659874878736
GPR[EPS]-1659874878736
GPR[SPS]-1659874878736
GPR[EPS]-1659874878736
GPR[SPS]-1659874878736
GPR[EPS]-1659874878737
GPR[SPS]-1659874878737
GPR[EPS]-1659874878737
GPR[SPS]-1659874878737
GPR[EPS]-1659874878737
GPR[SPS]-1659874878737
GPR[EPS]-1659874878737
GPR[SPS]-1659874878737
clear();
	double[] w = new double[5];
double[] w = new double[5];
	clear();
GPR[EPS]-1659874878738
GPR[SPVA]-1659874878738
GPR[SPVS]-1659874878738
GPR[SPVAP]-1659874878738
05:21:18.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874879187
05:21:19.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:21:19.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874879187
GPR[EPVATF]-1659874879252
GPR[SPVATR]-1659874879252
GPR[EPVATR]-1659874889286
05:21:29.286 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874889295
GPR[EPVS]-1659874889295
GPR[SPVS]-1659874889295
GPR[SPVAP]-1659874889295
05:21:29.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874889725
05:21:29.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:21:29.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874889726
GPR[EPVATF]-1659874889792
GPR[SPVATR]-1659874889792
GPR[EPVATR]-1659874899928
05:21:39.928 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659874899937
GPR[EPVS]-1659874899938
GPR[SPVESU]-1659874899938
GPR[EPVESU]-1659874899939
GPR[EPVA]-1659874899939
GPR[SPS]-1659874899939
GPR[EPS]-1659874899939
GPR[SPS]-1659874899939

GPR[EPS]-1659874899940
GPR[SPVA]-1659874899940
GPR[SPVS]-1659874899940
GPR[SPVAP]-1659874899940
05:21:39.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:40.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874900348
GPR[SPVESU]-1659874900348
GPR[EPVESU]-1659874900350
GPR[EPVA]-1659874900350
GPR[ESUN]-1659874900350
GPR[SSUN]-1659874900350
05:21:40.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===323
05:21:40.359 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return arrange(container, g2, new RectangleConstraint(width, height));
GPR[SPS]-1659874900361
return arrange(height, g2, new RectangleConstraint(width, height));
return arrange(c2, g2, new RectangleConstraint(width, height));
return arrange(c1, g2, new RectangleConstraint(width, height));
return arrange(h, g2, new RectangleConstraint(width, height));
return arrange(w, g2, new RectangleConstraint(width, height));
return arrange(width, g2, new RectangleConstraint(width, height));
return arrange(this.centerBlock, g2, new RectangleConstraint(width, height));
return arrange(this.topBlock, g2, new RectangleConstraint(width, height));
return arrange(this.bottomBlock, g2, new RectangleConstraint(width, height));
return arrange(this.leftBlock, g2, new RectangleConstraint(width, height));
return arrange(this.rightBlock, g2, new RectangleConstraint(width, height));
return arrange( g2, new RectangleConstraint(width, height));
return arrange(height, container, g2, new RectangleConstraint(width, height));
return arrange(c2, container, g2, new RectangleConstraint(width, height));
return arrange(c1, container, g2, new RectangleConstraint(width, height));
return arrange(h, container, g2, new RectangleConstraint(width, height));
return arrange(w, container, g2, new RectangleConstraint(width, height));
return arrange(width, container, g2, new RectangleConstraint(width, height));
return arrange(this.centerBlock, container, g2, new RectangleConstraint(width, height));
return arrange(this.topBlock, container, g2, new RectangleConstraint(width, height));
return arrange(this.bottomBlock, container, g2, new RectangleConstraint(width, height));
return arrange(this.leftBlock, container, g2, new RectangleConstraint(width, height));
return arrange(this.rightBlock, container, g2, new RectangleConstraint(width, height));
return arrange(container, height, new RectangleConstraint(width, height));
return arrange(container, c2, new RectangleConstraint(width, height));
return arrange(container, c1, new RectangleConstraint(width, height));
return arrange(container, h, new RectangleConstraint(width, height));
return arrange(container, w, new RectangleConstraint(width, height));
return arrange(container, width, new RectangleConstraint(width, height));
return arrange(container, this.centerBlock, new RectangleConstraint(width, height));
return arrange(container, this.topBlock, new RectangleConstraint(width, height));
return arrange(container, this.bottomBlock, new RectangleConstraint(width, height));
return arrange(container, this.leftBlock, new RectangleConstraint(width, height));
return arrange(container, this.rightBlock, new RectangleConstraint(width, height));
return arrange(container,  new RectangleConstraint(width, height));
return arrange(container, height, g2, new RectangleConstraint(width, height));
return arrange(container, c2, g2, new RectangleConstraint(width, height));
return arrange(container, c1, g2, new RectangleConstraint(width, height));
return arrange(container, h, g2, new RectangleConstraint(width, height));
return arrange(container, w, g2, new RectangleConstraint(width, height));
return arrange(container, width, g2, new RectangleConstraint(width, height));
return arrange(container, this.centerBlock, g2, new RectangleConstraint(width, height));
return arrange(container, this.topBlock, g2, new RectangleConstraint(width, height));
return arrange(container, this.bottomBlock, g2, new RectangleConstraint(width, height));
return arrange(container, this.leftBlock, g2, new RectangleConstraint(width, height));
return arrange(container, this.rightBlock, g2, new RectangleConstraint(width, height));
return arrange(container, g2, height, new RectangleConstraint(width, height));
return arrange(container, g2, c2, new RectangleConstraint(width, height));
return arrange(container, g2, c1, new RectangleConstraint(width, height));
return arrange(container, g2, h, new RectangleConstraint(width, height));
return arrange(container, g2, w, new RectangleConstraint(width, height));
return arrange(container, g2, width, new RectangleConstraint(width, height));
return arrange(container, g2, this.centerBlock, new RectangleConstraint(width, height));
return arrange(container, g2, this.topBlock, new RectangleConstraint(width, height));
return arrange(container, g2, this.bottomBlock, new RectangleConstraint(width, height));
return arrange(container, g2, this.leftBlock, new RectangleConstraint(width, height));
return arrange(container, g2, this.rightBlock, new RectangleConstraint(width, height));
return arrange(container, g2, new RectangleConstraint(width, height), height);
return arrange(container, g2, new RectangleConstraint(width, height), c2);
return arrange(container, g2, new RectangleConstraint(width, height), c1);
return arrange(container, g2, new RectangleConstraint(width, height), h);
return arrange(container, g2, new RectangleConstraint(width, height), w);
return arrange(container, g2, new RectangleConstraint(width, height), width);
return arrange(container, g2, new RectangleConstraint(width, height), this.centerBlock);
return arrange(container, g2, new RectangleConstraint(width, height), this.topBlock);
return arrange(container, g2, new RectangleConstraint(width, height), this.bottomBlock);
return arrange(container, g2, new RectangleConstraint(width, height), this.leftBlock);
return arrange(container, g2, new RectangleConstraint(width, height), this.rightBlock);
GPR[EPS]-1659874900361
GPR[SPVA]-1659874900361
GPR[SPVS]-1659874900361
GPR[SPVAP]-1659874900361
05:21:40.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:40.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874900778
GPR[SPVS]-1659874900778
GPR[SPVAP]-1659874900778
05:21:40.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:41.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874901191
GPR[SPVS]-1659874901191
GPR[SPVAP]-1659874901191
05:21:41.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:41.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874901603
GPR[SPVS]-1659874901603
GPR[SPVAP]-1659874901603
05:21:41.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:42.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874902018
GPR[SPVS]-1659874902018
GPR[SPVAP]-1659874902018
05:21:42.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:42.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874902426
GPR[SPVS]-1659874902426
GPR[SPVAP]-1659874902426
05:21:42.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:42.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874902843
GPR[SPVS]-1659874902843
GPR[SPVAP]-1659874902843
05:21:42.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:43.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874903250
GPR[SPVS]-1659874903250
GPR[SPVAP]-1659874903250
05:21:43.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:43.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874903663
GPR[SPVS]-1659874903663
GPR[SPVAP]-1659874903663
05:21:43.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:44.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874904080
GPR[SPVS]-1659874904080
GPR[SPVAP]-1659874904080
05:21:44.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:44.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874904490
GPR[SPVS]-1659874904490
GPR[SPVAP]-1659874904490
05:21:44.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:44.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874904899
GPR[SPVS]-1659874904899
GPR[SPVAP]-1659874904899
05:21:44.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:45.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874905314
GPR[SPVS]-1659874905314
GPR[SPVAP]-1659874905314
05:21:45.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:45.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874905728
GPR[SPVS]-1659874905728
GPR[SPVAP]-1659874905728
05:21:45.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:46.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874906141
GPR[SPVS]-1659874906141
GPR[SPVAP]-1659874906141
05:21:46.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:46.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874906553
GPR[SPVS]-1659874906553
GPR[SPVAP]-1659874906553
05:21:46.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:46.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874906964
GPR[SPVS]-1659874906964
GPR[SPVAP]-1659874906964
05:21:46.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:47.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874907375
GPR[SPVS]-1659874907375
GPR[SPVAP]-1659874907375
05:21:47.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:47.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874907786
GPR[SPVS]-1659874907786
GPR[SPVAP]-1659874907786
05:21:47.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:48.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874908200
GPR[SPVS]-1659874908200
GPR[SPVAP]-1659874908200
05:21:48.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:48.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874908617
GPR[SPVS]-1659874908617
GPR[SPVAP]-1659874908617
05:21:48.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:49.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874909045
GPR[SPVS]-1659874909045
GPR[SPVAP]-1659874909045
05:21:49.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:49.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874909458
GPR[SPVS]-1659874909458
GPR[SPVAP]-1659874909458
05:21:49.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:49.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874909871
GPR[SPVS]-1659874909871
GPR[SPVAP]-1659874909871
05:21:49.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:50.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874910287
GPR[SPVS]-1659874910287
GPR[SPVAP]-1659874910287
05:21:50.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:50.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874910699
GPR[SPVS]-1659874910699
GPR[SPVAP]-1659874910699
05:21:50.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:51.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874911118
GPR[SPVS]-1659874911118
GPR[SPVAP]-1659874911118
05:21:51.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:51.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874911539
GPR[SPVS]-1659874911539
GPR[SPVAP]-1659874911539
05:21:51.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:51.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874911955
GPR[SPVS]-1659874911955
GPR[SPVAP]-1659874911956
05:21:51.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:52.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874912371
GPR[SPVS]-1659874912371
GPR[SPVAP]-1659874912371
05:21:52.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:52.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874912795
GPR[SPVS]-1659874912795
GPR[SPVAP]-1659874912795
05:21:52.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:53.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874913211
GPR[SPVS]-1659874913211
GPR[SPVAP]-1659874913211
05:21:53.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:53.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874913623
GPR[SPVS]-1659874913623
GPR[SPVAP]-1659874913623
05:21:53.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:54.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874914039
GPR[SPVS]-1659874914039
GPR[SPVAP]-1659874914039
05:21:54.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:54.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874914455
GPR[SPVS]-1659874914455
GPR[SPVAP]-1659874914455
05:21:54.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:54.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874914866
GPR[SPVS]-1659874914866
GPR[SPVAP]-1659874914866
05:21:54.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:55.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874915279
GPR[SPVS]-1659874915279
GPR[SPVAP]-1659874915279
05:21:55.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:55.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874915692
GPR[SPVS]-1659874915692
GPR[SPVAP]-1659874915692
05:21:55.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:56.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874916114
GPR[SPVS]-1659874916114
GPR[SPVAP]-1659874916114
05:21:56.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:56.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874916524
GPR[SPVS]-1659874916524
GPR[SPVAP]-1659874916524
05:21:56.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:56.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874916935
GPR[SPVS]-1659874916935
GPR[SPVAP]-1659874916935
05:21:56.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:57.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874917348
GPR[SPVS]-1659874917348
GPR[SPVAP]-1659874917348
05:21:57.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:57.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874917764
GPR[SPVS]-1659874917764
GPR[SPVAP]-1659874917764
05:21:57.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:58.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874918175
GPR[SPVS]-1659874918175
GPR[SPVAP]-1659874918175
05:21:58.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:58.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874918596
GPR[SPVS]-1659874918596
GPR[SPVAP]-1659874918596
05:21:58.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:59.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874919013
GPR[SPVS]-1659874919013
GPR[SPVAP]-1659874919013
05:21:59.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:59.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874919426
GPR[SPVS]-1659874919426
GPR[SPVAP]-1659874919426
05:21:59.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:21:59.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874919847
GPR[SPVS]-1659874919847
GPR[SPVAP]-1659874919847
05:21:59.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:00.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874920263
GPR[SPVS]-1659874920263
GPR[SPVAP]-1659874920263
05:22:00.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:00.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874920679
GPR[SPVS]-1659874920679
GPR[SPVAP]-1659874920679
05:22:00.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:01.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874921089
GPR[SPVS]-1659874921089
GPR[SPVAP]-1659874921089
05:22:01.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:01.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874921504
GPR[SPVS]-1659874921504
GPR[SPVAP]-1659874921504
05:22:01.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:01.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874921910
GPR[SPVS]-1659874921910
GPR[SPVAP]-1659874921910
05:22:01.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:02.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874922331
GPR[SPVS]-1659874922331
GPR[SPVAP]-1659874922331
05:22:02.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:02.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874922743
GPR[SPVS]-1659874922743
GPR[SPVAP]-1659874922743
05:22:02.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:03.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874923159
GPR[SPVS]-1659874923159
GPR[SPVAP]-1659874923159
05:22:03.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:03.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874923574
GPR[SPVS]-1659874923574
GPR[SPVAP]-1659874923574
05:22:03.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:03.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874923987
GPR[SPVS]-1659874923987
GPR[SPVAP]-1659874923987
05:22:03.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:04.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874924404
GPR[SPVS]-1659874924404
GPR[SPVAP]-1659874924404
05:22:04.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:04.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874924812
GPR[SPVS]-1659874924812
GPR[SPVAP]-1659874924812
05:22:04.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:05.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874925227
GPR[SPVS]-1659874925227
GPR[SPVAP]-1659874925227
05:22:05.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:05.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874925640
GPR[SPVS]-1659874925640
GPR[SPVAP]-1659874925640
05:22:05.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:06.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874926052
GPR[SPVS]-1659874926052
GPR[SPVAP]-1659874926052
05:22:06.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:06.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874926468
GPR[SPVS]-1659874926468
GPR[SPVAP]-1659874926468
05:22:06.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:06.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874926880
GPR[SPVS]-1659874926880
GPR[SPVAP]-1659874926880
05:22:06.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:07.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874927291
GPR[SPVS]-1659874927291
GPR[SPVAP]-1659874927291
05:22:07.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:07.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874927703
GPR[SPVS]-1659874927703
GPR[SPVAP]-1659874927703
05:22:07.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:08.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874928114
GPR[SPVS]-1659874928114
GPR[SPVAP]-1659874928114
05:22:08.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:08.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874928524
GPR[SPVESU]-1659874928524
GPR[EPVESU]-1659874928525
GPR[EPVA]-1659874928525
GPR[SPS]-1659874928525
return arrangeFR(container, g2, new RectangleConstraint(width, height));
return arrangeFN(container, g2, new RectangleConstraint(width, height));
return arrangeFF(container, g2, new RectangleConstraint(width, height));
GPR[EPS]-1659874928526
GPR[SPVA]-1659874928526
GPR[SPVS]-1659874928526
GPR[SPVAP]-1659874928526
05:22:08.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874928959
05:22:08.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:22:08.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874928959
GPR[EPVATF]-1659874929024
GPR[SPVATR]-1659874929024
GPR[EPVATR]-1659874939283
05:22:19.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874939283
GPR[SPVS]-1659874939283
GPR[SPVAP]-1659874939283
05:22:19.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:19.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874939697
GPR[SPVS]-1659874939697
GPR[SPVAP]-1659874939697
05:22:19.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874940135
05:22:20.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:22:20.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874940135
GPR[EPVATF]-1659874940200
GPR[SPVATR]-1659874940200
GPR[EPVATR]-1659874950559
05:22:30.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874950559
GPR[SPVESU]-1659874950559
GPR[EPVESU]-1659874950560
GPR[EPVA]-1659874950560
GPR[SPS]-1659874950560
GPR[EPS]-1659874950561
GPR[SPS]-1659874950561
return arrange(true, container, g2, new RectangleConstraint(width, height));
return arrange(false, container, g2, new RectangleConstraint(width, height));
return arrange(container, true, g2, new RectangleConstraint(width, height));
return arrange(container, false, g2, new RectangleConstraint(width, height));
return arrange(container, g2, true, new RectangleConstraint(width, height));
return arrange(container, g2, false, new RectangleConstraint(width, height));
return arrange(container, g2, new RectangleConstraint(width, height), true);
return arrange(container, g2, new RectangleConstraint(width, height), false);
GPR[EPS]-1659874950561
GPR[SPVA]-1659874950561
GPR[SPVS]-1659874950561
GPR[SPVAP]-1659874950561
05:22:30.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:30.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874950974
GPR[SPVS]-1659874950974
GPR[SPVAP]-1659874950974
05:22:30.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:31.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874951395
GPR[SPVS]-1659874951395
GPR[SPVAP]-1659874951395
05:22:31.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:31.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874951841
GPR[SPVS]-1659874951841
GPR[SPVAP]-1659874951841
05:22:31.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:32.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874952255
GPR[SPVS]-1659874952255
GPR[SPVAP]-1659874952255
05:22:32.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:32.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874952671
GPR[SPVS]-1659874952671
GPR[SPVAP]-1659874952671
05:22:32.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:33.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874953080
GPR[SPVS]-1659874953080
GPR[SPVAP]-1659874953080
05:22:33.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:33.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874953497
GPR[SPVS]-1659874953497
GPR[SPVAP]-1659874953497
05:22:33.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:33.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874953905
GPR[SPVESU]-1659874953905
GPR[EPVESU]-1659874953907
GPR[EPVA]-1659874953907
GPR[SPS]-1659874953907
GPR[EPS]-1659874953907
GPR[SPS]-1659874953907
if (container != null) {


}

if (g2 != null) {


}

GPR[EPS]-1659874953907
GPR[SPVA]-1659874953907
GPR[SPVS]-1659874953907
GPR[SPVAP]-1659874953907
05:22:33.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:34.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874954316
GPR[SPVS]-1659874954316
GPR[SPVAP]-1659874954316
05:22:34.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:22:34.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874954723
GPR[SPVESU]-1659874954723
GPR[EPVESU]-1659874954725
GPR[EPVA]-1659874954725
GPR[SPS]-1659874954725
if (container == null) {
    return null;
}

if (container == null) {
    throw new IllegalArgumentException("Empty variable: " + container);
}

if (g2 == null) {
    return null;
}

if (g2 == null) {
    throw new IllegalArgumentException("Empty variable: " + g2);
}

GPR[EPS]-1659874954725
GPR[SPVA]-1659874954725
GPR[SPVS]-1659874954725
GPR[SPVAP]-1659874954725
05:22:34.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874955162
05:22:35.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:22:35.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874955162
GPR[EPVATF]-1659874955225
GPR[SPVATR]-1659874955226
GPR[EPVATR]-1659874965374
05:22:45.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874965374
GPR[SPVS]-1659874965374
GPR[SPVAP]-1659874965374
05:22:45.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874965806
05:22:45.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:22:45.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874965806
GPR[EPVATF]-1659874965868
GPR[SPVATR]-1659874965868
GPR[EPVATR]-1659874976030
05:22:56.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874976030
GPR[SPVS]-1659874976030
GPR[SPVAP]-1659874976030
05:22:56.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874976463
05:22:56.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:22:56.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874976463
GPR[EPVATF]-1659874976527
GPR[SPVATR]-1659874976527
GPR[EPVATR]-1659874986601
05:23:06.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874986601
GPR[SPVS]-1659874986601
GPR[SPVAP]-1659874986601
05:23:06.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659874987034
05:23:07.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:23:07.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659874987034
GPR[EPVATF]-1659874987099
GPR[SPVATR]-1659874987099
GPR[EPVATR]-1659874997273
05:23:17.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659874997273
GPR[SPVESU]-1659874997273
GPR[EPVESU]-1659874997275
GPR[EPVA]-1659874997275
GPR[SPS]-1659874997275
GPR[EPS]-1659874997275
GPR[SPS]-1659874997275
GPR[EPS]-1659874997275
GPR[SPS]-1659874997275
GPR[EPS]-1659874997275
GPR[SPS]-1659874997275

GPR[EPS]-1659874997275
GPR[SPVA]-1659874997275
GPR[SPVS]-1659874997275
GPR[SPVAP]-1659874997275
05:23:17.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:17.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874997689
GPR[SPVESU]-1659874997689
GPR[EPVESU]-1659874997691
GPR[EPVA]-1659874997691
GPR[ESUN]-1659874997691
GPR[SSUN]-1659874997691
05:23:17.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===322
05:23:17.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
GPR[SPS]-1659874997702

float height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
long height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
int height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
short height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
byte height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
GPR[EPS]-1659874997703
GPR[SPVA]-1659874997703
GPR[SPVS]-1659874997703
GPR[SPVAP]-1659874997703
05:23:17.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:18.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874998111
GPR[SPVS]-1659874998111
GPR[SPVAP]-1659874998111
05:23:18.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:18.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874998525
GPR[SPVS]-1659874998525
GPR[SPVAP]-1659874998525
05:23:18.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:18.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874998941
GPR[SPVS]-1659874998941
GPR[SPVAP]-1659874998941
05:23:18.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:19.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874999351
GPR[SPVS]-1659874999351
GPR[SPVAP]-1659874999351
05:23:19.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:19.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659874999766
GPR[SPVESU]-1659874999766
GPR[EPVESU]-1659874999768
GPR[EPVA]-1659874999768
GPR[SPS]-1659874999768
GPR[EPS]-1659874999768
GPR[SPS]-1659874999768
GPR[EPS]-1659874999768
GPR[SPS]-1659874999768
GPR[EPS]-1659874999768
GPR[SPS]-1659874999768
GPR[EPS]-1659874999768
GPR[SPS]-1659874999768
if (h != null) {


}

if (h != null) {


}

if (h != null) {


}

if (h != null) {


}

if (h != null) {


}

GPR[EPS]-1659874999768
GPR[SPVA]-1659874999768
GPR[SPVS]-1659874999768
GPR[SPVAP]-1659874999768
05:23:19.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:20.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875000182
GPR[SPVS]-1659875000182
GPR[SPVAP]-1659875000182
05:23:20.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:20.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875000594
GPR[SPVS]-1659875000594
GPR[SPVAP]-1659875000594
05:23:20.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:21.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875001007
GPR[SPVS]-1659875001007
GPR[SPVAP]-1659875001007
05:23:21.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:21.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875001422
GPR[SPVS]-1659875001422
GPR[SPVAP]-1659875001422
05:23:21.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:23:21.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875001839
GPR[SPVESU]-1659875001839
GPR[EPVESU]-1659875001841
GPR[EPVA]-1659875001841
GPR[SPS]-1659875001841
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659875001841
GPR[SPVA]-1659875001841
GPR[SPVS]-1659875001841
GPR[SPVAP]-1659875001841
05:23:21.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875002271
05:23:22.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:23:22.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875002272
GPR[EPVATF]-1659875002335
GPR[SPVATR]-1659875002335
GPR[EPVATR]-1659875012395
05:23:32.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875012395
GPR[SPVS]-1659875012395
GPR[SPVAP]-1659875012395
05:23:32.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875012834
05:23:32.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:23:32.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875012834
GPR[EPVATF]-1659875012900
GPR[SPVATR]-1659875012900
GPR[EPVATR]-1659875023059
05:23:43.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875023059
GPR[SPVS]-1659875023059
GPR[SPVAP]-1659875023059
05:23:43.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875023501
05:23:43.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:23:43.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875023501
GPR[EPVATF]-1659875023564
GPR[SPVATR]-1659875023564
GPR[EPVATR]-1659875034970
05:23:54.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875034970
GPR[SPVS]-1659875034970
GPR[SPVAP]-1659875034970
05:23:54.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875035414
05:23:55.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:23:55.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875035414
GPR[EPVATF]-1659875035480
GPR[SPVATR]-1659875035480
GPR[EPVATR]-1659875045623
05:24:05.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875045623
GPR[SPVS]-1659875045623
GPR[SPVAP]-1659875045623
05:24:05.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875046057
05:24:06.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:24:06.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875046057
GPR[EPVATF]-1659875046119
GPR[SPVATR]-1659875046119
GPR[EPVATR]-1659875056232
05:24:16.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875056232
GPR[SPVS]-1659875056232
GPR[SPVAP]-1659875056232
05:24:16.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875056671
05:24:16.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:24:16.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875056671
GPR[EPVATF]-1659875056736
GPR[SPVATR]-1659875056736
GPR[EPVATR]-1659875066937
05:24:26.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875066938
GPR[SPVS]-1659875066938
GPR[SPVAP]-1659875066938
05:24:26.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875067381
05:24:27.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:24:27.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875067382
GPR[EPVATF]-1659875067447
GPR[SPVATR]-1659875067447
GPR[EPVATR]-1659875077550
05:24:37.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875077550
GPR[SPVS]-1659875077550
GPR[SPVAP]-1659875077550
05:24:37.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875077994
05:24:37.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:24:37.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875077994
GPR[EPVATF]-1659875078055
GPR[SPVATR]-1659875078055
GPR[EPVATR]-1659875088153
05:24:48.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875088153
GPR[SPVS]-1659875088153
GPR[SPVAP]-1659875088153
05:24:48.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875088582
05:24:48.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:24:48.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875088582
GPR[EPVATF]-1659875088649
GPR[SPVATR]-1659875088649
GPR[EPVATR]-1659875099010
05:24:59.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875099010
GPR[SPVS]-1659875099010
GPR[SPVAP]-1659875099010
05:24:59.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875099450
05:24:59.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:24:59.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875099450
GPR[EPVATF]-1659875099511
GPR[SPVATR]-1659875099511
GPR[EPVATR]-1659875109634
05:25:09.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875109634
GPR[SPVESU]-1659875109634
GPR[EPVESU]-1659875109635
GPR[EPVA]-1659875109635
GPR[SPS]-1659875109635
GPR[EPS]-1659875109636
GPR[SPS]-1659875109636
clear();
	double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
	clear();
GPR[EPS]-1659875109636
GPR[SPVA]-1659875109636
GPR[SPVS]-1659875109636
GPR[SPVAP]-1659875109636
05:25:09.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875110085
05:25:10.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:25:10.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875110085
GPR[EPVATF]-1659875110147
GPR[SPVATR]-1659875110148
GPR[EPVATR]-1659875120314
05:25:20.314 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659875120326
GPR[EPVS]-1659875120327
GPR[SPVS]-1659875120327
GPR[SPVAP]-1659875120327
05:25:20.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875120763
05:25:20.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:25:20.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875120763
GPR[EPVATF]-1659875120827
GPR[SPVATR]-1659875120827
GPR[EPVATR]-1659875131133
05:25:31.133 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659875131142
GPR[EPVS]-1659875131143
GPR[SPVESU]-1659875131143
GPR[EPVESU]-1659875131144
GPR[EPVA]-1659875131144
GPR[SPS]-1659875131144
GPR[EPS]-1659875131144
GPR[SPS]-1659875131144

GPR[EPS]-1659875131144
GPR[SPVA]-1659875131144
GPR[SPVS]-1659875131144
GPR[SPVAP]-1659875131144
05:25:31.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:25:31.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875131556
GPR[SPVESU]-1659875131556
GPR[EPVESU]-1659875131558
GPR[EPVA]-1659875131558
GPR[ESUN]-1659875131558
GPR[SSUN]-1659875131558
05:25:31.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===320
05:25:31.568 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
h[4] = size.height;
GPR[SPS]-1659875131570
GPR[EPS]-1659875131570
GPR[SPS]-1659875131570
GPR[EPS]-1659875131570
GPR[SPS]-1659875131570
GPR[EPS]-1659875131570
GPR[SPS]-1659875131570
GPR[EPS]-1659875131570
GPR[SPS]-1659875131570
GPR[EPS]-1659875131571
GPR[SPS]-1659875131571
if (h != null) {


}

GPR[EPS]-1659875131571
GPR[SPVA]-1659875131571
GPR[SPVS]-1659875131571
GPR[SPVAP]-1659875131571
05:25:31.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875132018
05:25:32.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:25:32.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875132018
GPR[EPVATF]-1659875132081
GPR[SPVATR]-1659875132081
GPR[EPVATR]-1659875142285
05:25:42.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875142285
GPR[SPVESU]-1659875142285
GPR[EPVESU]-1659875142287
GPR[EPVA]-1659875142287
GPR[SPS]-1659875142287
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659875142287
GPR[SPVA]-1659875142287
GPR[SPVS]-1659875142287
GPR[SPVAP]-1659875142287
05:25:42.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875142716
05:25:42.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:25:42.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875142716
GPR[EPVATF]-1659875142779
GPR[SPVATR]-1659875142779
GPR[EPVATR]-1659875153024
05:25:53.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875153024
GPR[SPVS]-1659875153024
GPR[SPVAP]-1659875153024
05:25:53.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875153468
05:25:53.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:25:53.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875153468
GPR[EPVATF]-1659875153533
GPR[SPVATR]-1659875153533
GPR[EPVATR]-1659875163647
05:26:03.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875163647
GPR[SPVESU]-1659875163647
GPR[EPVESU]-1659875163648
GPR[EPVA]-1659875163648
GPR[SPS]-1659875163648
GPR[EPS]-1659875163648
GPR[SPS]-1659875163648
clear();
	h[4] = size.height;
h[4] = size.height;
	clear();
GPR[EPS]-1659875163649
GPR[SPVA]-1659875163649
GPR[SPVS]-1659875163649
GPR[SPVAP]-1659875163649
05:26:03.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875164082
05:26:04.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:26:04.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875164082
GPR[EPVATF]-1659875164145
GPR[SPVATR]-1659875164145
GPR[EPVATR]-1659875174207
05:26:14.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875174207
GPR[SPVS]-1659875174207
GPR[SPVAP]-1659875174207
05:26:14.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875174646
05:26:14.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:26:14.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875174646
GPR[EPVATF]-1659875174709
GPR[SPVATR]-1659875174709
GPR[EPVATR]-1659875184762
05:26:24.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875184762
GPR[SPVESU]-1659875184762
GPR[EPVESU]-1659875184763
GPR[EPVA]-1659875184763
GPR[SPS]-1659875184763
h[4] = size.height;
	RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            
null
h[4] = size.height;
	Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            
null
h[4] = size.height;
	w[4] = size.width;
            
null
GPR[EPS]-1659875184763
GPR[SPVA]-1659875184763
GPR[SPVS]-1659875184763
GPR[SPVAP]-1659875184763
05:26:24.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:26:25.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875185170
GPR[SPVS]-1659875185170
GPR[SPVAP]-1659875185170
05:26:25.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:26:25.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875185606
GPR[SPVS]-1659875185606
GPR[SPVAP]-1659875185606
05:26:25.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875186215
05:26:26.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:26:26.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875186216
GPR[EPVATF]-1659875186342
GPR[SPVATR]-1659875186342
GPR[EPVATR]-1659875196941
05:26:36.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875196941
GPR[SPVESU]-1659875196941
GPR[EPVESU]-1659875196942
GPR[EPVA]-1659875196942
GPR[SPS]-1659875196942

GPR[EPS]-1659875196943
GPR[SPVA]-1659875196943
GPR[SPVS]-1659875196943
GPR[SPVAP]-1659875196943
05:26:36.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875197376
05:26:37.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:26:37.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875197376
GPR[EPVATF]-1659875197441
GPR[SPVATR]-1659875197441
GPR[EPVATR]-1659875207735
05:26:47.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875207735
GPR[SPVESU]-1659875207735
GPR[EPVESU]-1659875207736
GPR[EPVA]-1659875207736
GPR[ESUN]-1659875207736
GPR[SSUN]-1659875207736
05:26:47.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===319
05:26:47.746 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
w[4] = size.width;
GPR[SPS]-1659875207747
GPR[EPS]-1659875207747
GPR[SPS]-1659875207747
GPR[EPS]-1659875207748
GPR[SPS]-1659875207748
GPR[EPS]-1659875207748
GPR[SPS]-1659875207748
GPR[EPS]-1659875207748
GPR[SPS]-1659875207748
GPR[EPS]-1659875207748
GPR[SPS]-1659875207748
if (w != null) {


}

GPR[EPS]-1659875207748
GPR[SPVA]-1659875207748
GPR[SPVS]-1659875207748
GPR[SPVAP]-1659875207748
05:26:47.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875208179
05:26:48.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:26:48.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875208179
GPR[EPVATF]-1659875208245
GPR[SPVATR]-1659875208245
GPR[EPVATR]-1659875218303
05:26:58.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875218303
GPR[SPVESU]-1659875218303
GPR[EPVESU]-1659875218305
GPR[EPVA]-1659875218305
GPR[SPS]-1659875218305
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659875218305
GPR[SPVA]-1659875218305
GPR[SPVS]-1659875218305
GPR[SPVAP]-1659875218305
05:26:58.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875218748
05:26:58.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:26:58.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875218748
GPR[EPVATF]-1659875218811
GPR[SPVATR]-1659875218811
GPR[EPVATR]-1659875228978
05:27:08.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875228978
GPR[SPVS]-1659875228978
GPR[SPVAP]-1659875228978
05:27:08.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875229425
05:27:09.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:27:09.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875229425
GPR[EPVATF]-1659875229487
GPR[SPVATR]-1659875229487
GPR[EPVATR]-1659875241620
05:27:21.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875241620
GPR[SPVESU]-1659875241620
GPR[EPVESU]-1659875241622
GPR[EPVA]-1659875241622
GPR[SPS]-1659875241622
GPR[EPS]-1659875241622
GPR[SPS]-1659875241622
clear();
	w[4] = size.width;
w[4] = size.width;
	clear();
GPR[EPS]-1659875241622
GPR[SPVA]-1659875241622
GPR[SPVS]-1659875241622
GPR[SPVAP]-1659875241622
05:27:21.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875242055
05:27:22.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:27:22.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875242055
GPR[EPVATF]-1659875242120
GPR[SPVATR]-1659875242120
GPR[EPVATR]-1659875252350
05:27:32.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875252350
GPR[SPVS]-1659875252350
GPR[SPVAP]-1659875252350
05:27:32.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875252788
05:27:32.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:27:32.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875252788
GPR[EPVATF]-1659875252851
GPR[SPVATR]-1659875252851
GPR[EPVATR]-1659875263059
05:27:43.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875263059
GPR[SPVESU]-1659875263059
GPR[EPVESU]-1659875263061
GPR[EPVA]-1659875263061
GPR[SPS]-1659875263061
w[4] = size.width;
	RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            
null
w[4] = size.width;
	Size2D size = this.centerBlock.arrange(g2, c4);
            
null

            h[4] = size.height;
	w[4] = size.width;

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659875263061
GPR[SPVA]-1659875263061
GPR[SPVS]-1659875263061
GPR[SPVAP]-1659875263061
05:27:43.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:27:43.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875263471
GPR[SPVS]-1659875263471
GPR[SPVAP]-1659875263471
05:27:43.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:27:43.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875263880
GPR[SPVS]-1659875263880
GPR[SPVAP]-1659875263880
05:27:43.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875264316
05:27:44.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:27:44.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875264316
GPR[EPVATF]-1659875264380
GPR[SPVATR]-1659875264380
GPR[EPVATR]-1659875274583
05:27:54.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875274583
GPR[SPVESU]-1659875274583
GPR[EPVESU]-1659875274584
GPR[EPVA]-1659875274584
GPR[SPS]-1659875274584

GPR[EPS]-1659875274584
GPR[SPVA]-1659875274584
GPR[SPVS]-1659875274584
GPR[SPVAP]-1659875274584
05:27:54.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875275012
05:27:55.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:27:55.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875275012
GPR[EPVATF]-1659875275077
GPR[SPVATR]-1659875275077
GPR[EPVATR]-1659875285125
05:28:05.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875285125
GPR[SPVESU]-1659875285125
GPR[EPVESU]-1659875285126
GPR[EPVA]-1659875285126
GPR[ESUN]-1659875285126
GPR[SSUN]-1659875285126
05:28:05.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===318
05:28:05.136 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Size2D size = this.centerBlock.arrange(g2, c4);
GPR[SPS]-1659875285138
GPR[EPS]-1659875285138
GPR[SPS]-1659875285138
GPR[EPS]-1659875285139
GPR[SPS]-1659875285139
Size2D size = this.centerBlock.arrange(size, c4);
Size2D size = this.centerBlock.arrange(c2, c4);
Size2D size = this.centerBlock.arrange(c1, c4);
Size2D size = this.centerBlock.arrange(h, c4);
Size2D size = this.centerBlock.arrange(w, c4);
Size2D size = this.centerBlock.arrange(container, c4);
Size2D size = this.centerBlock.arrange(width, c4);
Size2D size = this.centerBlock.arrange(this.topBlock, c4);
Size2D size = this.centerBlock.arrange(this.bottomBlock, c4);
Size2D size = this.centerBlock.arrange(this.leftBlock, c4);
Size2D size = this.centerBlock.arrange(this.rightBlock, c4);
Size2D size = this.centerBlock.arrange( c4);
Size2D size = this.centerBlock.arrange(size, g2, c4);
Size2D size = this.centerBlock.arrange(c2, g2, c4);
Size2D size = this.centerBlock.arrange(c1, g2, c4);
Size2D size = this.centerBlock.arrange(h, g2, c4);
Size2D size = this.centerBlock.arrange(w, g2, c4);
Size2D size = this.centerBlock.arrange(container, g2, c4);
Size2D size = this.centerBlock.arrange(width, g2, c4);
Size2D size = this.centerBlock.arrange(this.topBlock, g2, c4);
Size2D size = this.centerBlock.arrange(this.bottomBlock, g2, c4);
Size2D size = this.centerBlock.arrange(this.leftBlock, g2, c4);
Size2D size = this.centerBlock.arrange(this.rightBlock, g2, c4);
Size2D size = this.centerBlock.arrange(g2, size);
Size2D size = this.centerBlock.arrange(g2, c2);
Size2D size = this.centerBlock.arrange(g2, c1);
Size2D size = this.centerBlock.arrange(g2, h);
Size2D size = this.centerBlock.arrange(g2, w);
Size2D size = this.centerBlock.arrange(g2, container);
Size2D size = this.centerBlock.arrange(g2, width);
Size2D size = this.centerBlock.arrange(g2, this.topBlock);
Size2D size = this.centerBlock.arrange(g2, this.bottomBlock);
Size2D size = this.centerBlock.arrange(g2, this.leftBlock);
Size2D size = this.centerBlock.arrange(g2, this.rightBlock);
Size2D size = this.centerBlock.arrange(g2, );
Size2D size = this.centerBlock.arrange(g2, size, c4);
Size2D size = this.centerBlock.arrange(g2, c2, c4);
Size2D size = this.centerBlock.arrange(g2, c1, c4);
Size2D size = this.centerBlock.arrange(g2, h, c4);
Size2D size = this.centerBlock.arrange(g2, w, c4);
Size2D size = this.centerBlock.arrange(g2, container, c4);
Size2D size = this.centerBlock.arrange(g2, width, c4);
Size2D size = this.centerBlock.arrange(g2, this.topBlock, c4);
Size2D size = this.centerBlock.arrange(g2, this.bottomBlock, c4);
Size2D size = this.centerBlock.arrange(g2, this.leftBlock, c4);
Size2D size = this.centerBlock.arrange(g2, this.rightBlock, c4);
Size2D size = this.centerBlock.arrange(g2, c4, size);
Size2D size = this.centerBlock.arrange(g2, c4, c2);
Size2D size = this.centerBlock.arrange(g2, c4, c1);
Size2D size = this.centerBlock.arrange(g2, c4, h);
Size2D size = this.centerBlock.arrange(g2, c4, w);
Size2D size = this.centerBlock.arrange(g2, c4, container);
Size2D size = this.centerBlock.arrange(g2, c4, width);
Size2D size = this.centerBlock.arrange(g2, c4, this.topBlock);
Size2D size = this.centerBlock.arrange(g2, c4, this.bottomBlock);
Size2D size = this.centerBlock.arrange(g2, c4, this.leftBlock);
Size2D size = this.centerBlock.arrange(g2, c4, this.rightBlock);
GPR[EPS]-1659875285139
GPR[SPVA]-1659875285139
GPR[SPVS]-1659875285139
GPR[SPVAP]-1659875285139
05:28:05.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:05.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875285555
GPR[SPVS]-1659875285555
GPR[SPVAP]-1659875285555
05:28:05.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:05.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875285971
GPR[SPVS]-1659875285971
GPR[SPVAP]-1659875285971
05:28:05.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:06.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875286381
GPR[SPVS]-1659875286381
GPR[SPVAP]-1659875286381
05:28:06.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:06.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875286794
GPR[SPVS]-1659875286794
GPR[SPVAP]-1659875286794
05:28:06.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:07.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875287208
GPR[SPVS]-1659875287208
GPR[SPVAP]-1659875287208
05:28:07.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:07.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875287622
GPR[SPVS]-1659875287622
GPR[SPVAP]-1659875287622
05:28:07.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:08.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875288036
GPR[SPVS]-1659875288036
GPR[SPVAP]-1659875288036
05:28:08.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:08.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875288452
GPR[SPVS]-1659875288452
GPR[SPVAP]-1659875288452
05:28:08.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:08.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875288861
GPR[SPVS]-1659875288861
GPR[SPVAP]-1659875288861
05:28:08.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:09.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875289275
GPR[SPVS]-1659875289275
GPR[SPVAP]-1659875289275
05:28:09.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:09.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875289705
GPR[SPVS]-1659875289705
GPR[SPVAP]-1659875289705
05:28:09.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:10.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875290119
GPR[SPVS]-1659875290119
GPR[SPVAP]-1659875290119
05:28:10.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:10.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875290537
GPR[SPVS]-1659875290537
GPR[SPVAP]-1659875290537
05:28:10.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:10.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875290948
GPR[SPVS]-1659875290948
GPR[SPVAP]-1659875290948
05:28:10.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:11.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875291366
GPR[SPVS]-1659875291366
GPR[SPVAP]-1659875291366
05:28:11.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:11.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875291782
GPR[SPVS]-1659875291782
GPR[SPVAP]-1659875291782
05:28:11.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:12.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875292202
GPR[SPVS]-1659875292202
GPR[SPVAP]-1659875292202
05:28:12.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:12.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875292614
GPR[SPVS]-1659875292614
GPR[SPVAP]-1659875292614
05:28:12.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:13.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875293029
GPR[SPVS]-1659875293029
GPR[SPVAP]-1659875293029
05:28:13.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:13.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875293439
GPR[SPVS]-1659875293439
GPR[SPVAP]-1659875293439
05:28:13.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:13.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875293859
GPR[SPVS]-1659875293859
GPR[SPVAP]-1659875293859
05:28:13.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:14.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875294275
GPR[SPVS]-1659875294275
GPR[SPVAP]-1659875294275
05:28:14.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:14.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875294690
GPR[SPVS]-1659875294690
GPR[SPVAP]-1659875294690
05:28:14.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:15.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875295110
GPR[SPVS]-1659875295110
GPR[SPVAP]-1659875295110
05:28:15.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875295558
05:28:15.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:28:15.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875295558
GPR[EPVATF]-1659875295620
GPR[SPVATR]-1659875295620
GPR[EPVATR]-1659875305714
05:28:25.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875305714
GPR[SPVS]-1659875305714
GPR[SPVAP]-1659875305714
05:28:25.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875306144
05:28:26.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:28:26.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875306144
GPR[EPVATF]-1659875306208
GPR[SPVATR]-1659875306208
GPR[EPVATR]-1659875316334
05:28:36.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875316334
GPR[SPVS]-1659875316334
GPR[SPVAP]-1659875316334
05:28:36.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:36.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875316746
GPR[SPVS]-1659875316746
GPR[SPVAP]-1659875316746
05:28:36.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:37.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875317158
GPR[SPVS]-1659875317158
GPR[SPVAP]-1659875317158
05:28:37.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:37.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875317577
GPR[SPVS]-1659875317577
GPR[SPVAP]-1659875317577
05:28:37.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:37.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875317995
GPR[SPVS]-1659875317995
GPR[SPVAP]-1659875317995
05:28:37.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:38.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875318409
GPR[SPVS]-1659875318409
GPR[SPVAP]-1659875318409
05:28:38.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:38.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875318819
GPR[SPVS]-1659875318819
GPR[SPVAP]-1659875318819
05:28:38.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:39.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875319230
GPR[SPVS]-1659875319230
GPR[SPVAP]-1659875319230
05:28:39.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:39.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875319644
GPR[SPVS]-1659875319644
GPR[SPVAP]-1659875319644
05:28:39.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:39.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875319918
GPR[SPVS]-1659875319918
GPR[SPVAP]-1659875319918
05:28:39.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:40.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875320333
GPR[SPVS]-1659875320333
GPR[SPVAP]-1659875320333
05:28:40.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:40.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875320748
GPR[SPVS]-1659875320748
GPR[SPVAP]-1659875320748
05:28:40.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:41.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875321164
GPR[SPVS]-1659875321164
GPR[SPVAP]-1659875321164
05:28:41.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:41.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875321574
GPR[SPVS]-1659875321574
GPR[SPVAP]-1659875321574
05:28:41.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:41.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875321994
GPR[SPVS]-1659875321994
GPR[SPVAP]-1659875321994
05:28:41.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:42.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875322422
GPR[SPVS]-1659875322422
GPR[SPVAP]-1659875322422
05:28:42.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:42.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875322830
GPR[SPVS]-1659875322830
GPR[SPVAP]-1659875322830
05:28:42.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:43.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875323246
GPR[SPVS]-1659875323246
GPR[SPVAP]-1659875323246
05:28:43.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:43.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875323664
GPR[SPVS]-1659875323664
GPR[SPVAP]-1659875323664
05:28:43.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:44.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875324077
GPR[SPVS]-1659875324077
GPR[SPVAP]-1659875324077
05:28:44.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:44.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875324495
GPR[SPVS]-1659875324495
GPR[SPVAP]-1659875324495
05:28:44.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:44.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875324906
GPR[SPVS]-1659875324906
GPR[SPVAP]-1659875324906
05:28:44.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:45.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875325309
GPR[SPVS]-1659875325309
GPR[SPVAP]-1659875325310
05:28:45.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:45.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875325722
GPR[SPVS]-1659875325722
GPR[SPVAP]-1659875325722
05:28:45.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:46.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875326142
GPR[SPVS]-1659875326142
GPR[SPVAP]-1659875326142
05:28:46.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:46.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875326568
GPR[SPVS]-1659875326568
GPR[SPVAP]-1659875326568
05:28:46.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:47.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875327001
GPR[SPVS]-1659875327001
GPR[SPVAP]-1659875327001
05:28:47.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:47.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875327411
GPR[SPVS]-1659875327411
GPR[SPVAP]-1659875327411
05:28:47.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:47.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875327849
GPR[SPVS]-1659875327849
GPR[SPVAP]-1659875327849
05:28:50.928 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:51.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875331360
GPR[SPVS]-1659875331360
GPR[SPVAP]-1659875331360
05:28:51.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:51.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875331774
GPR[SPVS]-1659875331774
GPR[SPVAP]-1659875331774
05:28:51.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:52.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875332191
GPR[SPVESU]-1659875332191
GPR[EPVESU]-1659875332193
GPR[EPVA]-1659875332193
GPR[SPS]-1659875332193
GPR[EPS]-1659875332193
GPR[SPS]-1659875332193
GPR[EPS]-1659875332193
GPR[SPS]-1659875332193
if (this.centerBlock != null) {


}

if (g2 != null) {


}

if (c4 != null) {


}

GPR[EPS]-1659875332193
GPR[SPVA]-1659875332193
GPR[SPVS]-1659875332193
GPR[SPVAP]-1659875332193
05:28:52.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:52.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875332602
GPR[SPVS]-1659875332602
GPR[SPVAP]-1659875332602
05:28:52.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:53.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875333018
GPR[SPVS]-1659875333018
GPR[SPVAP]-1659875333018
05:28:53.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:28:53.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875333427
GPR[SPVESU]-1659875333427
GPR[EPVESU]-1659875333428
GPR[EPVA]-1659875333428
GPR[SPS]-1659875333428
if (this.centerBlock == null) {
    return null;
}

if (this.centerBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.centerBlock);
}

if (g2 == null) {
    return null;
}

if (g2 == null) {
    throw new IllegalArgumentException("Empty variable: " + g2);
}

if (c4 == null) {
    return null;
}

if (c4 == null) {
    throw new IllegalArgumentException("Empty variable: " + c4);
}

GPR[EPS]-1659875333428
GPR[SPVA]-1659875333428
GPR[SPVS]-1659875333428
GPR[SPVAP]-1659875333428
05:28:53.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875333868
05:28:53.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:28:53.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875333868
GPR[EPVATF]-1659875333932
GPR[SPVATR]-1659875333932
GPR[EPVATR]-1659875344185
05:29:04.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875344185
GPR[SPVS]-1659875344185
GPR[SPVAP]-1659875344185
05:29:04.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875344619
05:29:04.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:29:04.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875344619
GPR[EPVATF]-1659875344683
GPR[SPVATR]-1659875344683
GPR[EPVATR]-1659875355958
05:29:15.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875355958
GPR[SPVS]-1659875355958
GPR[SPVAP]-1659875355958
05:29:15.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875356388
05:29:16.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:29:16.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875356388
GPR[EPVATF]-1659875356451
GPR[SPVATR]-1659875356451
GPR[EPVATR]-1659875366713
05:29:26.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875366713
GPR[SPVS]-1659875366713
GPR[SPVAP]-1659875366713
05:29:26.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875367165
05:29:27.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:29:27.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875367165
GPR[EPVATF]-1659875367229
GPR[SPVATR]-1659875367229
GPR[EPVATR]-1659875377571
05:29:37.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875377571
GPR[SPVS]-1659875377571
GPR[SPVAP]-1659875377571
05:29:37.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875378002
05:29:38.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:29:38.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875378002
GPR[EPVATF]-1659875378064
GPR[SPVATR]-1659875378064
GPR[EPVATR]-1659875388420
05:29:48.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875388420
GPR[SPVS]-1659875388420
GPR[SPVAP]-1659875388420
05:29:48.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875388871
05:29:48.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:29:48.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875388871
GPR[EPVATF]-1659875388935
GPR[SPVATR]-1659875388935
GPR[EPVATR]-1659875399252
05:29:59.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875399252
GPR[SPVESU]-1659875399252
GPR[EPVESU]-1659875399254
GPR[EPVA]-1659875399254
GPR[SPS]-1659875399254
GPR[EPS]-1659875399254
GPR[SPS]-1659875399254
clear();
	Size2D size = this.centerBlock.arrange(g2, c4);
Size2D size = this.centerBlock.arrange(g2, c4);
	clear();
GPR[EPS]-1659875399254
GPR[SPVA]-1659875399254
GPR[SPVS]-1659875399254
GPR[SPVAP]-1659875399254
05:29:59.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875399686
05:29:59.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:29:59.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875399686
GPR[EPVATF]-1659875399751
GPR[SPVATR]-1659875399751
GPR[EPVATR]-1659875410211
05:30:10.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875410211
GPR[SPVS]-1659875410211
GPR[SPVAP]-1659875410211
05:30:10.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875410692
05:30:10.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:30:10.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875410692
GPR[EPVATF]-1659875410755
GPR[SPVATR]-1659875410755
GPR[EPVATR]-1659875421498
05:30:21.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875421498
GPR[SPVESU]-1659875421498
GPR[EPVESU]-1659875421499
GPR[EPVA]-1659875421499
GPR[SPS]-1659875421499
GPR[EPS]-1659875421499
GPR[SPS]-1659875421499

GPR[EPS]-1659875421499
GPR[SPVA]-1659875421499
GPR[SPVS]-1659875421499
GPR[SPVAP]-1659875421499
05:30:21.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:30:21.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875421917
GPR[SPVESU]-1659875421917
GPR[EPVESU]-1659875421918
GPR[EPVA]-1659875421918
GPR[ESUN]-1659875421918
GPR[SSUN]-1659875421918
05:30:21.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===315
05:30:21.928 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
GPR[SPS]-1659875421929
GPR[EPS]-1659875421929
GPR[SPS]-1659875421929
GPR[EPS]-1659875421930
GPR[SPS]-1659875421930
GPR[EPS]-1659875421930
GPR[SPS]-1659875421930
GPR[EPS]-1659875421930
GPR[SPS]-1659875421930
GPR[EPS]-1659875421930
GPR[SPS]-1659875421930
if (w != null) {


}

if (w != null) {


}

GPR[EPS]-1659875421930
GPR[SPVA]-1659875421930
GPR[SPVS]-1659875421930
GPR[SPVAP]-1659875421930
05:30:21.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:30:22.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875422351
GPR[SPVS]-1659875422351
GPR[SPVAP]-1659875422351
05:30:22.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:30:22.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875422767
GPR[SPVESU]-1659875422767
GPR[EPVESU]-1659875422769
GPR[EPVA]-1659875422769
GPR[SPS]-1659875422769
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659875422769
GPR[SPVA]-1659875422769
GPR[SPVS]-1659875422769
GPR[SPVAP]-1659875422769
05:30:22.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875423217
05:30:23.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:30:23.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875423217
GPR[EPVATF]-1659875423279
GPR[SPVATR]-1659875423280
GPR[EPVATR]-1659875433335
05:30:33.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875433335
GPR[SPVS]-1659875433335
GPR[SPVAP]-1659875433335
05:30:33.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875433777
05:30:33.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:30:33.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875433777
GPR[EPVATF]-1659875433839
GPR[SPVATR]-1659875433839
GPR[EPVATR]-1659875444172
05:30:44.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875444172
GPR[SPVS]-1659875444172
GPR[SPVAP]-1659875444172
05:30:44.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875444612
05:30:44.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:30:44.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875444612
GPR[EPVATF]-1659875444676
GPR[SPVATR]-1659875444676
GPR[EPVATR]-1659875454937
05:30:54.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875454937
GPR[SPVS]-1659875454937
GPR[SPVAP]-1659875454937
05:30:54.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875455377
05:30:55.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:30:55.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875455377
GPR[EPVATF]-1659875455440
GPR[SPVATR]-1659875455440
GPR[EPVATR]-1659875465607
05:31:05.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875465607
GPR[SPVESU]-1659875465607
GPR[EPVESU]-1659875465609
GPR[EPVA]-1659875465609
GPR[SPS]-1659875465609
GPR[EPS]-1659875465609
GPR[SPS]-1659875465609
clear();
	RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
	clear();
GPR[EPS]-1659875465609
GPR[SPVA]-1659875465609
GPR[SPVS]-1659875465609
GPR[SPVAP]-1659875465609
05:31:05.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875466044
05:31:06.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:31:06.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875466044
GPR[EPVATF]-1659875466108
GPR[SPVATR]-1659875466108
GPR[EPVATR]-1659875476222
05:31:16.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875476222
GPR[SPVS]-1659875476222
GPR[SPVAP]-1659875476222
05:31:16.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875476673
05:31:16.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:31:16.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875476673
GPR[EPVATF]-1659875476736
GPR[SPVATR]-1659875476736
GPR[EPVATR]-1659875487142
05:31:27.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875487142
GPR[SPVESU]-1659875487142
GPR[EPVESU]-1659875487144
GPR[EPVA]-1659875487144
GPR[SPS]-1659875487144
GPR[EPS]-1659875487144
GPR[SPS]-1659875487144

GPR[EPS]-1659875487144
GPR[SPVA]-1659875487144
GPR[SPVS]-1659875487144
GPR[SPVAP]-1659875487144
05:31:27.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:31:27.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875487554
GPR[SPVESU]-1659875487554
GPR[EPVESU]-1659875487555
GPR[EPVA]-1659875487555
GPR[ESUN]-1659875487555
GPR[SSUN]-1659875487555
05:31:27.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===314
05:31:27.565 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
GPR[SPS]-1659875487566
if (this.centerBlock == null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
GPR[EPS]-1659875487566
GPR[SPVA]-1659875487566
GPR[SPVS]-1659875487566
GPR[SPVAP]-1659875487566
05:31:27.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875488005
05:31:28.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:31:28.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875488005
GPR[EPVATF]-1659875488067
GPR[SPVATR]-1659875488067
GPR[EPVATR]-1659875498378
05:31:38.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875498378
GPR[SPVESU]-1659875498378
GPR[EPVESU]-1659875498380
GPR[EPVA]-1659875498380
GPR[SPS]-1659875498380
GPR[EPS]-1659875498380
GPR[SPS]-1659875498380
GPR[EPS]-1659875498380
GPR[SPS]-1659875498380
GPR[EPS]-1659875498381
GPR[SPS]-1659875498381
GPR[EPS]-1659875498381
GPR[SPS]-1659875498381
if (this.centerBlock != null) {


}

GPR[EPS]-1659875498384
GPR[SPVA]-1659875498384
GPR[SPVS]-1659875498384
GPR[SPVAP]-1659875498384
05:31:38.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875498842
05:31:38.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:31:38.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875498842
GPR[EPVATF]-1659875498904
GPR[SPVATR]-1659875498904
GPR[EPVATR]-1659875509238
05:31:49.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875509238
GPR[SPVESU]-1659875509238
GPR[EPVESU]-1659875509240
GPR[EPVA]-1659875509240
GPR[SPS]-1659875509240
if (this.centerBlock == null) {
    return null;
}

if (this.centerBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.centerBlock);
}

GPR[EPS]-1659875509240
GPR[SPVA]-1659875509240
GPR[SPVS]-1659875509240
GPR[SPVAP]-1659875509240
05:31:49.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875509684
05:31:49.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:31:49.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875509684
GPR[EPVATF]-1659875509747
GPR[SPVATR]-1659875509747
GPR[EPVATR]-1659875520902
05:32:00.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875520902
GPR[SPVS]-1659875520902
GPR[SPVAP]-1659875520902
05:32:00.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875521343
05:32:01.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:32:01.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875521343
GPR[EPVATF]-1659875521408
GPR[SPVATR]-1659875521408
GPR[EPVATR]-1659875531530
05:32:11.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875531530
GPR[SPVESU]-1659875531530
GPR[EPVESU]-1659875531531
GPR[EPVA]-1659875531531
GPR[SPS]-1659875531531
GPR[EPS]-1659875531531
GPR[SPS]-1659875531531
clear();
	if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	clear();
GPR[EPS]-1659875531532
GPR[SPVA]-1659875531532
GPR[SPVS]-1659875531532
GPR[SPVAP]-1659875531532
05:32:11.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875531965
05:32:11.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:32:11.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875531965
GPR[EPVATF]-1659875532027
GPR[SPVATR]-1659875532027
GPR[EPVATR]-1659875542170
05:32:22.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875542170
GPR[SPVS]-1659875542170
GPR[SPVAP]-1659875542170
05:32:22.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875542606
05:32:22.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:32:22.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875542606
GPR[EPVATF]-1659875542668
GPR[SPVATR]-1659875542668
GPR[EPVATR]-1659875552777
05:32:32.777 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659875552787
GPR[EPVS]-1659875552788
GPR[SPVESU]-1659875552788
GPR[EPVESU]-1659875552789
GPR[EPVA]-1659875552789
GPR[SPS]-1659875552789
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	double[] w = new double[5];
        double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        
null
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        
null
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        
null
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        
null
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        
null
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        
null
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        
null
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        
null
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        
null
if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	h[3] = h[2];

        
null

        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
	if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }

MOVE-BUGGY-STATEMENT

        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
        return arrange(container, g2, new RectangleConstraint(width, height));
	if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659875552790
GPR[SPVA]-1659875552790
GPR[SPVS]-1659875552790
GPR[SPVAP]-1659875552790
05:32:32.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:32:33.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875553199
GPR[SPVS]-1659875553199
GPR[SPVAP]-1659875553199
05:32:33.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:32:33.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875553610
GPR[SPVS]-1659875553610
GPR[SPVAP]-1659875553610
05:32:33.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875554049
05:32:34.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:32:34.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875554049
GPR[EPVATF]-1659875554112
GPR[SPVATR]-1659875554112
GPR[EPVATR]-1659875564332
05:32:44.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875564332
GPR[SPVS]-1659875564332
GPR[SPVAP]-1659875564332
05:32:44.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875564762
05:32:44.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:32:44.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875564762
GPR[EPVATF]-1659875564828
GPR[SPVATR]-1659875564828
GPR[EPVATR]-1659875575098
05:32:55.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875575098
GPR[SPVS]-1659875575098
GPR[SPVAP]-1659875575098
05:32:55.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875575553
05:32:55.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:32:55.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875575553
GPR[EPVATF]-1659875575616
GPR[SPVATR]-1659875575616
GPR[EPVATR]-1659875585806
05:33:05.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875585806
GPR[SPVS]-1659875585806
GPR[SPVAP]-1659875585806
05:33:05.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875586239
05:33:06.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:33:06.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875586239
GPR[EPVATF]-1659875586304
GPR[SPVATR]-1659875586304
GPR[EPVATR]-1659875596408
05:33:16.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875596408
GPR[SPVS]-1659875596408
GPR[SPVAP]-1659875596408
05:33:16.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875596842
05:33:16.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:33:16.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875596842
GPR[EPVATF]-1659875596904
GPR[SPVATR]-1659875596904
GPR[EPVATR]-1659875607163
05:33:27.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875607163
GPR[SPVS]-1659875607163
GPR[SPVAP]-1659875607163
05:33:27.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875607599
05:33:27.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:33:27.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875607599
GPR[EPVATF]-1659875607664
GPR[SPVATR]-1659875607664
GPR[EPVATR]-1659875617961
05:33:37.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875617962
GPR[SPVS]-1659875617962
GPR[SPVAP]-1659875617962
05:33:37.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875618397
05:33:38.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:33:38.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875618397
GPR[EPVATF]-1659875618460
GPR[SPVATR]-1659875618460
GPR[EPVATR]-1659875628822
05:33:48.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875628822
GPR[SPVS]-1659875628822
GPR[SPVAP]-1659875628822
05:33:48.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875629262
05:33:49.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:33:49.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875629262
GPR[EPVATF]-1659875629327
GPR[SPVATR]-1659875629327
GPR[EPVATR]-1659875639430
05:33:59.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875639430
GPR[SPVS]-1659875639430
GPR[SPVAP]-1659875639430
05:33:59.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875639862
05:33:59.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:33:59.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875639862
GPR[EPVATF]-1659875639929
GPR[SPVATR]-1659875639929
GPR[EPVATR]-1659875650188
05:34:10.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875650188
GPR[SPVS]-1659875650188
GPR[SPVAP]-1659875650188
05:34:10.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:34:10.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875650603
GPR[SPVESU]-1659875650603
GPR[EPVESU]-1659875650604
GPR[EPVA]-1659875650604
GPR[SPS]-1659875650604

GPR[EPS]-1659875650604
GPR[SPVA]-1659875650604
GPR[SPVS]-1659875650604
GPR[SPVAP]-1659875650604
05:34:10.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875651033
05:34:11.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:34:11.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875651033
GPR[EPVATF]-1659875651099
GPR[SPVATR]-1659875651099
GPR[EPVATR]-1659875661349
05:34:21.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875661349
GPR[SPVESU]-1659875661349
GPR[EPVESU]-1659875661350
GPR[EPVA]-1659875661351
GPR[ESUN]-1659875661351
GPR[SSUN]-1659875661351
05:34:21.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===312
05:34:21.360 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
h[3] = h[2];
GPR[SPS]-1659875661361
GPR[EPS]-1659875661361
GPR[SPS]-1659875661361
GPR[EPS]-1659875661361
GPR[SPS]-1659875661361
GPR[EPS]-1659875661362
GPR[SPS]-1659875661362
GPR[EPS]-1659875661362
GPR[SPS]-1659875661362
GPR[EPS]-1659875661362
GPR[SPS]-1659875661362
if (h != null) {


}

if (h != null) {


}

GPR[EPS]-1659875661362
GPR[SPVA]-1659875661362
GPR[SPVS]-1659875661362
GPR[SPVAP]-1659875661362
05:34:21.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:34:21.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875661775
GPR[SPVS]-1659875661775
GPR[SPVAP]-1659875661775
05:34:21.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:34:22.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875662188
GPR[SPVESU]-1659875662188
GPR[EPVESU]-1659875662190
GPR[EPVA]-1659875662190
GPR[SPS]-1659875662190
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659875662190
GPR[SPVA]-1659875662190
GPR[SPVS]-1659875662190
GPR[SPVAP]-1659875662190
05:34:22.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875662620
05:34:22.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:34:22.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875662620
GPR[EPVATF]-1659875662685
GPR[SPVATR]-1659875662685
GPR[EPVATR]-1659875672948
05:34:32.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875672948
GPR[SPVS]-1659875672948
GPR[SPVAP]-1659875672948
05:34:32.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875673392
05:34:33.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:34:33.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875673392
GPR[EPVATF]-1659875673457
GPR[SPVATR]-1659875673457
GPR[EPVATR]-1659875683494
05:34:43.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875683494
GPR[SPVS]-1659875683494
GPR[SPVAP]-1659875683494
05:34:43.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875683929
05:34:43.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:34:43.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875683929
GPR[EPVATF]-1659875683991
GPR[SPVATR]-1659875683991
GPR[EPVATR]-1659875695064
05:34:55.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875695064
GPR[SPVS]-1659875695064
GPR[SPVAP]-1659875695064
05:34:55.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875695503
05:34:55.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:34:55.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875695503
GPR[EPVATF]-1659875695568
GPR[SPVATR]-1659875695568
GPR[EPVATR]-1659875705886
05:35:05.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875705886
GPR[SPVESU]-1659875705886
GPR[EPVESU]-1659875705888
GPR[EPVA]-1659875705888
GPR[SPS]-1659875705888
GPR[EPS]-1659875705888
GPR[SPS]-1659875705888
clear();
	h[3] = h[2];
h[3] = h[2];
	clear();
GPR[EPS]-1659875705889
GPR[SPVA]-1659875705889
GPR[SPVS]-1659875705889
GPR[SPVAP]-1659875705889
05:35:05.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875706321
05:35:06.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:35:06.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875706321
GPR[EPVATF]-1659875706384
GPR[SPVATR]-1659875706384
GPR[EPVATR]-1659875716635
05:35:16.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875716635
GPR[SPVS]-1659875716635
GPR[SPVAP]-1659875716635
05:35:16.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875717070
05:35:17.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:35:17.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875717070
GPR[EPVATF]-1659875717132
GPR[SPVATR]-1659875717132
GPR[EPVATR]-1659875727384
05:35:27.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875727384
GPR[SPVESU]-1659875727384
GPR[EPVESU]-1659875727386
GPR[EPVA]-1659875727386
GPR[SPS]-1659875727387
h[3] = h[2];
	double[] w = new double[5];
        double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        
null
h[3] = h[2];
	double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        
null
h[3] = h[2];
	RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        
null
h[3] = h[2];
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        
null
h[3] = h[2];
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        
null
h[3] = h[2];
	RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        
null
h[3] = h[2];
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        
null
h[3] = h[2];
	if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        
null
h[3] = h[2];
	h[2] = Math.max(h[2], h[3]);
        
null


        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	h[3] = h[2];

MOVE-BUGGY-STATEMENT


        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
	h[3] = h[2];

MOVE-BUGGY-STATEMENT


        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
        return arrange(container, g2, new RectangleConstraint(width, height));
	h[3] = h[2];

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659875727387
GPR[SPVA]-1659875727387
GPR[SPVS]-1659875727387
GPR[SPVAP]-1659875727387
05:35:27.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:35:27.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875727800
GPR[SPVS]-1659875727800
GPR[SPVAP]-1659875727800
05:35:27.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:35:28.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875728215
GPR[SPVS]-1659875728215
GPR[SPVAP]-1659875728215
05:35:28.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875728643
05:35:28.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:35:28.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875728643
GPR[EPVATF]-1659875728708
GPR[SPVATR]-1659875728708
GPR[EPVATR]-1659875738772
05:35:38.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875738772
GPR[SPVS]-1659875738772
GPR[SPVAP]-1659875738772
05:35:38.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875739209
05:35:39.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:35:39.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875739209
GPR[EPVATF]-1659875739275
GPR[SPVATR]-1659875739275
GPR[EPVATR]-1659875749339
05:35:49.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875749339
GPR[SPVS]-1659875749339
GPR[SPVAP]-1659875749339
05:35:49.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875749766
05:35:49.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:35:49.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875749766
GPR[EPVATF]-1659875749828
GPR[SPVATR]-1659875749828
GPR[EPVATR]-1659875760041
05:36:00.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875760041
GPR[SPVS]-1659875760041
GPR[SPVAP]-1659875760041
05:36:00.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875760473
05:36:00.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:36:00.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875760473
GPR[EPVATF]-1659875760537
GPR[SPVATR]-1659875760537
GPR[EPVATR]-1659875770891
05:36:10.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875770891
GPR[SPVS]-1659875770891
GPR[SPVAP]-1659875770891
05:36:10.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875771324
05:36:11.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:36:11.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875771324
GPR[EPVATF]-1659875771387
GPR[SPVATR]-1659875771387
GPR[EPVATR]-1659875781610
05:36:21.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875781610
GPR[SPVS]-1659875781610
GPR[SPVAP]-1659875781610
05:36:21.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875782050
05:36:22.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:36:22.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875782050
GPR[EPVATF]-1659875782118
GPR[SPVATR]-1659875782118
GPR[EPVATR]-1659875792370
05:36:32.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875792371
GPR[SPVS]-1659875792371
GPR[SPVAP]-1659875792371
05:36:32.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875792802
05:36:32.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:36:32.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875792802
GPR[EPVATF]-1659875792867
GPR[SPVATR]-1659875792867
GPR[EPVATR]-1659875802989
05:36:42.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875802989
GPR[SPVS]-1659875802989
GPR[SPVAP]-1659875802989
05:36:42.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875803423
05:36:43.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:36:43.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875803423
GPR[EPVATF]-1659875803487
GPR[SPVATR]-1659875803487
GPR[EPVATR]-1659875813631
05:36:53.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875813631
GPR[SPVS]-1659875813631
GPR[SPVAP]-1659875813631
05:36:53.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875814067
05:36:54.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:36:54.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875814067
GPR[EPVATF]-1659875814132
GPR[SPVATR]-1659875814132
GPR[EPVATR]-1659875824326
05:37:04.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875824326
GPR[SPVS]-1659875824326
GPR[SPVAP]-1659875824326
05:37:04.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:04.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875824737
GPR[SPVESU]-1659875824737
GPR[EPVESU]-1659875824739
GPR[EPVA]-1659875824739
GPR[SPS]-1659875824739

GPR[EPS]-1659875824739
GPR[SPVA]-1659875824739
GPR[SPVS]-1659875824739
GPR[SPVAP]-1659875824739
05:37:04.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875825173
05:37:05.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:37:05.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875825173
GPR[EPVATF]-1659875825238
GPR[SPVATR]-1659875825238
GPR[EPVATR]-1659875835571
05:37:15.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875835571
GPR[SPVESU]-1659875835571
GPR[EPVESU]-1659875835573
GPR[EPVA]-1659875835573
GPR[ESUN]-1659875835573
GPR[SSUN]-1659875835573
05:37:15.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===311
05:37:15.583 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
h[2] = Math.max(h[2], h[3]);
GPR[SPS]-1659875835585
h[2] = Math.max(true, h[2], h[3]);
h[2] = Math.max(false, h[2], h[3]);
h[2] = Math.max(h[2], true, h[3]);
h[2] = Math.max(h[2], false, h[3]);
h[2] = Math.max(h[2], h[3], true);
h[2] = Math.max(h[2], h[3], false);
GPR[EPS]-1659875835585
GPR[SPVA]-1659875835585
GPR[SPVS]-1659875835585
GPR[SPVAP]-1659875835585
05:37:15.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:16.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875836001
GPR[SPVS]-1659875836001
GPR[SPVAP]-1659875836001
05:37:16.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:16.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875836414
GPR[SPVS]-1659875836414
GPR[SPVAP]-1659875836414
05:37:16.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:16.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875836830
GPR[SPVS]-1659875836830
GPR[SPVAP]-1659875836830
05:37:16.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:17.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875837246
GPR[SPVS]-1659875837246
GPR[SPVAP]-1659875837246
05:37:17.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:17.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875837658
GPR[SPVS]-1659875837658
GPR[SPVAP]-1659875837658
05:37:17.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:18.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875838066
GPR[SPVESU]-1659875838066
GPR[EPVESU]-1659875838068
GPR[EPVA]-1659875838068
GPR[SPS]-1659875838068
GPR[EPS]-1659875838068
GPR[SPS]-1659875838068
GPR[EPS]-1659875838068
GPR[SPS]-1659875838068
GPR[EPS]-1659875838068
GPR[SPS]-1659875838068
GPR[EPS]-1659875838068
GPR[SPS]-1659875838068
if (h != null) {


}

if (h != null) {


}

if (h != null) {


}

GPR[EPS]-1659875838068
GPR[SPVA]-1659875838068
GPR[SPVS]-1659875838068
GPR[SPVAP]-1659875838068
05:37:18.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:18.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875838477
GPR[SPVS]-1659875838477
GPR[SPVAP]-1659875838477
05:37:18.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:18.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875838888
GPR[SPVS]-1659875838888
GPR[SPVAP]-1659875838888
05:37:18.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:37:19.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875839303
GPR[SPVESU]-1659875839303
GPR[EPVESU]-1659875839305
GPR[EPVA]-1659875839305
GPR[SPS]-1659875839305
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659875839305
GPR[SPVA]-1659875839305
GPR[SPVS]-1659875839305
GPR[SPVAP]-1659875839305
05:37:19.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875839737
05:37:19.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:37:19.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875839737
GPR[EPVATF]-1659875839801
GPR[SPVATR]-1659875839801
GPR[EPVATR]-1659875850127
05:37:30.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875850127
GPR[SPVS]-1659875850127
GPR[SPVAP]-1659875850127
05:37:30.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875850632
05:37:30.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:37:30.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875850632
GPR[EPVATF]-1659875850723
GPR[SPVATR]-1659875850723
GPR[EPVATR]-1659875861857
05:37:41.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875861857
GPR[SPVS]-1659875861857
GPR[SPVAP]-1659875861857
05:37:41.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875862295
05:37:42.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:37:42.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875862295
GPR[EPVATF]-1659875862361
GPR[SPVATR]-1659875862361
GPR[EPVATR]-1659875872537
05:37:52.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875872537
GPR[SPVS]-1659875872537
GPR[SPVAP]-1659875872537
05:37:52.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875872977
05:37:52.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:37:52.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875872977
GPR[EPVATF]-1659875873040
GPR[SPVATR]-1659875873040
GPR[EPVATR]-1659875883187
05:38:03.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875883187
GPR[SPVS]-1659875883187
GPR[SPVAP]-1659875883187
05:38:03.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875883623
05:38:03.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:38:03.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875883623
GPR[EPVATF]-1659875883688
GPR[SPVATR]-1659875883688
GPR[EPVATR]-1659875893817
05:38:13.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875893817
GPR[SPVS]-1659875893817
GPR[SPVAP]-1659875893817
05:38:13.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875894254
05:38:14.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:38:14.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875894254
GPR[EPVATF]-1659875894315
GPR[SPVATR]-1659875894316
GPR[EPVATR]-1659875904678
05:38:24.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875904678
GPR[SPVESU]-1659875904678
GPR[EPVESU]-1659875904680
GPR[EPVA]-1659875904680
GPR[SPS]-1659875904680
GPR[EPS]-1659875904680
GPR[SPS]-1659875904680
clear();
	h[2] = Math.max(h[2], h[3]);
h[2] = Math.max(h[2], h[3]);
	clear();
GPR[EPS]-1659875904680
GPR[SPVA]-1659875904680
GPR[SPVS]-1659875904680
GPR[SPVAP]-1659875904680
05:38:24.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875905111
05:38:25.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:38:25.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875905111
GPR[EPVATF]-1659875905175
GPR[SPVATR]-1659875905175
GPR[EPVATR]-1659875915363
05:38:35.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875915363
GPR[SPVS]-1659875915363
GPR[SPVAP]-1659875915363
05:38:35.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875915801
05:38:35.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:38:35.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875915801
GPR[EPVATF]-1659875915864
GPR[SPVATR]-1659875915864
GPR[EPVATR]-1659875926355
05:38:46.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875926355
GPR[SPVESU]-1659875926355
GPR[EPVESU]-1659875926356
GPR[EPVA]-1659875926356
GPR[SPS]-1659875926356
h[2] = Math.max(h[2], h[3]);
	double[] w = new double[5];
        double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        
null
h[2] = Math.max(h[2], h[3]);
	double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        
null
h[2] = Math.max(h[2], h[3]);
	RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        
null
h[2] = Math.max(h[2], h[3]);
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        
null
h[2] = Math.max(h[2], h[3]);
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        
null
h[2] = Math.max(h[2], h[3]);
	RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        
null
h[2] = Math.max(h[2], h[3]);
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        
null
h[2] = Math.max(h[2], h[3]);
	if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        
null

        h[3] = h[2];
	h[2] = Math.max(h[2], h[3]);

MOVE-BUGGY-STATEMENT

        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	h[2] = Math.max(h[2], h[3]);

MOVE-BUGGY-STATEMENT

        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
	h[2] = Math.max(h[2], h[3]);

MOVE-BUGGY-STATEMENT

        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
        return arrange(container, g2, new RectangleConstraint(width, height));
	h[2] = Math.max(h[2], h[3]);

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659875926356
GPR[SPVA]-1659875926356
GPR[SPVS]-1659875926356
GPR[SPVAP]-1659875926356
05:38:46.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:38:46.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875926777
GPR[SPVS]-1659875926777
GPR[SPVAP]-1659875926777
05:38:46.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:38:47.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659875927197
GPR[SPVS]-1659875927197
GPR[SPVAP]-1659875927197
05:38:47.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875927633
05:38:47.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:38:47.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875927633
GPR[EPVATF]-1659875927696
GPR[SPVATR]-1659875927696
GPR[EPVATR]-1659875938120
05:38:58.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875938120
GPR[SPVS]-1659875938120
GPR[SPVAP]-1659875938120
05:38:58.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875938561
05:38:58.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:38:58.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875938561
GPR[EPVATF]-1659875938628
GPR[SPVATR]-1659875938628
GPR[EPVATR]-1659875948980
05:39:08.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875948980
GPR[SPVS]-1659875948980
GPR[SPVAP]-1659875948980
05:39:08.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875949410
05:39:09.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:39:09.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875949410
GPR[EPVATF]-1659875949477
GPR[SPVATR]-1659875949477
GPR[EPVATR]-1659875959789
05:39:19.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875959789
GPR[SPVS]-1659875959789
GPR[SPVAP]-1659875959789
05:39:19.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875960223
05:39:20.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:39:20.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875960223
GPR[EPVATF]-1659875960294
GPR[SPVATR]-1659875960294
GPR[EPVATR]-1659875970394
05:39:30.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875970394
GPR[SPVS]-1659875970394
GPR[SPVAP]-1659875970394
05:39:30.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875970835
05:39:30.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:39:30.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875970835
GPR[EPVATF]-1659875970899
GPR[SPVATR]-1659875970899
GPR[EPVATR]-1659875981038
05:39:41.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875981038
GPR[SPVS]-1659875981038
GPR[SPVAP]-1659875981038
05:39:41.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875981472
05:39:41.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:39:41.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875981472
GPR[EPVATF]-1659875981537
GPR[SPVATR]-1659875981537
GPR[EPVATR]-1659875991750
05:39:51.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659875991750
GPR[SPVS]-1659875991750
GPR[SPVAP]-1659875991750
05:39:51.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659875992186
05:39:52.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:39:52.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659875992186
GPR[EPVATF]-1659875992253
GPR[SPVATR]-1659875992253
GPR[EPVATR]-1659876002414
05:40:02.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876002414
GPR[SPVS]-1659876002414
GPR[SPVAP]-1659876002414
05:40:02.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876002854
05:40:02.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:40:02.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876002854
GPR[EPVATF]-1659876002927
GPR[SPVATR]-1659876002927
GPR[EPVATR]-1659876014260
05:40:14.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876014260
GPR[SPVS]-1659876014260
GPR[SPVAP]-1659876014260
05:40:14.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876014695
05:40:14.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:40:14.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876014696
GPR[EPVATF]-1659876014760
GPR[SPVATR]-1659876014760
GPR[EPVATR]-1659876025085
05:40:25.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876025085
GPR[SPVS]-1659876025085
GPR[SPVAP]-1659876025085
05:40:25.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:40:25.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876025493
GPR[SPVESU]-1659876025493
GPR[EPVESU]-1659876025494
GPR[EPVA]-1659876025494
GPR[SPS]-1659876025494

GPR[EPS]-1659876025495
GPR[SPVA]-1659876025495
GPR[SPVS]-1659876025495
GPR[SPVAP]-1659876025495
05:40:25.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876025935
05:40:25.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:40:25.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876025935
GPR[EPVATF]-1659876026000
GPR[SPVATR]-1659876026000
GPR[EPVATR]-1659876036363
05:40:36.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876036363
GPR[SPVESU]-1659876036363
GPR[EPVESU]-1659876036365
GPR[EPVA]-1659876036365
GPR[ESUN]-1659876036365
GPR[SSUN]-1659876036365
05:40:36.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===308
05:40:36.374 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
h[3] = size.height;
GPR[SPS]-1659876036375
GPR[EPS]-1659876036375
GPR[SPS]-1659876036375
GPR[EPS]-1659876036375
GPR[SPS]-1659876036375
GPR[EPS]-1659876036376
GPR[SPS]-1659876036376
GPR[EPS]-1659876036376
GPR[SPS]-1659876036376
GPR[EPS]-1659876036376
GPR[SPS]-1659876036376
if (h != null) {


}

GPR[EPS]-1659876036376
GPR[SPVA]-1659876036376
GPR[SPVS]-1659876036376
GPR[SPVAP]-1659876036376
05:40:36.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876036820
05:40:36.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:40:36.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876036820
GPR[EPVATF]-1659876036883
GPR[SPVATR]-1659876036883
GPR[EPVATR]-1659876047217
05:40:47.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876047217
GPR[SPVESU]-1659876047217
GPR[EPVESU]-1659876047218
GPR[EPVA]-1659876047218
GPR[SPS]-1659876047218
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659876047219
GPR[SPVA]-1659876047219
GPR[SPVS]-1659876047219
GPR[SPVAP]-1659876047219
05:40:47.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876047687
05:40:47.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:40:47.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876047687
GPR[EPVATF]-1659876047752
GPR[SPVATR]-1659876047752
GPR[EPVATR]-1659876057854
05:40:57.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876057854
GPR[SPVS]-1659876057854
GPR[SPVAP]-1659876057854
05:40:57.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876058290
05:40:58.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:40:58.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876058290
GPR[EPVATF]-1659876058355
GPR[SPVATR]-1659876058355
GPR[EPVATR]-1659876068369
05:41:08.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876068369
GPR[SPVESU]-1659876068369
GPR[EPVESU]-1659876068370
GPR[EPVA]-1659876068370
GPR[SPS]-1659876068370
GPR[EPS]-1659876068370
GPR[SPS]-1659876068370
clear();
	h[3] = size.height;
h[3] = size.height;
	clear();
GPR[EPS]-1659876068371
GPR[SPVA]-1659876068371
GPR[SPVS]-1659876068371
GPR[SPVAP]-1659876068371
05:41:08.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876068817
05:41:08.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:41:08.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876068817
GPR[EPVATF]-1659876068880
GPR[SPVATR]-1659876068880
GPR[EPVATR]-1659876078975
05:41:18.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876078975
GPR[SPVS]-1659876078975
GPR[SPVAP]-1659876078975
05:41:18.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876079413
05:41:19.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:41:19.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876079413
GPR[EPVATF]-1659876079479
GPR[SPVATR]-1659876079479
GPR[EPVATR]-1659876089771
05:41:29.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876089771
GPR[SPVESU]-1659876089771
GPR[EPVESU]-1659876089772
GPR[EPVA]-1659876089772
GPR[SPS]-1659876089772
h[3] = size.height;
	double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            
null
h[3] = size.height;
	RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            
null
h[3] = size.height;
	Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            
null
h[3] = size.height;
	w[3] = size.width;
            
null
GPR[EPS]-1659876089772
GPR[SPVA]-1659876089772
GPR[SPVS]-1659876089772
GPR[SPVAP]-1659876089772
05:41:29.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:41:30.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876090286
GPR[SPVS]-1659876090287
GPR[SPVAP]-1659876090287
05:41:30.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:41:30.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876090907
GPR[SPVS]-1659876090907
GPR[SPVAP]-1659876090907
05:41:30.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:41:31.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876091318
GPR[SPVS]-1659876091318
GPR[SPVAP]-1659876091318
05:41:31.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876091757
05:41:31.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:41:31.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876091757
GPR[EPVATF]-1659876091825
GPR[SPVATR]-1659876091825
GPR[EPVATR]-1659876104195
05:41:44.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876104195
GPR[SPVESU]-1659876104195
GPR[EPVESU]-1659876104196
GPR[EPVA]-1659876104196
GPR[SPS]-1659876104196

GPR[EPS]-1659876104196
GPR[SPVA]-1659876104196
GPR[SPVS]-1659876104196
GPR[SPVAP]-1659876104196
05:41:44.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876104636
05:41:44.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:41:44.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876104636
GPR[EPVATF]-1659876104699
GPR[SPVATR]-1659876104699
GPR[EPVATR]-1659876114772
05:41:54.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876114772
GPR[SPVESU]-1659876114772
GPR[EPVESU]-1659876114774
GPR[EPVA]-1659876114774
GPR[ESUN]-1659876114774
GPR[SSUN]-1659876114774
05:41:54.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===307
05:41:54.784 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
w[3] = size.width;
GPR[SPS]-1659876114785
GPR[EPS]-1659876114785
GPR[SPS]-1659876114785
GPR[EPS]-1659876114785
GPR[SPS]-1659876114785
GPR[EPS]-1659876114785
GPR[SPS]-1659876114785
GPR[EPS]-1659876114786
GPR[SPS]-1659876114786
GPR[EPS]-1659876114786
GPR[SPS]-1659876114786
if (w != null) {


}

GPR[EPS]-1659876114786
GPR[SPVA]-1659876114786
GPR[SPVS]-1659876114786
GPR[SPVAP]-1659876114786
05:41:54.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876115222
05:41:55.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:41:55.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876115222
GPR[EPVATF]-1659876115284
GPR[SPVATR]-1659876115284
GPR[EPVATR]-1659876125428
05:42:05.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876125428
GPR[SPVESU]-1659876125428
GPR[EPVESU]-1659876125430
GPR[EPVA]-1659876125430
GPR[SPS]-1659876125430
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659876125430
GPR[SPVA]-1659876125430
GPR[SPVS]-1659876125430
GPR[SPVAP]-1659876125430
05:42:05.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876125861
05:42:05.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:42:05.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876125861
GPR[EPVATF]-1659876125923
GPR[SPVATR]-1659876125923
GPR[EPVATR]-1659876136059
05:42:16.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876136059
GPR[SPVS]-1659876136059
GPR[SPVAP]-1659876136059
05:42:16.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876136489
05:42:16.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:42:16.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876136489
GPR[EPVATF]-1659876136552
GPR[SPVATR]-1659876136552
GPR[EPVATR]-1659876146983
05:42:26.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876146983
GPR[SPVESU]-1659876146983
GPR[EPVESU]-1659876146985
GPR[EPVA]-1659876146985
GPR[SPS]-1659876146985
GPR[EPS]-1659876146985
GPR[SPS]-1659876146985
clear();
	w[3] = size.width;
w[3] = size.width;
	clear();
GPR[EPS]-1659876146985
GPR[SPVA]-1659876146985
GPR[SPVS]-1659876146985
GPR[SPVAP]-1659876146985
05:42:26.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876147421
05:42:27.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:42:27.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876147421
GPR[EPVATF]-1659876147483
GPR[SPVATR]-1659876147483
GPR[EPVATR]-1659876157651
05:42:37.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876157651
GPR[SPVS]-1659876157651
GPR[SPVAP]-1659876157651
05:42:37.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876158082
05:42:38.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:42:38.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876158082
GPR[EPVATF]-1659876158144
GPR[SPVATR]-1659876158144
GPR[EPVATR]-1659876168328
05:42:48.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876168328
GPR[SPVESU]-1659876168328
GPR[EPVESU]-1659876168330
GPR[EPVA]-1659876168330
GPR[SPS]-1659876168330
w[3] = size.width;
	double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            
null
w[3] = size.width;
	RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            
null
w[3] = size.width;
	Size2D size = this.rightBlock.arrange(g2, c3);
            
null

            h[3] = size.height;
	w[3] = size.width;

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659876168330
GPR[SPVA]-1659876168330
GPR[SPVS]-1659876168330
GPR[SPVAP]-1659876168330
05:42:48.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:42:48.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876168746
GPR[SPVS]-1659876168746
GPR[SPVAP]-1659876168746
05:42:48.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:42:49.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876169154
GPR[SPVS]-1659876169154
GPR[SPVAP]-1659876169154
05:42:49.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:42:49.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876169562
GPR[SPVS]-1659876169562
GPR[SPVAP]-1659876169562
05:42:49.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876169999
05:42:49.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:42:49.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876169999
GPR[EPVATF]-1659876170064
GPR[SPVATR]-1659876170064
GPR[EPVATR]-1659876180135
05:43:00.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876180135
GPR[SPVESU]-1659876180135
GPR[EPVESU]-1659876180136
GPR[EPVA]-1659876180136
GPR[SPS]-1659876180136

GPR[EPS]-1659876180137
GPR[SPVA]-1659876180137
GPR[SPVS]-1659876180137
GPR[SPVAP]-1659876180137
05:43:00.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876180566
05:43:00.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:43:00.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876180566
GPR[EPVATF]-1659876180628
GPR[SPVATR]-1659876180628
GPR[EPVATR]-1659876193822
05:43:13.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876193822
GPR[SPVESU]-1659876193822
GPR[EPVESU]-1659876193824
GPR[EPVA]-1659876193824
GPR[ESUN]-1659876193824
GPR[SSUN]-1659876193824
05:43:13.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===306
05:43:13.833 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Size2D size = this.rightBlock.arrange(g2, c3);
GPR[SPS]-1659876193835
GPR[EPS]-1659876193836
GPR[SPS]-1659876193836
GPR[EPS]-1659876193837
GPR[SPS]-1659876193837
Size2D size = this.rightBlock.arrange(size, c3);
Size2D size = this.rightBlock.arrange(maxW, c3);
Size2D size = this.rightBlock.arrange(c2, c3);
Size2D size = this.rightBlock.arrange(c1, c3);
Size2D size = this.rightBlock.arrange(h, c3);
Size2D size = this.rightBlock.arrange(w, c3);
Size2D size = this.rightBlock.arrange(container, c3);
Size2D size = this.rightBlock.arrange(width, c3);
Size2D size = this.rightBlock.arrange(this.centerBlock, c3);
Size2D size = this.rightBlock.arrange(this.topBlock, c3);
Size2D size = this.rightBlock.arrange(this.bottomBlock, c3);
Size2D size = this.rightBlock.arrange(this.leftBlock, c3);
Size2D size = this.rightBlock.arrange( c3);
Size2D size = this.rightBlock.arrange(size, g2, c3);
Size2D size = this.rightBlock.arrange(maxW, g2, c3);
Size2D size = this.rightBlock.arrange(c2, g2, c3);
Size2D size = this.rightBlock.arrange(c1, g2, c3);
Size2D size = this.rightBlock.arrange(h, g2, c3);
Size2D size = this.rightBlock.arrange(w, g2, c3);
Size2D size = this.rightBlock.arrange(container, g2, c3);
Size2D size = this.rightBlock.arrange(width, g2, c3);
Size2D size = this.rightBlock.arrange(this.centerBlock, g2, c3);
Size2D size = this.rightBlock.arrange(this.topBlock, g2, c3);
Size2D size = this.rightBlock.arrange(this.bottomBlock, g2, c3);
Size2D size = this.rightBlock.arrange(this.leftBlock, g2, c3);
Size2D size = this.rightBlock.arrange(g2, size);
Size2D size = this.rightBlock.arrange(g2, maxW);
Size2D size = this.rightBlock.arrange(g2, c2);
Size2D size = this.rightBlock.arrange(g2, c1);
Size2D size = this.rightBlock.arrange(g2, h);
Size2D size = this.rightBlock.arrange(g2, w);
Size2D size = this.rightBlock.arrange(g2, container);
Size2D size = this.rightBlock.arrange(g2, width);
Size2D size = this.rightBlock.arrange(g2, this.centerBlock);
Size2D size = this.rightBlock.arrange(g2, this.topBlock);
Size2D size = this.rightBlock.arrange(g2, this.bottomBlock);
Size2D size = this.rightBlock.arrange(g2, this.leftBlock);
Size2D size = this.rightBlock.arrange(g2, );
Size2D size = this.rightBlock.arrange(g2, size, c3);
Size2D size = this.rightBlock.arrange(g2, maxW, c3);
Size2D size = this.rightBlock.arrange(g2, c2, c3);
Size2D size = this.rightBlock.arrange(g2, c1, c3);
Size2D size = this.rightBlock.arrange(g2, h, c3);
Size2D size = this.rightBlock.arrange(g2, w, c3);
Size2D size = this.rightBlock.arrange(g2, container, c3);
Size2D size = this.rightBlock.arrange(g2, width, c3);
Size2D size = this.rightBlock.arrange(g2, this.centerBlock, c3);
Size2D size = this.rightBlock.arrange(g2, this.topBlock, c3);
Size2D size = this.rightBlock.arrange(g2, this.bottomBlock, c3);
Size2D size = this.rightBlock.arrange(g2, this.leftBlock, c3);
Size2D size = this.rightBlock.arrange(g2, c3, size);
Size2D size = this.rightBlock.arrange(g2, c3, maxW);
Size2D size = this.rightBlock.arrange(g2, c3, c2);
Size2D size = this.rightBlock.arrange(g2, c3, c1);
Size2D size = this.rightBlock.arrange(g2, c3, h);
Size2D size = this.rightBlock.arrange(g2, c3, w);
Size2D size = this.rightBlock.arrange(g2, c3, container);
Size2D size = this.rightBlock.arrange(g2, c3, width);
Size2D size = this.rightBlock.arrange(g2, c3, this.centerBlock);
Size2D size = this.rightBlock.arrange(g2, c3, this.topBlock);
Size2D size = this.rightBlock.arrange(g2, c3, this.bottomBlock);
Size2D size = this.rightBlock.arrange(g2, c3, this.leftBlock);
GPR[EPS]-1659876193838
GPR[SPVA]-1659876193838
GPR[SPVS]-1659876193838
GPR[SPVAP]-1659876193838
05:43:13.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:14.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876194255
GPR[SPVS]-1659876194255
GPR[SPVAP]-1659876194255
05:43:14.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:14.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876194680
GPR[SPVS]-1659876194680
GPR[SPVAP]-1659876194680
05:43:14.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:15.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876195100
GPR[SPVS]-1659876195100
GPR[SPVAP]-1659876195100
05:43:15.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:15.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876195529
GPR[SPVS]-1659876195529
GPR[SPVAP]-1659876195529
05:43:15.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:15.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876195957
GPR[SPVS]-1659876195957
GPR[SPVAP]-1659876195957
05:43:15.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:16.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876196390
GPR[SPVS]-1659876196390
GPR[SPVAP]-1659876196390
05:43:16.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:16.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876196832
GPR[SPVS]-1659876196832
GPR[SPVAP]-1659876196832
05:43:16.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:17.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876197258
GPR[SPVS]-1659876197258
GPR[SPVAP]-1659876197258
05:43:17.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:17.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876197689
GPR[SPVS]-1659876197689
GPR[SPVAP]-1659876197689
05:43:17.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:18.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876198099
GPR[SPVS]-1659876198099
GPR[SPVAP]-1659876198099
05:43:18.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:18.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876198553
GPR[SPVS]-1659876198553
GPR[SPVAP]-1659876198553
05:43:18.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:18.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876198974
GPR[SPVS]-1659876198974
GPR[SPVAP]-1659876198974
05:43:18.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:19.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876199382
GPR[SPVS]-1659876199382
GPR[SPVAP]-1659876199382
05:43:19.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:19.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876199799
GPR[SPVS]-1659876199799
GPR[SPVAP]-1659876199799
05:43:19.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:20.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876200224
GPR[SPVS]-1659876200224
GPR[SPVAP]-1659876200224
05:43:20.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:20.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876200639
GPR[SPVS]-1659876200639
GPR[SPVAP]-1659876200639
05:43:20.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:21.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876201069
GPR[SPVS]-1659876201069
GPR[SPVAP]-1659876201069
05:43:21.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:21.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876201490
GPR[SPVS]-1659876201490
GPR[SPVAP]-1659876201490
05:43:21.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:21.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876201906
GPR[SPVS]-1659876201907
GPR[SPVAP]-1659876201907
05:43:21.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:22.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876202322
GPR[SPVS]-1659876202322
GPR[SPVAP]-1659876202322
05:43:22.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:22.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876202741
GPR[SPVS]-1659876202741
GPR[SPVAP]-1659876202741
05:43:22.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:23.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876203173
GPR[SPVS]-1659876203174
GPR[SPVAP]-1659876203174
05:43:23.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:23.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876203606
GPR[SPVS]-1659876203606
GPR[SPVAP]-1659876203606
05:43:23.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:24.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876204031
GPR[SPVS]-1659876204032
GPR[SPVAP]-1659876204032
05:43:24.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:24.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876204447
GPR[SPVS]-1659876204447
GPR[SPVAP]-1659876204447
05:43:24.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:24.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876204862
GPR[SPVS]-1659876204862
GPR[SPVAP]-1659876204862
05:43:24.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:25.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876205273
GPR[SPVS]-1659876205273
GPR[SPVAP]-1659876205273
05:43:25.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876205708
05:43:25.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:43:25.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876205708
GPR[EPVATF]-1659876205772
GPR[SPVATR]-1659876205772
GPR[EPVATR]-1659876215894
05:43:35.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876215894
GPR[SPVS]-1659876215894
GPR[SPVAP]-1659876215894
05:43:35.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876216327
05:43:36.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:43:36.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876216327
GPR[EPVATF]-1659876216392
GPR[SPVATR]-1659876216392
GPR[EPVATR]-1659876226500
05:43:46.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876226500
GPR[SPVS]-1659876226500
GPR[SPVAP]-1659876226500
05:43:46.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:46.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876226915
GPR[SPVS]-1659876226915
GPR[SPVAP]-1659876226915
05:43:46.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:47.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876227347
GPR[SPVS]-1659876227347
GPR[SPVAP]-1659876227347
05:43:47.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:47.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876227775
GPR[SPVS]-1659876227775
GPR[SPVAP]-1659876227775
05:43:47.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:48.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876228186
GPR[SPVS]-1659876228186
GPR[SPVAP]-1659876228186
05:43:48.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:48.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876228599
GPR[SPVS]-1659876228599
GPR[SPVAP]-1659876228599
05:43:48.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:49.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876229015
GPR[SPVS]-1659876229015
GPR[SPVAP]-1659876229015
05:43:49.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:49.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876229433
GPR[SPVS]-1659876229433
GPR[SPVAP]-1659876229433
05:43:49.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:49.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876229847
GPR[SPVS]-1659876229847
GPR[SPVAP]-1659876229847
05:43:49.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:50.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876230120
GPR[SPVS]-1659876230120
GPR[SPVAP]-1659876230120
05:43:50.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:50.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876230544
GPR[SPVS]-1659876230544
GPR[SPVAP]-1659876230544
05:43:50.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:50.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876230955
GPR[SPVS]-1659876230955
GPR[SPVAP]-1659876230955
05:43:50.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:51.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876231354
GPR[SPVS]-1659876231354
GPR[SPVAP]-1659876231354
05:43:51.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:51.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876231769
GPR[SPVS]-1659876231769
GPR[SPVAP]-1659876231769
05:43:51.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:52.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876232183
GPR[SPVS]-1659876232183
GPR[SPVAP]-1659876232183
05:43:52.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:52.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876232595
GPR[SPVS]-1659876232595
GPR[SPVAP]-1659876232595
05:43:52.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:53.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876233007
GPR[SPVS]-1659876233007
GPR[SPVAP]-1659876233007
05:43:53.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:53.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876233415
GPR[SPVS]-1659876233415
GPR[SPVAP]-1659876233415
05:43:53.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:53.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876233836
GPR[SPVS]-1659876233836
GPR[SPVAP]-1659876233836
05:43:53.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:54.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876234251
GPR[SPVS]-1659876234251
GPR[SPVAP]-1659876234251
05:43:54.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:54.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876234660
GPR[SPVS]-1659876234660
GPR[SPVAP]-1659876234660
05:43:54.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:55.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876235080
GPR[SPVS]-1659876235080
GPR[SPVAP]-1659876235080
05:43:55.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:55.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876235495
GPR[SPVS]-1659876235495
GPR[SPVAP]-1659876235495
05:43:55.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:55.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876235907
GPR[SPVS]-1659876235907
GPR[SPVAP]-1659876235907
05:43:55.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:56.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876236324
GPR[SPVS]-1659876236324
GPR[SPVAP]-1659876236324
05:43:56.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:56.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876236735
GPR[SPVS]-1659876236735
GPR[SPVAP]-1659876236735
05:43:56.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:57.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876237147
GPR[SPVS]-1659876237147
GPR[SPVAP]-1659876237147
05:43:57.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:57.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876237564
GPR[SPVS]-1659876237564
GPR[SPVAP]-1659876237564
05:43:57.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:57.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876237978
GPR[SPVS]-1659876237978
GPR[SPVAP]-1659876237978
05:43:57.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:58.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876238395
GPR[SPVS]-1659876238395
GPR[SPVAP]-1659876238395
05:43:58.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:58.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876238811
GPR[SPVS]-1659876238811
GPR[SPVAP]-1659876238811
05:43:58.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:59.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876239224
GPR[SPVS]-1659876239224
GPR[SPVAP]-1659876239224
05:43:59.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:43:59.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876239630
GPR[SPVS]-1659876239630
GPR[SPVAP]-1659876239630
05:43:59.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:44:00.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876240046
GPR[SPVESU]-1659876240046
GPR[EPVESU]-1659876240048
GPR[EPVA]-1659876240048
GPR[SPS]-1659876240048
GPR[EPS]-1659876240048
GPR[SPS]-1659876240048
GPR[EPS]-1659876240048
GPR[SPS]-1659876240048
if (this.rightBlock != null) {


}

if (g2 != null) {


}

if (c3 != null) {


}

GPR[EPS]-1659876240048
GPR[SPVA]-1659876240048
GPR[SPVS]-1659876240048
GPR[SPVAP]-1659876240048
05:44:00.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:44:00.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876240458
GPR[SPVS]-1659876240458
GPR[SPVAP]-1659876240458
05:44:00.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:44:00.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876240870
GPR[SPVS]-1659876240870
GPR[SPVAP]-1659876240870
05:44:00.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:44:01.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876241280
GPR[SPVESU]-1659876241280
GPR[EPVESU]-1659876241281
GPR[EPVA]-1659876241281
GPR[SPS]-1659876241281
if (this.rightBlock == null) {
    return null;
}

if (this.rightBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.rightBlock);
}

if (g2 == null) {
    return null;
}

if (g2 == null) {
    throw new IllegalArgumentException("Empty variable: " + g2);
}

if (c3 == null) {
    return null;
}

if (c3 == null) {
    throw new IllegalArgumentException("Empty variable: " + c3);
}

GPR[EPS]-1659876241281
GPR[SPVA]-1659876241281
GPR[SPVS]-1659876241281
GPR[SPVAP]-1659876241281
05:44:01.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876241714
05:44:01.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:44:01.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876241714
GPR[EPVATF]-1659876241779
GPR[SPVATR]-1659876241779
GPR[EPVATR]-1659876251944
05:44:11.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876251944
GPR[SPVS]-1659876251944
GPR[SPVAP]-1659876251944
05:44:11.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876252380
05:44:12.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:44:12.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876252380
GPR[EPVATF]-1659876252444
GPR[SPVATR]-1659876252444
GPR[EPVATR]-1659876262533
05:44:22.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876262533
GPR[SPVS]-1659876262533
GPR[SPVAP]-1659876262533
05:44:22.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876262962
05:44:22.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:44:22.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876262963
GPR[EPVATF]-1659876263024
GPR[SPVATR]-1659876263024
GPR[EPVATR]-1659876275351
05:44:35.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876275351
GPR[SPVS]-1659876275351
GPR[SPVAP]-1659876275351
05:44:35.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876275788
05:44:35.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:44:35.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876275788
GPR[EPVATF]-1659876275852
GPR[SPVATR]-1659876275852
GPR[EPVATR]-1659876285948
05:44:45.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876285948
GPR[SPVS]-1659876285948
GPR[SPVAP]-1659876285948
05:44:45.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876286379
05:44:46.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:44:46.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876286379
GPR[EPVATF]-1659876286443
GPR[SPVATR]-1659876286443
GPR[EPVATR]-1659876296525
05:44:56.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876296525
GPR[SPVS]-1659876296525
GPR[SPVAP]-1659876296525
05:44:56.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876296966
05:44:56.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:44:56.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876296966
GPR[EPVATF]-1659876297028
GPR[SPVATR]-1659876297028
GPR[EPVATR]-1659876307101
05:45:07.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876307102
GPR[SPVESU]-1659876307102
GPR[EPVESU]-1659876307103
GPR[EPVA]-1659876307103
GPR[SPS]-1659876307103
GPR[EPS]-1659876307103
GPR[SPS]-1659876307103
clear();
	Size2D size = this.rightBlock.arrange(g2, c3);
Size2D size = this.rightBlock.arrange(g2, c3);
	clear();
GPR[EPS]-1659876307103
GPR[SPVA]-1659876307103
GPR[SPVS]-1659876307103
GPR[SPVAP]-1659876307103
05:45:07.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876307541
05:45:07.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:45:07.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876307541
GPR[EPVATF]-1659876307605
GPR[SPVATR]-1659876307605
GPR[EPVATR]-1659876317703
05:45:17.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876317703
GPR[SPVS]-1659876317703
GPR[SPVAP]-1659876317703
05:45:17.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876318153
05:45:18.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:45:18.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876318153
GPR[EPVATF]-1659876318220
GPR[SPVATR]-1659876318220
GPR[EPVATR]-1659876328554
05:45:28.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876328554
GPR[SPVESU]-1659876328554
GPR[EPVESU]-1659876328556
GPR[EPVA]-1659876328556
GPR[SPS]-1659876328556
GPR[EPS]-1659876328556
GPR[SPS]-1659876328556

GPR[EPS]-1659876328557
GPR[SPVA]-1659876328557
GPR[SPVS]-1659876328557
GPR[SPVAP]-1659876328557
05:45:28.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:45:28.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876328970
GPR[SPVESU]-1659876328970
GPR[EPVESU]-1659876328972
GPR[EPVA]-1659876328972
GPR[ESUN]-1659876328972
GPR[SSUN]-1659876328972
05:45:28.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===302
05:45:28.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
GPR[SPS]-1659876328983
GPR[EPS]-1659876328983
GPR[SPS]-1659876328983
GPR[EPS]-1659876328983
GPR[SPS]-1659876328983
GPR[EPS]-1659876328983
GPR[SPS]-1659876328983
GPR[EPS]-1659876328983
GPR[SPS]-1659876328983
GPR[EPS]-1659876328984
GPR[SPS]-1659876328984
if (w != null) {


}

GPR[EPS]-1659876328984
GPR[SPVA]-1659876328984
GPR[SPVS]-1659876328984
GPR[SPVAP]-1659876328984
05:45:28.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:45:29.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876329407
GPR[SPVESU]-1659876329407
GPR[EPVESU]-1659876329408
GPR[EPVA]-1659876329408
GPR[SPS]-1659876329408
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659876329408
GPR[SPVA]-1659876329408
GPR[SPVS]-1659876329408
GPR[SPVAP]-1659876329408
05:45:29.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876329839
05:45:29.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:45:29.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876329839
GPR[EPVATF]-1659876329905
GPR[SPVATR]-1659876329905
GPR[EPVATR]-1659876340106
05:45:40.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876340106
GPR[SPVS]-1659876340106
GPR[SPVAP]-1659876340106
05:45:40.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876340542
05:45:40.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:45:40.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876340542
GPR[EPVATF]-1659876340607
GPR[SPVATR]-1659876340607
GPR[EPVATR]-1659876350876
05:45:50.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876350876
GPR[SPVESU]-1659876350876
GPR[EPVESU]-1659876350878
GPR[EPVA]-1659876350878
GPR[SPS]-1659876350878
GPR[EPS]-1659876350878
GPR[SPS]-1659876350878
clear();
	RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
	clear();
GPR[EPS]-1659876350878
GPR[SPVA]-1659876350878
GPR[SPVS]-1659876350878
GPR[SPVAP]-1659876350878
05:45:50.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876351315
05:45:51.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:45:51.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876351315
GPR[EPVATF]-1659876351380
GPR[SPVATR]-1659876351380
GPR[EPVATR]-1659876361620
05:46:01.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876361620
GPR[SPVS]-1659876361620
GPR[SPVAP]-1659876361620
05:46:01.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876362059
05:46:02.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:46:02.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876362059
GPR[EPVATF]-1659876362125
GPR[SPVATR]-1659876362125
GPR[EPVATR]-1659876372285
05:46:12.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876372285
GPR[SPVESU]-1659876372285
GPR[EPVESU]-1659876372287
GPR[EPVA]-1659876372287
GPR[SPS]-1659876372287
GPR[EPS]-1659876372287
GPR[SPS]-1659876372287

GPR[EPS]-1659876372287
GPR[SPVA]-1659876372287
GPR[SPVS]-1659876372287
GPR[SPVAP]-1659876372287
05:46:12.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:12.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876372703
GPR[SPVESU]-1659876372703
GPR[EPVESU]-1659876372704
GPR[EPVA]-1659876372704
GPR[ESUN]-1659876372704
GPR[SSUN]-1659876372704
05:46:12.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===301
05:46:12.715 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
double maxW = Math.max(width - w[2], 0.0);
GPR[SPS]-1659876372717

float maxW = Math.max(width - w[2], 0.0);
long maxW = Math.max(width - w[2], 0.0);
int maxW = Math.max(width - w[2], 0.0);
short maxW = Math.max(width - w[2], 0.0);
byte maxW = Math.max(width - w[2], 0.0);
GPR[EPS]-1659876372717
GPR[SPVA]-1659876372717
GPR[SPVS]-1659876372717
GPR[SPVAP]-1659876372717
05:46:12.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:13.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876373127
GPR[SPVS]-1659876373127
GPR[SPVAP]-1659876373127
05:46:13.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:13.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876373537
GPR[SPVS]-1659876373537
GPR[SPVAP]-1659876373537
05:46:13.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:13.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876373947
GPR[SPVS]-1659876373947
GPR[SPVAP]-1659876373947
05:46:13.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:14.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876374359
GPR[SPVS]-1659876374359
GPR[SPVAP]-1659876374359
05:46:14.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:14.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876374787
GPR[SPVESU]-1659876374787
GPR[EPVESU]-1659876374788
GPR[EPVA]-1659876374788
GPR[SPS]-1659876374788
GPR[EPS]-1659876374788
GPR[SPS]-1659876374788
double maxW = Math.max(maxW, width - w[2], 0.0);
double maxW = Math.max(c2, width - w[2], 0.0);
double maxW = Math.max(c1, width - w[2], 0.0);
double maxW = Math.max(h, width - w[2], 0.0);
double maxW = Math.max(w, width - w[2], 0.0);
double maxW = Math.max(container, width - w[2], 0.0);
double maxW = Math.max(g2, width - w[2], 0.0);
double maxW = Math.max(width, width - w[2], 0.0);
double maxW = Math.max(this.centerBlock, width - w[2], 0.0);
double maxW = Math.max(this.topBlock, width - w[2], 0.0);
double maxW = Math.max(this.bottomBlock, width - w[2], 0.0);
double maxW = Math.max(this.leftBlock, width - w[2], 0.0);
double maxW = Math.max(this.rightBlock, width - w[2], 0.0);
double maxW = Math.max(width - w[2], maxW, 0.0);
double maxW = Math.max(width - w[2], c2, 0.0);
double maxW = Math.max(width - w[2], c1, 0.0);
double maxW = Math.max(width - w[2], h, 0.0);
double maxW = Math.max(width - w[2], w, 0.0);
double maxW = Math.max(width - w[2], container, 0.0);
double maxW = Math.max(width - w[2], g2, 0.0);
double maxW = Math.max(width - w[2], width, 0.0);
double maxW = Math.max(width - w[2], this.centerBlock, 0.0);
double maxW = Math.max(width - w[2], this.topBlock, 0.0);
double maxW = Math.max(width - w[2], this.bottomBlock, 0.0);
double maxW = Math.max(width - w[2], this.leftBlock, 0.0);
double maxW = Math.max(width - w[2], this.rightBlock, 0.0);
double maxW = Math.max(width - w[2], 0.0, maxW);
double maxW = Math.max(width - w[2], 0.0, c2);
double maxW = Math.max(width - w[2], 0.0, c1);
double maxW = Math.max(width - w[2], 0.0, h);
double maxW = Math.max(width - w[2], 0.0, w);
double maxW = Math.max(width - w[2], 0.0, container);
double maxW = Math.max(width - w[2], 0.0, g2);
double maxW = Math.max(width - w[2], 0.0, width);
double maxW = Math.max(width - w[2], 0.0, this.centerBlock);
double maxW = Math.max(width - w[2], 0.0, this.topBlock);
double maxW = Math.max(width - w[2], 0.0, this.bottomBlock);
double maxW = Math.max(width - w[2], 0.0, this.leftBlock);
double maxW = Math.max(width - w[2], 0.0, this.rightBlock);
GPR[EPS]-1659876374789
GPR[SPVA]-1659876374789
GPR[SPVS]-1659876374789
GPR[SPVAP]-1659876374789
05:46:14.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:15.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876375201
GPR[SPVS]-1659876375201
GPR[SPVAP]-1659876375201
05:46:15.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:15.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876375615
GPR[SPVS]-1659876375615
GPR[SPVAP]-1659876375615
05:46:15.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:16.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876376031
GPR[SPVS]-1659876376031
GPR[SPVAP]-1659876376031
05:46:16.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:16.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876376440
GPR[SPVS]-1659876376440
GPR[SPVAP]-1659876376440
05:46:16.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:16.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876376855
GPR[SPVS]-1659876376855
GPR[SPVAP]-1659876376855
05:46:16.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:17.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876377259
GPR[SPVS]-1659876377259
GPR[SPVAP]-1659876377259
05:46:17.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:17.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876377679
GPR[SPVS]-1659876377679
GPR[SPVAP]-1659876377679
05:46:17.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:18.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876378090
GPR[SPVS]-1659876378090
GPR[SPVAP]-1659876378090
05:46:18.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:18.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876378505
GPR[SPVS]-1659876378505
GPR[SPVAP]-1659876378505
05:46:18.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:18.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876378916
GPR[SPVS]-1659876378916
GPR[SPVAP]-1659876378916
05:46:18.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:19.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876379336
GPR[SPVS]-1659876379336
GPR[SPVAP]-1659876379336
05:46:19.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:19.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876379746
GPR[SPVS]-1659876379746
GPR[SPVAP]-1659876379746
05:46:19.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:20.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876380155
GPR[SPVS]-1659876380155
GPR[SPVAP]-1659876380155
05:46:20.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:20.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876380573
GPR[SPVS]-1659876380573
GPR[SPVAP]-1659876380573
05:46:20.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:20.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876380987
GPR[SPVS]-1659876380987
GPR[SPVAP]-1659876380987
05:46:20.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:21.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876381402
GPR[SPVS]-1659876381402
GPR[SPVAP]-1659876381402
05:46:21.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:21.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876381819
GPR[SPVS]-1659876381819
GPR[SPVAP]-1659876381819
05:46:21.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:22.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876382239
GPR[SPVS]-1659876382239
GPR[SPVAP]-1659876382239
05:46:22.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:22.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876382652
GPR[SPVS]-1659876382652
GPR[SPVAP]-1659876382652
05:46:22.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:23.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876383059
GPR[SPVS]-1659876383059
GPR[SPVAP]-1659876383059
05:46:23.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:23.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876383471
GPR[SPVS]-1659876383471
GPR[SPVAP]-1659876383471
05:46:23.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:23.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876383895
GPR[SPVS]-1659876383895
GPR[SPVAP]-1659876383895
05:46:23.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:24.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876384310
GPR[SPVS]-1659876384310
GPR[SPVAP]-1659876384310
05:46:24.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:24.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876384720
GPR[SPVS]-1659876384720
GPR[SPVAP]-1659876384720
05:46:24.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:25.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876385137
GPR[SPVS]-1659876385137
GPR[SPVAP]-1659876385137
05:46:25.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:25.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876385552
GPR[SPVS]-1659876385552
GPR[SPVAP]-1659876385552
05:46:25.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:25.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876385965
GPR[SPVS]-1659876385965
GPR[SPVAP]-1659876385965
05:46:25.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:26.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876386390
GPR[SPVS]-1659876386390
GPR[SPVAP]-1659876386390
05:46:26.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:26.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876386810
GPR[SPVS]-1659876386810
GPR[SPVAP]-1659876386810
05:46:26.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:27.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876387224
GPR[SPVS]-1659876387224
GPR[SPVAP]-1659876387224
05:46:27.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:27.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876387639
GPR[SPVS]-1659876387639
GPR[SPVAP]-1659876387639
05:46:27.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:28.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876388074
GPR[SPVS]-1659876388074
GPR[SPVAP]-1659876388074
05:46:28.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:28.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876388488
GPR[SPVS]-1659876388488
GPR[SPVAP]-1659876388488
05:46:28.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:28.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876388904
GPR[SPVS]-1659876388905
GPR[SPVAP]-1659876388905
05:46:28.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:29.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876389322
GPR[SPVS]-1659876389322
GPR[SPVAP]-1659876389322
05:46:29.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:29.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876389734
GPR[SPVS]-1659876389734
GPR[SPVAP]-1659876389734
05:46:29.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:30.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876390149
GPR[SPVS]-1659876390149
GPR[SPVAP]-1659876390149
05:46:30.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:30.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876390566
GPR[SPVS]-1659876390566
GPR[SPVAP]-1659876390566
05:46:30.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:30.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876390984
GPR[SPVESU]-1659876390984
GPR[EPVESU]-1659876390985
GPR[EPVA]-1659876390985
GPR[SPS]-1659876390985
GPR[EPS]-1659876390985
GPR[SPS]-1659876390985
double maxW = maxW.max(width - w[2], 0.0);
double maxW = c2.max(width - w[2], 0.0);
double maxW = c1.max(width - w[2], 0.0);
double maxW = h.max(width - w[2], 0.0);
double maxW = w.max(width - w[2], 0.0);
double maxW = container.max(width - w[2], 0.0);
double maxW = g2.max(width - w[2], 0.0);
double maxW = width.max(width - w[2], 0.0);
double maxW = this.centerBlock.max(width - w[2], 0.0);
double maxW = this.topBlock.max(width - w[2], 0.0);
double maxW = this.bottomBlock.max(width - w[2], 0.0);
double maxW = this.leftBlock.max(width - w[2], 0.0);
double maxW = this.rightBlock.max(width - w[2], 0.0);
GPR[EPS]-1659876390985
GPR[SPVA]-1659876390985
GPR[SPVS]-1659876390985
GPR[SPVAP]-1659876390985
05:46:30.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:31.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876391394
GPR[SPVS]-1659876391394
GPR[SPVAP]-1659876391394
05:46:31.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:31.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876391818
GPR[SPVS]-1659876391818
GPR[SPVAP]-1659876391818
05:46:31.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:32.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876392230
GPR[SPVS]-1659876392230
GPR[SPVAP]-1659876392230
05:46:32.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:32.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876392642
GPR[SPVS]-1659876392642
GPR[SPVAP]-1659876392642
05:46:32.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:33.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876393059
GPR[SPVS]-1659876393059
GPR[SPVAP]-1659876393059
05:46:33.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:33.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876393479
GPR[SPVS]-1659876393479
GPR[SPVAP]-1659876393479
05:46:33.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:33.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876393890
GPR[SPVS]-1659876393890
GPR[SPVAP]-1659876393890
05:46:33.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:34.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876394298
GPR[SPVS]-1659876394298
GPR[SPVAP]-1659876394298
05:46:34.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:34.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876394711
GPR[SPVS]-1659876394711
GPR[SPVAP]-1659876394711
05:46:34.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:35.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876395124
GPR[SPVS]-1659876395124
GPR[SPVAP]-1659876395124
05:46:35.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:35.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876395536
GPR[SPVS]-1659876395536
GPR[SPVAP]-1659876395536
05:46:35.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:35.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876395951
GPR[SPVS]-1659876395951
GPR[SPVAP]-1659876395951
05:46:35.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:36.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876396360
GPR[SPVESU]-1659876396360
GPR[EPVESU]-1659876396362
GPR[EPVA]-1659876396362
GPR[SPS]-1659876396362
if (w != null) {


}

GPR[EPS]-1659876396363
GPR[SPVA]-1659876396363
GPR[SPVS]-1659876396363
GPR[SPVAP]-1659876396363
05:46:36.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:46:36.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876396779
GPR[SPVESU]-1659876396779
GPR[EPVESU]-1659876396780
GPR[EPVA]-1659876396780
GPR[SPS]-1659876396780
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659876396780
GPR[SPVA]-1659876396780
GPR[SPVS]-1659876396781
GPR[SPVAP]-1659876396781
05:46:36.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876397215
05:46:37.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:46:37.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876397215
GPR[EPVATF]-1659876397280
GPR[SPVATR]-1659876397280
GPR[EPVATR]-1659876408551
05:46:48.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876408551
GPR[SPVS]-1659876408551
GPR[SPVAP]-1659876408551
05:46:48.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876408987
05:46:48.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:46:48.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876408987
GPR[EPVATF]-1659876409052
GPR[SPVATR]-1659876409052
GPR[EPVATR]-1659876419373
05:46:59.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876419373
GPR[SPVESU]-1659876419373
GPR[EPVESU]-1659876419374
GPR[EPVA]-1659876419374
GPR[SPS]-1659876419374
GPR[EPS]-1659876419375
GPR[SPS]-1659876419375
clear();
	double maxW = Math.max(width - w[2], 0.0);
double maxW = Math.max(width - w[2], 0.0);
	clear();
GPR[EPS]-1659876419375
GPR[SPVA]-1659876419375
GPR[SPVS]-1659876419375
GPR[SPVAP]-1659876419375
05:46:59.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876419812
05:46:59.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:46:59.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876419812
GPR[EPVATF]-1659876419877
GPR[SPVATR]-1659876419877
GPR[EPVATR]-1659876430178
05:47:10.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876430178
GPR[SPVS]-1659876430178
GPR[SPVAP]-1659876430178
05:47:10.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876430607
05:47:10.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:47:10.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876430607
GPR[EPVATF]-1659876430671
GPR[SPVATR]-1659876430671
GPR[EPVATR]-1659876440803
05:47:20.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876440803
GPR[SPVESU]-1659876440803
GPR[EPVESU]-1659876440805
GPR[EPVA]-1659876440805
GPR[SPS]-1659876440805
GPR[EPS]-1659876440805
GPR[SPS]-1659876440805

GPR[EPS]-1659876440805
GPR[SPVA]-1659876440805
GPR[SPVS]-1659876440805
GPR[SPVAP]-1659876440805
05:47:20.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:47:21.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876441217
GPR[SPVESU]-1659876441217
GPR[EPVESU]-1659876441219
GPR[EPVA]-1659876441219
GPR[ESUN]-1659876441219
GPR[SSUN]-1659876441219
05:47:21.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===300
05:47:21.228 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
GPR[SPS]-1659876441230
if (this.rightBlock == null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
GPR[EPS]-1659876441230
GPR[SPVA]-1659876441230
GPR[SPVS]-1659876441230
GPR[SPVAP]-1659876441230
05:47:21.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876441663
05:47:21.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:47:21.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876441663
GPR[EPVATF]-1659876441727
GPR[SPVATR]-1659876441727
GPR[EPVATR]-1659876451842
05:47:31.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876451842
GPR[SPVESU]-1659876451842
GPR[EPVESU]-1659876451844
GPR[EPVA]-1659876451844
GPR[SPS]-1659876451844
GPR[EPS]-1659876451844
GPR[SPS]-1659876451844
GPR[EPS]-1659876451844
GPR[SPS]-1659876451844
GPR[EPS]-1659876451845
GPR[SPS]-1659876451845
GPR[EPS]-1659876451845
GPR[SPS]-1659876451845
if (this.rightBlock != null) {


}

GPR[EPS]-1659876451845
GPR[SPVA]-1659876451845
GPR[SPVS]-1659876451845
GPR[SPVAP]-1659876451845
05:47:31.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876452278
05:47:32.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:47:32.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876452278
GPR[EPVATF]-1659876452345
GPR[SPVATR]-1659876452345
GPR[EPVATR]-1659876462588
05:47:42.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876462588
GPR[SPVESU]-1659876462588
GPR[EPVESU]-1659876462590
GPR[EPVA]-1659876462590
GPR[SPS]-1659876462590
if (this.rightBlock == null) {
    return null;
}

if (this.rightBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.rightBlock);
}

GPR[EPS]-1659876462590
GPR[SPVA]-1659876462590
GPR[SPVS]-1659876462590
GPR[SPVAP]-1659876462590
05:47:42.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876463024
05:47:43.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:47:43.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876463024
GPR[EPVATF]-1659876463089
GPR[SPVATR]-1659876463089
GPR[EPVATR]-1659876473461
05:47:53.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876473462
GPR[SPVS]-1659876473462
GPR[SPVAP]-1659876473462
05:47:53.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876473899
05:47:53.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:47:53.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876473899
GPR[EPVATF]-1659876473959
GPR[SPVATR]-1659876473959
GPR[EPVATR]-1659876484122
05:48:04.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876484122
GPR[SPVESU]-1659876484122
GPR[EPVESU]-1659876484124
GPR[EPVA]-1659876484124
GPR[SPS]-1659876484124
GPR[EPS]-1659876484124
GPR[SPS]-1659876484124
clear();
	if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	clear();
GPR[EPS]-1659876484124
GPR[SPVA]-1659876484124
GPR[SPVS]-1659876484124
GPR[SPVAP]-1659876484124
05:48:04.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876484562
05:48:04.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:48:04.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876484562
GPR[EPVATF]-1659876484623
GPR[SPVATR]-1659876484623
GPR[EPVATR]-1659876494842
05:48:14.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876494842
GPR[SPVS]-1659876494842
GPR[SPVAP]-1659876494842
05:48:14.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876495281
05:48:15.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:48:15.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876495281
GPR[EPVATF]-1659876495344
GPR[SPVATR]-1659876495344
GPR[EPVATR]-1659876505378
05:48:25.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876505378
GPR[SPVESU]-1659876505378
GPR[EPVESU]-1659876505380
GPR[EPVA]-1659876505380
GPR[SPS]-1659876505380
if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	double[] w = new double[5];
        double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        
null
if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        
null
if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        
null
if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        
null
if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        
null
if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        
null
if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        
null


        h[2] = Math.max(h[2], h[3]);
	if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

MOVE-BUGGY-STATEMENT


        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];
	if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

MOVE-BUGGY-STATEMENT


        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

MOVE-BUGGY-STATEMENT


        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
	if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

MOVE-BUGGY-STATEMENT


        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
        return arrange(container, g2, new RectangleConstraint(width, height));
	if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659876505380
GPR[SPVA]-1659876505380
GPR[SPVS]-1659876505380
GPR[SPVAP]-1659876505380
05:48:25.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:48:25.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876505791
GPR[SPVS]-1659876505792
GPR[SPVAP]-1659876505792
05:48:25.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:48:26.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876506206
GPR[SPVS]-1659876506206
GPR[SPVAP]-1659876506206
05:48:26.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876506635
05:48:26.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:48:26.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876506635
GPR[EPVATF]-1659876506700
GPR[SPVATR]-1659876506700
GPR[EPVATR]-1659876516898
05:48:36.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876516898
GPR[SPVS]-1659876516898
GPR[SPVAP]-1659876516898
05:48:36.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876517339
05:48:37.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:48:37.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876517339
GPR[EPVATF]-1659876517403
GPR[SPVATR]-1659876517403
GPR[EPVATR]-1659876527618
05:48:47.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876527618
GPR[SPVS]-1659876527618
GPR[SPVAP]-1659876527618
05:48:47.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876528054
05:48:48.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:48:48.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876528054
GPR[EPVATF]-1659876528120
GPR[SPVATR]-1659876528120
GPR[EPVATR]-1659876538270
05:48:58.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876538270
GPR[SPVS]-1659876538270
GPR[SPVAP]-1659876538270
05:48:58.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876538716
05:48:58.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:48:58.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876538716
GPR[EPVATF]-1659876538779
GPR[SPVATR]-1659876538780
GPR[EPVATR]-1659876548946
05:49:08.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876548946
GPR[SPVS]-1659876548946
GPR[SPVAP]-1659876548946
05:49:08.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876549373
05:49:09.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:49:09.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876549373
GPR[EPVATF]-1659876549437
GPR[SPVATR]-1659876549437
GPR[EPVATR]-1659876559602
05:49:19.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876559602
GPR[SPVS]-1659876559602
GPR[SPVAP]-1659876559602
05:49:19.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876560036
05:49:20.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:49:20.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876560036
GPR[EPVATF]-1659876560100
GPR[SPVATR]-1659876560100
GPR[EPVATR]-1659876570540
05:49:30.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876570540
GPR[SPVS]-1659876570540
GPR[SPVAP]-1659876570540
05:49:30.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876570977
05:49:30.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:49:30.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876570977
GPR[EPVATF]-1659876571039
GPR[SPVATR]-1659876571040
GPR[EPVATR]-1659876581250
05:49:41.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876581250
GPR[SPVS]-1659876581250
GPR[SPVAP]-1659876581250
05:49:41.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876581681
05:49:41.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:49:41.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876581681
GPR[EPVATF]-1659876581744
GPR[SPVATR]-1659876581744
GPR[EPVATR]-1659876592071
05:49:52.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876592071
GPR[SPVS]-1659876592071
GPR[SPVAP]-1659876592071
05:49:52.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876592510
05:49:52.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:49:52.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876592510
GPR[EPVATF]-1659876592576
GPR[SPVATR]-1659876592576
GPR[EPVATR]-1659876602849
05:50:02.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876602849
GPR[SPVS]-1659876602849
GPR[SPVAP]-1659876602849
05:50:02.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:50:03.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876603273
GPR[SPVESU]-1659876603273
GPR[EPVESU]-1659876603280
GPR[EPVA]-1659876603280
GPR[SPS]-1659876603280

GPR[EPS]-1659876603280
GPR[SPVA]-1659876603280
GPR[SPVS]-1659876603280
GPR[SPVAP]-1659876603280
05:50:03.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876603911
05:50:03.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:50:03.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876603911
GPR[EPVATF]-1659876604030
GPR[SPVATR]-1659876604030
GPR[EPVATR]-1659876614482
05:50:14.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876614482
GPR[SPVESU]-1659876614482
GPR[EPVESU]-1659876614484
GPR[EPVA]-1659876614484
GPR[ESUN]-1659876614484
GPR[SSUN]-1659876614484
05:50:14.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===298
05:50:14.492 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
h[2] = size.height;
GPR[SPS]-1659876614494
GPR[EPS]-1659876614494
GPR[SPS]-1659876614494
GPR[EPS]-1659876614494
GPR[SPS]-1659876614494
GPR[EPS]-1659876614494
GPR[SPS]-1659876614494
GPR[EPS]-1659876614494
GPR[SPS]-1659876614494
GPR[EPS]-1659876614495
GPR[SPS]-1659876614495
if (h != null) {


}

GPR[EPS]-1659876614495
GPR[SPVA]-1659876614495
GPR[SPVS]-1659876614495
GPR[SPVAP]-1659876614495
05:50:14.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876614931
05:50:14.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:50:14.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876614931
GPR[EPVATF]-1659876614993
GPR[SPVATR]-1659876614993
GPR[EPVATR]-1659876625301
05:50:25.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876625301
GPR[SPVESU]-1659876625301
GPR[EPVESU]-1659876625303
GPR[EPVA]-1659876625303
GPR[SPS]-1659876625303
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659876625303
GPR[SPVA]-1659876625303
GPR[SPVS]-1659876625303
GPR[SPVAP]-1659876625303
05:50:25.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876625743
05:50:25.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:50:25.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876625743
GPR[EPVATF]-1659876625808
GPR[SPVATR]-1659876625808
GPR[EPVATR]-1659876636129
05:50:36.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876636129
GPR[SPVS]-1659876636129
GPR[SPVAP]-1659876636129
05:50:36.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876636570
05:50:36.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:50:36.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876636570
GPR[EPVATF]-1659876636635
GPR[SPVATR]-1659876636635
GPR[EPVATR]-1659876646872
05:50:46.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876646872
GPR[SPVESU]-1659876646872
GPR[EPVESU]-1659876646874
GPR[EPVA]-1659876646874
GPR[SPS]-1659876646874
GPR[EPS]-1659876646874
GPR[SPS]-1659876646874
clear();
	h[2] = size.height;
h[2] = size.height;
	clear();
GPR[EPS]-1659876646874
GPR[SPVA]-1659876646874
GPR[SPVS]-1659876646874
GPR[SPVAP]-1659876646874
05:50:46.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876647309
05:50:47.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:50:47.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876647309
GPR[EPVATF]-1659876647371
GPR[SPVATR]-1659876647371
GPR[EPVATR]-1659876657546
05:50:57.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876657546
GPR[SPVS]-1659876657546
GPR[SPVAP]-1659876657546
05:50:57.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876657978
05:50:57.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:50:57.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876657978
GPR[EPVATF]-1659876658041
GPR[SPVATR]-1659876658041
GPR[EPVATR]-1659876668116
05:51:08.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876668116
GPR[SPVESU]-1659876668116
GPR[EPVESU]-1659876668118
GPR[EPVA]-1659876668118
GPR[SPS]-1659876668118
h[2] = size.height;
	Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            
null
h[2] = size.height;
	w[2] = size.width;
            
null
GPR[EPS]-1659876668118
GPR[SPVA]-1659876668118
GPR[SPVS]-1659876668118
GPR[SPVAP]-1659876668118
05:51:08.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:51:08.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876668526
GPR[SPVS]-1659876668526
GPR[SPVAP]-1659876668526
05:51:08.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876668961
05:51:08.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:51:08.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876668961
GPR[EPVATF]-1659876669024
GPR[SPVATR]-1659876669024
GPR[EPVATR]-1659876679186
05:51:19.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876679186
GPR[SPVESU]-1659876679186
GPR[EPVESU]-1659876679188
GPR[EPVA]-1659876679188
GPR[SPS]-1659876679188

GPR[EPS]-1659876679188
GPR[SPVA]-1659876679188
GPR[SPVS]-1659876679188
GPR[SPVAP]-1659876679188
05:51:19.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876679620
05:51:19.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:51:19.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876679620
GPR[EPVATF]-1659876679685
GPR[SPVATR]-1659876679685
GPR[EPVATR]-1659876689909
05:51:29.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876689909
GPR[SPVESU]-1659876689909
GPR[EPVESU]-1659876689911
GPR[EPVA]-1659876689911
GPR[ESUN]-1659876689911
GPR[SSUN]-1659876689911
05:51:29.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===297
05:51:29.920 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
w[2] = size.width;
GPR[SPS]-1659876689922
GPR[EPS]-1659876689922
GPR[SPS]-1659876689922
GPR[EPS]-1659876689922
GPR[SPS]-1659876689922
GPR[EPS]-1659876689922
GPR[SPS]-1659876689922
GPR[EPS]-1659876689922
GPR[SPS]-1659876689922
GPR[EPS]-1659876689922
GPR[SPS]-1659876689922
if (w != null) {


}

GPR[EPS]-1659876689922
GPR[SPVA]-1659876689922
GPR[SPVS]-1659876689922
GPR[SPVAP]-1659876689923
05:51:29.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876690352
05:51:30.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:51:30.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876690352
GPR[EPVATF]-1659876690415
GPR[SPVATR]-1659876690415
GPR[EPVATR]-1659876700641
05:51:40.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876700641
GPR[SPVESU]-1659876700641
GPR[EPVESU]-1659876700643
GPR[EPVA]-1659876700643
GPR[SPS]-1659876700643
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659876700643
GPR[SPVA]-1659876700643
GPR[SPVS]-1659876700644
GPR[SPVAP]-1659876700644
05:51:40.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876701079
05:51:41.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:51:41.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876701079
GPR[EPVATF]-1659876701143
GPR[SPVATR]-1659876701144
GPR[EPVATR]-1659876711309
05:51:51.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876711309
GPR[SPVS]-1659876711310
GPR[SPVAP]-1659876711310
05:51:51.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876711749
05:51:51.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:51:51.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876711749
GPR[EPVATF]-1659876711812
GPR[SPVATR]-1659876711812
GPR[EPVATR]-1659876721973
05:52:01.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876721973
GPR[SPVESU]-1659876721974
GPR[EPVESU]-1659876721975
GPR[EPVA]-1659876721975
GPR[SPS]-1659876721975
GPR[EPS]-1659876721976
GPR[SPS]-1659876721976
clear();
	w[2] = size.width;
w[2] = size.width;
	clear();
GPR[EPS]-1659876721976
GPR[SPVA]-1659876721976
GPR[SPVS]-1659876721976
GPR[SPVAP]-1659876721976
05:52:01.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876722411
05:52:02.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:52:02.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876722411
GPR[EPVATF]-1659876722476
GPR[SPVATR]-1659876722476
GPR[EPVATR]-1659876732797
05:52:12.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876732797
GPR[SPVS]-1659876732797
GPR[SPVAP]-1659876732797
05:52:12.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876733234
05:52:13.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:52:13.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876733234
GPR[EPVATF]-1659876733296
GPR[SPVATR]-1659876733296
GPR[EPVATR]-1659876743617
05:52:23.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876743617
GPR[SPVESU]-1659876743617
GPR[EPVESU]-1659876743619
GPR[EPVA]-1659876743619
GPR[SPS]-1659876743619
w[2] = size.width;
	Size2D size = this.leftBlock.arrange(g2, c2);
            
null

            h[2] = size.height;
	w[2] = size.width;

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659876743619
GPR[SPVA]-1659876743619
GPR[SPVS]-1659876743619
GPR[SPVAP]-1659876743619
05:52:23.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:24.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876744032
GPR[SPVS]-1659876744032
GPR[SPVAP]-1659876744032
05:52:24.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876744469
05:52:24.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:52:24.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876744469
GPR[EPVATF]-1659876744531
GPR[SPVATR]-1659876744531
GPR[EPVATR]-1659876754958
05:52:34.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876754958
GPR[SPVESU]-1659876754958
GPR[EPVESU]-1659876754960
GPR[EPVA]-1659876754960
GPR[SPS]-1659876754960

GPR[EPS]-1659876754960
GPR[SPVA]-1659876754960
GPR[SPVS]-1659876754960
GPR[SPVAP]-1659876754960
05:52:34.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876755391
05:52:35.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:52:35.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876755391
GPR[EPVATF]-1659876755452
GPR[SPVATR]-1659876755452
GPR[EPVATR]-1659876765648
05:52:45.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876765648
GPR[SPVESU]-1659876765648
GPR[EPVESU]-1659876765650
GPR[EPVA]-1659876765650
GPR[ESUN]-1659876765650
GPR[SSUN]-1659876765650
05:52:45.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===296
05:52:45.659 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Size2D size = this.leftBlock.arrange(g2, c2);
GPR[SPS]-1659876765660
GPR[EPS]-1659876765660
GPR[SPS]-1659876765660
GPR[EPS]-1659876765661
GPR[SPS]-1659876765661
Size2D size = this.leftBlock.arrange(size, c2);
Size2D size = this.leftBlock.arrange(c1, c2);
Size2D size = this.leftBlock.arrange(h, c2);
Size2D size = this.leftBlock.arrange(w, c2);
Size2D size = this.leftBlock.arrange(container, c2);
Size2D size = this.leftBlock.arrange(width, c2);
Size2D size = this.leftBlock.arrange(this.centerBlock, c2);
Size2D size = this.leftBlock.arrange(this.topBlock, c2);
Size2D size = this.leftBlock.arrange(this.bottomBlock, c2);
Size2D size = this.leftBlock.arrange(this.rightBlock, c2);
Size2D size = this.leftBlock.arrange( c2);
Size2D size = this.leftBlock.arrange(size, g2, c2);
Size2D size = this.leftBlock.arrange(c1, g2, c2);
Size2D size = this.leftBlock.arrange(h, g2, c2);
Size2D size = this.leftBlock.arrange(w, g2, c2);
Size2D size = this.leftBlock.arrange(container, g2, c2);
Size2D size = this.leftBlock.arrange(width, g2, c2);
Size2D size = this.leftBlock.arrange(this.centerBlock, g2, c2);
Size2D size = this.leftBlock.arrange(this.topBlock, g2, c2);
Size2D size = this.leftBlock.arrange(this.bottomBlock, g2, c2);
Size2D size = this.leftBlock.arrange(this.rightBlock, g2, c2);
Size2D size = this.leftBlock.arrange(g2, size);
Size2D size = this.leftBlock.arrange(g2, c1);
Size2D size = this.leftBlock.arrange(g2, h);
Size2D size = this.leftBlock.arrange(g2, w);
Size2D size = this.leftBlock.arrange(g2, container);
Size2D size = this.leftBlock.arrange(g2, width);
Size2D size = this.leftBlock.arrange(g2, this.centerBlock);
Size2D size = this.leftBlock.arrange(g2, this.topBlock);
Size2D size = this.leftBlock.arrange(g2, this.bottomBlock);
Size2D size = this.leftBlock.arrange(g2, this.rightBlock);
Size2D size = this.leftBlock.arrange(g2, );
Size2D size = this.leftBlock.arrange(g2, size, c2);
Size2D size = this.leftBlock.arrange(g2, c1, c2);
Size2D size = this.leftBlock.arrange(g2, h, c2);
Size2D size = this.leftBlock.arrange(g2, w, c2);
Size2D size = this.leftBlock.arrange(g2, container, c2);
Size2D size = this.leftBlock.arrange(g2, width, c2);
Size2D size = this.leftBlock.arrange(g2, this.centerBlock, c2);
Size2D size = this.leftBlock.arrange(g2, this.topBlock, c2);
Size2D size = this.leftBlock.arrange(g2, this.bottomBlock, c2);
Size2D size = this.leftBlock.arrange(g2, this.rightBlock, c2);
Size2D size = this.leftBlock.arrange(g2, c2, size);
Size2D size = this.leftBlock.arrange(g2, c2, c1);
Size2D size = this.leftBlock.arrange(g2, c2, h);
Size2D size = this.leftBlock.arrange(g2, c2, w);
Size2D size = this.leftBlock.arrange(g2, c2, container);
Size2D size = this.leftBlock.arrange(g2, c2, width);
Size2D size = this.leftBlock.arrange(g2, c2, this.centerBlock);
Size2D size = this.leftBlock.arrange(g2, c2, this.topBlock);
Size2D size = this.leftBlock.arrange(g2, c2, this.bottomBlock);
Size2D size = this.leftBlock.arrange(g2, c2, this.rightBlock);
GPR[EPS]-1659876765662
GPR[SPVA]-1659876765662
GPR[SPVS]-1659876765662
GPR[SPVAP]-1659876765662
05:52:45.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:46.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876766075
GPR[SPVS]-1659876766075
GPR[SPVAP]-1659876766075
05:52:46.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:46.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876766489
GPR[SPVS]-1659876766489
GPR[SPVAP]-1659876766489
05:52:46.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:46.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876766905
GPR[SPVS]-1659876766905
GPR[SPVAP]-1659876766905
05:52:46.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:47.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876767319
GPR[SPVS]-1659876767319
GPR[SPVAP]-1659876767319
05:52:47.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:47.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876767734
GPR[SPVS]-1659876767734
GPR[SPVAP]-1659876767734
05:52:47.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:48.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876768150
GPR[SPVS]-1659876768150
GPR[SPVAP]-1659876768150
05:52:48.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:48.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876768559
GPR[SPVS]-1659876768559
GPR[SPVAP]-1659876768559
05:52:48.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:48.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876768977
GPR[SPVS]-1659876768977
GPR[SPVAP]-1659876768977
05:52:48.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:49.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876769390
GPR[SPVS]-1659876769390
GPR[SPVAP]-1659876769390
05:52:49.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:49.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876769806
GPR[SPVS]-1659876769806
GPR[SPVAP]-1659876769806
05:52:49.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:50.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876770218
GPR[SPVS]-1659876770218
GPR[SPVAP]-1659876770218
05:52:50.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:50.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876770641
GPR[SPVS]-1659876770641
GPR[SPVAP]-1659876770641
05:52:50.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:51.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876771056
GPR[SPVS]-1659876771056
GPR[SPVAP]-1659876771056
05:52:51.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:51.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876771470
GPR[SPVS]-1659876771470
GPR[SPVAP]-1659876771470
05:52:51.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:51.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876771882
GPR[SPVS]-1659876771882
GPR[SPVAP]-1659876771882
05:52:51.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:52.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876772291
GPR[SPVS]-1659876772291
GPR[SPVAP]-1659876772291
05:52:52.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:52.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876772699
GPR[SPVS]-1659876772699
GPR[SPVAP]-1659876772699
05:52:52.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:53.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876773114
GPR[SPVS]-1659876773114
GPR[SPVAP]-1659876773114
05:52:53.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:53.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876773527
GPR[SPVS]-1659876773527
GPR[SPVAP]-1659876773527
05:52:53.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:53.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876773942
GPR[SPVS]-1659876773942
GPR[SPVAP]-1659876773942
05:52:53.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:54.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876774367
GPR[SPVS]-1659876774367
GPR[SPVAP]-1659876774367
05:52:54.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:52:54.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876774783
GPR[SPVS]-1659876774783
GPR[SPVAP]-1659876774783
05:52:54.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876775223
05:52:55.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:52:55.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876775223
GPR[EPVATF]-1659876775288
GPR[SPVATR]-1659876775288
GPR[EPVATR]-1659876785485
05:53:05.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876785485
GPR[SPVS]-1659876785485
GPR[SPVAP]-1659876785485
05:53:05.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:05.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876785898
GPR[SPVS]-1659876785898
GPR[SPVAP]-1659876785898
05:53:05.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:06.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876786307
GPR[SPVS]-1659876786307
GPR[SPVAP]-1659876786307
05:53:06.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:06.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876786727
GPR[SPVS]-1659876786727
GPR[SPVAP]-1659876786727
05:53:06.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:07.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876787142
GPR[SPVS]-1659876787142
GPR[SPVAP]-1659876787142
05:53:07.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:07.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876787556
GPR[SPVS]-1659876787556
GPR[SPVAP]-1659876787556
05:53:07.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:07.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876787963
GPR[SPVS]-1659876787963
GPR[SPVAP]-1659876787963
05:53:07.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:08.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876788379
GPR[SPVS]-1659876788379
GPR[SPVAP]-1659876788379
05:53:08.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:08.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876788802
GPR[SPVS]-1659876788802
GPR[SPVAP]-1659876788802
05:53:08.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:09.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876789067
GPR[SPVS]-1659876789067
GPR[SPVAP]-1659876789067
05:53:09.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:09.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876789482
GPR[SPVS]-1659876789482
GPR[SPVAP]-1659876789482
05:53:09.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:09.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876789897
GPR[SPVS]-1659876789897
GPR[SPVAP]-1659876789897
05:53:09.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:10.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876790314
GPR[SPVS]-1659876790314
GPR[SPVAP]-1659876790314
05:53:10.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:10.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876790732
GPR[SPVS]-1659876790732
GPR[SPVAP]-1659876790732
05:53:10.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:11.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876791157
GPR[SPVS]-1659876791157
GPR[SPVAP]-1659876791157
05:53:11.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:11.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876791570
GPR[SPVS]-1659876791570
GPR[SPVAP]-1659876791570
05:53:11.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:11.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876791982
GPR[SPVS]-1659876791982
GPR[SPVAP]-1659876791982
05:53:11.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:12.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876792397
GPR[SPVS]-1659876792397
GPR[SPVAP]-1659876792397
05:53:12.398 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:12.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876792814
GPR[SPVS]-1659876792814
GPR[SPVAP]-1659876792814
05:53:12.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:13.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876793228
GPR[SPVS]-1659876793228
GPR[SPVAP]-1659876793228
05:53:16.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:16.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876796951
GPR[SPVS]-1659876796951
GPR[SPVAP]-1659876796951
05:53:16.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:17.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876797368
GPR[SPVS]-1659876797368
GPR[SPVAP]-1659876797368
05:53:17.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:17.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876797778
GPR[SPVS]-1659876797778
GPR[SPVAP]-1659876797778
05:53:17.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:18.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876798192
GPR[SPVS]-1659876798192
GPR[SPVAP]-1659876798192
05:53:18.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:18.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876798607
GPR[SPVS]-1659876798607
GPR[SPVAP]-1659876798607
05:53:18.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:19.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876799017
GPR[SPVS]-1659876799017
GPR[SPVAP]-1659876799017
05:53:19.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:19.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876799432
GPR[SPVS]-1659876799432
GPR[SPVAP]-1659876799432
05:53:19.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:19.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876799848
GPR[SPVS]-1659876799848
GPR[SPVAP]-1659876799848
05:53:19.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:20.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876800263
GPR[SPVS]-1659876800263
GPR[SPVAP]-1659876800263
05:53:20.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:20.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876800680
GPR[SPVESU]-1659876800680
GPR[EPVESU]-1659876800681
GPR[EPVA]-1659876800681
GPR[SPS]-1659876800681
GPR[EPS]-1659876800682
GPR[SPS]-1659876800682
GPR[EPS]-1659876800682
GPR[SPS]-1659876800682
if (this.leftBlock != null) {


}

if (g2 != null) {


}

if (c2 != null) {


}

GPR[EPS]-1659876800682
GPR[SPVA]-1659876800682
GPR[SPVS]-1659876800682
GPR[SPVAP]-1659876800682
05:53:20.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:21.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876801090
GPR[SPVS]-1659876801090
GPR[SPVAP]-1659876801090
05:53:21.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:21.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876801496
GPR[SPVS]-1659876801496
GPR[SPVAP]-1659876801496
05:53:21.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:53:21.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876801909
GPR[SPVESU]-1659876801909
GPR[EPVESU]-1659876801911
GPR[EPVA]-1659876801911
GPR[SPS]-1659876801911
if (this.leftBlock == null) {
    return null;
}

if (this.leftBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.leftBlock);
}

if (g2 == null) {
    return null;
}

if (g2 == null) {
    throw new IllegalArgumentException("Empty variable: " + g2);
}

if (c2 == null) {
    return null;
}

if (c2 == null) {
    throw new IllegalArgumentException("Empty variable: " + c2);
}

GPR[EPS]-1659876801911
GPR[SPVA]-1659876801911
GPR[SPVS]-1659876801911
GPR[SPVAP]-1659876801911
05:53:21.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876802350
05:53:22.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:53:22.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876802350
GPR[EPVATF]-1659876802411
GPR[SPVATR]-1659876802411
GPR[EPVATR]-1659876813575
05:53:33.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876813575
GPR[SPVS]-1659876813575
GPR[SPVAP]-1659876813575
05:53:33.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876814027
05:53:34.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:53:34.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876814027
GPR[EPVATF]-1659876814093
GPR[SPVATR]-1659876814093
GPR[EPVATR]-1659876824588
05:53:44.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876824588
GPR[SPVS]-1659876824588
GPR[SPVAP]-1659876824588
05:53:44.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876825024
05:53:45.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:53:45.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876825024
GPR[EPVATF]-1659876825087
GPR[SPVATR]-1659876825087
GPR[EPVATR]-1659876835233
05:53:55.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876835233
GPR[SPVS]-1659876835233
GPR[SPVAP]-1659876835233
05:53:55.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876835673
05:53:55.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:53:55.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876835673
GPR[EPVATF]-1659876835735
GPR[SPVATR]-1659876835735
GPR[EPVATR]-1659876845891
05:54:05.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876845891
GPR[SPVS]-1659876845891
GPR[SPVAP]-1659876845891
05:54:05.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876846321
05:54:06.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:54:06.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876846321
GPR[EPVATF]-1659876846383
GPR[SPVATR]-1659876846383
GPR[EPVATR]-1659876856522
05:54:16.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876856522
GPR[SPVS]-1659876856522
GPR[SPVAP]-1659876856522
05:54:16.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876856960
05:54:16.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:54:16.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876856960
GPR[EPVATF]-1659876857024
GPR[SPVATR]-1659876857024
GPR[EPVATR]-1659876867330
05:54:27.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876867330
GPR[SPVESU]-1659876867330
GPR[EPVESU]-1659876867332
GPR[EPVA]-1659876867332
GPR[SPS]-1659876867332
GPR[EPS]-1659876867332
GPR[SPS]-1659876867332
clear();
	Size2D size = this.leftBlock.arrange(g2, c2);
Size2D size = this.leftBlock.arrange(g2, c2);
	clear();
GPR[EPS]-1659876867332
GPR[SPVA]-1659876867332
GPR[SPVS]-1659876867332
GPR[SPVAP]-1659876867332
05:54:27.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876867763
05:54:27.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:54:27.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876867763
GPR[EPVATF]-1659876867827
GPR[SPVATR]-1659876867827
GPR[EPVATR]-1659876877967
05:54:37.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876877967
GPR[SPVS]-1659876877967
GPR[SPVAP]-1659876877967
05:54:37.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876878409
05:54:38.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:54:38.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876878409
GPR[EPVATF]-1659876878472
GPR[SPVATR]-1659876878472
GPR[EPVATR]-1659876888762
05:54:48.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876888762
GPR[SPVESU]-1659876888762
GPR[EPVESU]-1659876888763
GPR[EPVA]-1659876888763
GPR[SPS]-1659876888763
GPR[EPS]-1659876888764
GPR[SPS]-1659876888764

GPR[EPS]-1659876888764
GPR[SPVA]-1659876888764
GPR[SPVS]-1659876888764
GPR[SPVAP]-1659876888764
05:54:48.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:54:49.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876889179
GPR[SPVESU]-1659876889179
GPR[EPVESU]-1659876889180
GPR[EPVA]-1659876889180
GPR[ESUN]-1659876889180
GPR[SSUN]-1659876889180
05:54:49.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===295
05:54:49.190 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
GPR[SPS]-1659876889192
if (this.leftBlock == null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
GPR[EPS]-1659876889192
GPR[SPVA]-1659876889192
GPR[SPVS]-1659876889192
GPR[SPVAP]-1659876889192
05:54:49.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876889625
05:54:49.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:54:49.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876889625
GPR[EPVATF]-1659876889688
GPR[SPVATR]-1659876889688
GPR[EPVATR]-1659876899898
05:54:59.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876899898
GPR[SPVESU]-1659876899898
GPR[EPVESU]-1659876899900
GPR[EPVA]-1659876899900
GPR[SPS]-1659876899900
GPR[EPS]-1659876899900
GPR[SPS]-1659876899900
GPR[EPS]-1659876899900
GPR[SPS]-1659876899900
GPR[EPS]-1659876899901
GPR[SPS]-1659876899901
GPR[EPS]-1659876899901
GPR[SPS]-1659876899901
if (this.leftBlock != null) {


}

GPR[EPS]-1659876899901
GPR[SPVA]-1659876899901
GPR[SPVS]-1659876899901
GPR[SPVAP]-1659876899901
05:54:59.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876900344
05:55:00.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:55:00.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876900344
GPR[EPVATF]-1659876900408
GPR[SPVATR]-1659876900408
GPR[EPVATR]-1659876910549
05:55:10.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876910549
GPR[SPVESU]-1659876910549
GPR[EPVESU]-1659876910551
GPR[EPVA]-1659876910551
GPR[SPS]-1659876910551
if (this.leftBlock == null) {
    return null;
}

if (this.leftBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.leftBlock);
}

GPR[EPS]-1659876910551
GPR[SPVA]-1659876910551
GPR[SPVS]-1659876910551
GPR[SPVAP]-1659876910551
05:55:10.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876910990
05:55:10.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:55:10.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876910990
GPR[EPVATF]-1659876911054
GPR[SPVATR]-1659876911054
GPR[EPVATR]-1659876921267
05:55:21.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876921267
GPR[SPVS]-1659876921267
GPR[SPVAP]-1659876921267
05:55:21.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876921708
05:55:21.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:55:21.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876921708
GPR[EPVATF]-1659876921775
GPR[SPVATR]-1659876921775
GPR[EPVATR]-1659876932137
05:55:32.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876932137
GPR[SPVESU]-1659876932137
GPR[EPVESU]-1659876932138
GPR[EPVA]-1659876932138
GPR[SPS]-1659876932138
GPR[EPS]-1659876932139
GPR[SPS]-1659876932139
clear();
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
	clear();
GPR[EPS]-1659876932139
GPR[SPVA]-1659876932139
GPR[SPVS]-1659876932139
GPR[SPVAP]-1659876932139
05:55:32.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876932567
05:55:32.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:55:32.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876932567
GPR[EPVATF]-1659876932632
GPR[SPVATR]-1659876932632
GPR[EPVATR]-1659876942822
05:55:42.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876942822
GPR[SPVS]-1659876942822
GPR[SPVAP]-1659876942822
05:55:42.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876943259
05:55:43.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:55:43.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876943259
GPR[EPVATF]-1659876943323
GPR[SPVATR]-1659876943323
GPR[EPVATR]-1659876953832
05:55:53.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876953832
GPR[SPVESU]-1659876953832
GPR[EPVESU]-1659876953833
GPR[EPVA]-1659876953833
GPR[SPS]-1659876953833
if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
	double[] w = new double[5];
        double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        
null
if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
	double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        
null
if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
	RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        
null
if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        
null
if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        
null
if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
	RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        
null

        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
        return arrange(container, g2, new RectangleConstraint(width, height));
	if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659876953833
GPR[SPVA]-1659876953833
GPR[SPVS]-1659876953833
GPR[SPVAP]-1659876953833
05:55:53.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:55:54.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876954251
GPR[SPVS]-1659876954251
GPR[SPVAP]-1659876954251
05:55:54.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:55:54.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876954663
GPR[SPVS]-1659876954663
GPR[SPVAP]-1659876954663
05:55:54.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:55:55.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876955078
GPR[SPVS]-1659876955078
GPR[SPVAP]-1659876955078
05:55:55.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:55:55.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876955498
GPR[SPVS]-1659876955498
GPR[SPVAP]-1659876955498
05:55:55.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:55:55.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876955918
GPR[SPVS]-1659876955918
GPR[SPVAP]-1659876955918
05:55:55.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:55:56.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659876956342
GPR[SPVS]-1659876956342
GPR[SPVAP]-1659876956342
05:55:56.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876956782
05:55:56.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:55:56.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876956782
GPR[EPVATF]-1659876956848
GPR[SPVATR]-1659876956848
GPR[EPVATR]-1659876967323
05:56:07.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876967323
GPR[SPVS]-1659876967323
GPR[SPVAP]-1659876967323
05:56:07.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876967782
05:56:07.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:56:07.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876967783
GPR[EPVATF]-1659876967844
GPR[SPVATR]-1659876967844
GPR[EPVATR]-1659876978112
05:56:18.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876978112
GPR[SPVS]-1659876978112
GPR[SPVAP]-1659876978112
05:56:18.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876978547
05:56:18.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:56:18.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876978547
GPR[EPVATF]-1659876978611
GPR[SPVATR]-1659876978611
GPR[EPVATR]-1659876988723
05:56:28.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876988723
GPR[SPVS]-1659876988723
GPR[SPVAP]-1659876988723
05:56:28.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876989161
05:56:29.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:56:29.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876989161
GPR[EPVATF]-1659876989224
GPR[SPVATR]-1659876989224
GPR[EPVATR]-1659876999479
05:56:39.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659876999479
GPR[SPVS]-1659876999479
GPR[SPVAP]-1659876999479
05:56:39.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659876999912
05:56:39.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:56:39.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659876999912
GPR[EPVATF]-1659876999976
GPR[SPVATR]-1659876999976
GPR[EPVATR]-1659877011438
05:56:51.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877011439
GPR[SPVS]-1659877011439
GPR[SPVAP]-1659877011439
05:56:51.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:56:51.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877011882
GPR[SPVESU]-1659877011882
GPR[EPVESU]-1659877011883
GPR[EPVA]-1659877011883
GPR[SPS]-1659877011883

GPR[EPS]-1659877011883
GPR[SPVA]-1659877011883
GPR[SPVS]-1659877011883
GPR[SPVAP]-1659877011883
05:56:51.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877012321
05:56:52.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:56:52.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877012321
GPR[EPVATF]-1659877012384
GPR[SPVATR]-1659877012384
GPR[EPVATR]-1659877022441
05:57:02.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877022441
GPR[SPVESU]-1659877022441
GPR[EPVESU]-1659877022442
GPR[EPVA]-1659877022442
GPR[ESUN]-1659877022442
GPR[SSUN]-1659877022442
05:57:02.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===292
05:57:02.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
GPR[SPS]-1659877022452
GPR[EPS]-1659877022452
GPR[SPS]-1659877022452
GPR[EPS]-1659877022452
GPR[SPS]-1659877022453
GPR[EPS]-1659877022453
GPR[SPS]-1659877022453
GPR[EPS]-1659877022453
GPR[SPS]-1659877022453
GPR[EPS]-1659877022453
GPR[SPS]-1659877022453
GPR[EPS]-1659877022453
GPR[SPS]-1659877022453
GPR[EPS]-1659877022453
GPR[SPS]-1659877022453
GPR[EPS]-1659877022454
GPR[SPS]-1659877022454
clear();
	RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
	clear();
GPR[EPS]-1659877022454
GPR[SPVA]-1659877022454
GPR[SPVS]-1659877022454
GPR[SPVAP]-1659877022454
05:57:02.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877022887
05:57:02.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:57:02.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877022887
GPR[EPVATF]-1659877022951
GPR[SPVATR]-1659877022951
GPR[EPVATR]-1659877033153
05:57:13.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877033153
GPR[SPVS]-1659877033153
GPR[SPVAP]-1659877033153
05:57:13.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877033586
05:57:13.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:57:13.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877033586
GPR[EPVATF]-1659877033648
GPR[SPVATR]-1659877033648
GPR[EPVATR]-1659877044080
05:57:24.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877044080
GPR[SPVESU]-1659877044080
GPR[EPVESU]-1659877044082
GPR[EPVA]-1659877044082
GPR[SPS]-1659877044082
GPR[EPS]-1659877044082
GPR[SPS]-1659877044082

GPR[EPS]-1659877044082
GPR[SPVA]-1659877044082
GPR[SPVS]-1659877044082
GPR[SPVAP]-1659877044082
05:57:24.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:57:24.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877044494
GPR[SPVESU]-1659877044494
GPR[EPVESU]-1659877044496
GPR[EPVA]-1659877044496
GPR[ESUN]-1659877044496
GPR[SSUN]-1659877044496
05:57:24.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===287
05:57:24.505 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
GPR[SPS]-1659877044507
if (this.bottomBlock == null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
GPR[EPS]-1659877044507
GPR[SPVA]-1659877044507
GPR[SPVS]-1659877044507
GPR[SPVAP]-1659877044507
05:57:24.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877044942
05:57:24.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:57:24.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877044942
GPR[EPVATF]-1659877045004
GPR[SPVATR]-1659877045004
GPR[EPVATR]-1659877055087
05:57:35.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877055087
GPR[SPVESU]-1659877055087
GPR[EPVESU]-1659877055088
GPR[EPVA]-1659877055088
GPR[SPS]-1659877055088
GPR[EPS]-1659877055088
GPR[SPS]-1659877055088
GPR[EPS]-1659877055088
GPR[SPS]-1659877055088
GPR[EPS]-1659877055089
GPR[SPS]-1659877055089
GPR[EPS]-1659877055089
GPR[SPS]-1659877055089
if (this.bottomBlock != null) {


}

GPR[EPS]-1659877055089
GPR[SPVA]-1659877055089
GPR[SPVS]-1659877055089
GPR[SPVAP]-1659877055089
05:57:35.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877055523
05:57:35.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:57:35.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877055523
GPR[EPVATF]-1659877055588
GPR[SPVATR]-1659877055589
GPR[EPVATR]-1659877065642
05:57:45.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877065642
GPR[SPVESU]-1659877065642
GPR[EPVESU]-1659877065644
GPR[EPVA]-1659877065644
GPR[SPS]-1659877065644
if (this.bottomBlock == null) {
    return null;
}

if (this.bottomBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.bottomBlock);
}

GPR[EPS]-1659877065644
GPR[SPVA]-1659877065644
GPR[SPVS]-1659877065644
GPR[SPVAP]-1659877065644
05:57:45.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877066075
05:57:46.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:57:46.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877066075
GPR[EPVATF]-1659877066139
GPR[SPVATR]-1659877066139
GPR[EPVATR]-1659877076331
05:57:56.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877076331
GPR[SPVS]-1659877076331
GPR[SPVAP]-1659877076331
05:57:56.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877076771
05:57:56.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:57:56.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877076771
GPR[EPVATF]-1659877076835
GPR[SPVATR]-1659877076835
GPR[EPVATR]-1659877086933
05:58:06.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877086933
GPR[SPVESU]-1659877086933
GPR[EPVESU]-1659877086934
GPR[EPVA]-1659877086934
GPR[SPS]-1659877086934
GPR[EPS]-1659877086934
GPR[SPS]-1659877086934
clear();
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
	clear();
GPR[EPS]-1659877086934
GPR[SPVA]-1659877086934
GPR[SPVS]-1659877086934
GPR[SPVAP]-1659877086934
05:58:06.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877087371
05:58:07.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:58:07.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877087371
GPR[EPVATF]-1659877087435
GPR[SPVATR]-1659877087435
GPR[EPVATR]-1659877097830
05:58:17.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877097830
GPR[SPVS]-1659877097830
GPR[SPVAP]-1659877097830
05:58:17.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877098259
05:58:18.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:58:18.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877098259
GPR[EPVATF]-1659877098323
GPR[SPVATR]-1659877098323
GPR[EPVATR]-1659877108438
05:58:28.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877108438
GPR[SPVESU]-1659877108438
GPR[EPVESU]-1659877108439
GPR[EPVA]-1659877108439
GPR[SPS]-1659877108439
if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
	double[] w = new double[5];
        double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        
null
if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
	double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        
null
if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
	RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        
null
if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
        
null

        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT

        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
        return arrange(container, g2, new RectangleConstraint(width, height));
	if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659877108439
GPR[SPVA]-1659877108439
GPR[SPVS]-1659877108439
GPR[SPVAP]-1659877108439
05:58:28.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:58:28.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877108855
GPR[SPVS]-1659877108855
GPR[SPVAP]-1659877108855
05:58:28.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:58:29.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877109267
GPR[SPVS]-1659877109267
GPR[SPVAP]-1659877109267
05:58:29.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:58:29.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877109683
GPR[SPVS]-1659877109683
GPR[SPVAP]-1659877109683
05:58:29.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877110116
05:58:30.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:58:30.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877110116
GPR[EPVATF]-1659877110181
GPR[SPVATR]-1659877110181
GPR[EPVATR]-1659877120328
05:58:40.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877120328
GPR[SPVS]-1659877120328
GPR[SPVAP]-1659877120328
05:58:40.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877120765
05:58:40.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:58:40.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877120765
GPR[EPVATF]-1659877120828
GPR[SPVATR]-1659877120828
GPR[EPVATR]-1659877131549
05:58:51.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877131550
GPR[SPVS]-1659877131550
GPR[SPVAP]-1659877131550
05:58:51.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877131991
05:58:51.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:58:51.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877131991
GPR[EPVATF]-1659877132055
GPR[SPVATR]-1659877132055
GPR[EPVATR]-1659877142383
05:59:02.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877142383
GPR[SPVS]-1659877142383
GPR[SPVAP]-1659877142383
05:59:02.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877142820
05:59:02.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:59:02.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877142820
GPR[EPVATF]-1659877142883
GPR[SPVATR]-1659877142883
GPR[EPVATR]-1659877153012
05:59:13.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877153012
GPR[SPVS]-1659877153012
GPR[SPVAP]-1659877153012
05:59:13.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877153452
05:59:13.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:59:13.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877153452
GPR[EPVATF]-1659877153516
GPR[SPVATR]-1659877153516
GPR[EPVATR]-1659877163667
05:59:23.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877163667
GPR[SPVS]-1659877163667
GPR[SPVAP]-1659877163667
05:59:23.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877164099
05:59:24.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:59:24.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877164099
GPR[EPVATF]-1659877164164
GPR[SPVATR]-1659877164164
GPR[EPVATR]-1659877174294
05:59:34.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877174294
GPR[SPVS]-1659877174294
GPR[SPVAP]-1659877174294
05:59:34.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877174726
05:59:34.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:59:34.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877174726
GPR[EPVATF]-1659877174788
GPR[SPVATR]-1659877174788
GPR[EPVATR]-1659877185008
05:59:45.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877185008
GPR[SPVS]-1659877185008
GPR[SPVAP]-1659877185008
05:59:45.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877185450
05:59:45.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:59:45.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877185450
GPR[EPVATF]-1659877185516
GPR[SPVATR]-1659877185516
GPR[EPVATR]-1659877197179
05:59:57.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877197179
GPR[SPVS]-1659877197179
GPR[SPVAP]-1659877197179
05:59:57.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
05:59:57.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877197590
GPR[SPVESU]-1659877197590
GPR[EPVESU]-1659877197592
GPR[EPVA]-1659877197592
GPR[SPS]-1659877197592

GPR[EPS]-1659877197592
GPR[SPVA]-1659877197592
GPR[SPVS]-1659877197592
GPR[SPVAP]-1659877197592
05:59:57.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877198027
05:59:58.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
05:59:58.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877198027
GPR[EPVATF]-1659877198092
GPR[SPVATR]-1659877198092
GPR[EPVATR]-1659877208378
06:00:08.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877208378
GPR[SPVESU]-1659877208378
GPR[EPVESU]-1659877208380
GPR[EPVA]-1659877208380
GPR[ESUN]-1659877208380
GPR[SSUN]-1659877208380
06:00:08.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===282
06:00:08.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
GPR[SPS]-1659877208389
if (this.topBlock == null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
GPR[EPS]-1659877208389
GPR[SPVA]-1659877208389
GPR[SPVS]-1659877208389
GPR[SPVAP]-1659877208389
06:00:08.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877208828
06:00:08.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:00:08.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877208828
GPR[EPVATF]-1659877208892
GPR[SPVATR]-1659877208892
GPR[EPVATR]-1659877219178
06:00:19.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877219178
GPR[SPVESU]-1659877219178
GPR[EPVESU]-1659877219180
GPR[EPVA]-1659877219180
GPR[SPS]-1659877219180
GPR[EPS]-1659877219180
GPR[SPS]-1659877219180
GPR[EPS]-1659877219181
GPR[SPS]-1659877219181
GPR[EPS]-1659877219181
GPR[SPS]-1659877219181
GPR[EPS]-1659877219181
GPR[SPS]-1659877219181
if (this.topBlock != null) {


}

GPR[EPS]-1659877219181
GPR[SPVA]-1659877219181
GPR[SPVS]-1659877219181
GPR[SPVAP]-1659877219181
06:00:19.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877219615
06:00:19.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:00:19.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877219615
GPR[EPVATF]-1659877219680
GPR[SPVATR]-1659877219680
GPR[EPVATR]-1659877230003
06:00:30.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877230003
GPR[SPVESU]-1659877230003
GPR[EPVESU]-1659877230005
GPR[EPVA]-1659877230005
GPR[SPS]-1659877230005
if (this.topBlock == null) {
    return null;
}

if (this.topBlock == null) {
    throw new IllegalArgumentException("Empty variable: " + this.topBlock);
}

GPR[EPS]-1659877230005
GPR[SPVA]-1659877230005
GPR[SPVS]-1659877230005
GPR[SPVAP]-1659877230005
06:00:30.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877230445
06:00:30.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:00:30.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877230445
GPR[EPVATF]-1659877230508
GPR[SPVATR]-1659877230508
GPR[EPVATR]-1659877240760
06:00:40.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877240760
GPR[SPVS]-1659877240760
GPR[SPVAP]-1659877240760
06:00:40.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877241199
06:00:41.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:00:41.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877241199
GPR[EPVATF]-1659877241259
GPR[SPVATR]-1659877241259
GPR[EPVATR]-1659877251340
06:00:51.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877251340
GPR[SPVESU]-1659877251340
GPR[EPVESU]-1659877251342
GPR[EPVA]-1659877251342
GPR[SPS]-1659877251342
GPR[EPS]-1659877251342
GPR[SPS]-1659877251342
clear();
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
	clear();
GPR[EPS]-1659877251343
GPR[SPVA]-1659877251343
GPR[SPVS]-1659877251343
GPR[SPVAP]-1659877251343
06:00:51.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877251785
06:00:51.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:00:51.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877251785
GPR[EPVATF]-1659877251848
GPR[SPVATR]-1659877251848
GPR[EPVATR]-1659877262190
06:01:02.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877262190
GPR[SPVS]-1659877262190
GPR[SPVAP]-1659877262190
06:01:02.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877262624
06:01:02.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:01:02.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877262624
GPR[EPVATF]-1659877262688
GPR[SPVATR]-1659877262688
GPR[EPVATR]-1659877272797
06:01:12.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877272797
GPR[SPVESU]-1659877272797
GPR[EPVESU]-1659877272799
GPR[EPVA]-1659877272799
GPR[SPS]-1659877272799
if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
	double[] w = new double[5];
        double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        
null
if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
	double[] h = new double[5];
        RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        
null
if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }
	RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
        
null

        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT

        if (this.bottomBlock != null) {
            Size2D size = this.bottomBlock.arrange(g2, c1);
            w[1] = size.width;
            h[1] = size.height;
        }
        RectangleConstraint c2 = new RectangleConstraint(0.0,
                new Range(0.0, width), LengthConstraintType.RANGE,
                0.0, null, LengthConstraintType.NONE);
        if (this.leftBlock != null) {
            Size2D size = this.leftBlock.arrange(g2, c2);
            w[2] = size.width;
            h[2] = size.height;
        }
        if (this.rightBlock != null) {
            double maxW = Math.max(width - w[2], 0.0);
            RectangleConstraint c3 = new RectangleConstraint(0.0,
                    new Range(Math.min(w[2], maxW), maxW),
                    LengthConstraintType.RANGE, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.rightBlock.arrange(g2, c3);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
            RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                    - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                    LengthConstraintType.NONE);
            Size2D size = this.centerBlock.arrange(g2, c4);
            w[4] = size.width;
            h[4] = size.height;
        }
        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
        return arrange(container, g2, new RectangleConstraint(width, height));
	if (this.topBlock != null) {
            Size2D size = this.topBlock.arrange(g2, c1);
            w[0] = size.width;
            h[0] = size.height;
        }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659877272799
GPR[SPVA]-1659877272799
GPR[SPVS]-1659877272799
GPR[SPVAP]-1659877272799
06:01:12.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:01:13.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877273211
GPR[SPVS]-1659877273211
GPR[SPVAP]-1659877273211
06:01:13.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:01:13.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877273622
GPR[SPVS]-1659877273622
GPR[SPVAP]-1659877273622
06:01:13.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:01:14.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877274028
GPR[SPVS]-1659877274028
GPR[SPVAP]-1659877274028
06:01:14.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877274458
06:01:14.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:01:14.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877274458
GPR[EPVATF]-1659877274520
GPR[SPVATR]-1659877274520
GPR[EPVATR]-1659877284578
06:01:24.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877284578
GPR[SPVS]-1659877284578
GPR[SPVAP]-1659877284578
06:01:24.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877285013
06:01:25.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:01:25.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877285013
GPR[EPVATF]-1659877285076
GPR[SPVATR]-1659877285076
GPR[EPVATR]-1659877295477
06:01:35.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877295477
GPR[SPVS]-1659877295477
GPR[SPVAP]-1659877295477
06:01:35.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877295911
06:01:35.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:01:35.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877295912
GPR[EPVATF]-1659877295976
GPR[SPVATR]-1659877295976
GPR[EPVATR]-1659877306295
06:01:46.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877306295
GPR[SPVS]-1659877306295
GPR[SPVAP]-1659877306295
06:01:46.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877306728
06:01:46.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:01:46.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877306729
GPR[EPVATF]-1659877306793
GPR[SPVATR]-1659877306793
GPR[EPVATR]-1659877317025
06:01:57.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877317025
GPR[SPVS]-1659877317025
GPR[SPVAP]-1659877317025
06:01:57.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877317461
06:01:57.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:01:57.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877317461
GPR[EPVATF]-1659877317524
GPR[SPVATR]-1659877317524
GPR[EPVATR]-1659877327896
06:02:07.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877327896
GPR[SPVS]-1659877327896
GPR[SPVAP]-1659877327896
06:02:07.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877328330
06:02:08.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:02:08.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877328330
GPR[EPVATF]-1659877328396
GPR[SPVATR]-1659877328396
GPR[EPVATR]-1659877338637
06:02:18.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877338637
GPR[SPVS]-1659877338637
GPR[SPVAP]-1659877338637
06:02:18.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877339075
06:02:19.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:02:19.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877339075
GPR[EPVATF]-1659877339140
GPR[SPVATR]-1659877339140
GPR[EPVATR]-1659877349349
06:02:29.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877349349
GPR[SPVS]-1659877349349
GPR[SPVAP]-1659877349349
06:02:29.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877349774
06:02:29.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:02:29.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877349774
GPR[EPVATF]-1659877349840
GPR[SPVATR]-1659877349840
GPR[EPVATR]-1659877359858
06:02:39.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877359858
GPR[SPVS]-1659877359858
GPR[SPVAP]-1659877359858
06:02:39.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:02:40.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877360268
GPR[SPVESU]-1659877360268
GPR[EPVESU]-1659877360269
GPR[EPVA]-1659877360269
GPR[SPS]-1659877360269

GPR[EPS]-1659877360269
GPR[SPVA]-1659877360269
GPR[SPVS]-1659877360269
GPR[SPVAP]-1659877360269
06:02:40.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877360707
06:02:40.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:02:40.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877360707
GPR[EPVATF]-1659877360773
GPR[SPVATR]-1659877360773
GPR[EPVATR]-1659877371010
06:02:51.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877371010
GPR[SPVESU]-1659877371010
GPR[EPVESU]-1659877371012
GPR[EPVA]-1659877371012
GPR[ESUN]-1659877371012
GPR[SSUN]-1659877371012
06:02:51.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===279
06:02:51.021 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
GPR[SPS]-1659877371023
GPR[EPS]-1659877371023
GPR[SPS]-1659877371023
GPR[EPS]-1659877371023
GPR[SPS]-1659877371023
GPR[EPS]-1659877371023
GPR[SPS]-1659877371023
GPR[EPS]-1659877371023
GPR[SPS]-1659877371023
GPR[EPS]-1659877371024
GPR[SPS]-1659877371024
GPR[EPS]-1659877371024
GPR[SPS]-1659877371024
GPR[EPS]-1659877371024
GPR[SPS]-1659877371024
GPR[EPS]-1659877371024
GPR[SPS]-1659877371024
clear();
	RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
RectangleConstraint c1 = new RectangleConstraint(width, null,
                LengthConstraintType.FIXED, 0.0, null,
                LengthConstraintType.NONE);
	clear();
GPR[EPS]-1659877371024
GPR[SPVA]-1659877371024
GPR[SPVS]-1659877371024
GPR[SPVAP]-1659877371024
06:02:51.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877371462
06:02:51.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:02:51.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877371462
GPR[EPVATF]-1659877371525
GPR[SPVATR]-1659877371525
GPR[EPVATR]-1659877382966
06:03:02.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877382966
GPR[SPVS]-1659877382966
GPR[SPVAP]-1659877382966
06:03:02.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877383403
06:03:03.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:03:03.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877383403
GPR[EPVATF]-1659877383467
GPR[SPVATR]-1659877383467
GPR[EPVATR]-1659877393730
06:03:13.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877393730
GPR[SPVESU]-1659877393730
GPR[EPVESU]-1659877393732
GPR[EPVA]-1659877393732
GPR[SPS]-1659877393732
GPR[EPS]-1659877393732
GPR[SPS]-1659877393732

GPR[EPS]-1659877393732
GPR[SPVA]-1659877393732
GPR[SPVS]-1659877393732
GPR[SPVAP]-1659877393732
06:03:13.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:03:14.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877394153
GPR[SPVESU]-1659877394153
GPR[EPVESU]-1659877394155
GPR[EPVA]-1659877394155
GPR[ESUN]-1659877394155
GPR[SSUN]-1659877394155
06:03:14.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===278
06:03:14.163 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
double[] h = new double[5];
GPR[SPS]-1659877394164
GPR[EPS]-1659877394165
GPR[SPS]-1659877394165
GPR[EPS]-1659877394165
GPR[SPS]-1659877394165
GPR[EPS]-1659877394165
GPR[SPS]-1659877394165
GPR[EPS]-1659877394165
GPR[SPS]-1659877394165
GPR[EPS]-1659877394165
GPR[SPS]-1659877394165
GPR[EPS]-1659877394165
GPR[SPS]-1659877394165
GPR[EPS]-1659877394165
GPR[SPS]-1659877394165
GPR[EPS]-1659877394165
GPR[SPS]-1659877394165
clear();
	double[] h = new double[5];
double[] h = new double[5];
	clear();
GPR[EPS]-1659877394165
GPR[SPVA]-1659877394165
GPR[SPVS]-1659877394165
GPR[SPVAP]-1659877394165
06:03:14.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877394602
06:03:14.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:03:14.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877394602
GPR[EPVATF]-1659877394664
GPR[SPVATR]-1659877394664
GPR[EPVATR]-1659877404813
06:03:24.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877404813
GPR[SPVS]-1659877404813
GPR[SPVAP]-1659877404813
06:03:24.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877405250
06:03:25.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:03:25.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877405250
GPR[EPVATF]-1659877405312
GPR[SPVATR]-1659877405312
GPR[EPVATR]-1659877415701
06:03:35.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877415701
GPR[SPVESU]-1659877415701
GPR[EPVESU]-1659877415703
GPR[EPVA]-1659877415703
GPR[SPS]-1659877415703
GPR[EPS]-1659877415703
GPR[SPS]-1659877415703

GPR[EPS]-1659877415703
GPR[SPVA]-1659877415703
GPR[SPVS]-1659877415703
GPR[SPVAP]-1659877415703
06:03:35.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:03:36.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877416134
GPR[SPVESU]-1659877416134
GPR[EPVESU]-1659877416135
GPR[EPVA]-1659877416135
GPR[ESUN]-1659877416135
GPR[SSUN]-1659877416135
06:03:36.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===277
06:03:36.145 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
double[] w = new double[5];
GPR[SPS]-1659877416146
GPR[EPS]-1659877416146
GPR[SPS]-1659877416146
GPR[EPS]-1659877416146
GPR[SPS]-1659877416146
GPR[EPS]-1659877416146
GPR[SPS]-1659877416146
GPR[EPS]-1659877416146
GPR[SPS]-1659877416146
GPR[EPS]-1659877416146
GPR[SPS]-1659877416146
GPR[EPS]-1659877416146
GPR[SPS]-1659877416146
GPR[EPS]-1659877416147
GPR[SPS]-1659877416147
GPR[EPS]-1659877416147
GPR[SPS]-1659877416147
clear();
	double[] w = new double[5];
double[] w = new double[5];
	clear();
GPR[EPS]-1659877416147
GPR[SPVA]-1659877416147
GPR[SPVS]-1659877416147
GPR[SPVAP]-1659877416147
06:03:36.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877416579
06:03:36.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:03:36.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877416580
GPR[EPVATF]-1659877416645
GPR[SPVATR]-1659877416645
GPR[EPVATR]-1659877426814
06:03:46.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877426815
GPR[SPVS]-1659877426815
GPR[SPVAP]-1659877426815
06:03:46.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877427253
06:03:47.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:03:47.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877427253
GPR[EPVATF]-1659877427318
GPR[SPVATR]-1659877427318
GPR[EPVATR]-1659877437456
06:03:57.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877437456
GPR[SPVESU]-1659877437457
GPR[EPVESU]-1659877437459
GPR[EPVA]-1659877437459
GPR[SPS]-1659877437459
GPR[EPS]-1659877437459
GPR[SPS]-1659877437459

GPR[EPS]-1659877437459
GPR[SPVA]-1659877437459
GPR[SPVS]-1659877437459
GPR[SPVAP]-1659877437459
06:03:57.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:03:57.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877437882
GPR[SPVESU]-1659877437882
GPR[EPVESU]-1659877437883
GPR[EPVA]-1659877437883
GPR[ESUN]-1659877437883
GPR[SSUN]-1659877437883
06:03:57.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===152
06:03:57.893 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
contentSize = arrangeFF(container, g2, constraint);
GPR[SPS]-1659877437894
contentSize = arrangeFF(true, container, g2, constraint);
contentSize = arrangeFF(false, container, g2, constraint);
contentSize = arrangeFF(container, true, g2, constraint);
contentSize = arrangeFF(container, false, g2, constraint);
contentSize = arrangeFF(container, g2, true, constraint);
contentSize = arrangeFF(container, g2, false, constraint);
contentSize = arrangeFF(container, g2, constraint, true);
contentSize = arrangeFF(container, g2, constraint, false);
GPR[EPS]-1659877437894
GPR[SPVA]-1659877437894
GPR[SPVS]-1659877437894
GPR[SPVAP]-1659877437895
06:03:57.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:03:58.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877438314
GPR[SPVS]-1659877438314
GPR[SPVAP]-1659877438314
06:03:58.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:03:58.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877438724
GPR[SPVS]-1659877438724
GPR[SPVAP]-1659877438724
06:03:58.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:03:59.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877439131
GPR[SPVS]-1659877439131
GPR[SPVAP]-1659877439131
06:03:59.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:03:59.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877439545
GPR[SPVS]-1659877439545
GPR[SPVAP]-1659877439545
06:03:59.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:03:59.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877439958
GPR[SPVS]-1659877439958
GPR[SPVAP]-1659877439958
06:03:59.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:04:00.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877440378
GPR[SPVS]-1659877440378
GPR[SPVAP]-1659877440378
06:04:00.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:04:00.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877440790
GPR[SPVS]-1659877440790
GPR[SPVAP]-1659877440790
06:04:00.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:04:01.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877441223
GPR[SPVESU]-1659877441223
GPR[EPVESU]-1659877441225
GPR[EPVA]-1659877441225
GPR[SPS]-1659877441225
GPR[EPS]-1659877441226
GPR[SPS]-1659877441226
GPR[EPS]-1659877441226
GPR[SPS]-1659877441226
GPR[EPS]-1659877441226
GPR[SPS]-1659877441226
contentSize = arrange(container, g2, constraint);
contentSize = arrangeFR(container, g2, constraint);
GPR[EPS]-1659877441226
GPR[SPVA]-1659877441226
GPR[SPVS]-1659877441226
GPR[SPVAP]-1659877441226
06:04:01.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877441662
06:04:01.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:04:01.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877441662
GPR[EPVATF]-1659877441723
GPR[SPVATR]-1659877441723
GPR[EPVATR]-1659877452008
06:04:12.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877452008
GPR[SPVS]-1659877452008
GPR[SPVAP]-1659877452008
06:04:12.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877452457
06:04:12.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:04:12.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877452457
GPR[EPVATF]-1659877452520
GPR[SPVATR]-1659877452520
GPR[EPVATR]-1659877462847
06:04:22.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877462847
GPR[SPVESU]-1659877462847
GPR[EPVESU]-1659877462849
GPR[EPVA]-1659877462849
GPR[SPS]-1659877462849
if (container != null) {


}

if (g2 != null) {


}

if (constraint != null) {


}

GPR[EPS]-1659877462849
GPR[SPVA]-1659877462849
GPR[SPVS]-1659877462849
GPR[SPVAP]-1659877462849
06:04:22.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877463287
06:04:23.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:04:23.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877463287
GPR[EPVATF]-1659877463351
GPR[SPVATR]-1659877463351
GPR[EPVATR]-1659877473533
06:04:33.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877473533
GPR[SPVS]-1659877473533
GPR[SPVAP]-1659877473533
06:04:33.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877473977
06:04:33.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:04:33.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877473977
GPR[EPVATF]-1659877474044
GPR[SPVATR]-1659877474044
GPR[EPVATR]-1659877484188
06:04:44.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877484188
GPR[SPVS]-1659877484188
GPR[SPVAP]-1659877484188
06:04:44.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877484623
06:04:44.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:04:44.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877484623
GPR[EPVATF]-1659877484694
GPR[SPVATR]-1659877484694
GPR[EPVATR]-1659877494982
06:04:54.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877494982
GPR[SPVESU]-1659877494982
GPR[EPVESU]-1659877494984
GPR[EPVA]-1659877494984
GPR[SPS]-1659877494984
if (container == null) {
    return null;
}

if (container == null) {
    throw new IllegalArgumentException("Empty variable: " + container);
}

if (g2 == null) {
    return null;
}

if (g2 == null) {
    throw new IllegalArgumentException("Empty variable: " + g2);
}

if (constraint == null) {
    return null;
}

if (constraint == null) {
    throw new IllegalArgumentException("Empty variable: " + constraint);
}

GPR[EPS]-1659877494984
GPR[SPVA]-1659877494984
GPR[SPVS]-1659877494984
GPR[SPVAP]-1659877494984
06:04:54.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877495417
06:04:55.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:04:55.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877495417
GPR[EPVATF]-1659877495481
GPR[SPVATR]-1659877495481
GPR[EPVATR]-1659877505723
06:05:05.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877505723
GPR[SPVS]-1659877505723
GPR[SPVAP]-1659877505723
06:05:05.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877506165
06:05:06.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:05:06.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877506165
GPR[EPVATF]-1659877506230
GPR[SPVATR]-1659877506230
GPR[EPVATR]-1659877516574
06:05:16.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877516574
GPR[SPVS]-1659877516574
GPR[SPVAP]-1659877516574
06:05:16.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877517012
06:05:17.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:05:17.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877517012
GPR[EPVATF]-1659877517075
GPR[SPVATR]-1659877517075
GPR[EPVATR]-1659877527256
06:05:27.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877527256
GPR[SPVS]-1659877527256
GPR[SPVAP]-1659877527256
06:05:27.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877527697
06:05:27.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:05:27.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877527697
GPR[EPVATF]-1659877527761
GPR[SPVATR]-1659877527761
GPR[EPVATR]-1659877537966
06:05:37.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877537966
GPR[SPVS]-1659877537966
GPR[SPVAP]-1659877537966
06:05:37.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877538397
06:05:38.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:05:38.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877538397
GPR[EPVATF]-1659877538460
GPR[SPVATR]-1659877538460
GPR[EPVATR]-1659877549741
06:05:49.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877549741
GPR[SPVS]-1659877549741
GPR[SPVAP]-1659877549741
06:05:49.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877550175
06:05:50.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:05:50.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877550175
GPR[EPVATF]-1659877550240
GPR[SPVATR]-1659877550240
GPR[EPVATR]-1659877560355
06:06:00.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877560355
GPR[SPVESU]-1659877560355
GPR[EPVESU]-1659877560357
GPR[EPVA]-1659877560357
GPR[SPS]-1659877560357
GPR[EPS]-1659877560357
GPR[SPS]-1659877560357
clear();
	contentSize = arrangeFF(container, g2, constraint);
contentSize = arrangeFF(container, g2, constraint);
	clear();
GPR[EPS]-1659877560358
GPR[SPVA]-1659877560358
GPR[SPVS]-1659877560358
GPR[SPVAP]-1659877560358
06:06:00.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877560792
06:06:00.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:06:00.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877560792
GPR[EPVATF]-1659877560857
GPR[SPVATR]-1659877560857
GPR[EPVATR]-1659877571031
06:06:11.031 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659877571042
GPR[EPVS]-1659877571043
GPR[SPVS]-1659877571043
GPR[SPVAP]-1659877571043
06:06:11.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877571477
06:06:11.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:06:11.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877571477
GPR[EPVATF]-1659877571539
GPR[SPVATR]-1659877571540
GPR[EPVATR]-1659877581595
06:06:21.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877581595
GPR[SPVESU]-1659877581595
GPR[EPVESU]-1659877581597
GPR[EPVA]-1659877581597
GPR[SPS]-1659877581597

            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
	contentSize = arrangeFF(container, g2, constraint);

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659877581597
GPR[SPVA]-1659877581597
GPR[SPVS]-1659877581597
GPR[SPVAP]-1659877581597
06:06:21.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877582034
06:06:22.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:06:22.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877582034
GPR[EPVATF]-1659877582097
GPR[SPVATR]-1659877582097
GPR[EPVATR]-1659877592234
06:06:32.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877592234
GPR[SPVESU]-1659877592234
GPR[EPVESU]-1659877592235
GPR[EPVA]-1659877592235
GPR[SPS]-1659877592235

GPR[EPS]-1659877592235
GPR[SPVA]-1659877592235
GPR[SPVS]-1659877592235
GPR[SPVAP]-1659877592235
06:06:32.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877592674
06:06:32.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:06:32.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877592674
GPR[EPVATF]-1659877592736
GPR[SPVATR]-1659877592736
GPR[EPVATR]-1659877602802
06:06:42.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877602802
GPR[SPVESU]-1659877602802
GPR[EPVESU]-1659877602803
GPR[EPVA]-1659877602803
GPR[ESUN]-1659877602803
GPR[SSUN]-1659877602803
06:06:42.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===151
06:06:42.812 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
GPR[SPS]-1659877602813
if (h != LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
GPR[EPS]-1659877602814
GPR[SPVA]-1659877602814
GPR[SPVS]-1659877602814
GPR[SPVAP]-1659877602814
06:06:42.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877603246
06:06:43.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:06:43.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877603246
GPR[EPVATF]-1659877603311
GPR[SPVATR]-1659877603311
GPR[EPVATR]-1659877613493
06:06:53.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877613493
GPR[SPVESU]-1659877613493
GPR[EPVESU]-1659877613495
GPR[EPVA]-1659877613495
GPR[SPS]-1659877613495
GPR[EPS]-1659877613496
GPR[SPS]-1659877613496
GPR[EPS]-1659877613496
GPR[SPS]-1659877613496
if (w == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (constraint.getWidthRange() == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (contentSize.getHeight() == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (contentConstraint.getWidthConstraintType() == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (size1.getHeight() == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (contentConstraint.getHeightConstraintType() == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (contentSize.getWidth() == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (constraint.getWidth() == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (constraint.getHeightRange() == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (constraint.getHeight() == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleEdge.BOTTOM == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (size.width == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleEdge.LEFT == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.bottomBlock == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.rightBlock == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleEdge.RIGHT == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (LengthConstraintType.FIXED == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (LengthConstraintType.NONE == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (LengthConstraintType.RANGE == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleEdge.TOP == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (size.height == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.centerBlock == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.topBlock == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.leftBlock == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleConstraint.NONE == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
GPR[EPS]-1659877613496
GPR[SPVA]-1659877613496
GPR[SPVS]-1659877613496
GPR[SPVAP]-1659877613496
06:06:53.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877613934
06:06:53.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:06:53.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877613934
GPR[EPVATF]-1659877613997
GPR[SPVATR]-1659877613997
GPR[EPVATR]-1659877624119
06:07:04.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877624119
GPR[SPVS]-1659877624119
GPR[SPVAP]-1659877624119
06:07:04.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:04.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877624530
GPR[SPVS]-1659877624530
GPR[SPVAP]-1659877624530
06:07:04.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:04.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877624946
GPR[SPVS]-1659877624947
GPR[SPVAP]-1659877624947
06:07:04.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877625380
06:07:05.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:07:05.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877625380
GPR[EPVATF]-1659877625444
GPR[SPVATR]-1659877625444
GPR[EPVATR]-1659877635410
06:07:15.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877635410
GPR[SPVS]-1659877635410
GPR[SPVAP]-1659877635410
06:07:15.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:15.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877635822
GPR[SPVS]-1659877635822
GPR[SPVAP]-1659877635822
06:07:15.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877636257
06:07:16.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:07:16.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877636257
GPR[EPVATF]-1659877636320
GPR[SPVATR]-1659877636320
GPR[EPVATR]-1659877646410
06:07:26.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877646410
GPR[SPVS]-1659877646410
GPR[SPVAP]-1659877646410
06:07:26.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:26.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877646823
GPR[SPVS]-1659877646823
GPR[SPVAP]-1659877646823
06:07:26.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:27.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877647235
GPR[SPVS]-1659877647235
GPR[SPVAP]-1659877647235
06:07:27.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:27.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877647659
GPR[SPVS]-1659877647659
GPR[SPVAP]-1659877647659
06:07:27.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:28.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877648075
GPR[SPVS]-1659877648075
GPR[SPVAP]-1659877648075
06:07:28.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:28.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877648482
GPR[SPVS]-1659877648482
GPR[SPVAP]-1659877648482
06:07:28.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:28.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877648895
GPR[SPVS]-1659877648895
GPR[SPVAP]-1659877648895
06:07:28.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:29.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877649306
GPR[SPVS]-1659877649306
GPR[SPVAP]-1659877649306
06:07:29.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:29.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877649722
GPR[SPVS]-1659877649722
GPR[SPVAP]-1659877649722
06:07:29.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:30.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877650145
GPR[SPVS]-1659877650145
GPR[SPVAP]-1659877650145
06:07:30.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:07:30.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877650552
GPR[SPVS]-1659877650552
GPR[SPVAP]-1659877650552
06:07:30.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877650987
06:07:30.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:07:30.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877650987
GPR[EPVATF]-1659877651050
GPR[SPVATR]-1659877651050
GPR[EPVATR]-1659877661170
06:07:41.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877661170
GPR[SPVS]-1659877661170
GPR[SPVAP]-1659877661170
06:07:41.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877661608
06:07:41.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:07:41.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877661608
GPR[EPVATF]-1659877661671
GPR[SPVATR]-1659877661671
GPR[EPVATR]-1659877671871
06:07:51.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877671871
GPR[SPVS]-1659877671871
GPR[SPVAP]-1659877671871
06:07:51.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877672310
06:07:52.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:07:52.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877672310
GPR[EPVATF]-1659877672377
GPR[SPVATR]-1659877672377
GPR[EPVATR]-1659877682538
06:08:02.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877682538
GPR[SPVS]-1659877682538
GPR[SPVAP]-1659877682538
06:08:02.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:08:02.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877682950
GPR[SPVS]-1659877682950
GPR[SPVAP]-1659877682950
06:08:02.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:08:03.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877683378
GPR[SPVS]-1659877683378
GPR[SPVAP]-1659877683378
06:08:03.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:08:03.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877683786
GPR[SPVS]-1659877683786
GPR[SPVAP]-1659877683786
06:08:03.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:08:04.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877684194
GPR[SPVS]-1659877684194
GPR[SPVAP]-1659877684194
06:08:04.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:08:04.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877684608
GPR[SPVS]-1659877684608
GPR[SPVAP]-1659877684608
06:08:04.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:08:05.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877685019
GPR[SPVESU]-1659877685019
GPR[EPVESU]-1659877685021
GPR[EPVA]-1659877685021
GPR[SPS]-1659877685021
GPR[EPS]-1659877685021
GPR[SPS]-1659877685021
if (h != null) {


}

GPR[EPS]-1659877685021
GPR[SPVA]-1659877685021
GPR[SPVS]-1659877685021
GPR[SPVAP]-1659877685021
06:08:05.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877685458
06:08:05.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:08:05.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877685458
GPR[EPVATF]-1659877685523
GPR[SPVATR]-1659877685523
GPR[EPVATR]-1659877695584
06:08:15.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877695584
GPR[SPVESU]-1659877695584
GPR[EPVESU]-1659877695586
GPR[EPVA]-1659877695586
GPR[SPS]-1659877695586
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659877695587
GPR[SPVA]-1659877695587
GPR[SPVS]-1659877695587
GPR[SPVAP]-1659877695587
06:08:15.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877696024
06:08:16.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:08:16.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877696024
GPR[EPVATF]-1659877696088
GPR[SPVATR]-1659877696088
GPR[EPVATR]-1659877707492
06:08:27.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877707492
GPR[SPVS]-1659877707492
GPR[SPVAP]-1659877707492
06:08:27.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877707929
06:08:27.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:08:27.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877707929
GPR[EPVATF]-1659877707992
GPR[SPVATR]-1659877707992
GPR[EPVATR]-1659877718286
06:08:38.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877718286
GPR[SPVESU]-1659877718286
GPR[EPVESU]-1659877718287
GPR[EPVA]-1659877718287
GPR[SPS]-1659877718287
GPR[EPS]-1659877718287
GPR[SPS]-1659877718287
clear();
	if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
	clear();
GPR[EPS]-1659877718287
GPR[SPVA]-1659877718287
GPR[SPVS]-1659877718287
GPR[SPVAP]-1659877718287
06:08:38.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877718729
06:08:38.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:08:38.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877718729
GPR[EPVATF]-1659877718795
GPR[SPVATR]-1659877718795
GPR[EPVATR]-1659877728803
06:08:48.803 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Chart_13====================
GPR[PF]-1659877728815
GPR[EPVS]-1659877728816
GPR[SPVS]-1659877728816
GPR[SPVAP]-1659877728816
06:08:48.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877729244
06:08:49.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:08:49.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877729244
GPR[EPVATF]-1659877729308
GPR[SPVATR]-1659877729308
GPR[EPVATR]-1659877739407
06:08:59.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877739407
GPR[SPVESU]-1659877739407
GPR[EPVESU]-1659877739409
GPR[EPVA]-1659877739409
GPR[SPS]-1659877739409
if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
	contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else 
null
GPR[EPS]-1659877739409
GPR[SPVA]-1659877739409
GPR[SPVS]-1659877739409
GPR[SPVAP]-1659877739409
06:08:59.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:08:59.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877739677
GPR[SPVESU]-1659877739677
GPR[EPVESU]-1659877739678
GPR[EPVA]-1659877739678
GPR[SPS]-1659877739678

GPR[EPS]-1659877739679
GPR[SPVA]-1659877739679
GPR[SPVS]-1659877739679
GPR[SPVAP]-1659877739679
06:08:59.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:08:59.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877739951
GPR[SPVESU]-1659877739951
GPR[EPVESU]-1659877739953
GPR[EPVA]-1659877739953
GPR[ESUN]-1659877739953
GPR[SSUN]-1659877739953
06:08:59.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===149
06:08:59.962 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
contentSize = arrangeFN(container, g2, constraint.getWidth());
GPR[SPS]-1659877739963
contentSize = arrangeFN(true, container, g2, constraint.getWidth());
contentSize = arrangeFN(false, container, g2, constraint.getWidth());
contentSize = arrangeFN(container, true, g2, constraint.getWidth());
contentSize = arrangeFN(container, false, g2, constraint.getWidth());
contentSize = arrangeFN(container, g2, true, constraint.getWidth());
contentSize = arrangeFN(container, g2, false, constraint.getWidth());
contentSize = arrangeFN(container, g2, constraint.getWidth(), true);
contentSize = arrangeFN(container, g2, constraint.getWidth(), false);
GPR[EPS]-1659877739963
GPR[SPVA]-1659877739963
GPR[SPVS]-1659877739963
GPR[SPVAP]-1659877739963
06:08:59.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:00.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877740371
GPR[SPVS]-1659877740371
GPR[SPVAP]-1659877740371
06:09:00.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:00.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877740786
GPR[SPVS]-1659877740786
GPR[SPVAP]-1659877740786
06:09:00.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:01.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877741218
GPR[SPVS]-1659877741218
GPR[SPVAP]-1659877741218
06:09:01.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:01.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877741635
GPR[SPVS]-1659877741635
GPR[SPVAP]-1659877741635
06:09:01.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:02.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877742042
GPR[SPVS]-1659877742042
GPR[SPVAP]-1659877742042
06:09:02.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:02.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877742451
GPR[SPVS]-1659877742451
GPR[SPVAP]-1659877742451
06:09:02.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:02.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877742872
GPR[SPVS]-1659877742872
GPR[SPVAP]-1659877742872
06:09:02.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:03.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877743289
GPR[SPVESU]-1659877743289
GPR[EPVESU]-1659877743291
GPR[EPVA]-1659877743291
GPR[SPS]-1659877743291
GPR[EPS]-1659877743291
GPR[SPS]-1659877743291
GPR[EPS]-1659877743291
GPR[SPS]-1659877743291
GPR[EPS]-1659877743291
GPR[SPS]-1659877743291
contentSize = arrange(container, g2, constraint.getWidth());
contentSize = arrangeFR(container, g2, constraint.getWidth());
contentSize = arrangeFF(container, g2, constraint.getWidth());
GPR[EPS]-1659877743291
GPR[SPVA]-1659877743291
GPR[SPVS]-1659877743291
GPR[SPVAP]-1659877743291
06:09:03.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:03.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877743706
GPR[SPVS]-1659877743706
GPR[SPVAP]-1659877743706
06:09:03.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:04.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877744138
GPR[SPVS]-1659877744138
GPR[SPVAP]-1659877744138
06:09:04.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:09:04.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877744559
GPR[SPVESU]-1659877744559
GPR[EPVESU]-1659877744561
GPR[EPVA]-1659877744561
GPR[SPS]-1659877744561
if (container != null) {


}

if (g2 != null) {


}

if (constraint != null) {


}

GPR[EPS]-1659877744561
GPR[SPVA]-1659877744561
GPR[SPVS]-1659877744561
GPR[SPVAP]-1659877744561
06:09:04.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877745002
06:09:05.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:09:05.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877745002
GPR[EPVATF]-1659877745064
GPR[SPVATR]-1659877745064
GPR[EPVATR]-1659877755380
06:09:15.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877755380
GPR[SPVS]-1659877755380
GPR[SPVAP]-1659877755380
06:09:15.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877755814
06:09:15.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:09:15.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877755814
GPR[EPVATF]-1659877755876
GPR[SPVATR]-1659877755876
GPR[EPVATR]-1659877766157
06:09:26.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877766157
GPR[SPVS]-1659877766157
GPR[SPVAP]-1659877766157
06:09:26.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877766598
06:09:26.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:09:26.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877766598
GPR[EPVATF]-1659877766660
GPR[SPVATR]-1659877766660
GPR[EPVATR]-1659877776795
06:09:36.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877776795
GPR[SPVESU]-1659877776795
GPR[EPVESU]-1659877776797
GPR[EPVA]-1659877776797
GPR[SPS]-1659877776797
if (container == null) {
    return null;
}

if (container == null) {
    throw new IllegalArgumentException("Empty variable: " + container);
}

if (g2 == null) {
    return null;
}

if (g2 == null) {
    throw new IllegalArgumentException("Empty variable: " + g2);
}

if (constraint == null) {
    return null;
}

if (constraint == null) {
    throw new IllegalArgumentException("Empty variable: " + constraint);
}

GPR[EPS]-1659877776797
GPR[SPVA]-1659877776797
GPR[SPVS]-1659877776797
GPR[SPVAP]-1659877776797
06:09:36.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877777230
06:09:37.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:09:37.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877777230
GPR[EPVATF]-1659877777295
GPR[SPVATR]-1659877777295
GPR[EPVATR]-1659877787399
06:09:47.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877787399
GPR[SPVS]-1659877787399
GPR[SPVAP]-1659877787399
06:09:47.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877787840
06:09:47.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:09:47.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877787840
GPR[EPVATF]-1659877787904
GPR[SPVATR]-1659877787904
GPR[EPVATR]-1659877798849
06:09:58.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877798849
GPR[SPVS]-1659877798849
GPR[SPVAP]-1659877798849
06:09:58.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877799285
06:09:59.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:09:59.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877799285
GPR[EPVATF]-1659877799348
GPR[SPVATR]-1659877799348
GPR[EPVATR]-1659877809692
06:10:09.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877809692
GPR[SPVS]-1659877809692
GPR[SPVAP]-1659877809692
06:10:09.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877810123
06:10:10.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:10:10.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877810123
GPR[EPVATF]-1659877810188
GPR[SPVATR]-1659877810188
GPR[EPVATR]-1659877820293
06:10:20.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877820293
GPR[SPVS]-1659877820293
GPR[SPVAP]-1659877820293
06:10:20.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877820733
06:10:20.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:10:20.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877820733
GPR[EPVATF]-1659877820796
GPR[SPVATR]-1659877820796
GPR[EPVATR]-1659877830815
06:10:30.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877830815
GPR[SPVS]-1659877830815
GPR[SPVAP]-1659877830815
06:10:30.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877831256
06:10:31.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:10:31.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877831256
GPR[EPVATF]-1659877831324
GPR[SPVATR]-1659877831324
GPR[EPVATR]-1659877841359
06:10:41.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877841359
GPR[SPVESU]-1659877841359
GPR[EPVESU]-1659877841360
GPR[EPVA]-1659877841360
GPR[SPS]-1659877841360
GPR[EPS]-1659877841360
GPR[SPS]-1659877841360
clear();
	contentSize = arrangeFN(container, g2, constraint.getWidth());
contentSize = arrangeFN(container, g2, constraint.getWidth());
	clear();
GPR[EPS]-1659877841360
GPR[SPVA]-1659877841360
GPR[SPVS]-1659877841360
GPR[SPVAP]-1659877841360
06:10:41.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877841817
06:10:41.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:10:41.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877841817
GPR[EPVATF]-1659877841883
GPR[SPVATR]-1659877841883
GPR[EPVATR]-1659877851949
06:10:51.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877851949
GPR[SPVS]-1659877851949
GPR[SPVAP]-1659877851949
06:10:51.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877852386
06:10:52.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:10:52.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877852386
GPR[EPVATF]-1659877852451
GPR[SPVATR]-1659877852451
GPR[EPVATR]-1659877863543
06:11:03.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877863543
GPR[SPVESU]-1659877863543
GPR[EPVESU]-1659877863545
GPR[EPVA]-1659877863545
GPR[SPS]-1659877863545

            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
	contentSize = arrangeFN(container, g2, constraint.getWidth());

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659877863545
GPR[SPVA]-1659877863545
GPR[SPVS]-1659877863545
GPR[SPVAP]-1659877863545
06:11:03.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877863987
06:11:03.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:11:03.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877863987
GPR[EPVATF]-1659877864056
GPR[SPVATR]-1659877864056
GPR[EPVATR]-1659877874510
06:11:14.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877874510
GPR[SPVESU]-1659877874510
GPR[EPVESU]-1659877874512
GPR[EPVA]-1659877874512
GPR[SPS]-1659877874512

GPR[EPS]-1659877874512
GPR[SPVA]-1659877874512
GPR[SPVS]-1659877874512
GPR[SPVAP]-1659877874512
06:11:14.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877874949
06:11:14.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:11:14.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877874949
GPR[EPVATF]-1659877875016
GPR[SPVATR]-1659877875016
GPR[EPVATR]-1659877885179
06:11:25.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877885179
GPR[SPVESU]-1659877885179
GPR[EPVESU]-1659877885180
GPR[EPVA]-1659877885180
GPR[ESUN]-1659877885180
GPR[SSUN]-1659877885180
06:11:25.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===148
06:11:25.193 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
GPR[SPS]-1659877885194
if (h != LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
GPR[EPS]-1659877885195
GPR[SPVA]-1659877885195
GPR[SPVS]-1659877885195
GPR[SPVAP]-1659877885195
06:11:25.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877885640
06:11:25.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:11:25.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877885640
GPR[EPVATF]-1659877885704
GPR[SPVATR]-1659877885704
GPR[EPVATR]-1659877896233
06:11:36.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877896233
GPR[SPVESU]-1659877896233
GPR[EPVESU]-1659877896234
GPR[EPVA]-1659877896234
GPR[SPS]-1659877896234
GPR[EPS]-1659877896235
GPR[SPS]-1659877896235
GPR[EPS]-1659877896235
GPR[SPS]-1659877896235
if (w == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (constraint.getWidthRange() == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (contentSize.getHeight() == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (contentConstraint.getWidthConstraintType() == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (size1.getHeight() == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (contentConstraint.getHeightConstraintType() == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (contentSize.getWidth() == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (constraint.getWidth() == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (constraint.getHeightRange() == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (constraint.getHeight() == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleEdge.BOTTOM == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (size.width == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleEdge.LEFT == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.bottomBlock == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.rightBlock == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleEdge.RIGHT == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (LengthConstraintType.FIXED == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (LengthConstraintType.NONE == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (LengthConstraintType.RANGE == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleEdge.TOP == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (size.height == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.centerBlock == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.topBlock == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (that.leftBlock == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (RectangleConstraint.NONE == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
GPR[EPS]-1659877896235
GPR[SPVA]-1659877896235
GPR[SPVS]-1659877896235
GPR[SPVAP]-1659877896235
06:11:36.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877896673
06:11:36.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:11:36.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877896673
GPR[EPVATF]-1659877896737
GPR[SPVATR]-1659877896737
GPR[EPVATR]-1659877906899
06:11:46.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877906899
GPR[SPVS]-1659877906899
GPR[SPVAP]-1659877906899
06:11:46.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:11:47.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877907314
GPR[SPVS]-1659877907314
GPR[SPVAP]-1659877907314
06:11:47.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:11:47.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877907729
GPR[SPVS]-1659877907729
GPR[SPVAP]-1659877907729
06:11:47.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877908166
06:11:48.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:11:48.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877908166
GPR[EPVATF]-1659877908232
GPR[SPVATR]-1659877908232
GPR[EPVATR]-1659877918371
06:11:58.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877918371
GPR[SPVS]-1659877918371
GPR[SPVAP]-1659877918371
06:11:58.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:11:58.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877918778
GPR[SPVS]-1659877918778
GPR[SPVAP]-1659877918778
06:11:58.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877919210
06:11:59.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:11:59.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877919210
GPR[EPVATF]-1659877919272
GPR[SPVATR]-1659877919272
GPR[EPVATR]-1659877929395
06:12:09.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877929395
GPR[SPVS]-1659877929395
GPR[SPVAP]-1659877929395
06:12:09.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:09.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877929821
GPR[SPVS]-1659877929821
GPR[SPVAP]-1659877929821
06:12:09.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:10.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877930231
GPR[SPVS]-1659877930231
GPR[SPVAP]-1659877930231
06:12:10.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:10.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877930650
GPR[SPVS]-1659877930650
GPR[SPVAP]-1659877930650
06:12:10.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:11.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877931058
GPR[SPVS]-1659877931058
GPR[SPVAP]-1659877931058
06:12:11.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:11.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877931470
GPR[SPVS]-1659877931470
GPR[SPVAP]-1659877931470
06:12:11.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:11.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877931883
GPR[SPVS]-1659877931883
GPR[SPVAP]-1659877931883
06:12:11.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:12.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877932293
GPR[SPVS]-1659877932293
GPR[SPVAP]-1659877932293
06:12:12.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:12.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877932706
GPR[SPVS]-1659877932706
GPR[SPVAP]-1659877932706
06:12:12.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:13.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877933116
GPR[SPVS]-1659877933116
GPR[SPVAP]-1659877933116
06:12:13.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:13.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877933525
GPR[SPVS]-1659877933525
GPR[SPVAP]-1659877933525
06:12:13.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877933957
06:12:13.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:12:13.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877933957
GPR[EPVATF]-1659877934021
GPR[SPVATR]-1659877934021
GPR[EPVATR]-1659877944172
06:12:24.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877944172
GPR[SPVS]-1659877944172
GPR[SPVAP]-1659877944172
06:12:24.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877944609
06:12:24.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:12:24.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877944609
GPR[EPVATF]-1659877944672
GPR[SPVATR]-1659877944672
GPR[EPVATR]-1659877955020
06:12:35.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877955020
GPR[SPVS]-1659877955020
GPR[SPVAP]-1659877955020
06:12:35.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877955454
06:12:35.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:12:35.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877955454
GPR[EPVATF]-1659877955519
GPR[SPVATR]-1659877955519
GPR[EPVATR]-1659877965722
06:12:45.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877965722
GPR[SPVS]-1659877965722
GPR[SPVAP]-1659877965722
06:12:45.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:46.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877966127
GPR[SPVS]-1659877966127
GPR[SPVAP]-1659877966127
06:12:46.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:46.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877966539
GPR[SPVS]-1659877966539
GPR[SPVAP]-1659877966539
06:12:46.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:46.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877966950
GPR[SPVS]-1659877966950
GPR[SPVAP]-1659877966950
06:12:46.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:47.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877967359
GPR[SPVS]-1659877967359
GPR[SPVAP]-1659877967359
06:12:47.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:47.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877967774
GPR[SPVS]-1659877967774
GPR[SPVAP]-1659877967774
06:12:47.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:12:48.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659877968181
GPR[SPVESU]-1659877968181
GPR[EPVESU]-1659877968182
GPR[EPVA]-1659877968182
GPR[SPS]-1659877968182
GPR[EPS]-1659877968182
GPR[SPS]-1659877968182
if (h != null) {


}

GPR[EPS]-1659877968182
GPR[SPVA]-1659877968182
GPR[SPVS]-1659877968182
GPR[SPVAP]-1659877968182
06:12:48.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877968609
06:12:48.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:12:48.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877968610
GPR[EPVATF]-1659877968672
GPR[SPVATR]-1659877968672
GPR[EPVATR]-1659877978999
06:12:58.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877978999
GPR[SPVESU]-1659877978999
GPR[EPVESU]-1659877979000
GPR[EPVA]-1659877979000
GPR[SPS]-1659877979000
if (h == null) {
    return null;
}

if (h == null) {
    throw new IllegalArgumentException("Empty variable: " + h);
}

GPR[EPS]-1659877979001
GPR[SPVA]-1659877979001
GPR[SPVS]-1659877979001
GPR[SPVAP]-1659877979001
06:12:59.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877979435
06:12:59.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:12:59.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877979435
GPR[EPVATF]-1659877979500
GPR[SPVATR]-1659877979500
GPR[EPVATR]-1659877989589
06:13:09.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659877989589
GPR[SPVS]-1659877989589
GPR[SPVAP]-1659877989589
06:13:09.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659877990025
06:13:10.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:13:10.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659877990025
GPR[EPVATF]-1659877990088
GPR[SPVATR]-1659877990088
GPR[EPVATR]-1659878000463
06:13:20.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878000463
GPR[SPVESU]-1659878000463
GPR[EPVESU]-1659878000465
GPR[EPVA]-1659878000465
GPR[SPS]-1659878000465
GPR[EPS]-1659878000465
GPR[SPS]-1659878000465
clear();
	if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
	clear();
GPR[EPS]-1659878000466
GPR[SPVA]-1659878000466
GPR[SPVS]-1659878000466
GPR[SPVAP]-1659878000466
06:13:20.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878000905
06:13:20.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:13:20.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878000905
GPR[EPVATF]-1659878000967
GPR[SPVATR]-1659878000967
GPR[EPVATR]-1659878010994
06:13:30.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878010994
GPR[SPVS]-1659878010994
GPR[SPVAP]-1659878010994
06:13:30.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878011430
06:13:31.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:13:31.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878011430
GPR[EPVATF]-1659878011497
GPR[SPVATR]-1659878011497
GPR[EPVATR]-1659878021663
06:13:41.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878021663
GPR[SPVESU]-1659878021663
GPR[EPVESU]-1659878021665
GPR[EPVA]-1659878021665
GPR[SPS]-1659878021665

        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
	if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }

MOVE-BUGGY-STATEMENT
GPR[EPS]-1659878021665
GPR[SPVA]-1659878021665
GPR[SPVS]-1659878021665
GPR[SPVAP]-1659878021665
06:13:41.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878022102
06:13:42.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:13:42.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878022102
GPR[EPVATF]-1659878022165
GPR[SPVATR]-1659878022165
GPR[EPVATR]-1659878032826
06:13:52.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 53 Chart_13
GPR[EPVS]-1659878032826
GPR[SPVESU]-1659878032826
GPR[EPVESU]-1659878032828
GPR[EPVA]-1659878032828
GPR[SPS]-1659878032828

GPR[EPS]-1659878032828
GPR[SPVA]-1659878032828
GPR[SPVS]-1659878032828
GPR[SPVAP]-1659878032828
06:13:52.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878033255
06:13:53.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:13:53.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878033255
GPR[EPVATF]-1659878033320
GPR[SPVATR]-1659878033320
GPR[EPVATR]-1659878043393
06:14:03.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878043393
GPR[SPVESU]-1659878043393
GPR[EPVESU]-1659878043394
GPR[EPVA]-1659878043394
GPR[ESUN]-1659878043394
GPR[SSUN]-1659878043394
06:14:03.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===147
06:14:03.404 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
GPR[SPS]-1659878043405
if (w != LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
GPR[EPS]-1659878043405
GPR[SPVA]-1659878043405
GPR[SPVS]-1659878043405
GPR[SPVAP]-1659878043405
06:14:03.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878043838
06:14:03.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:14:03.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878043838
GPR[EPVATF]-1659878043904
GPR[SPVATR]-1659878043904
GPR[EPVATR]-1659878054058
06:14:14.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878054058
GPR[SPVESU]-1659878054058
GPR[EPVESU]-1659878054059
GPR[EPVA]-1659878054059
GPR[SPS]-1659878054059
GPR[EPS]-1659878054059
GPR[SPS]-1659878054059
GPR[EPS]-1659878054060
GPR[SPS]-1659878054060
if (h == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (constraint.getWidthRange() == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (contentSize.getHeight() == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (contentConstraint.getWidthConstraintType() == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (size1.getHeight() == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (contentConstraint.getHeightConstraintType() == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (contentSize.getWidth() == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (constraint.getWidth() == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (constraint.getHeightRange() == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (constraint.getHeight() == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (RectangleEdge.BOTTOM == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (size.width == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (RectangleEdge.LEFT == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (that.bottomBlock == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (that.rightBlock == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (RectangleEdge.RIGHT == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (LengthConstraintType.FIXED == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (LengthConstraintType.NONE == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (LengthConstraintType.RANGE == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (RectangleEdge.TOP == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (size.height == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (that.centerBlock == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (that.topBlock == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (that.leftBlock == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (RectangleConstraint.NONE == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
GPR[EPS]-1659878054060
GPR[SPVA]-1659878054060
GPR[SPVS]-1659878054060
GPR[SPVAP]-1659878054060
06:14:14.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878054490
06:14:14.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:14:14.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878054491
GPR[EPVATF]-1659878054556
GPR[SPVATR]-1659878054556
GPR[EPVATR]-1659878064764
06:14:24.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878064764
GPR[SPVS]-1659878064764
GPR[SPVAP]-1659878064764
06:14:24.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:25.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878065175
GPR[SPVS]-1659878065175
GPR[SPVAP]-1659878065175
06:14:25.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:25.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878065582
GPR[SPVS]-1659878065582
GPR[SPVAP]-1659878065582
06:14:25.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878066018
06:14:26.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:14:26.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878066018
GPR[EPVATF]-1659878066080
GPR[SPVATR]-1659878066080
GPR[EPVATR]-1659878076170
06:14:36.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878076170
GPR[SPVS]-1659878076170
GPR[SPVAP]-1659878076170
06:14:36.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:36.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878076578
GPR[SPVS]-1659878076578
GPR[SPVAP]-1659878076578
06:14:36.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878077009
06:14:37.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:14:37.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878077009
GPR[EPVATF]-1659878077072
GPR[SPVATR]-1659878077072
GPR[EPVATR]-1659878087273
06:14:47.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878087273
GPR[SPVS]-1659878087273
GPR[SPVAP]-1659878087273
06:14:47.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:47.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878087683
GPR[SPVS]-1659878087683
GPR[SPVAP]-1659878087683
06:14:47.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:48.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878088092
GPR[SPVS]-1659878088092
GPR[SPVAP]-1659878088092
06:14:48.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:48.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878088507
GPR[SPVS]-1659878088507
GPR[SPVAP]-1659878088507
06:14:48.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:48.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878088917
GPR[SPVS]-1659878088917
GPR[SPVAP]-1659878088917
06:14:48.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:49.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878089322
GPR[SPVS]-1659878089322
GPR[SPVAP]-1659878089322
06:14:49.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:49.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878089734
GPR[SPVS]-1659878089734
GPR[SPVAP]-1659878089734
06:14:49.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:50.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878090142
GPR[SPVS]-1659878090142
GPR[SPVAP]-1659878090142
06:14:50.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:50.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878090554
GPR[SPVS]-1659878090554
GPR[SPVAP]-1659878090554
06:14:50.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:50.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878090964
GPR[SPVS]-1659878090964
GPR[SPVAP]-1659878090964
06:14:50.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:14:51.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878091374
GPR[SPVS]-1659878091374
GPR[SPVAP]-1659878091374
06:14:51.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878091794
06:14:51.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:14:51.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878091794
GPR[EPVATF]-1659878091856
GPR[SPVATR]-1659878091856
GPR[EPVATR]-1659878101935
06:15:01.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878101935
GPR[SPVS]-1659878101935
GPR[SPVAP]-1659878101935
06:15:01.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878102372
06:15:02.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:15:02.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878102372
GPR[EPVATF]-1659878102436
GPR[SPVATR]-1659878102436
GPR[EPVATR]-1659878112743
06:15:12.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878112743
GPR[SPVS]-1659878112743
GPR[SPVAP]-1659878112743
06:15:12.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878113176
06:15:13.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:15:13.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878113176
GPR[EPVATF]-1659878113240
GPR[SPVATR]-1659878113240
GPR[EPVATR]-1659878123374
06:15:23.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878123374
GPR[SPVS]-1659878123374
GPR[SPVAP]-1659878123374
06:15:23.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:15:23.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878123789
GPR[SPVS]-1659878123789
GPR[SPVAP]-1659878123789
06:15:23.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:15:24.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878124210
GPR[SPVS]-1659878124210
GPR[SPVAP]-1659878124210
06:15:24.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:15:24.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878124624
GPR[SPVS]-1659878124624
GPR[SPVAP]-1659878124624
06:15:24.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:15:25.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878125038
GPR[SPVS]-1659878125038
GPR[SPVAP]-1659878125038
06:15:25.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:15:25.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878125450
GPR[SPVS]-1659878125450
GPR[SPVAP]-1659878125450
06:15:25.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:15:25.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878125859
GPR[SPVESU]-1659878125859
GPR[EPVESU]-1659878125860
GPR[EPVA]-1659878125860
GPR[SPS]-1659878125860
GPR[EPS]-1659878125860
GPR[SPS]-1659878125860
if (w != null) {


}

GPR[EPS]-1659878125860
GPR[SPVA]-1659878125860
GPR[SPVS]-1659878125860
GPR[SPVAP]-1659878125860
06:15:25.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878126299
06:15:26.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:15:26.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878126299
GPR[EPVATF]-1659878126363
GPR[SPVATR]-1659878126363
GPR[EPVATR]-1659878136641
06:15:36.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878136641
GPR[SPVESU]-1659878136641
GPR[EPVESU]-1659878136643
GPR[EPVA]-1659878136643
GPR[SPS]-1659878136643
if (w == null) {
    return null;
}

if (w == null) {
    throw new IllegalArgumentException("Empty variable: " + w);
}

GPR[EPS]-1659878136643
GPR[SPVA]-1659878136643
GPR[SPVS]-1659878136643
GPR[SPVAP]-1659878136643
06:15:36.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878137078
06:15:37.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:15:37.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878137078
GPR[EPVATF]-1659878137144
GPR[SPVATR]-1659878137144
GPR[EPVATR]-1659878147303
06:15:47.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878147303
GPR[SPVS]-1659878147303
GPR[SPVAP]-1659878147303
06:15:47.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878147739
06:15:47.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:15:47.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878147739
GPR[EPVATF]-1659878147805
GPR[SPVATR]-1659878147805
GPR[EPVATR]-1659878157966
06:15:57.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878157966
GPR[SPVESU]-1659878157966
GPR[EPVESU]-1659878157967
GPR[EPVA]-1659878157967
GPR[SPS]-1659878157967
GPR[EPS]-1659878157967
GPR[SPS]-1659878157967
clear();
	if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
	clear();
GPR[EPS]-1659878157968
GPR[SPVA]-1659878157968
GPR[SPVS]-1659878157968
GPR[SPVAP]-1659878157968
06:15:57.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878158405
06:15:58.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:15:58.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878158405
GPR[EPVATF]-1659878158468
GPR[SPVATR]-1659878158468
GPR[EPVATR]-1659878168599
06:16:08.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878168599
GPR[SPVS]-1659878168599
GPR[SPVAP]-1659878168599
06:16:08.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
GPR[EPVAP]-1659878169039
06:16:09.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:16:09.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
GPR[SPVATF]-1659878169039
GPR[EPVATF]-1659878169104
GPR[SPVATR]-1659878169104
GPR[EPVATR]-1659878179259
06:16:19.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Chart_13
GPR[EPVS]-1659878179259
GPR[SPVESU]-1659878179259
GPR[EPVESU]-1659878179261
GPR[EPVA]-1659878179261
GPR[SPS]-1659878179261
if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(container, g2, constraint.getWidth());
            }
            else if (h == LengthConstraintType.FIXED) {
                contentSize = arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(container, constraint.getWidthRange(),
                        constraint.getHeightRange(), g2);
            }
        }
	if (h == LengthConstraintType.NONE) {
                contentSize = arrangeNN(container, g2);
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                throw new RuntimeException("Not implemented.");
            }
        }
        else 
null
GPR[EPS]-1659878179261
GPR[SPVA]-1659878179261
GPR[SPVS]-1659878179261
GPR[SPVAP]-1659878179261
06:16:19.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:16:19.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878179670
GPR[SPVESU]-1659878179670
GPR[EPVESU]-1659878179671
GPR[EPVA]-1659878179671
GPR[SPS]-1659878179671

GPR[EPS]-1659878179671
GPR[SPVA]-1659878179671
GPR[SPVS]-1659878179671
GPR[SPVAP]-1659878179671
06:16:19.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:16:20.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Chart_13 ---Fixer: fix fail because of failed compiling! 
GPR[EPVAP]-1659878180075
GPR[SPVESU]-1659878180075
GPR[EPVESU]-1659878180076
GPR[EPVA]-1659878180076
GPR[ESUN]-1659878180076
GPR[SSUN]-1659878180076
06:16:20.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.jfree.chart.block.BorderArrangement ===500
06:16:20.088 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
/**
     * Clears the layout.
     */
    public void clear() {
        this.centerBlock = null;
        this.topBlock = null;
        this.bottomBlock = null;
        this.leftBlock = null;
        this.rightBlock = null;
    }
GPR[SPS]-1659878180090
GPR[EPS]-1659878180090
GPR[SPS]-1659878180090
End running Chart/13 results at /experiment_home///results/FixMiner/Chart/13/seed_260/
\n\nNode: host-75\n
\n\nDate: Sun 07 Aug 2022 06:16:20 AM PDT\n
Removing checked out dir script/workingdir/FixMiner/Chart_13
GPR[SSLE]-1659878180877
GPR[ESLE]-1659878240882
