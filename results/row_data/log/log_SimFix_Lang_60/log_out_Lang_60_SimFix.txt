Sleep 1m start
GPR[SSLI]-1661319512805
GPR[ESLI]-1661319572808
Running SimFix Lang 60b
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
Timezone: America/Los_Angeles
Seed 283
Java 8: /experiment_home/jdk1.8.0_45/bin 
DEFECTS4J_HOME: /experiment_home/defects4j/
Killing all java process
Creating out dir /experiment_home///results/SimFix/Lang/60/seed_283/
Project lc: lang
New out script/workingdir/SimFix/lang/lang_60_buggy
The file script/workingdir/SimFix/lang/lang_60_buggy does not exist!
script/workingdir/SimFix/lang/lang_60_buggy
Current directory: script/workingdir/SimFix/lang/lang_60_buggy
classpath:  script/workingdir/SimFix/lang/lang_60_buggy/target/classes:script/workingdir/SimFix/lang/lang_60_buggy/target/tests:/experiment_home/defects4j/framework/projects/lib/junit-4.11.jar:/experiment_home/defects4j/framework/projects/Lang/lib/cglib.jar:/experiment_home/defects4j/framework/projects/Lang/lib/asm.jar:/experiment_home/defects4j/framework/projects/Lang/lib/easymock.jar:/experiment_home/defects4j/framework/projects/Lang/lib/commons-io.jar
Src java:  /src/java
Classes Java:  /target/classes
Src Test:  /src/test
Classes Test:  /target/tests
GPR[SSLB]-1661319584041
GPR[ESLB]-1661319644044
Calling SimFix: at script/workingdir/SimFix/lang/lang_60_buggy
build.xml
checkstyle.xml
d4j-info
default.properties
defects4j.build.properties
doap_lang.rdf
LICENSE.txt
maven.xml
NOTICE.txt
project.properties
project.xml
PROPOSAL.html
RELEASE-NOTES.txt
src
STATUS.html
target
xdocs
content current dir: build.xml checkstyle.xml d4j-info default.properties defects4j.build.properties doap_lang.rdf LICENSE.txt maven.xml NOTICE.txt project.properties project.xml PROPOSAL.html RELEASE-NOTES.txt src STATUS.html target xdocs
Node: host-58
Date init: Tue 23 Aug 2022 10:40:46 PM PDT
OAR_JOB_ID: 3743711
script/workingdir/SimFix/
GPR[SSUP]-1661319646288
=================================================
Project : lang_60	start : 22/08/23 22:40

TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_2
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_2
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[ESUP]-1661319651171
MM Purify? true
GPR[SFL]-1661319651379
GPR[EFL]-1661319651383
GPR[SFP]-1661319651383
TIMEOUT : 9000000
GPR[SSUN]-1661319651393
org.apache.commons.lang.text.StrBuilder,1672
========
if(ch==delimiters[i]){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319652415
GPR[SPVAP]-1661319652415
GPR[EPVAP]-1661319653584
GPR[EPVS]-1661319653584
========
if(thisBuf[i]!=ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319653588
GPR[SPVAP]-1661319653588
GPR[EPVAP]-1661319656360
GPR[SPVATF]-1661319656360
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319657287
GPR[EPVS]-1661319657287
========
if(buffer[i]!=ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319657289
GPR[SPVAP]-1661319657289
GPR[EPVAP]-1661319658451
GPR[SPVATF]-1661319658451
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319659385
GPR[EPVS]-1661319659385
========
if(thisBuf[i]==ch){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319659390
GPR[SPVAP]-1661319659390
GPR[EPVAP]-1661319660544
GPR[SPVATF]-1661319660544
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319661462
GPR[SPVATR]-1661319661462
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319670509
GPR[EPVS]-1661319670509
========
if(thisBuf[i]!=otherBuf[i]){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319670512
GPR[SPVAP]-1661319670512
GPR[EPVAP]-1661319671224
GPR[EPVS]-1661319671224
========
if(thisBuf[i]==buffer[i]){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319671227
GPR[SPVAP]-1661319671227
GPR[EPVAP]-1661319672402
GPR[SPVATF]-1661319672402
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319673329
GPR[EPVS]-1661319673329
========
if(thisBuf[i]!=ch){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319673331
GPR[SPVAP]-1661319673331
GPR[EPVAP]-1661319674513
GPR[SPVATF]-1661319674514
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319675429
GPR[SPVATR]-1661319675430
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319684513
GPR[EPVS]-1661319684513
========
if(thisBuf[i]==buffer[i]){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319684516
GPR[SPVAP]-1661319684516
GPR[EPVAP]-1661319685676
GPR[SPVATF]-1661319685676
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319686612
GPR[SPVATR]-1661319686613
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319695630
GPR[EPVS]-1661319695630
========
if(thisBuf[i]!=buffer[i]){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319695633
GPR[SPVAP]-1661319695633
GPR[EPVAP]-1661319696800
GPR[SPVATF]-1661319696800
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319697716
GPR[SPVATR]-1661319697717
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319706795
GPR[EPVS]-1661319706796
========
if(thisBuf[i]!=buffer[i]){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319706799
GPR[SPVAP]-1661319706799
GPR[EPVAP]-1661319707978
GPR[SPVATF]-1661319707978
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319708922
GPR[SPVATR]-1661319708922
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319717918
GPR[EPVS]-1661319717918
========
if(searchChars[j]==ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319717921
GPR[SPVAP]-1661319717921
GPR[EPVAP]-1661319718625
GPR[EPVS]-1661319718625
========
if(buffer[i]==ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319718628
GPR[SPVAP]-1661319718628
GPR[EPVAP]-1661319719785
GPR[SPVATF]-1661319719785
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319720724
GPR[EPVS]-1661319720724
========
if(thisBuf[i]==thisBuf[CAPACITY+CAPACITY]){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319720727
GPR[SPVAP]-1661319720727
GPR[EPVAP]-1661319721881
GPR[SPVATF]-1661319721881
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319722796
GPR[EPVS]-1661319722796
========
if(thisBuf[i]!=thisBuf[CAPACITY+CAPACITY]){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319722798
GPR[SPVAP]-1661319722798
GPR[EPVAP]-1661319723953
GPR[SPVATF]-1661319723953
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319724882
GPR[EPVS]-1661319724882
========
if(thisBuf[i]==null){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319724885
GPR[SPVAP]-1661319724885
GPR[EPVAP]-1661319725593
GPR[EPVS]-1661319725593
========
if(invalidChars[j]==ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319725596
GPR[SPVAP]-1661319725596
GPR[EPVAP]-1661319726299
GPR[EPVS]-1661319726299
========
if(thisBuf[i]==i){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319726302
GPR[SPVAP]-1661319726302
GPR[EPVAP]-1661319727487
GPR[SPVATF]-1661319727487
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319728417
GPR[SPVATR]-1661319728418
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319737498
GPR[EPVS]-1661319737498
========
ch=thisBuf[i];
if(thisBuf[i]==ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319737500
GPR[SPVAP]-1661319737500
GPR[EPVAP]-1661319738671
GPR[SPVATF]-1661319738671
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319739608
GPR[EPVS]-1661319739608
========
ch=thisBuf[i];
if(thisBuf[i]==i){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319739611
GPR[SPVAP]-1661319739611
GPR[EPVAP]-1661319740765
GPR[SPVATF]-1661319740766
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319741710
GPR[SPVATR]-1661319741710
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319750756
GPR[EPVS]-1661319750756
========
if(thisBuf[i]==length){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319750760
GPR[SPVAP]-1661319750760
GPR[EPVAP]-1661319751468
GPR[EPVS]-1661319751468
========
if(chars[i]!=buffer[pos]){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319751471
GPR[SPVAP]-1661319751471
GPR[EPVAP]-1661319752162
GPR[EPVS]-1661319752163
========
if(thisBuf[i]==thisBuf[pos]){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319752166
GPR[SPVAP]-1661319752166
GPR[EPVAP]-1661319752872
GPR[EPVS]-1661319752872
========
if(thisBuf[i]==LF){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319752875
GPR[SPVAP]-1661319752875
GPR[EPVAP]-1661319753571
GPR[EPVS]-1661319753571
========
if(ch=='\\'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319753576
GPR[SPVAP]-1661319753576
GPR[EPVAP]-1661319754737
GPR[SPVATF]-1661319754737
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319755670
GPR[SPVATR]-1661319755671
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319764702
GPR[EPVS]-1661319764702
========
if(thisBuf[i]=='\\'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319764704
GPR[SPVAP]-1661319764704
GPR[EPVAP]-1661319765867
GPR[SPVATF]-1661319765867
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319766790
GPR[SPVATR]-1661319766791
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319775798
GPR[EPVS]-1661319775798
========
if(thisBuf[i]==value){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319775803
GPR[SPVAP]-1661319775803
GPR[EPVAP]-1661319776500
GPR[EPVS]-1661319776500
========
if(thisBuf[i]!=null){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319776503
GPR[SPVAP]-1661319776503
GPR[EPVAP]-1661319777215
GPR[EPVS]-1661319777215
========
if(thisBuf[i]==amph){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319777218
GPR[SPVAP]-1661319777218
GPR[EPVAP]-1661319777921
GPR[EPVS]-1661319777921
========
if(thisBuf[i]==semi){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319777923
GPR[SPVAP]-1661319777923
GPR[EPVAP]-1661319778624
GPR[EPVS]-1661319778624
========
if(thisBuf[i]==search){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319778626
GPR[SPVAP]-1661319778626
GPR[EPVAP]-1661319779321
GPR[EPVS]-1661319779321
========
if(thisBuf[i]==max){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319779324
GPR[SPVAP]-1661319779324
GPR[EPVAP]-1661319780037
GPR[EPVS]-1661319780037
========
if(newLine==null){
return StringUtils.EMPTY;
}
if(thisBuf[i]==ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319780039
GPR[SPVAP]-1661319780039
GPR[EPVAP]-1661319780771
GPR[EPVS]-1661319780771
========
if(thisBuf[i]==ch){
allowSigns=false;
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319780777
GPR[SPVAP]-1661319780777
GPR[EPVAP]-1661319781475
GPR[EPVS]-1661319781475
========
if(thisBuf[i]==ch){
foundDigit=false;
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319781477
GPR[SPVAP]-1661319781477
GPR[EPVAP]-1661319782177
GPR[EPVS]-1661319782177
========
if(thisBuf[i]==ch){
allowSigns=false;
foundDigit=false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319782178
GPR[SPVAP]-1661319782178
GPR[EPVAP]-1661319782913
GPR[EPVS]-1661319782913
========
if(thisBuf[i]==PACKAGE_SEPARATOR_CHAR){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319782917
GPR[SPVAP]-1661319782917
GPR[EPVAP]-1661319783621
GPR[EPVS]-1661319783621
========
if(chars[i]==PACKAGE_SEPARATOR_CHAR){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319783622
GPR[SPVAP]-1661319783622
GPR[EPVAP]-1661319784341
GPR[EPVS]-1661319784341
========
if(thisBuf[i]=='0'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319784345
GPR[SPVAP]-1661319784345
GPR[EPVAP]-1661319785503
GPR[SPVATF]-1661319785504
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319786432
GPR[SPVATR]-1661319786433
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319795541
GPR[EPVS]-1661319795541
========
if(thisBuf[i]=='0'){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319795544
GPR[SPVAP]-1661319795544
GPR[EPVAP]-1661319796700
GPR[SPVATF]-1661319796700
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319797617
GPR[SPVATR]-1661319797618
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319806862
GPR[EPVS]-1661319806862
========
if(thisBuf[i]!='0'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319806864
GPR[SPVAP]-1661319806864
GPR[EPVAP]-1661319808051
GPR[SPVATF]-1661319808052
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319808984
GPR[EPVS]-1661319808984
========
if(thisBuf[i]!='0'){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319808986
GPR[SPVAP]-1661319808986
GPR[EPVAP]-1661319810158
GPR[SPVATF]-1661319810159
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319811093
GPR[SPVATR]-1661319811093
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319820261
GPR[EPVS]-1661319820261
========
if(thisBuf[i]==min){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319820268
GPR[SPVAP]-1661319820268
GPR[EPVAP]-1661319820973
GPR[EPVS]-1661319820973
========
if(chars[i]!=ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319820976
GPR[SPVAP]-1661319820976
GPR[EPVAP]-1661319821676
GPR[EPVS]-1661319821676
========
if(thisBuf[i]==remove){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319821678
GPR[SPVAP]-1661319821678
GPR[EPVAP]-1661319822384
GPR[EPVS]-1661319822385
========
if(thisBuf[i]==replaceCharsLength){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319822388
GPR[SPVAP]-1661319822388
GPR[EPVAP]-1661319823089
GPR[EPVS]-1661319823089
========
if(thisBuf[i]==sz){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319823094
GPR[SPVAP]-1661319823094
GPR[EPVAP]-1661319823783
GPR[EPVS]-1661319823783
========
CAPACITY--;
if(thisBuf[i]==ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319823785
GPR[SPVAP]-1661319823785
GPR[EPVAP]-1661319824481
GPR[EPVS]-1661319824481
========
if(thisBuf[i]==Calendar.HOUR_OF_DAY){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319824485
GPR[SPVAP]-1661319824485
GPR[EPVAP]-1661319825193
GPR[EPVS]-1661319825193
========
if(thisBuf[i]==HOUR_OF_DAY){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319825195
GPR[SPVAP]-1661319825195
GPR[EPVAP]-1661319825908
GPR[EPVS]-1661319825908
========
if(newLine==null||newLine==null){
return 0;
}
if(thisBuf[i]==ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319825910
GPR[SPVAP]-1661319825910
GPR[EPVAP]-1661319826610
GPR[EPVS]-1661319826610
========
if(thisBuf[i]==ch){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319826612
GPR[SPVAP]-1661319826613
GPR[EPVAP]-1661319827316
GPR[EPVS]-1661319827316
========
if(thisBuf[i]==ch){
return false;
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319827318
GPR[SPVAP]-1661319827318
GPR[EPVAP]-1661319828019
GPR[EPVS]-1661319828019
========
if(thisBuf[i]==ch){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319828021
GPR[SPVAP]-1661319828021
GPR[EPVAP]-1661319828721
GPR[EPVS]-1661319828721
========
if(thisBuf[i]==count){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319828724
GPR[SPVAP]-1661319828724
GPR[EPVAP]-1661319829434
GPR[EPVS]-1661319829434
========
if(thisBuf[i]==Calendar.DATE){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319829437
GPR[SPVAP]-1661319829437
GPR[EPVAP]-1661319830136
GPR[EPVS]-1661319830136
========
if(thisBuf[i]==DATE){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319830138
GPR[SPVAP]-1661319830138
GPR[EPVAP]-1661319830845
GPR[EPVS]-1661319830845
========
if(thisBuf[i]==field){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319830848
GPR[SPVAP]-1661319830848
GPR[EPVAP]-1661319831553
GPR[EPVS]-1661319831553
========
if(thisBuf[i]==separatorChar){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319831557
GPR[SPVAP]-1661319831557
GPR[EPVAP]-1661319832272
GPR[EPVS]-1661319832272
========
if(ch==array[i]){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319832275
GPR[SPVAP]-1661319832275
GPR[EPVAP]-1661319832983
GPR[EPVS]-1661319832983
========
CAPACITY=++CAPACITY;
if(thisBuf[i]==ch){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319832986
GPR[SPVAP]-1661319832986
GPR[EPVAP]-1661319833712
GPR[EPVS]-1661319833713
========
if(thisBuf[i]==length){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319833715
GPR[SPVAP]-1661319833715
GPR[EPVAP]-1661319834415
GPR[EPVS]-1661319834415
========
if(thisBuf[i]==length){
return false;
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319834417
GPR[SPVAP]-1661319834417
GPR[EPVAP]-1661319835123
GPR[EPVS]-1661319835123
========
if(thisBuf[i]==length){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319835125
GPR[SPVAP]-1661319835125
GPR[EPVAP]-1661319835825
GPR[EPVS]-1661319835825
========
if(thisBuf[i]==ch){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319835827
GPR[SPVAP]-1661319835827
GPR[EPVAP]-1661319836539
GPR[EPVS]-1661319836539
========
if(thisBuf[i]==ch){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319836540
GPR[SPVAP]-1661319836540
GPR[EPVAP]-1661319837243
GPR[EPVS]-1661319837243
========
if(thisBuf[i]==ch){
return false;
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319837245
GPR[SPVAP]-1661319837245
GPR[EPVAP]-1661319837944
GPR[EPVS]-1661319837944
========
if(thisBuf[i]==length){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319837946
GPR[SPVAP]-1661319837946
GPR[EPVAP]-1661319838654
GPR[EPVS]-1661319838654
========
if(thisBuf[i]==length){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319838656
GPR[SPVAP]-1661319838656
GPR[EPVAP]-1661319839365
GPR[EPVS]-1661319839365
========
if(thisBuf[i]==length){
return false;
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319839367
GPR[SPVAP]-1661319839367
GPR[EPVAP]-1661319840076
GPR[EPVS]-1661319840076
========
if(thisBuf[i]==ch){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319840077
GPR[SPVAP]-1661319840077
GPR[EPVAP]-1661319840784
GPR[EPVS]-1661319840784
========
if(thisBuf[i]==length){
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;
if(chars[i]=='e'||chars[i]=='E'){
return false;
}
return false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319840787
GPR[SPVAP]-1661319840787
GPR[EPVAP]-1661319841491
GPR[EPVS]-1661319841491
========
if(thisBuf[i]==sz){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319841494
GPR[SPVAP]-1661319841494
GPR[EPVAP]-1661319842199
GPR[EPVS]-1661319842199
========
CAPACITY--;
if(thisBuf[i]==ch){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319842200
GPR[SPVAP]-1661319842200
GPR[EPVAP]-1661319842907
GPR[EPVS]-1661319842907
========
CAPACITY--;
if(thisBuf[i]==sz){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319842910
GPR[SPVAP]-1661319842910
GPR[EPVAP]-1661319843608
GPR[EPVS]-1661319843608
========
CAPACITY--;
if(thisBuf[i]==sz){
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319843610
GPR[SPVAP]-1661319843610
GPR[EPVAP]-1661319844317
GPR[EPVS]-1661319844317
========
if(ch=='Y'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319844322
GPR[SPVAP]-1661319844322
GPR[EPVAP]-1661319845495
GPR[SPVATF]-1661319845495
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319846449
GPR[SPVATR]-1661319846450
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319855495
GPR[EPVS]-1661319855495
========
if(thisBuf[i]=='Y'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319855498
GPR[SPVAP]-1661319855498
GPR[EPVAP]-1661319856657
GPR[SPVATF]-1661319856657
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319857589
GPR[SPVATR]-1661319857590
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319866663
GPR[EPVS]-1661319866663
========
if(ch=='T'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319866667
GPR[SPVAP]-1661319866667
GPR[EPVAP]-1661319867831
GPR[SPVATF]-1661319867831
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319868766
GPR[SPVATR]-1661319868766
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319877832
GPR[EPVS]-1661319877832
========
if(thisBuf[i]=='T'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319877835
GPR[SPVAP]-1661319877835
GPR[EPVAP]-1661319878990
GPR[SPVATF]-1661319878990
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319879925
GPR[SPVATR]-1661319879926
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319888933
GPR[EPVS]-1661319888933
========
if(thisBuf[i]==ch){
allowSigns=false;
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319888936
GPR[SPVAP]-1661319888936
GPR[EPVAP]-1661319889649
GPR[EPVS]-1661319889649
========
if(thisBuf[i]==ch){
foundDigit=false;
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319889651
GPR[SPVAP]-1661319889651
GPR[EPVAP]-1661319890350
GPR[EPVS]-1661319890350
========
if(thisBuf[i]==ch){
allowSigns=false;
foundDigit=false;

return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319890352
GPR[SPVAP]-1661319890352
GPR[EPVAP]-1661319891060
GPR[EPVS]-1661319891060
========
if(thisBuf[i]==ch){
allowSigns=false;
foundDigit=false;
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319891062
GPR[SPVAP]-1661319891062
GPR[EPVAP]-1661319891762
GPR[EPVS]-1661319891762
========
if(thisBuf[i]==ch){
allowSigns=false;
allowSigns=false;
foundDigit=false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319891764
GPR[SPVAP]-1661319891764
GPR[EPVAP]-1661319892466
GPR[EPVS]-1661319892466
========
if(thisBuf[i]==ch){
foundDigit=false;
allowSigns=false;
foundDigit=false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319892468
GPR[SPVAP]-1661319892468
GPR[EPVAP]-1661319893170
GPR[EPVS]-1661319893170
========
if(thisBuf[i]==ch){
allowSigns=false;
foundDigit=false;
return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319893171
GPR[SPVAP]-1661319893171
GPR[EPVAP]-1661319893872
GPR[EPVS]-1661319893872
========
if(thisBuf[i]==ch){
allowSigns=false;
allowSigns=false;
foundDigit=false;

return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319893874
GPR[SPVAP]-1661319893874
GPR[EPVAP]-1661319894581
GPR[EPVS]-1661319894581
========
if(thisBuf[i]==ch){
foundDigit=false;
allowSigns=false;
foundDigit=false;

return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319894583
GPR[SPVAP]-1661319894583
GPR[EPVAP]-1661319895278
GPR[EPVS]-1661319895278
========
if(thisBuf[i]==ch){
allowSigns=false;
foundDigit=false;
allowSigns=false;
foundDigit=false;

return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319895280
GPR[SPVAP]-1661319895280
GPR[EPVAP]-1661319895989
GPR[EPVS]-1661319895989
========
if(thisBuf[i]==ch){
allowSigns=false;
foundDigit=false;
allowSigns=false;
foundDigit=false;

return false;
}

========
MM Copying to MM
GPR[SPVS]-1661319895991
GPR[SPVAP]-1661319895991
GPR[EPVAP]-1661319896714
GPR[EPVS]-1661319896714
========
if(ch=='y'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319896718
GPR[SPVAP]-1661319896718
GPR[EPVAP]-1661319897878
GPR[SPVATF]-1661319897878
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319898808
GPR[SPVATR]-1661319898809
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319908020
GPR[EPVS]-1661319908020
========
if(thisBuf[i]=='y'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319908023
GPR[SPVAP]-1661319908023
GPR[EPVAP]-1661319909281
GPR[SPVATF]-1661319909281
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319910209
GPR[SPVATR]-1661319910210
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319919327
GPR[EPVS]-1661319919327
========
if(ch=='t'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319919331
GPR[SPVAP]-1661319919331
GPR[EPVAP]-1661319920505
GPR[SPVATF]-1661319920505
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319921431
GPR[SPVATR]-1661319921432
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319930562
GPR[EPVS]-1661319930562
========
if(thisBuf[i]=='t'){
return true;
}

========
MM Copying to MM
GPR[SPVS]-1661319930564
GPR[SPVAP]-1661319930564
GPR[EPVAP]-1661319931729
GPR[SPVATF]-1661319931729
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319932666
GPR[EPVS]-1661319932666
========
for(int i=0;i<searchChars.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319933742
GPR[SPVAP]-1661319933742
GPR[EPVAP]-1661319934435
GPR[EPVS]-1661319934435
========
for(int i=0;i<thisBuf.length;i++){
if(searchChars[j]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319934437
GPR[SPVAP]-1661319934437
GPR[EPVAP]-1661319935161
GPR[EPVS]-1661319935161
========
for(int i=0;i<delimiters.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319935164
GPR[SPVAP]-1661319935164
GPR[EPVAP]-1661319935867
GPR[EPVS]-1661319935867
========
for(int i=0;i<thisBuf.length;i++){
if(ch==delimiters[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319935868
GPR[SPVAP]-1661319935868
GPR[EPVAP]-1661319936564
GPR[EPVS]-1661319936564
========
for(int i=0;i<array.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319936566
GPR[SPVAP]-1661319936566
GPR[EPVAP]-1661319937263
GPR[EPVS]-1661319937263
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==null){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319937265
GPR[SPVAP]-1661319937265
GPR[EPVAP]-1661319937976
GPR[EPVS]-1661319937976
========
for(int i=0;i<array.length;i++){
if(thisBuf[i]==null){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319937979
GPR[SPVAP]-1661319937979
GPR[EPVAP]-1661319938693
GPR[EPVS]-1661319938693
========
for(int i=0;i<array1.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319938696
GPR[SPVAP]-1661319938696
GPR[EPVAP]-1661319939401
GPR[EPVS]-1661319939401
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319939402
GPR[SPVAP]-1661319939402
GPR[EPVAP]-1661319940576
GPR[SPVATF]-1661319940576
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319941510
GPR[SPVATR]-1661319941511
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319950524
GPR[EPVS]-1661319950524
========
for(int i=0;i<array1.length;i++){
if(thisBuf[i]==ch){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319950526
GPR[SPVAP]-1661319950526
GPR[EPVAP]-1661319951247
GPR[EPVS]-1661319951247
========
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319951249
GPR[SPVAP]-1661319951249
GPR[EPVAP]-1661319952409
GPR[SPVATF]-1661319952409
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319953349
GPR[SPVATR]-1661319953349
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319962516
GPR[EPVS]-1661319962516
========
for(int i=0;i<thisBuf.length;i++){
if(buffer[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319962518
GPR[SPVAP]-1661319962518
GPR[EPVAP]-1661319963685
GPR[SPVATF]-1661319963685
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319964610
GPR[EPVS]-1661319964610
========
for(int i=CAPACITY;i<thisBuf.length;i++){
if(buffer[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319964612
GPR[SPVAP]-1661319964612
GPR[EPVAP]-1661319965765
GPR[SPVATF]-1661319965765
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319966696
GPR[SPVATR]-1661319966696
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319975865
GPR[EPVS]-1661319975865
========
for(int i=CAPACITY;i<array.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319975868
GPR[SPVAP]-1661319975868
GPR[EPVAP]-1661319976567
GPR[EPVS]-1661319976567
========
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]==null){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319976569
GPR[SPVAP]-1661319976569
GPR[EPVAP]-1661319977279
GPR[EPVS]-1661319977279
========
for(int i=CAPACITY;i<array.length;i++){
if(thisBuf[i]==null){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319977282
GPR[SPVAP]-1661319977282
GPR[EPVAP]-1661319977979
GPR[EPVS]-1661319977979
========
for(int i=0;i<classArray.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319977982
GPR[SPVAP]-1661319977982
GPR[EPVAP]-1661319978680
GPR[EPVS]-1661319978680
========
for(int i=0;i<classArray.length;i++){
if(thisBuf[i]==ch){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319978682
GPR[SPVAP]-1661319978682
GPR[EPVAP]-1661319979381
GPR[EPVS]-1661319979381
========
for(int i=size;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319979384
GPR[SPVAP]-1661319979384
GPR[EPVAP]-1661319980581
GPR[SPVATF]-1661319980581
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319981509
GPR[EPVS]-1661319981509
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319981511
GPR[SPVAP]-1661319981511
GPR[EPVAP]-1661319982672
GPR[SPVATF]-1661319982672
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319983606
GPR[EPVS]-1661319983606
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!=otherBuf[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319983608
GPR[SPVAP]-1661319983608
GPR[EPVAP]-1661319984308
GPR[EPVS]-1661319984308
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==buffer[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319984310
GPR[SPVAP]-1661319984310
GPR[EPVAP]-1661319985485
GPR[SPVATF]-1661319985485
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661319986411
GPR[EPVS]-1661319986411
========
for(int i=size;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319986413
GPR[SPVAP]-1661319986413
GPR[EPVAP]-1661319987568
GPR[SPVATF]-1661319987568
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319988513
GPR[SPVATR]-1661319988514
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661319997567
GPR[EPVS]-1661319997567
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!=ch){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661319997569
GPR[SPVAP]-1661319997569
GPR[EPVAP]-1661319998729
GPR[SPVATF]-1661319998729
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661319999664
GPR[SPVATR]-1661319999664
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320008682
GPR[EPVS]-1661320008682
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==buffer[i]){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320008684
GPR[SPVAP]-1661320008684
GPR[EPVAP]-1661320009849
GPR[SPVATF]-1661320009849
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320010778
GPR[SPVATR]-1661320010778
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320019810
GPR[EPVS]-1661320019810
========
for(int i=size;i<thisBuf.length;i++){
if(thisBuf[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320019812
GPR[SPVAP]-1661320019812
GPR[EPVAP]-1661320021014
GPR[SPVATF]-1661320021014
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320021956
GPR[EPVS]-1661320021956
========
for(int i=size;i<thisBuf.length;i++){
if(thisBuf[i]==buffer[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320021958
GPR[SPVAP]-1661320021958
GPR[EPVAP]-1661320023122
GPR[SPVATF]-1661320023122
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320024054
GPR[EPVS]-1661320024054
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!=buffer[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320024056
GPR[SPVAP]-1661320024056
GPR[EPVAP]-1661320025216
GPR[SPVATF]-1661320025216
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320026151
GPR[SPVATR]-1661320026151
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320035324
GPR[EPVS]-1661320035324
========
for(int i=size;i<thisBuf.length;i++){
if(thisBuf[i]!=ch){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320035326
GPR[SPVAP]-1661320035326
GPR[EPVAP]-1661320036487
GPR[SPVATF]-1661320036487
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320037419
GPR[SPVATR]-1661320037420
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320046458
GPR[EPVS]-1661320046458
========
for(int i=size;i<thisBuf.length;i++){
if(thisBuf[i]==buffer[i]){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320046460
GPR[SPVAP]-1661320046460
GPR[EPVAP]-1661320047636
GPR[SPVATF]-1661320047636
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320048564
GPR[SPVATR]-1661320048565
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320057605
GPR[EPVS]-1661320057605
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!=buffer[i]){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320057607
GPR[SPVAP]-1661320057607
GPR[EPVAP]-1661320058777
GPR[SPVATF]-1661320058777
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320059725
GPR[SPVATR]-1661320059726
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320068738
GPR[EPVS]-1661320068738
========
for(int i=size;i<thisBuf.length;i++){
if(thisBuf[i]!=buffer[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320068740
GPR[SPVAP]-1661320068740
GPR[EPVAP]-1661320069937
GPR[SPVATF]-1661320069937
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320070865
GPR[SPVATR]-1661320070866
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320079928
GPR[EPVS]-1661320079928
========
for(int i=size;i<thisBuf.length;i++){
if(thisBuf[i]!=buffer[i]){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320079930
GPR[SPVAP]-1661320079930
GPR[EPVAP]-1661320081092
GPR[SPVATF]-1661320081092
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320082028
GPR[SPVATR]-1661320082029
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320091088
GPR[EPVS]-1661320091088
========
for(int i=0;i<chars.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320091091
GPR[SPVAP]-1661320091091
GPR[EPVAP]-1661320091820
GPR[EPVS]-1661320091820
========
for(int i=0;i<thisBuf.length;i++){
if(chars[i]!=buffer[pos]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320091822
GPR[SPVAP]-1661320091822
GPR[EPVAP]-1661320092523
GPR[EPVS]-1661320092523
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==thisBuf[pos]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320092525
GPR[SPVAP]-1661320092525
GPR[EPVAP]-1661320093225
GPR[EPVS]-1661320093225
========
for(int i=0;i<chars.length;i++){
if(thisBuf[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320093227
GPR[SPVAP]-1661320093227
GPR[EPVAP]-1661320093923
GPR[EPVS]-1661320093923
========
for(int i=0;i<chars.length;i++){
if(buffer[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320093925
GPR[SPVAP]-1661320093925
GPR[EPVAP]-1661320094631
GPR[EPVS]-1661320094631
========
for(int i=0;i<thisBuf.length;i++){
if(buffer[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320094633
GPR[SPVAP]-1661320094633
GPR[EPVAP]-1661320095796
GPR[SPVATF]-1661320095796
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320096718
GPR[EPVS]-1661320096718
========
for(int i=0;i<chars.length;i++){
if(buffer[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320096719
GPR[SPVAP]-1661320096719
GPR[EPVAP]-1661320097426
GPR[EPVS]-1661320097426
========
for(int i=0;i<length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320097428
GPR[SPVAP]-1661320097428
GPR[EPVAP]-1661320098132
GPR[EPVS]-1661320098132
========
for(int i=0;i<size;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320098134
GPR[SPVAP]-1661320098134
GPR[EPVAP]-1661320099296
GPR[SPVATF]-1661320099296
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320100213
GPR[SPVATR]-1661320100213
TESTING : lang_60
MM messageFailing tests: 0
GPR[EPVATR]-1661320109218
GPR[EPVS]-1661320109218
GPR[PF]-1661320109218
sourceFile  script/workingdir/SimFix/lang/lang_60_buggy/src/java/org/apache/commons/lang/text/StrBuilder.java
location   script/workingdir/SimFix/lang/lang_60_buggy
MM Out patch at /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/patch_457840_1_ts_1661320109218.diff
MM Command diff diff -w -b  --label=/src/java/org/apache/commons/lang/text/StrBuilder.java --label=/src/java/org/apache/commons/lang/text/StrBuilder.java /tmp/tmpDirMM6543015737765443922/StrBuilder.java  /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/1_StrBuilder.java  --unified=3  > /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/patch_457840_1_ts_1661320109218.diff
MMOut command diff: []
========
for(int i=0;i<ts.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320109232
GPR[SPVAP]-1661320109232
GPR[EPVAP]-1661320109937
GPR[EPVS]-1661320109937
========
for(int i=0;i<throwables.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320109940
GPR[SPVAP]-1661320109940
GPR[EPVAP]-1661320110648
GPR[EPVS]-1661320110648
========
for(int i=CAPACITY;i<throwables.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320110650
GPR[SPVAP]-1661320110650
GPR[EPVAP]-1661320111350
GPR[EPVS]-1661320111350
========
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320111353
GPR[SPVAP]-1661320111353
GPR[EPVAP]-1661320112515
GPR[SPVATF]-1661320112515
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320113451
GPR[EPVS]-1661320113451
========
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]==ch){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320113453
GPR[SPVAP]-1661320113453
GPR[EPVAP]-1661320114614
GPR[SPVATF]-1661320114614
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320115550
GPR[SPVATR]-1661320115550
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320124713
GPR[EPVS]-1661320124713
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==min){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320124719
GPR[SPVAP]-1661320124719
GPR[EPVAP]-1661320125422
GPR[EPVS]-1661320125422
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==max){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320125425
GPR[SPVAP]-1661320125425
GPR[EPVAP]-1661320126125
GPR[EPVS]-1661320126125
========
for(int i=0;i<tokens.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320126128
GPR[SPVAP]-1661320126128
GPR[EPVAP]-1661320126828
GPR[EPVS]-1661320126828
========
checkTokenized();
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320126830
GPR[SPVAP]-1661320126830
GPR[EPVAP]-1661320127539
GPR[EPVS]-1661320127539
========
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320127542
GPR[SPVAP]-1661320127542
GPR[EPVAP]-1661320128689
GPR[SPVATF]-1661320128689
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320129618
GPR[EPVS]-1661320129618
========
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]!=ch){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320129620
GPR[SPVAP]-1661320129620
GPR[EPVAP]-1661320130825
GPR[SPVATF]-1661320130825
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320131753
GPR[SPVATR]-1661320131753
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320140935
GPR[EPVS]-1661320140935
========
for(int i=0;i<thisBuf.length;i++){
if(chars[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320140938
GPR[SPVAP]-1661320140938
GPR[EPVAP]-1661320141641
GPR[EPVS]-1661320141641
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==remove){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320141643
GPR[SPVAP]-1661320141643
GPR[EPVAP]-1661320142345
GPR[EPVS]-1661320142345
========
for(int i=0;i<CAUSE_METHOD_NAMES.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320142347
GPR[SPVAP]-1661320142347
GPR[EPVAP]-1661320143053
GPR[EPVS]-1661320143053
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]=='0'){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320143055
GPR[SPVAP]-1661320143055
GPR[EPVAP]-1661320144209
GPR[SPVATF]-1661320144209
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320145132
GPR[SPVATR]-1661320145133
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320154275
GPR[EPVS]-1661320154275
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]=='0'){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320154277
GPR[SPVAP]-1661320154277
GPR[EPVAP]-1661320155435
GPR[SPVATF]-1661320155435
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320156368
GPR[SPVATR]-1661320156369
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320165339
GPR[EPVS]-1661320165339
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!='0'){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320165342
GPR[SPVAP]-1661320165342
GPR[EPVAP]-1661320166537
GPR[SPVATF]-1661320166537
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320167469
GPR[EPVS]-1661320167469
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!='0'){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320167472
GPR[SPVAP]-1661320167472
GPR[EPVAP]-1661320168640
GPR[SPVATF]-1661320168640
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320169566
GPR[SPVATR]-1661320169567
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320178566
GPR[EPVS]-1661320178566
========
for(int i=0;i<methodNames.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320178569
GPR[SPVAP]-1661320178569
GPR[EPVAP]-1661320179272
GPR[EPVS]-1661320179272
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==PACKAGE_SEPARATOR_CHAR){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320179275
GPR[SPVAP]-1661320179275
GPR[EPVAP]-1661320179972
GPR[EPVS]-1661320179972
========
for(int i=0;i<thisBuf.length;i++){
if(chars[i]==PACKAGE_SEPARATOR_CHAR){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320179974
GPR[SPVAP]-1661320179974
GPR[EPVAP]-1661320180674
GPR[EPVS]-1661320180674
========
for(int i=0;i<chars.length;i++){
if(thisBuf[i]==PACKAGE_SEPARATOR_CHAR){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320180676
GPR[SPVAP]-1661320180676
GPR[EPVAP]-1661320181407
GPR[EPVS]-1661320181407
========
for(int i=0;i<array.length;i++){
if(thisBuf[i]==max){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320181409
GPR[SPVAP]-1661320181409
GPR[EPVAP]-1661320182136
GPR[EPVS]-1661320182136
========
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]==max){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320182138
GPR[SPVAP]-1661320182138
GPR[EPVAP]-1661320182841
GPR[EPVS]-1661320182841
========
for(int i=CAPACITY;i<array.length;i++){
if(thisBuf[i]==max){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320182842
GPR[SPVAP]-1661320182842
GPR[EPVAP]-1661320183548
GPR[EPVS]-1661320183548
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[pos]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320183551
GPR[SPVAP]-1661320183551
GPR[EPVAP]-1661320184247
GPR[EPVS]-1661320184247
========
if(i==-1){
return StringUtils.EMPTY;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320184250
GPR[SPVAP]-1661320184250
GPR[EPVAP]-1661320184956
GPR[EPVS]-1661320184956
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==value){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320184959
GPR[SPVAP]-1661320184959
GPR[EPVAP]-1661320185660
GPR[EPVS]-1661320185660
========
for(int i=0;i<thisBuf.length;i++){
if(invalidChars[j]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320185664
GPR[SPVAP]-1661320185664
GPR[EPVAP]-1661320186371
GPR[EPVS]-1661320186371
========
for(int i=0;i<length;i++){
if(thisBuf[i]==ch){
return false;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320186372
GPR[SPVAP]-1661320186372
GPR[EPVAP]-1661320187082
GPR[EPVS]-1661320187082
========
for(int i=0;i<mRules.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320187085
GPR[SPVAP]-1661320187085
GPR[EPVAP]-1661320187781
GPR[EPVS]-1661320187781
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==search){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320187783
GPR[SPVAP]-1661320187783
GPR[EPVAP]-1661320188517
GPR[EPVS]-1661320188517
========
for(int i=0;i<length;i++){
if(buffer[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320188518
GPR[SPVAP]-1661320188518
GPR[EPVAP]-1661320189215
GPR[EPVS]-1661320189215
========
for(int i=0;i<size;i++){
if(buffer[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320189217
GPR[SPVAP]-1661320189217
GPR[EPVAP]-1661320190379
GPR[SPVATF]-1661320190379
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320191325
GPR[SPVATR]-1661320191325
TESTING : lang_60
MM messageFailing tests: 0
GPR[EPVATR]-1661320200557
GPR[EPVS]-1661320200557
GPR[PF]-1661320200557
sourceFile  script/workingdir/SimFix/lang/lang_60_buggy/src/java/org/apache/commons/lang/text/StrBuilder.java
location   script/workingdir/SimFix/lang/lang_60_buggy
MM Out patch at /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/patch_549175_2_ts_1661320200557.diff
MM Command diff diff -w -b  --label=/src/java/org/apache/commons/lang/text/StrBuilder.java --label=/src/java/org/apache/commons/lang/text/StrBuilder.java /tmp/tmpDirMM3626485401559400222/StrBuilder.java  /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/2_StrBuilder.java  --unified=3  > /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/patch_549175_2_ts_1661320200557.diff
MMOut command diff: []
========
for(int i=0;i<length;i++){
if(thisBuf[i]==search){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320200567
GPR[SPVAP]-1661320200567
GPR[EPVAP]-1661320201272
GPR[EPVS]-1661320201272
========
for(int i=0;i<size;i++){
if(thisBuf[i]==search){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320201274
GPR[SPVAP]-1661320201274
GPR[EPVAP]-1661320201971
GPR[EPVS]-1661320201971
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320201974
GPR[SPVAP]-1661320201974
GPR[EPVAP]-1661320203129
GPR[SPVATF]-1661320203129
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320204054
GPR[EPVS]-1661320204054
========
for(int i=0;i<thisBuf.length;i++){
return i;
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320204056
GPR[SPVAP]-1661320204056
GPR[EPVAP]-1661320204754
GPR[EPVS]-1661320204754
========
for(int i=CAPACITY;i<length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320204755
GPR[SPVAP]-1661320204755
GPR[EPVAP]-1661320205454
GPR[EPVS]-1661320205454
========
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320205456
GPR[SPVAP]-1661320205456
GPR[EPVAP]-1661320206611
GPR[SPVATF]-1661320206611
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320207546
GPR[EPVS]-1661320207546
========
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320207547
GPR[SPVAP]-1661320207547
GPR[EPVAP]-1661320208696
GPR[SPVATF]-1661320208696
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320209626
GPR[EPVS]-1661320209626
========
for(int i=0;i<length;i++){
if(thisBuf[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320209628
GPR[SPVAP]-1661320209628
GPR[EPVAP]-1661320210331
GPR[EPVS]-1661320210331
========
for(int i=0;i<length;i++){
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320210334
GPR[SPVAP]-1661320210334
GPR[EPVAP]-1661320211048
GPR[EPVS]-1661320211048
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320211051
GPR[SPVAP]-1661320211051
GPR[EPVAP]-1661320212206
GPR[SPVATF]-1661320212206
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320213138
GPR[EPVS]-1661320213138
========
for(int i=CAPACITY;i<length;i++){
if(thisBuf[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320213140
GPR[SPVAP]-1661320213140
GPR[EPVAP]-1661320213852
GPR[EPVS]-1661320213852
========
for(int i=CAPACITY;i<length;i++){
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320213854
GPR[SPVAP]-1661320213854
GPR[EPVAP]-1661320214556
GPR[EPVS]-1661320214556
========
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320214558
GPR[SPVAP]-1661320214558
GPR[EPVAP]-1661320215724
GPR[SPVATF]-1661320215724
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320216652
GPR[EPVS]-1661320216652
========
for(int i=0;i<length;i++){
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320216653
GPR[SPVAP]-1661320216653
GPR[EPVAP]-1661320217355
GPR[EPVS]-1661320217355
========
for(int i=CAPACITY;i<length;i++){
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320217357
GPR[SPVAP]-1661320217357
GPR[EPVAP]-1661320218060
GPR[EPVS]-1661320218060
========
for(int i=CAPACITY;i<CAPACITY;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320218064
GPR[SPVAP]-1661320218064
GPR[EPVAP]-1661320219210
GPR[SPVATF]-1661320219210
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320220174
GPR[SPVATR]-1661320220175
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320229180
GPR[EPVS]-1661320229180
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==i){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320229183
GPR[SPVAP]-1661320229183
GPR[EPVAP]-1661320230360
GPR[SPVATF]-1661320230360
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320231287
GPR[SPVATR]-1661320231288
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320240323
GPR[EPVS]-1661320240323
========
for(int i=0;i<thisBuf.length;i++){
ch=chrs[i];
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320240326
GPR[SPVAP]-1661320240326
GPR[EPVAP]-1661320241027
GPR[EPVS]-1661320241027
========
for(int i=0;i<thisBuf.length;i++){
buffer.append(ch);
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320241029
GPR[SPVAP]-1661320241029
GPR[EPVAP]-1661320241726
GPR[EPVS]-1661320241726
========
for(int i=0;i<thisBuf.length;i++){
lastChar=ch;
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320241728
GPR[SPVAP]-1661320241728
GPR[EPVAP]-1661320242433
GPR[EPVS]-1661320242433
========
for(int i=0;i<thisBuf.length;i++){
ch=chrs[i];
buffer.append(ch);
lastChar=ch;

if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320242434
GPR[SPVAP]-1661320242434
GPR[EPVAP]-1661320243151
GPR[EPVS]-1661320243151
========
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]==i){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320243153
GPR[SPVAP]-1661320243153
GPR[EPVAP]-1661320244325
GPR[SPVATF]-1661320244325
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320245261
GPR[SPVATR]-1661320245262
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320254390
GPR[EPVS]-1661320254390
========
i=CAPACITY;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320254393
GPR[SPVAP]-1661320254393
GPR[EPVAP]-1661320255100
GPR[EPVS]-1661320255100
========
for(int i=0;i<fields.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320255102
GPR[SPVAP]-1661320255102
GPR[EPVAP]-1661320255802
GPR[EPVS]-1661320255802
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==startIndex){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320255806
GPR[SPVAP]-1661320255806
GPR[EPVAP]-1661320256520
GPR[EPVS]-1661320256520
========
for(int i=CAPACITY;i<thisBuf.length;i++){
return i;
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320256523
GPR[SPVAP]-1661320256523
GPR[EPVAP]-1661320257250
GPR[EPVS]-1661320257250
========
for(int i=0;i<thisBuf.length;i++){
return i;
if(thisBuf[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320257253
GPR[SPVAP]-1661320257253
GPR[EPVAP]-1661320257994
GPR[EPVS]-1661320257994
========
for(int i=0;i<thisBuf.length;i++){
return i;
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320257997
GPR[SPVAP]-1661320257997
GPR[EPVAP]-1661320258715
GPR[EPVS]-1661320258716
========
for(int i=CAPACITY;i<thisBuf.length;i++){
return i;
if(thisBuf[i]!=ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320258718
GPR[SPVAP]-1661320258718
GPR[EPVAP]-1661320259420
GPR[EPVS]-1661320259420
========
for(int i=CAPACITY;i<thisBuf.length;i++){
return i;
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320259421
GPR[SPVAP]-1661320259421
GPR[EPVAP]-1661320260124
GPR[EPVS]-1661320260124
========
for(int i=0;i<thisBuf.length;i++){
return i;
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320260126
GPR[SPVAP]-1661320260126
GPR[EPVAP]-1661320260834
GPR[EPVS]-1661320260834
========
for(int i=CAPACITY;i<thisBuf.length;i++){
return i;
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320260836
GPR[SPVAP]-1661320260836
GPR[EPVAP]-1661320261535
GPR[EPVS]-1661320261535
========
for(int i=0;i<parsePatterns.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320261537
GPR[SPVAP]-1661320261537
GPR[EPVAP]-1661320262255
GPR[EPVS]-1661320262255
========
for(int i=0;i<thisBuf.length;i++){
pos.setIndex(0);
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320262257
GPR[SPVAP]-1661320262257
GPR[EPVAP]-1661320262966
GPR[EPVS]-1661320262966
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==replaceCharsLength){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320262969
GPR[SPVAP]-1661320262969
GPR[EPVAP]-1661320263726
GPR[EPVS]-1661320263726
========
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==field){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320263730
GPR[SPVAP]-1661320263730
GPR[EPVAP]-1661320264432
GPR[EPVS]-1661320264432
========
for(int i=0;i<searchChars.length;i++){
if(searchChars[j]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320264434
GPR[SPVAP]-1661320264434
GPR[EPVAP]-1661320265130
GPR[EPVS]-1661320265130
========
for(int i=0;i<interfaces.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320265132
GPR[SPVAP]-1661320265132
GPR[EPVAP]-1661320265845
GPR[EPVS]-1661320265845
========
for(int i=0;i<=thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320265847
GPR[SPVAP]-1661320265847
GPR[EPVAP]-1661320267045
GPR[SPVATF]-1661320267045
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320267972
GPR[EPVS]-1661320267973
========
for(int i=0;i<=length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320267975
GPR[SPVAP]-1661320267975
GPR[EPVAP]-1661320268676
GPR[EPVS]-1661320268676
========
for(int i=0;i<newLine.length();i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320268679
GPR[SPVAP]-1661320268679
GPR[EPVAP]-1661320269841
GPR[SPVATF]-1661320269841
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320270776
GPR[EPVS]-1661320270776
========
for(int i=0;i<CAPACITY-newLine.length();i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320270779
GPR[SPVAP]-1661320270779
GPR[EPVAP]-1661320271934
GPR[SPVATF]-1661320271934
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320272860
GPR[EPVS]-1661320272860
========
for(int i=0;i<array.length;i++){
if(thisBuf[i]==min){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320272863
GPR[SPVAP]-1661320272863
GPR[EPVAP]-1661320273557
GPR[EPVS]-1661320273557
========
thisBuf[i]=ch;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320273560
GPR[SPVAP]-1661320273560
GPR[EPVAP]-1661320274263
GPR[EPVS]-1661320274263
========
System.arraycopy(buffer,0,thisBuf,0,i);
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320274265
GPR[SPVAP]-1661320274265
GPR[EPVAP]-1661320274972
GPR[EPVS]-1661320274972
========
newLine=str.toLowerCase();
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320274974
GPR[SPVAP]-1661320274974
GPR[EPVAP]-1661320275688
GPR[EPVS]-1661320275688
========
if(chars.length>0){
int i=length();
ensureCapacity(len+strLen);
System.arraycopy(thisBuf,0,buffer,len,strLen);
size+=strLen;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320275690
GPR[SPVAP]-1661320275690
GPR[EPVAP]-1661320276401
GPR[EPVS]-1661320276401
========
System.arraycopy(thisBuf,0,new char[array1.length+array2.length],0,array1.length);
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320276402
GPR[SPVAP]-1661320276402
GPR[EPVAP]-1661320277104
GPR[EPVS]-1661320277104
========
System.arraycopy(thisBuf,0,new char[array1.length+array2.length],array1.length,array2.length);
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320277107
GPR[SPVAP]-1661320277107
GPR[EPVAP]-1661320277843
GPR[EPVS]-1661320277843
========
substitute(new StrBuilder(source.length).append(thisBuf),0,source.length);
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320277846
GPR[SPVAP]-1661320277846
GPR[EPVAP]-1661320278565
GPR[EPVS]-1661320278565
========
if(chars.length>0){
ensureCapacity(size+len);
System.arraycopy(buffer,CAPACITY,buffer,index+len,size-index);
System.arraycopy(thisBuf,0,buffer,index,len);
size+=len;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320278567
GPR[SPVAP]-1661320278567
GPR[EPVAP]-1661320279275
GPR[EPVS]-1661320279275
========
for(int i=0;i<thisBuf.length;i++){
if(ch==array[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320279281
GPR[SPVAP]-1661320279281
GPR[EPVAP]-1661320279980
GPR[EPVS]-1661320279980
========
for(int i=0;i<thisBuf.length;i++){
appendDetail(buffer,newLine,thisBuf[i]);
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320279989
GPR[SPVAP]-1661320279989
GPR[EPVAP]-1661320280703
GPR[EPVS]-1661320280703
========
for(int i=0;i<array.length;i++){
if(ch==array[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320280707
GPR[SPVAP]-1661320280707
GPR[EPVAP]-1661320281417
GPR[EPVS]-1661320281417
========
for(int i=CAPACITY;i<thisBuf.length;i++){
if(ch==array[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320281419
GPR[SPVAP]-1661320281419
GPR[EPVAP]-1661320282122
GPR[EPVS]-1661320282122
========
for(int i=CAPACITY;i<array.length;i++){
if(ch==array[i]){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320282124
GPR[SPVAP]-1661320282124
GPR[EPVAP]-1661320282858
GPR[EPVS]-1661320282858
========
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]==startIndex){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320282863
GPR[SPVAP]-1661320282863
GPR[EPVAP]-1661320283561
GPR[EPVS]-1661320283561
========
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]==startIndex){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320283563
GPR[SPVAP]-1661320283563
GPR[EPVAP]-1661320284264
GPR[EPVS]-1661320284264
========
for(int i=CAPACITY;i<CAPACITY;i++){
if(thisBuf[i]==startIndex){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320284266
GPR[SPVAP]-1661320284266
GPR[EPVAP]-1661320284968
GPR[EPVS]-1661320284968
========
if(CAPACITY==1||i==0){
return newLine;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320284973
GPR[SPVAP]-1661320284973
GPR[EPVAP]-1661320285677
GPR[EPVS]-1661320285677
========
i=(startIndex>=size?size-1:startIndex);
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320285679
GPR[SPVAP]-1661320285679
GPR[EPVAP]-1661320286405
GPR[EPVS]-1661320286405
========
i*=(CAPACITY<0?16:(max>64?64:max));
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320286407
GPR[SPVAP]-1661320286407
GPR[EPVAP]-1661320287117
GPR[EPVS]-1661320287117
========
if(size-i<=0){
return newLine;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320287119
GPR[SPVAP]-1661320287119
GPR[EPVAP]-1661320287859
GPR[EPVS]-1661320287859
========
CAPACITY=newLine.length();
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320287862
GPR[SPVAP]-1661320287862
GPR[EPVAP]-1661320288564
GPR[EPVS]-1661320288564
========
if(i<=0){
return newLine;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320288566
GPR[SPVAP]-1661320288566
GPR[EPVAP]-1661320289271
GPR[EPVS]-1661320289271
========
if(CAPACITY<0){
start=0;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320289273
GPR[SPVAP]-1661320289273
GPR[EPVAP]-1661320289960
GPR[EPVS]-1661320289960
========
validateIndex(CAPACITY);
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320289962
GPR[SPVAP]-1661320289962
GPR[EPVAP]-1661320291114
GPR[SPVATF]-1661320291114
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320292049
GPR[EPVS]-1661320292049
========
if(i==1){
return indexOf(newLine.charAt(0),CAPACITY);
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320292051
GPR[SPVAP]-1661320292051
GPR[EPVAP]-1661320292754
GPR[EPVS]-1661320292754
========
if(i<2){
return EMPTY;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320292756
GPR[SPVAP]-1661320292756
GPR[EPVAP]-1661320293453
GPR[EPVS]-1661320293453
========
new StringBuffer(newLine.length()).append(newLine.substring(0,CAPACITY));
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320293456
GPR[SPVAP]-1661320293456
GPR[EPVAP]-1661320294623
GPR[SPVATF]-1661320294623
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320295553
GPR[EPVS]-1661320295553
========
if(i!=2&&len!=5&&len<7){
throw new IllegalArgumentException("Invalid locale format: "+newLine);
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320295556
GPR[SPVAP]-1661320295556
GPR[EPVAP]-1661320296257
GPR[EPVS]-1661320296257
========
if(i==0){
return ArrayUtils.EMPTY_STRING_ARRAY;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320296259
GPR[SPVAP]-1661320296259
GPR[EPVAP]-1661320296970
GPR[EPVS]-1661320296970
========
if(i==0){
return true;
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320296973
GPR[SPVAP]-1661320296973
GPR[EPVAP]-1661320297671
GPR[EPVS]-1661320297671
========
newLine=strip(str,null);
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320297673
GPR[SPVAP]-1661320297673
GPR[EPVAP]-1661320298372
GPR[EPVS]-1661320298372
========
if(ch=='Y'){
return (newLine.charAt(1)=='E'||str.charAt(1)=='e')&&(str.charAt(2)=='S'||str.charAt(2)=='s');
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320298375
GPR[SPVAP]-1661320298375
GPR[EPVAP]-1661320299081
GPR[EPVS]-1661320299081
========
if(ch=='T'){
return (newLine.charAt(1)=='R'||str.charAt(1)=='r')&&(str.charAt(2)=='U'||str.charAt(2)=='u');
}
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}

========
MM Copying to MM
GPR[SPVS]-1661320299082
GPR[SPVAP]-1661320299082
GPR[EPVAP]-1661320299791
GPR[EPVS]-1661320299791
========
char[] thisBuf=buffer;
CAPACITY=(startIndex<0?0:startIndex);
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320300781
GPR[SPVAP]-1661320300781
GPR[EPVAP]-1661320301471
GPR[EPVS]-1661320301471
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320301473
GPR[SPVAP]-1661320301473
GPR[EPVAP]-1661320302635
GPR[SPVATF]-1661320302635
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320303572
GPR[SPVATR]-1661320303572
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320312637
GPR[EPVS]-1661320312637
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(buffer[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320312639
GPR[SPVAP]-1661320312639
GPR[EPVAP]-1661320313809
GPR[SPVATF]-1661320313809
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320314739
GPR[EPVS]-1661320314739
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
if(buffer[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320314742
GPR[SPVAP]-1661320314742
GPR[EPVAP]-1661320315902
GPR[SPVATF]-1661320315902
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320316830
GPR[SPVATR]-1661320316830
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320325865
GPR[EPVS]-1661320325865
========
char[] thisBuf=buffer;
for(int i=0;i<searchChars.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320325868
GPR[SPVAP]-1661320325868
GPR[EPVAP]-1661320326568
GPR[EPVS]-1661320326568
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(searchChars[j]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320326570
GPR[SPVAP]-1661320326570
GPR[EPVAP]-1661320327278
GPR[EPVS]-1661320327278
========
char[] thisBuf=buffer;
for(int i=0;i<delimiters.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320327280
GPR[SPVAP]-1661320327280
GPR[EPVAP]-1661320328013
GPR[EPVS]-1661320328013
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(ch==delimiters[i]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320328014
GPR[SPVAP]-1661320328014
GPR[EPVAP]-1661320328728
GPR[EPVS]-1661320328728
========
char[] thisBuf=buffer;
for(int i=0;i<length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320328730
GPR[SPVAP]-1661320328730
GPR[EPVAP]-1661320329434
GPR[EPVS]-1661320329434
========
char[] thisBuf=buffer;
for(int i=0;i<size;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320329436
GPR[SPVAP]-1661320329436
GPR[EPVAP]-1661320330603
GPR[SPVATF]-1661320330603
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320331532
GPR[SPVATR]-1661320331533
TESTING : lang_60
MM messageFailing tests: 0
GPR[EPVATR]-1661320340513
GPR[EPVS]-1661320340513
GPR[PF]-1661320340513
sourceFile  script/workingdir/SimFix/lang/lang_60_buggy/src/java/org/apache/commons/lang/text/StrBuilder.java
location   script/workingdir/SimFix/lang/lang_60_buggy
MM Out patch at /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/patch_689132_3_ts_1661320340513.diff
MM Command diff diff -w -b  --label=/src/java/org/apache/commons/lang/text/StrBuilder.java --label=/src/java/org/apache/commons/lang/text/StrBuilder.java /tmp/tmpDirMM4110001510266542737/StrBuilder.java  /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/3_StrBuilder.java  --unified=3  > /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/patch_689132_3_ts_1661320340513.diff
MMOut command diff: []
========
char[] thisBuf=buffer;
for(int i=0;i<array.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320340525
GPR[SPVAP]-1661320340525
GPR[EPVAP]-1661320341234
GPR[EPVS]-1661320341234
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==null){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320341236
GPR[SPVAP]-1661320341236
GPR[EPVAP]-1661320341943
GPR[EPVS]-1661320341943
========
char[] thisBuf=buffer;
for(int i=0;i<array.length;i++){
if(thisBuf[i]==null){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320341946
GPR[SPVAP]-1661320341946
GPR[EPVAP]-1661320342641
GPR[EPVS]-1661320342641
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320342643
GPR[SPVAP]-1661320342643
GPR[EPVAP]-1661320343818
GPR[SPVATF]-1661320343818
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320344739
GPR[SPVATR]-1661320344740
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320353792
GPR[EPVS]-1661320353792
========
char[] thisBuf=buffer;
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320353794
GPR[SPVAP]-1661320353794
GPR[EPVAP]-1661320354946
GPR[SPVATF]-1661320354946
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320355875
GPR[EPVS]-1661320355875
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!=ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320355877
GPR[SPVAP]-1661320355877
GPR[EPVAP]-1661320357040
GPR[SPVATF]-1661320357040
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320357952
GPR[EPVS]-1661320357952
========
char[] thisBuf=buffer;
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]==ch){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320357954
GPR[SPVAP]-1661320357954
GPR[EPVAP]-1661320359131
GPR[SPVATF]-1661320359131
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320360047
GPR[SPVATR]-1661320360047
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320369165
GPR[EPVS]-1661320369165
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!=ch){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320369167
GPR[SPVAP]-1661320369167
GPR[EPVAP]-1661320370323
GPR[SPVATF]-1661320370323
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320371256
GPR[SPVATR]-1661320371257
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320380276
GPR[EPVS]-1661320380276
========
char[] thisBuf=buffer;
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]!=ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320380278
GPR[SPVAP]-1661320380278
GPR[EPVAP]-1661320381441
GPR[SPVATF]-1661320381441
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320382385
GPR[EPVS]-1661320382385
========
char[] thisBuf=buffer;
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]!=ch){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320382387
GPR[SPVAP]-1661320382387
GPR[EPVAP]-1661320383554
GPR[SPVATF]-1661320383554
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320384498
GPR[SPVATR]-1661320384498
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320393512
GPR[EPVS]-1661320393512
========
char[] thisBuf=buffer;
for(int i=0;i<array1.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320393515
GPR[SPVAP]-1661320393515
GPR[EPVAP]-1661320394220
GPR[EPVS]-1661320394220
========
char[] thisBuf=buffer;
for(int i=0;i<array1.length;i++){
if(thisBuf[i]==ch){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320394222
GPR[SPVAP]-1661320394222
GPR[EPVAP]-1661320394927
GPR[EPVS]-1661320394927
========
char[] thisBuf=buffer;
for(int i=0;i<classArray.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320394929
GPR[SPVAP]-1661320394929
GPR[EPVAP]-1661320395635
GPR[EPVS]-1661320395635
========
char[] thisBuf=buffer;
for(int i=0;i<classArray.length;i++){
if(thisBuf[i]==ch){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320395637
GPR[SPVAP]-1661320395637
GPR[EPVAP]-1661320396333
GPR[EPVS]-1661320396333
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<array.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320396338
GPR[SPVAP]-1661320396338
GPR[EPVAP]-1661320397040
GPR[EPVS]-1661320397040
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]==null){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320397042
GPR[SPVAP]-1661320397042
GPR[EPVAP]-1661320397740
GPR[EPVS]-1661320397740
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<array.length;i++){
if(thisBuf[i]==null){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320397742
GPR[SPVAP]-1661320397742
GPR[EPVAP]-1661320398447
GPR[EPVS]-1661320398447
========
char[] thisBuf=length;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320398449
GPR[SPVAP]-1661320398449
GPR[EPVAP]-1661320399147
GPR[EPVS]-1661320399147
========
char[] thisBuf=buffer;
for(int i=0;i<tokens.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320399149
GPR[SPVAP]-1661320399149
GPR[EPVAP]-1661320399848
GPR[EPVS]-1661320399848
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[pos]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320399851
GPR[SPVAP]-1661320399851
GPR[EPVAP]-1661320400573
GPR[EPVS]-1661320400573
========
char[] thisBuf=buffer;
for(int i=0;i<ts.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320400575
GPR[SPVAP]-1661320400575
GPR[EPVAP]-1661320401277
GPR[EPVS]-1661320401277
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==search){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320401279
GPR[SPVAP]-1661320401279
GPR[EPVAP]-1661320401993
GPR[EPVS]-1661320401993
========
char[] thisBuf=buffer;
for(int i=0;i<length;i++){
if(buffer[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320401995
GPR[SPVAP]-1661320401995
GPR[EPVAP]-1661320402701
GPR[EPVS]-1661320402701
========
char[] thisBuf=buffer;
for(int i=0;i<size;i++){
if(buffer[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320402703
GPR[SPVAP]-1661320402703
GPR[EPVAP]-1661320403870
GPR[SPVATF]-1661320403870
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320404814
GPR[SPVATR]-1661320404814
TESTING : lang_60
MM messageFailing tests: 0
GPR[EPVATR]-1661320413959
GPR[EPVS]-1661320413959
GPR[PF]-1661320413959
sourceFile  script/workingdir/SimFix/lang/lang_60_buggy/src/java/org/apache/commons/lang/text/StrBuilder.java
location   script/workingdir/SimFix/lang/lang_60_buggy
MM Out patch at /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/patch_762579_4_ts_1661320413959.diff
MM Command diff diff -w -b  --label=/src/java/org/apache/commons/lang/text/StrBuilder.java --label=/src/java/org/apache/commons/lang/text/StrBuilder.java /tmp/tmpDirMM4260241053618546630/StrBuilder.java  /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/4_StrBuilder.java  --unified=3  > /experiment_home///results/SimFix/Lang/60/seed_283/patch/lang/60/0/patch_762579_4_ts_1661320413959.diff
MMOut command diff: []
========
char[] thisBuf=buffer;
for(int i=size;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320413969
GPR[SPVAP]-1661320413969
GPR[EPVAP]-1661320415125
GPR[SPVATF]-1661320415125
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320416065
GPR[EPVS]-1661320416065
========
char[] thisBuf=buffer;
for(int i=0;i<throwables.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320416067
GPR[SPVAP]-1661320416067
GPR[EPVAP]-1661320416765
GPR[EPVS]-1661320416765
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<throwables.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320416767
GPR[SPVAP]-1661320416767
GPR[EPVAP]-1661320417471
GPR[EPVS]-1661320417471
========
char[] thisBuf=chars;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320417474
GPR[SPVAP]-1661320417474
GPR[EPVAP]-1661320418172
GPR[EPVS]-1661320418172
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==min){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320418177
GPR[SPVAP]-1661320418177
GPR[EPVAP]-1661320418870
GPR[EPVS]-1661320418870
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==max){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320418873
GPR[SPVAP]-1661320418873
GPR[EPVAP]-1661320419578
GPR[EPVS]-1661320419578
========
char[] thisBuf=buffer;
for(int i=0;i<length;i++){
if(thisBuf[i]==search){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320419580
GPR[SPVAP]-1661320419580
GPR[EPVAP]-1661320420280
GPR[EPVS]-1661320420280
========
char[] thisBuf=buffer;
for(int i=0;i<size;i++){
if(thisBuf[i]==search){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320420282
GPR[SPVAP]-1661320420282
GPR[EPVAP]-1661320420992
GPR[EPVS]-1661320420992
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320420994
GPR[SPVAP]-1661320420994
GPR[EPVAP]-1661320422145
GPR[SPVATF]-1661320422145
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320423075
GPR[EPVS]-1661320423075
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
return i;
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320423077
GPR[SPVAP]-1661320423077
GPR[EPVAP]-1661320423793
GPR[EPVS]-1661320423793
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320423795
GPR[SPVAP]-1661320423795
GPR[EPVAP]-1661320424492
GPR[EPVS]-1661320424492
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]!=ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320424495
GPR[SPVAP]-1661320424495
GPR[EPVAP]-1661320425665
GPR[SPVATF]-1661320425665
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320426600
GPR[EPVS]-1661320426600
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320426602
GPR[SPVAP]-1661320426602
GPR[EPVAP]-1661320427756
GPR[SPVATF]-1661320427756
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320428678
GPR[EPVS]-1661320428678
========
char[] thisBuf=buffer;
for(int i=0;i<length;i++){
if(thisBuf[i]!=ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320428680
GPR[SPVAP]-1661320428680
GPR[EPVAP]-1661320429370
GPR[EPVS]-1661320429370
========
char[] thisBuf=buffer;
for(int i=0;i<length;i++){
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320429372
GPR[SPVAP]-1661320429372
GPR[EPVAP]-1661320430075
GPR[EPVS]-1661320430075
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320430076
GPR[SPVAP]-1661320430076
GPR[EPVAP]-1661320431219
GPR[SPVATF]-1661320431219
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320432157
GPR[EPVS]-1661320432157
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<length;i++){
if(thisBuf[i]!=ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320432159
GPR[SPVAP]-1661320432159
GPR[EPVAP]-1661320432861
GPR[EPVS]-1661320432861
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<length;i++){
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320432863
GPR[SPVAP]-1661320432863
GPR[EPVAP]-1661320433565
GPR[EPVS]-1661320433565
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320433567
GPR[SPVAP]-1661320433567
GPR[EPVAP]-1661320434719
GPR[SPVATF]-1661320434719
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320435634
GPR[EPVS]-1661320435634
========
char[] thisBuf=buffer;
for(int i=0;i<length;i++){
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320435637
GPR[SPVAP]-1661320435637
GPR[EPVAP]-1661320436340
GPR[EPVS]-1661320436340
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<length;i++){
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320436342
GPR[SPVAP]-1661320436342
GPR[EPVAP]-1661320437037
GPR[EPVS]-1661320437037
========
char[] thisBuf=buffer;
for(int i=0;i<CAUSE_METHOD_NAMES.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320437040
GPR[SPVAP]-1661320437040
GPR[EPVAP]-1661320437744
GPR[EPVS]-1661320437744
========
char[] thisBuf=buffer;
checkTokenized();
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320437746
GPR[SPVAP]-1661320437746
GPR[EPVAP]-1661320438461
GPR[EPVS]-1661320438461
========
char[] thisBuf=buffer;
for(int i=0;i<methodNames.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320438463
GPR[SPVAP]-1661320438463
GPR[EPVAP]-1661320439166
GPR[EPVS]-1661320439166
========
char[] thisBuf=buffer;
for(int i=0;i<chars.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320439168
GPR[SPVAP]-1661320439168
GPR[EPVAP]-1661320439864
GPR[EPVS]-1661320439864
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(chars[i]!=ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320439866
GPR[SPVAP]-1661320439866
GPR[EPVAP]-1661320440558
GPR[EPVS]-1661320440558
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==remove){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320440560
GPR[SPVAP]-1661320440560
GPR[EPVAP]-1661320441264
GPR[EPVS]-1661320441264
========
char[] thisBuf=buffer;
for(int i=0;i<chars.length;i++){
if(thisBuf[i]!=ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320441266
GPR[SPVAP]-1661320441266
GPR[EPVAP]-1661320441968
GPR[EPVS]-1661320441968
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]=='0'){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320441970
GPR[SPVAP]-1661320441970
GPR[EPVAP]-1661320443122
GPR[SPVATF]-1661320443122
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320444053
GPR[SPVATR]-1661320444054
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320453196
GPR[EPVS]-1661320453196
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]=='0'){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320453199
GPR[SPVAP]-1661320453199
GPR[EPVAP]-1661320454380
GPR[SPVATF]-1661320454380
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320455297
GPR[SPVATR]-1661320455297
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320464275
GPR[EPVS]-1661320464275
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!='0'){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320464277
GPR[SPVAP]-1661320464277
GPR[EPVAP]-1661320465440
GPR[SPVATF]-1661320465440
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320466383
GPR[EPVS]-1661320466383
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]!='0'){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320466384
GPR[SPVAP]-1661320466385
GPR[EPVAP]-1661320467543
GPR[SPVATF]-1661320467543
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320468464
GPR[SPVATR]-1661320468465
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320477657
GPR[EPVS]-1661320477657
========
if(i==-1){
return StringUtils.EMPTY;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320477661
GPR[SPVAP]-1661320477661
GPR[EPVAP]-1661320478374
GPR[EPVS]-1661320478374
========
char[] thisBuf=buffer;
for(int i=0;i<array.length;i++){
if(thisBuf[i]==max){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320478377
GPR[SPVAP]-1661320478377
GPR[EPVAP]-1661320479075
GPR[EPVS]-1661320479075
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
if(thisBuf[i]==max){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320479077
GPR[SPVAP]-1661320479077
GPR[EPVAP]-1661320479781
GPR[EPVS]-1661320479781
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<array.length;i++){
if(thisBuf[i]==max){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320479783
GPR[SPVAP]-1661320479783
GPR[EPVAP]-1661320480482
GPR[EPVS]-1661320480482
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==value){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320480484
GPR[SPVAP]-1661320480484
GPR[EPVAP]-1661320481184
GPR[EPVS]-1661320481184
========
char[] thisBuf=buffer;
for(int i=0;i<mRules.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320481186
GPR[SPVAP]-1661320481186
GPR[EPVAP]-1661320481883
GPR[EPVS]-1661320481883
========
char[] thisBuf=invalidChars;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320481887
GPR[SPVAP]-1661320481887
GPR[EPVAP]-1661320482594
GPR[EPVS]-1661320482594
========
char[] thisBuf=chrs;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320482596
GPR[SPVAP]-1661320482596
GPR[EPVAP]-1661320483325
GPR[EPVS]-1661320483325
========
char[] thisBuf=buffer;
for(int i=0;i<chrs.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320483327
GPR[SPVAP]-1661320483327
GPR[EPVAP]-1661320484027
GPR[EPVS]-1661320484027
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
return i;
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320484029
GPR[SPVAP]-1661320484029
GPR[EPVAP]-1661320484726
GPR[EPVS]-1661320484726
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
return i;
if(thisBuf[i]!=ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320484728
GPR[SPVAP]-1661320484728
GPR[EPVAP]-1661320485488
GPR[EPVS]-1661320485488
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
return i;
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320485490
GPR[SPVAP]-1661320485490
GPR[EPVAP]-1661320486185
GPR[EPVS]-1661320486185
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
return i;
if(thisBuf[i]!=ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320486187
GPR[SPVAP]-1661320486187
GPR[EPVAP]-1661320486888
GPR[EPVS]-1661320486888
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
return i;
if(thisBuf[i]==thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320486890
GPR[SPVAP]-1661320486890
GPR[EPVAP]-1661320487587
GPR[EPVS]-1661320487588
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
return i;
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320487589
GPR[SPVAP]-1661320487589
GPR[EPVAP]-1661320488306
GPR[EPVS]-1661320488306
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
return i;
if(thisBuf[i]!=thisBuf[i+CAPACITY]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320488309
GPR[SPVAP]-1661320488309
GPR[EPVAP]-1661320489008
GPR[EPVS]-1661320489008
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==PACKAGE_SEPARATOR_CHAR){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320489012
GPR[SPVAP]-1661320489012
GPR[EPVAP]-1661320489734
GPR[EPVS]-1661320489734
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(chars[i]==PACKAGE_SEPARATOR_CHAR){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320489736
GPR[SPVAP]-1661320489736
GPR[EPVAP]-1661320490446
GPR[EPVS]-1661320490446
========
char[] thisBuf=buffer;
for(int i=0;i<chars.length;i++){
if(thisBuf[i]==PACKAGE_SEPARATOR_CHAR){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320490448
GPR[SPVAP]-1661320490448
GPR[EPVAP]-1661320491149
GPR[EPVS]-1661320491149
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==i){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320491152
GPR[SPVAP]-1661320491152
GPR[EPVAP]-1661320492304
GPR[SPVATF]-1661320492304
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320493239
GPR[SPVATR]-1661320493239
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320502256
GPR[EPVS]-1661320502256
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
ch=chrs[i];
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320502259
GPR[SPVAP]-1661320502259
GPR[EPVAP]-1661320502963
GPR[EPVS]-1661320502963
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
buffer.append(ch);
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320502965
GPR[SPVAP]-1661320502965
GPR[EPVAP]-1661320503668
GPR[EPVS]-1661320503668
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
lastChar=ch;
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320503670
GPR[SPVAP]-1661320503670
GPR[EPVAP]-1661320504375
GPR[EPVS]-1661320504375
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
ch=chrs[i];
buffer.append(ch);
lastChar=ch;

if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320504377
GPR[SPVAP]-1661320504377
GPR[EPVAP]-1661320505084
GPR[EPVS]-1661320505084
========
char[] thisBuf=buffer;
for(int i=0;i<CAPACITY;i++){
if(thisBuf[i]==i){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320505086
GPR[SPVAP]-1661320505086
GPR[EPVAP]-1661320506243
GPR[SPVATF]-1661320506243
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320507164
GPR[SPVATR]-1661320507165
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320516311
GPR[EPVS]-1661320516311
========
char[] thisBuf=buffer;
for(int i=0;i<fields.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320516314
GPR[SPVAP]-1661320516314
GPR[EPVAP]-1661320517018
GPR[EPVS]-1661320517018
========
i=CAPACITY;
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320517020
GPR[SPVAP]-1661320517020
GPR[EPVAP]-1661320517723
GPR[EPVS]-1661320517723
========
char[] thisBuf=array;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320517726
GPR[SPVAP]-1661320517726
GPR[EPVAP]-1661320518430
GPR[EPVS]-1661320518430
========
char[] thisBuf=buffer;
for(int i=0;i<parsePatterns.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320518432
GPR[SPVAP]-1661320518432
GPR[EPVAP]-1661320519135
GPR[EPVS]-1661320519135
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
pos.setIndex(0);
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320519137
GPR[SPVAP]-1661320519137
GPR[EPVAP]-1661320519835
GPR[EPVS]-1661320519835
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==replaceCharsLength){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320519838
GPR[SPVAP]-1661320519838
GPR[EPVAP]-1661320520536
GPR[EPVS]-1661320520536
========
char[] thisBuf=buffer;
for(int i=0;i<CAPACITY-CAPACITY;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320520538
GPR[SPVAP]-1661320520538
GPR[EPVAP]-1661320521688
GPR[SPVATF]-1661320521688
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320522606
GPR[SPVATR]-1661320522606
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testContains_char
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320531727
GPR[EPVS]-1661320531727
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==field){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320531730
GPR[SPVAP]-1661320531730
GPR[EPVAP]-1661320532449
GPR[EPVS]-1661320532449
========
if(CAPACITY>size){
return -1;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320532451
GPR[SPVAP]-1661320532451
GPR[EPVAP]-1661320533157
GPR[EPVS]-1661320533157
========
CAPACITY--;
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320533160
GPR[SPVAP]-1661320533160
GPR[EPVAP]-1661320533854
GPR[EPVS]-1661320533854
========
char[] thisBuf=buffer;
for(int i=0;i<chars.length;i++){
if(thisBuf[i]==ch){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320533856
GPR[SPVAP]-1661320533856
GPR[EPVAP]-1661320534557
GPR[EPVS]-1661320534557
========
CAPACITY=++CAPACITY;
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320534560
GPR[SPVAP]-1661320534560
GPR[EPVAP]-1661320535252
GPR[EPVS]-1661320535252
========
char[] thisBuf=buffer;
for(int i=0;i<interfaces.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320535255
GPR[SPVAP]-1661320535255
GPR[EPVAP]-1661320535957
GPR[EPVS]-1661320535957
========
char[] thisBuf=buffer;
for(int i=0;i<searchChars.length;i++){
if(searchChars[j]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320535959
GPR[SPVAP]-1661320535959
GPR[EPVAP]-1661320536661
GPR[EPVS]-1661320536661
========
char[] thisBuf=buffer;
for(int i=0;i<=thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320536663
GPR[SPVAP]-1661320536663
GPR[EPVAP]-1661320537822
GPR[SPVATF]-1661320537822
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320538752
GPR[EPVS]-1661320538752
========
char[] thisBuf=buffer;
for(int i=0;i<=length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320538755
GPR[SPVAP]-1661320538755
GPR[EPVAP]-1661320539452
GPR[EPVS]-1661320539452
========
char[] thisBuf=buffer;
for(int i=0;i<newLine.length();i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320539454
GPR[SPVAP]-1661320539454
GPR[EPVAP]-1661320540624
GPR[SPVATF]-1661320540624
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320541545
GPR[EPVS]-1661320541545
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
c=newLine.charAt(i);
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320541547
GPR[SPVAP]-1661320541547
GPR[EPVAP]-1661320542252
GPR[EPVS]-1661320542252
========
thisBuf[i]=ch;
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320542254
GPR[SPVAP]-1661320542254
GPR[EPVAP]-1661320542945
GPR[EPVS]-1661320542945
========
System.arraycopy(buffer,0,thisBuf,0,i);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320542947
GPR[SPVAP]-1661320542947
GPR[EPVAP]-1661320543649
GPR[EPVS]-1661320543649
========
if(chars.length>0){
int i=length();
ensureCapacity(len+strLen);
System.arraycopy(thisBuf,0,buffer,len,strLen);
size+=strLen;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320543652
GPR[SPVAP]-1661320543652
GPR[EPVAP]-1661320544359
GPR[EPVS]-1661320544359
========
System.arraycopy(buffer,0,new char[size],0,size);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320544362
GPR[SPVAP]-1661320544362
GPR[EPVAP]-1661320545516
GPR[SPVATF]-1661320545516
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320546451
GPR[EPVS]-1661320546451
========
if(chars.length>0){
ensureCapacity(size+len);
System.arraycopy(buffer,CAPACITY,buffer,index+len,size-index);
System.arraycopy(thisBuf,0,buffer,index,len);
size+=len;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320546453
GPR[SPVAP]-1661320546453
GPR[EPVAP]-1661320547185
GPR[EPVS]-1661320547185
========
char[] thisBuf=buffer;
for(int i=0;i<array.length;i++){
if(thisBuf[i]==min){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320547187
GPR[SPVAP]-1661320547187
GPR[EPVAP]-1661320547884
GPR[EPVS]-1661320547884
========
char[] thisBuf=buffer;
i=validateRange(CAPACITY,endIndex);
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320547886
GPR[SPVAP]-1661320547886
GPR[EPVAP]-1661320548585
GPR[EPVS]-1661320548585
========
System.arraycopy(buffer,CAPACITY,new char[i-CAPACITY],0,i-CAPACITY);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320548587
GPR[SPVAP]-1661320548587
GPR[EPVAP]-1661320549295
GPR[EPVS]-1661320549295
========
char[] thisBuf=delimiters;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320549297
GPR[SPVAP]-1661320549297
GPR[EPVAP]-1661320549991
GPR[EPVS]-1661320549991
========
newLine=str.toLowerCase();
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320549993
GPR[SPVAP]-1661320549993
GPR[EPVAP]-1661320550691
GPR[EPVS]-1661320550691
========
System.arraycopy(thisBuf,0,new char[array1.length+array2.length],0,array1.length);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320550693
GPR[SPVAP]-1661320550693
GPR[EPVAP]-1661320551413
GPR[EPVS]-1661320551413
========
System.arraycopy(thisBuf,0,new char[array1.length+array2.length],array1.length,array2.length);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320551415
GPR[SPVAP]-1661320551415
GPR[EPVAP]-1661320552119
GPR[EPVS]-1661320552119
========
substitute(new StrBuilder(source.length).append(thisBuf),0,source.length);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320552121
GPR[SPVAP]-1661320552121
GPR[EPVAP]-1661320552848
GPR[EPVS]-1661320552848
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==hash){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320552851
GPR[SPVAP]-1661320552851
GPR[EPVAP]-1661320553565
GPR[EPVS]-1661320553565
========
if(CAPACITY>0){
int i=length();
ensureCapacity(len+strLen);
System.arraycopy(str.buffer,0,buffer,len,strLen);
size+=strLen;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320553568
GPR[SPVAP]-1661320553568
GPR[EPVAP]-1661320554282
GPR[EPVS]-1661320554282
========
if(CAPACITY<0||endIndex>length()){
throw new StringIndexOutOfBoundsException(endIndex);
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320554284
GPR[SPVAP]-1661320554284
GPR[EPVAP]-1661320554987
GPR[EPVS]-1661320554987
========
if(CAPACITY>CAPACITY){
throw new StringIndexOutOfBoundsException("end < start");
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320554988
GPR[SPVAP]-1661320554988
GPR[EPVAP]-1661320556163
GPR[SPVATF]-1661320556163
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320557096
GPR[EPVS]-1661320557096
========
System.arraycopy(buffer,CAPACITY,thisBuf,CAPACITY,CAPACITY-startIndex);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320557098
GPR[SPVAP]-1661320557098
GPR[EPVAP]-1661320557794
GPR[EPVS]-1661320557794
========
char[] thisBuf=value;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320557796
GPR[SPVAP]-1661320557796
GPR[EPVAP]-1661320558494
GPR[EPVS]-1661320558494
========
if(newLine.length()>0){
int i=length();
ensureCapacity(len+strLen);
newLine.getChars(0,strLen,buffer,len);
size+=strLen;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320558497
GPR[SPVAP]-1661320558497
GPR[EPVAP]-1661320559201
GPR[EPVS]-1661320559201
========
if(i>0){
int size+i=size+strLen;
ensureCapacity(newSize);
System.arraycopy(buffer,CAPACITY,buffer,index+strLen,size-index);
size=newSize;
newLine.getChars(0,strLen,buffer,index);
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320559203
GPR[SPVAP]-1661320559203
GPR[EPVAP]-1661320559751
GPR[EPVS]-1661320559751
========
char[] thisBuf=buffer;
super();
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320559753
GPR[SPVAP]-1661320559753
GPR[EPVAP]-1661320560450
GPR[EPVS]-1661320560450
========
thisBuf=new char[CAPACITY];
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320560451
GPR[SPVAP]-1661320560451
GPR[EPVAP]-1661320561152
GPR[EPVS]-1661320561152
========
if(buffer!=null&&delimiters.length==0){
return "";
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320561154
GPR[SPVAP]-1661320561154
GPR[EPVAP]-1661320561853
GPR[EPVS]-1661320561853
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(ch==array[i]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320561860
GPR[SPVAP]-1661320561860
GPR[EPVAP]-1661320562564
GPR[EPVS]-1661320562564
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
appendDetail(buffer,newLine,thisBuf[i]);
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320562568
GPR[SPVAP]-1661320562568
GPR[EPVAP]-1661320563292
GPR[EPVS]-1661320563292
========
if(isEmpty(newLine)){
padStr=" ";
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320563295
GPR[SPVAP]-1661320563295
GPR[EPVAP]-1661320563999
GPR[EPVS]-1661320563999
========
if(size-i<=0){
return newLine;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320564001
GPR[SPVAP]-1661320564001
GPR[EPVAP]-1661320564708
GPR[EPVS]-1661320564708
========
char[] thisBuf=buffer;
for(int i=0;i<array.length;i++){
if(ch==array[i]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320564714
GPR[SPVAP]-1661320564714
GPR[EPVAP]-1661320565428
GPR[EPVS]-1661320565428
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<thisBuf.length;i++){
if(ch==array[i]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320565430
GPR[SPVAP]-1661320565430
GPR[EPVAP]-1661320566130
GPR[EPVS]-1661320566130
========
char[] thisBuf=buffer;
for(int i=CAPACITY;i<array.length;i++){
if(ch==array[i]){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320566132
GPR[SPVAP]-1661320566132
GPR[EPVAP]-1661320566835
GPR[EPVS]-1661320566835
========
CAPACITY--;
char[] thisBuf=buffer;
for(int i=0;i<chars.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320566839
GPR[SPVAP]-1661320566839
GPR[EPVAP]-1661320567561
GPR[EPVS]-1661320567561
========
CAPACITY--;
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320567563
GPR[SPVAP]-1661320567563
GPR[EPVAP]-1661320568258
GPR[EPVS]-1661320568258
========
CAPACITY--;
char[] thisBuf=buffer;
for(int i=0;i<chars.length;i++){
if(thisBuf[i]==ch){
return false;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320568260
GPR[SPVAP]-1661320568260
GPR[EPVAP]-1661320568961
GPR[EPVS]-1661320568961
========
newLine=leftPad(str,i+size-i/2,ch);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320568963
GPR[SPVAP]-1661320568963
GPR[EPVAP]-1661320569664
GPR[EPVS]-1661320569664
========
newLine=rightPad(str,size,ch);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320569666
GPR[SPVAP]-1661320569666
GPR[EPVAP]-1661320570377
GPR[EPVS]-1661320570377
========
CAPACITY=(increase<0?0:increase);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320570380
GPR[SPVAP]-1661320570380
GPR[EPVAP]-1661320571073
GPR[EPVS]-1661320571073
========
if(i<2){
return EMPTY;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320571075
GPR[SPVAP]-1661320571075
GPR[EPVAP]-1661320571769
GPR[EPVS]-1661320571769
========
if(ch==CharUtils.LF){
if(newLine.charAt(i-1)==CharUtils.CR){
lastIdx--;
}
}else {
lastIdx++;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320571771
GPR[SPVAP]-1661320571771
GPR[EPVAP]-1661320572484
GPR[EPVS]-1661320572484
========
if(i<=0){
return newLine;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320572488
GPR[SPVAP]-1661320572488
GPR[EPVAP]-1661320573200
GPR[EPVS]-1661320573200
========
if(i>PAD_LIMIT){
return rightPad(newLine,size,String.valueOf(ch));
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320573202
GPR[SPVAP]-1661320573202
GPR[EPVAP]-1661320573914
GPR[EPVS]-1661320573915
========
if(i>PAD_LIMIT){
return leftPad(newLine,size,String.valueOf(ch));
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320573916
GPR[SPVAP]-1661320573916
GPR[EPVAP]-1661320574622
GPR[EPVS]-1661320574622
========
char[] thisBuf=buffer;
i*=(CAPACITY<0?16:(max>64?64:max));
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320574625
GPR[SPVAP]-1661320574625
GPR[EPVAP]-1661320575319
GPR[EPVS]-1661320575319
========
if(newLine==null){
overlay=EMPTY;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320575321
GPR[SPVAP]-1661320575321
GPR[EPVAP]-1661320576024
GPR[EPVS]-1661320576024
========
if(CAPACITY<0){
start=0;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320576026
GPR[SPVAP]-1661320576026
GPR[EPVAP]-1661320576760
GPR[EPVS]-1661320576760
========
if(CAPACITY>i){
start=len;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320576763
GPR[SPVAP]-1661320576763
GPR[EPVAP]-1661320577468
GPR[EPVS]-1661320577468
========
if(CAPACITY<=0){
return EMPTY;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320577470
GPR[SPVAP]-1661320577470
GPR[EPVAP]-1661320578173
GPR[EPVS]-1661320578173
========
if(CAPACITY==1||i==0){
return newLine;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320578175
GPR[SPVAP]-1661320578175
GPR[EPVAP]-1661320578897
GPR[EPVS]-1661320578897
========
if(i==1&&CAPACITY<=PAD_LIMIT){
return padding(repeat,newLine.charAt(0));
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320578899
GPR[SPVAP]-1661320578899
GPR[EPVAP]-1661320579603
GPR[EPVS]-1661320579603
========
if(newLine==null){
return EMPTY;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320579606
GPR[SPVAP]-1661320579606
GPR[EPVAP]-1661320580307
GPR[EPVS]-1661320580307
========
if(i==-1){
return EMPTY;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320580309
GPR[SPVAP]-1661320580309
GPR[EPVAP]-1661320581018
GPR[EPVS]-1661320581018
========
if(CAPACITY<1){
wrapLength=1;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320581020
GPR[SPVAP]-1661320581020
GPR[EPVAP]-1661320581733
GPR[EPVS]-1661320581733
========
if((newLine==null)||("".equals(separator))){
return split(newLine,null,CAPACITY);
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320581735
GPR[SPVAP]-1661320581735
GPR[EPVAP]-1661320582433
GPR[EPVS]-1661320582433
========
if(newLine==null){
return ;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320583192
GPR[SPVAP]-1661320583192
GPR[EPVAP]-1661320583893
GPR[EPVS]-1661320583893
========
CAPACITY=newLine.length();
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320583894
GPR[SPVAP]-1661320583894
GPR[EPVAP]-1661320584595
GPR[EPVS]-1661320584595
========
if(i!=2&&len!=5&&len<7){
throw new IllegalArgumentException("Invalid locale format: "+newLine);
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320584597
GPR[SPVAP]-1661320584597
GPR[EPVAP]-1661320585317
GPR[EPVS]-1661320585317
========
if(i>CAPACITY){
int i=start;
start=end;
end=temp;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320585319
GPR[SPVAP]-1661320585319
GPR[EPVAP]-1661320586021
GPR[EPVS]-1661320586021
========
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return true;

========
MM Copying to MM
GPR[SPVS]-1661320586023
GPR[SPVAP]-1661320586023
GPR[EPVAP]-1661320587187
GPR[SPVATF]-1661320587187
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320588119
GPR[EPVS]-1661320588119
========
if(i>size){
return false;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320588121
GPR[SPVAP]-1661320588121
GPR[EPVAP]-1661320588825
GPR[EPVS]-1661320588825
========
if(i>size){
return false;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return true;

========
MM Copying to MM
GPR[SPVS]-1661320588827
GPR[SPVAP]-1661320588827
GPR[EPVAP]-1661320589544
GPR[EPVS]-1661320589544
========
if(i==0){
return ArrayUtils.EMPTY_STRING_ARRAY;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320589547
GPR[SPVAP]-1661320589547
GPR[EPVAP]-1661320590252
GPR[EPVS]-1661320590252
========
if(isEmpty(newLine)){
return EMPTY;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320590254
GPR[SPVAP]-1661320590254
GPR[EPVAP]-1661320590956
GPR[EPVS]-1661320590956
========
if(i==-1||pos==(newLine.length()-newLine.length())){
return EMPTY;
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320590957
GPR[SPVAP]-1661320590957
GPR[EPVAP]-1661320591659
GPR[EPVS]-1661320591659
========
try{
StringWriter new StringWriter(newLine.length())=new StringWriter(newLine.length());
unescapeJava(writer,str);
return writer.toString();
}catch (IOException ioe) {
  ioe.printStackTrace();
  return null;
}

char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320591662
GPR[SPVAP]-1661320591662
GPR[EPVAP]-1661320592214
GPR[EPVS]-1661320592214
========
try{
StringWriter new StringWriter((int)(newLine.length()*1.5))=new StringWriter((int)(newLine.length()*1.5));
escapeHtml(writer,str);
return writer.toString();
}catch (IOException e) {
  e.printStackTrace();
  return null;
}

char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320592216
GPR[SPVAP]-1661320592216
GPR[EPVAP]-1661320592770
GPR[EPVS]-1661320592770
========
try{
StringWriter new StringWriter((int)(newLine.length()*1.5))=new StringWriter((int)(newLine.length()*1.5));
unescapeHtml(writer,str);
return writer.toString();
}catch (IOException e) {
  e.printStackTrace();
  return null;
}

char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320592773
GPR[SPVAP]-1661320592773
GPR[EPVAP]-1661320593325
GPR[EPVS]-1661320593325
========
newLine=strip(str,null);
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320593327
GPR[SPVAP]-1661320593327
GPR[EPVAP]-1661320594033
GPR[EPVS]-1661320594033
========
if(newLine.startsWith("0x")||val.startsWith("-0x")){
return createInteger(val);
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320594035
GPR[SPVAP]-1661320594035
GPR[EPVAP]-1661320594744
GPR[EPVS]-1661320594744
========
if(newLine.startsWith("0x")||str.startsWith("-0x")){
return createInteger(str);
}
char[] thisBuf=buffer;
for(int i=0;i<thisBuf.length;i++){
if(thisBuf[i]==ch){
return true;
}
}
return false;

========
MM Copying to MM
GPR[SPVS]-1661320594747
GPR[SPVAP]-1661320594747
GPR[EPVAP]-1661320595453
GPR[EPVS]-1661320595453
GPR[ESUN]-1661320595454
GPR[SSUN]-1661320595454
org.apache.commons.lang.text.StrBuilder,1673
GPR[ESUN]-1661320595563
GPR[SSUN]-1661320595563
org.apache.commons.lang.text.StrBuilder,1674
GPR[ESUN]-1661320595614
GPR[SSUN]-1661320595614
org.apache.commons.lang.text.StrBuilder,1675
GPR[ESUN]-1661320595659
GPR[SSUN]-1661320595659
org.apache.commons.lang.text.StrBuilder,1202
========
if(index>=len){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320596098
GPR[SPVAP]-1661320596098
GPR[EPVAP]-1661320599176
GPR[SPVATF]-1661320599176
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320600101
GPR[EPVS]-1661320600101
========
deleteImpl(index,index+1,1);
if(index>=0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320600102
GPR[SPVAP]-1661320600102
GPR[EPVAP]-1661320601276
GPR[SPVATF]-1661320601276
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320602210
GPR[EPVS]-1661320602210
========
deleteImpl(index,index+1,1);
if(index>=len){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320602211
GPR[SPVAP]-1661320602211
GPR[EPVAP]-1661320603368
GPR[SPVATF]-1661320603368
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320604291
GPR[EPVS]-1661320604291
========
if(index>=0){
break;
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320604293
GPR[SPVAP]-1661320604293
GPR[EPVAP]-1661320604996
GPR[EPVS]-1661320604996
========
if(len>=0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320604999
GPR[SPVAP]-1661320604999
GPR[EPVAP]-1661320606160
GPR[SPVATF]-1661320606160
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320607089
GPR[EPVS]-1661320607089
========
if(index>=0){
index=(CAPACITY&0x7fffffff)%tab.length;
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320607091
GPR[SPVAP]-1661320607091
GPR[EPVAP]-1661320607793
GPR[EPVS]-1661320607793
========
if(index>=INDEX_NOT_FOUND){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320607795
GPR[SPVAP]-1661320607795
GPR[EPVAP]-1661320608494
GPR[EPVS]-1661320608494
========
if(index>0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320608496
GPR[SPVAP]-1661320608496
GPR[EPVAP]-1661320609651
GPR[SPVATF]-1661320609651
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320610593
GPR[EPVS]-1661320610593
========
if(len>0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320610595
GPR[SPVAP]-1661320610595
GPR[EPVAP]-1661320611764
GPR[SPVATF]-1661320611764
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320612686
GPR[EPVS]-1661320612686
========
if(index+len>=0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320612688
GPR[SPVAP]-1661320612688
GPR[EPVAP]-1661320613841
GPR[SPVATF]-1661320613841
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320614785
GPR[EPVS]-1661320614785
========
if(index+len>0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320614787
GPR[SPVAP]-1661320614787
GPR[EPVAP]-1661320615960
GPR[SPVATF]-1661320615960
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320616905
GPR[EPVS]-1661320616905
========
if(index>len){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320616907
GPR[SPVAP]-1661320616907
GPR[EPVAP]-1661320618086
GPR[SPVATF]-1661320618086
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320619020
GPR[EPVS]-1661320619020
========
if(index+len>=len){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320619022
GPR[SPVAP]-1661320619022
GPR[EPVAP]-1661320620191
GPR[SPVATF]-1661320620191
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320621118
GPR[EPVS]-1661320621118
========
if(index+len>len){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320621120
GPR[SPVAP]-1661320621120
GPR[EPVAP]-1661320622319
GPR[SPVATF]-1661320622319
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320623280
GPR[EPVS]-1661320623280
========
this.getChars(index,pos+len,buffer,len);
if(index>=0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320623284
GPR[SPVAP]-1661320623284
GPR[EPVAP]-1661320624035
GPR[EPVS]-1661320624035
========
index+=len;
if(index>=0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320624036
GPR[SPVAP]-1661320624036
GPR[EPVAP]-1661320625205
GPR[SPVATF]-1661320625205
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320626172
GPR[EPVS]-1661320626172
========
index+=len;
if(index>0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320626174
GPR[SPVAP]-1661320626174
GPR[EPVAP]-1661320627327
GPR[SPVATF]-1661320627327
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320628257
GPR[EPVS]-1661320628257
========
index+=len;
if(index+len>=0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320628259
GPR[SPVAP]-1661320628259
GPR[EPVAP]-1661320629444
GPR[SPVATF]-1661320629444
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320630385
GPR[EPVS]-1661320630385
========
index+=len;
if(index+len>0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320630387
GPR[SPVAP]-1661320630387
GPR[EPVAP]-1661320631549
GPR[SPVATF]-1661320631549
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320632472
GPR[EPVS]-1661320632472
========
if(str==null){
return null;
}
if(index>=0){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320632474
GPR[SPVAP]-1661320632474
GPR[EPVAP]-1661320633635
GPR[SPVATF]-1661320633635
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320634553
GPR[EPVS]-1661320634553
========
if(index>=0){
return CAPACITY+index;
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320634554
GPR[SPVAP]-1661320634554
GPR[EPVAP]-1661320635249
GPR[EPVS]-1661320635249
========
if(index>=str.length()){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320635251
GPR[SPVAP]-1661320635251
GPR[EPVAP]-1661320636406
GPR[SPVATF]-1661320636406
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320637343
GPR[EPVS]-1661320637343
========
if(index>=CAPACITY){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320637345
GPR[SPVAP]-1661320637345
GPR[EPVAP]-1661320638491
GPR[SPVATF]-1661320638491
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320639476
GPR[EPVS]-1661320639476
========
if(index>CAPACITY){
deleteImpl(index,index+len,len);
}

========
MM Copying to MM
GPR[SPVS]-1661320639479
GPR[SPVAP]-1661320639479
GPR[EPVAP]-1661320640651
GPR[SPVATF]-1661320640651
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320641581
GPR[EPVS]-1661320641581
========
if(index>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320642255
GPR[SPVAP]-1661320642255
GPR[EPVAP]-1661320642950
GPR[EPVS]-1661320642950
========
if(index>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320642952
GPR[SPVAP]-1661320642952
GPR[EPVAP]-1661320643652
GPR[EPVS]-1661320643652
========
if(len>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320643654
GPR[SPVAP]-1661320643654
GPR[EPVAP]-1661320644352
GPR[EPVS]-1661320644352
========
deleteImpl(index,index+1,1);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320644354
GPR[SPVAP]-1661320644354
GPR[EPVAP]-1661320645060
GPR[EPVS]-1661320645060
========
if(searchLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320645062
GPR[SPVAP]-1661320645062
GPR[EPVAP]-1661320645762
GPR[EPVS]-1661320645762
========
if(len>pos){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320645765
GPR[SPVAP]-1661320645765
GPR[EPVAP]-1661320646508
GPR[EPVS]-1661320646508
========
if(start>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320646510
GPR[SPVAP]-1661320646510
GPR[EPVAP]-1661320647206
GPR[EPVS]-1661320647207
========
if(str==null||newLine==null||str==null){
return null;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320647208
GPR[SPVAP]-1661320647208
GPR[EPVAP]-1661320648409
GPR[SPVATF]-1661320648409
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320649336
GPR[EPVS]-1661320649336
========
if(length>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320649338
GPR[SPVAP]-1661320649338
GPR[EPVAP]-1661320650044
GPR[EPVS]-1661320650044
========
if(len>size){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320650046
GPR[SPVAP]-1661320650046
GPR[EPVAP]-1661320651199
GPR[SPVATF]-1661320651199
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320652132
GPR[EPVS]-1661320652132
========
if(index>size){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320652135
GPR[SPVAP]-1661320652135
GPR[EPVAP]-1661320652840
GPR[EPVS]-1661320652840
========
if(index==1){
return indexOf(str.charAt(0),len);
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320652842
GPR[SPVAP]-1661320652842
GPR[EPVAP]-1661320653547
GPR[EPVS]-1661320653547
========
if(semi>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320653549
GPR[SPVAP]-1661320653549
GPR[EPVAP]-1661320654254
GPR[EPVS]-1661320654254
========
if(offset>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320654256
GPR[SPVAP]-1661320654256
GPR[EPVAP]-1661320654962
GPR[EPVS]-1661320654962
========
if(len>chars.length){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320654964
GPR[SPVAP]-1661320654964
GPR[EPVAP]-1661320655663
GPR[EPVS]-1661320655663
========
validateIndex(index);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320655664
GPR[SPVAP]-1661320655664
GPR[EPVAP]-1661320656368
GPR[EPVS]-1661320656368
========
if(buffer==null){
return insert(index,str);
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320656370
GPR[SPVAP]-1661320656370
GPR[EPVAP]-1661320657091
GPR[EPVS]-1661320657091
========
if(len>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320657092
GPR[SPVAP]-1661320657092
GPR[EPVAP]-1661320658251
GPR[SPVATF]-1661320658251
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320659181
GPR[EPVS]-1661320659181
========
if(count>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320659183
GPR[SPVAP]-1661320659183
GPR[EPVAP]-1661320659884
GPR[EPVS]-1661320659884
========
if(len>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320659886
GPR[SPVAP]-1661320659886
GPR[EPVAP]-1661320661038
GPR[SPVATF]-1661320661038
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320661964
GPR[EPVS]-1661320661964
========
if(len>=CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320661967
GPR[SPVAP]-1661320661967
GPR[EPVAP]-1661320663122
GPR[SPVATF]-1661320663122
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320664055
GPR[EPVS]-1661320664055
========
if(index>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320664057
GPR[SPVAP]-1661320664057
GPR[EPVAP]-1661320664790
GPR[EPVS]-1661320664790
========
if(CAPACITY>len){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320664792
GPR[SPVAP]-1661320664792
GPR[EPVAP]-1661320665940
GPR[SPVATF]-1661320665940
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320666881
GPR[EPVS]-1661320666881
========
if(CAPACITY>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320666882
GPR[SPVAP]-1661320666882
GPR[EPVAP]-1661320668039
GPR[SPVATF]-1661320668039
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320668973
GPR[EPVS]-1661320668973
========
if(end>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320668975
GPR[SPVAP]-1661320668975
GPR[EPVAP]-1661320669677
GPR[EPVS]-1661320669677
========
if(str==null||str==null){
return -1;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320669679
GPR[SPVAP]-1661320669679
GPR[EPVAP]-1661320670401
GPR[EPVS]-1661320670401
========
if(strLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320670403
GPR[SPVAP]-1661320670403
GPR[EPVAP]-1661320671109
GPR[EPVS]-1661320671109
========
if(len>0){
ensureCapacity(index+len);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320671111
GPR[SPVAP]-1661320671111
GPR[EPVAP]-1661320671808
GPR[EPVS]-1661320671808
========
if(len>0){
str.getChars(0,len,buffer,index);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320671810
GPR[SPVAP]-1661320671810
GPR[EPVAP]-1661320672513
GPR[EPVS]-1661320672513
========
if(len>0){
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320672514
GPR[SPVAP]-1661320672514
GPR[EPVAP]-1661320673670
GPR[SPVATF]-1661320673670
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320674604
GPR[SPVATR]-1661320674605
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testDeleteFirst_String
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320683719
GPR[EPVS]-1661320683719
========
if(len>0){
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320683720
GPR[SPVAP]-1661320683720
GPR[EPVAP]-1661320684424
GPR[EPVS]-1661320684424
========
if(str==null){
return appendNull();
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320684426
GPR[SPVAP]-1661320684426
GPR[EPVAP]-1661320685586
GPR[SPVATF]-1661320685586
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320686520
GPR[EPVS]-1661320686520
========
if(str==null){
return appendNull();
}
if(len>0){
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320686523
GPR[SPVAP]-1661320686523
GPR[EPVAP]-1661320687683
GPR[SPVATF]-1661320687683
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 0
GPR[EPVATF]-1661320688609
GPR[SPVATR]-1661320688610
TESTING : lang_60
MM message  - org.apache.commons.lang.text.StrBuilderTest::testDeleteFirst_String
MM messageFailing tests: 1
MM messageRunning ant (run.dev.tests)................................................ OK
MM messageRunning ant (compile.tests)................................................ OK
GPR[EPVATR]-1661320697673
GPR[EPVS]-1661320697673
========
if(size>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320697675
GPR[SPVAP]-1661320697675
GPR[EPVAP]-1661320698831
GPR[SPVATF]-1661320698831
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320699776
GPR[EPVS]-1661320699776
========
if(size>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320699778
GPR[SPVAP]-1661320699778
GPR[EPVAP]-1661320700484
GPR[EPVS]-1661320700484
========
if(size>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320700486
GPR[SPVAP]-1661320700486
GPR[EPVAP]-1661320701652
GPR[SPVATF]-1661320701652
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320702608
GPR[EPVS]-1661320702608
========
if(len>0){
str.getChars(CAPACITY,startIndex+len,buffer,index);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320702610
GPR[SPVAP]-1661320702610
GPR[EPVAP]-1661320703311
GPR[EPVS]-1661320703311
========
if(len>0){
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320703313
GPR[SPVAP]-1661320703313
GPR[EPVAP]-1661320704009
GPR[EPVS]-1661320704009
========
if(length>0){
ensureCapacity(index+len);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320704011
GPR[SPVAP]-1661320704011
GPR[EPVAP]-1661320704717
GPR[EPVS]-1661320704717
========
if(length>0){
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320704718
GPR[SPVAP]-1661320704718
GPR[EPVAP]-1661320705415
GPR[EPVS]-1661320705415
========
if(len>0){
ensureCapacity(index+len);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320705417
GPR[SPVAP]-1661320705417
GPR[EPVAP]-1661320706113
GPR[EPVS]-1661320706113
========
if(length>0){
ensureCapacity(index+len);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320706115
GPR[SPVAP]-1661320706115
GPR[EPVAP]-1661320706819
GPR[EPVS]-1661320706819
========
if(removeLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320706821
GPR[SPVAP]-1661320706821
GPR[EPVAP]-1661320707514
GPR[EPVS]-1661320707514
========
if(quoteLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320707516
GPR[SPVAP]-1661320707516
GPR[EPVAP]-1661320708233
GPR[EPVS]-1661320708233
========
if(strLen>0){
ensureCapacity(index+len);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320708235
GPR[SPVAP]-1661320708235
GPR[EPVAP]-1661320708935
GPR[EPVS]-1661320708935
========
if(strLen>0){
str.getChars(0,len,buffer,index);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320708937
GPR[SPVAP]-1661320708937
GPR[EPVAP]-1661320709641
GPR[EPVS]-1661320709641
========
if(strLen>0){
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320709642
GPR[SPVAP]-1661320709642
GPR[EPVAP]-1661320710346
GPR[EPVS]-1661320710346
========
if(strLen>0){
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320710347
GPR[SPVAP]-1661320710347
GPR[EPVAP]-1661320711052
GPR[EPVS]-1661320711052
========
if(len>0){
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320711054
GPR[SPVAP]-1661320711054
GPR[EPVAP]-1661320711751
GPR[EPVS]-1661320711751
========
if(len>0){
ensureCapacity(index+len);
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320711753
GPR[SPVAP]-1661320711753
GPR[EPVAP]-1661320712454
GPR[EPVS]-1661320712454
========
if(len>0){
str.getChars(0,len,buffer,index);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320712456
GPR[SPVAP]-1661320712456
GPR[EPVAP]-1661320713162
GPR[EPVS]-1661320713162
========
if(len>0){
str.getChars(0,len,buffer,index);
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320713164
GPR[SPVAP]-1661320713164
GPR[EPVAP]-1661320713869
GPR[EPVS]-1661320713869
========
if(len>0){
size+=len;
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320713871
GPR[SPVAP]-1661320713871
GPR[EPVAP]-1661320714595
GPR[EPVS]-1661320714595
========
if(strLen>0){
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320714596
GPR[SPVAP]-1661320714596
GPR[EPVAP]-1661320715296
GPR[EPVS]-1661320715296
========
if(strLen>0){
ensureCapacity(index+len);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320715298
GPR[SPVAP]-1661320715298
GPR[EPVAP]-1661320715996
GPR[EPVS]-1661320715996
========
if(strLen>0){
ensureCapacity(index+len);
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320715998
GPR[SPVAP]-1661320715998
GPR[EPVAP]-1661320716721
GPR[EPVS]-1661320716721
========
if(strLen>0){
str.getChars(0,len,buffer,index);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320716723
GPR[SPVAP]-1661320716723
GPR[EPVAP]-1661320717441
GPR[EPVS]-1661320717441
========
if(strLen>0){
str.getChars(0,len,buffer,index);
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320717442
GPR[SPVAP]-1661320717442
GPR[EPVAP]-1661320718145
GPR[EPVS]-1661320718145
========
if(strLen>0){
size+=len;
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320718147
GPR[SPVAP]-1661320718147
GPR[EPVAP]-1661320718851
GPR[EPVS]-1661320718851
========
if(len>0){
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320718853
GPR[SPVAP]-1661320718853
GPR[EPVAP]-1661320719557
GPR[EPVS]-1661320719557
========
if(len>0){
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320719559
GPR[SPVAP]-1661320719559
GPR[EPVAP]-1661320720262
GPR[EPVS]-1661320720262
========
if(len>0){
ensureCapacity(index+len);
size+=len;
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320720264
GPR[SPVAP]-1661320720264
GPR[EPVAP]-1661320720961
GPR[EPVS]-1661320720961
========
if(len>0){
str.getChars(0,len,buffer,index);
size+=len;
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320720963
GPR[SPVAP]-1661320720963
GPR[EPVAP]-1661320721665
GPR[EPVS]-1661320721665
========
if(strLen>0){
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320721666
GPR[SPVAP]-1661320721666
GPR[EPVAP]-1661320722364
GPR[EPVS]-1661320722364
========
if(strLen>0){
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320722366
GPR[SPVAP]-1661320722366
GPR[EPVAP]-1661320723063
GPR[EPVS]-1661320723063
========
if(strLen>0){
ensureCapacity(index+len);
size+=len;
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320723064
GPR[SPVAP]-1661320723064
GPR[EPVAP]-1661320723767
GPR[EPVS]-1661320723767
========
if(strLen>0){
str.getChars(0,len,buffer,index);
size+=len;
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320723769
GPR[SPVAP]-1661320723769
GPR[EPVAP]-1661320724498
GPR[EPVS]-1661320724498
========
if(len>0){
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;
ensureCapacity(index+len);
str.getChars(0,len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320724499
GPR[SPVAP]-1661320724499
GPR[EPVAP]-1661320725200
GPR[EPVS]-1661320725200
========
if(newLine.indexOf(str,index)==-1){
return newLine;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320725202
GPR[SPVAP]-1661320725202
GPR[EPVAP]-1661320725904
GPR[EPVS]-1661320725904
========
if(len>0){
System.arraycopy(buffer,0,buffer,index,len);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320725907
GPR[SPVAP]-1661320725907
GPR[EPVAP]-1661320726605
GPR[EPVS]-1661320726605
========
if(len>0){
ensureCapacity(index+len);
System.arraycopy(buffer,0,buffer,index,len);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320726607
GPR[SPVAP]-1661320726607
GPR[EPVAP]-1661320727333
GPR[EPVS]-1661320727333
========
if(len>0){
System.arraycopy(str.buffer,0,buffer,index,len);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320727334
GPR[SPVAP]-1661320727334
GPR[EPVAP]-1661320728039
GPR[EPVS]-1661320728039
========
if(len>0){
ensureCapacity(index+len);
System.arraycopy(str.buffer,0,buffer,index,len);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320728041
GPR[SPVAP]-1661320728041
GPR[EPVAP]-1661320728741
GPR[EPVS]-1661320728741
========
if(CAPACITY>=len){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320728743
GPR[SPVAP]-1661320728743
GPR[EPVAP]-1661320729905
GPR[SPVATF]-1661320729905
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320730845
GPR[EPVS]-1661320730845
========
if(CAPACITY>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320730847
GPR[SPVAP]-1661320730847
GPR[EPVAP]-1661320732009
GPR[SPVATF]-1661320732009
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320732942
GPR[EPVS]-1661320732942
========
if(start>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320732944
GPR[SPVAP]-1661320732944
GPR[EPVAP]-1661320733649
GPR[EPVS]-1661320733649
========
if(numberOfSubstrings>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320733650
GPR[SPVAP]-1661320733650
GPR[EPVAP]-1661320734350
GPR[EPVS]-1661320734350
========
if(index<'a'||ch0>'z'||str.charAt(1)<'a'||ch1>'z'){
throw new IllegalArgumentException("Invalid locale format: "+str);
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320734353
GPR[SPVAP]-1661320734353
GPR[EPVAP]-1661320735075
GPR[EPVS]-1661320735075
========
if(len>0){
System.arraycopy(buffer,CAPACITY,buffer,index,len);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320735078
GPR[SPVAP]-1661320735078
GPR[EPVAP]-1661320735780
GPR[EPVS]-1661320735780
========
if(len>0){
ensureCapacity(index+len);
System.arraycopy(buffer,CAPACITY,buffer,index,len);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320735783
GPR[SPVAP]-1661320735783
GPR[EPVAP]-1661320736486
GPR[EPVS]-1661320736486
========
if(length>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320736488
GPR[SPVAP]-1661320736488
GPR[EPVAP]-1661320737192
GPR[EPVS]-1661320737192
========
if(pos>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320737194
GPR[SPVAP]-1661320737194
GPR[EPVAP]-1661320737899
GPR[EPVS]-1661320737899
========
if(i>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320737900
GPR[SPVAP]-1661320737900
GPR[EPVAP]-1661320738605
GPR[EPVS]-1661320738605
========
if(start>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320738608
GPR[SPVAP]-1661320738608
GPR[EPVAP]-1661320739309
GPR[EPVS]-1661320739309
========
index=validateRange(CAPACITY,endIndex);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320739311
GPR[SPVAP]-1661320739311
GPR[EPVAP]-1661320740014
GPR[EPVS]-1661320740014
========
System.arraycopy(buffer,CAPACITY,new char[len],0,len);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320740016
GPR[SPVAP]-1661320740016
GPR[EPVAP]-1661320741174
GPR[SPVATF]-1661320741174
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320742124
GPR[EPVS]-1661320742124
========
if(len+index>size()){
len=this.size()-pos;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320742126
GPR[SPVAP]-1661320742126
GPR[EPVAP]-1661320742822
GPR[EPVS]-1661320742822
========
this.getChars(len,pos+index,buffer,CAPACITY);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320742824
GPR[SPVAP]-1661320742824
GPR[EPVAP]-1661320743534
GPR[EPVS]-1661320743534
========
len+=index;
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320743535
GPR[SPVAP]-1661320743535
GPR[EPVAP]-1661320744233
GPR[EPVS]-1661320744233
========
if(pos>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320744243
GPR[SPVAP]-1661320744243
GPR[EPVAP]-1661320744946
GPR[EPVS]-1661320744946
========
if(index>0&&len>0&&index>=len){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320744949
GPR[SPVAP]-1661320744949
GPR[EPVAP]-1661320745652
GPR[EPVS]-1661320745652
========
if(sepLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320745654
GPR[SPVAP]-1661320745654
GPR[EPVAP]-1661320746362
GPR[EPVS]-1661320746362
========
if(len>0){
if(true){
buffer.setLength(index-len);
}
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320746364
GPR[SPVAP]-1661320746364
GPR[EPVAP]-1661320747063
GPR[EPVS]-1661320747063
========
if(pos+index>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320747065
GPR[SPVAP]-1661320747065
GPR[EPVAP]-1661320747772
GPR[EPVS]-1661320747772
========
if(hash>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320747774
GPR[SPVAP]-1661320747774
GPR[EPVAP]-1661320748484
GPR[EPVS]-1661320748484
========
len=(startIndex<0?0:startIndex);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320748485
GPR[SPVAP]-1661320748485
GPR[EPVAP]-1661320749189
GPR[EPVS]-1661320749189
========
if(pos1>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320749190
GPR[SPVAP]-1661320749190
GPR[EPVAP]-1661320749999
GPR[EPVS]-1661320749999
========
if(pos2>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320750006
GPR[SPVAP]-1661320750006
GPR[EPVAP]-1661320751269
GPR[EPVS]-1661320751269
========
if(off>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320751275
GPR[SPVAP]-1661320751275
GPR[EPVAP]-1661320751990
GPR[EPVS]-1661320751990
========
if(index+len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320751992
GPR[SPVAP]-1661320751992
GPR[EPVAP]-1661320752700
GPR[EPVS]-1661320752700
========
if(inputLength>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320752702
GPR[SPVAP]-1661320752702
GPR[EPVAP]-1661320753406
GPR[EPVS]-1661320753406
========
if(len>PAD_LIMIT){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320753407
GPR[SPVAP]-1661320753407
GPR[EPVAP]-1661320754122
GPR[EPVS]-1661320754122
========
if(padLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320754124
GPR[SPVAP]-1661320754124
GPR[EPVAP]-1661320754839
GPR[EPVS]-1661320754839
========
if(padLen>PAD_LIMIT){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320754841
GPR[SPVAP]-1661320754841
GPR[EPVAP]-1661320755546
GPR[EPVS]-1661320755546
========
if(length>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320755547
GPR[SPVAP]-1661320755547
GPR[EPVAP]-1661320756249
GPR[EPVS]-1661320756250
========
if(len>str.length()){
return EMPTY;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320756251
GPR[SPVAP]-1661320756251
GPR[EPVAP]-1661320756951
GPR[EPVS]-1661320756951
========
if(expPos>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320756954
GPR[SPVAP]-1661320756954
GPR[EPVAP]-1661320757665
GPR[EPVS]-1661320757665
========
if(repeat>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320757668
GPR[SPVAP]-1661320757668
GPR[EPVAP]-1661320758382
GPR[EPVS]-1661320758382
========
if(len==1||index==0){
return str;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320758384
GPR[SPVAP]-1661320758384
GPR[EPVAP]-1661320759084
GPR[EPVS]-1661320759084
========
if(isEmpty(str)){
padStr=" ";
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320759086
GPR[SPVAP]-1661320759086
GPR[EPVAP]-1661320759771
GPR[EPVS]-1661320759771
========
if(len-index<=0){
return str;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320759772
GPR[SPVAP]-1661320759772
GPR[EPVAP]-1661320760478
GPR[EPVS]-1661320760478
========
if(index<0){
end=0;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320760480
GPR[SPVAP]-1661320760480
GPR[EPVAP]-1661320761184
GPR[EPVS]-1661320761184
========
if(index==CharUtils.LF){
if(str.substring(0,len-1).charAt(len-1-1)==CharUtils.CR){
return ret.substring(0,lastIdx-1);
}
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320761186
GPR[SPVAP]-1661320761186
GPR[EPVAP]-1661320761909
GPR[EPVS]-1661320761909
========
if(startIndex>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320761912
GPR[SPVAP]-1661320761912
GPR[EPVAP]-1661320762619
GPR[EPVS]-1661320762619
========
if(str==null){
return false;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320762621
GPR[SPVAP]-1661320762621
GPR[EPVAP]-1661320763320
GPR[EPVS]-1661320763321
========
if(len>0){
dec=str.substring(index+1,len);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320763323
GPR[SPVAP]-1661320763323
GPR[EPVAP]-1661320764022
GPR[EPVS]-1661320764022
========
str=str.substring(0,index);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320764024
GPR[SPVAP]-1661320764024
GPR[EPVAP]-1661320764720
GPR[EPVS]-1661320764720
========
if(pads>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320764722
GPR[SPVAP]-1661320764722
GPR[EPVAP]-1661320765428
GPR[EPVS]-1661320765428
========
if(str==null){
return null;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320765430
GPR[SPVAP]-1661320765430
GPR[EPVAP]-1661320766591
GPR[SPVATF]-1661320766591
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320767521
GPR[EPVS]-1661320767521
========
if(str==null){
return null;
}
if(pads>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320767523
GPR[SPVAP]-1661320767523
GPR[EPVAP]-1661320768234
GPR[EPVS]-1661320768234
========
if(idx>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320768236
GPR[SPVAP]-1661320768236
GPR[EPVAP]-1661320768937
GPR[EPVS]-1661320768938
========
if(maxWidth>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320768940
GPR[SPVAP]-1661320768940
GPR[EPVAP]-1661320769666
GPR[EPVS]-1661320769666
========
if(str==null){
return ;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320769668
GPR[SPVAP]-1661320769668
GPR[EPVAP]-1661320770362
GPR[EPVS]-1661320770362
========
if(strLen>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320770365
GPR[SPVAP]-1661320770365
GPR[EPVAP]-1661320771067
GPR[EPVS]-1661320771067
========
if(str.charAt(2)!='_'){
throw new IllegalArgumentException("Invalid locale format: "+str);
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320771070
GPR[SPVAP]-1661320771070
GPR[EPVAP]-1661320772226
GPR[SPVATF]-1661320772226
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320773168
GPR[EPVS]-1661320773168
========
if(strLen>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320773171
GPR[SPVAP]-1661320773171
GPR[EPVAP]-1661320773876
GPR[EPVS]-1661320773876
========
if(strLen>=CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320773878
GPR[SPVAP]-1661320773878
GPR[EPVAP]-1661320774578
GPR[EPVS]-1661320774578
========
if(str.length()==0){
return true;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320774581
GPR[SPVAP]-1661320774581
GPR[EPVAP]-1661320775275
GPR[EPVS]-1661320775275
========
if(valid.length==0){
return false;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320775277
GPR[SPVAP]-1661320775277
GPR[EPVAP]-1661320775974
GPR[EPVS]-1661320775974
========
if(length>0){
str.getChars(CAPACITY,startIndex+len,buffer,index);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320775976
GPR[SPVAP]-1661320775976
GPR[EPVAP]-1661320776677
GPR[EPVS]-1661320776677
========
if(length>0){
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320776678
GPR[SPVAP]-1661320776678
GPR[EPVAP]-1661320777388
GPR[EPVS]-1661320777388
========
if(len>0){
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320777390
GPR[SPVAP]-1661320777390
GPR[EPVAP]-1661320778088
GPR[EPVS]-1661320778088
========
if(len>0){
ensureCapacity(index+len);
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320778089
GPR[SPVAP]-1661320778089
GPR[EPVAP]-1661320778794
GPR[EPVS]-1661320778794
========
if(len>0){
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320778796
GPR[SPVAP]-1661320778796
GPR[EPVAP]-1661320779504
GPR[EPVS]-1661320779504
========
if(len>0){
str.getChars(CAPACITY,startIndex+len,buffer,index);
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320779505
GPR[SPVAP]-1661320779505
GPR[EPVAP]-1661320780253
GPR[EPVS]-1661320780253
========
if(len>0){
size+=len;
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320780255
GPR[SPVAP]-1661320780255
GPR[EPVAP]-1661320780962
GPR[EPVS]-1661320780962
========
if(length>0){
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320780964
GPR[SPVAP]-1661320780964
GPR[EPVAP]-1661320781664
GPR[EPVS]-1661320781665
========
if(length>0){
ensureCapacity(index+len);
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320781666
GPR[SPVAP]-1661320781666
GPR[EPVAP]-1661320782372
GPR[EPVS]-1661320782372
========
if(length>0){
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320782374
GPR[SPVAP]-1661320782374
GPR[EPVAP]-1661320783072
GPR[EPVS]-1661320783072
========
if(length>0){
str.getChars(CAPACITY,startIndex+len,buffer,index);
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320783074
GPR[SPVAP]-1661320783074
GPR[EPVAP]-1661320783786
GPR[EPVS]-1661320783786
========
if(length>0){
size+=len;
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320783788
GPR[SPVAP]-1661320783788
GPR[EPVAP]-1661320784489
GPR[EPVS]-1661320784489
========
if(len>0){
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320784492
GPR[SPVAP]-1661320784492
GPR[EPVAP]-1661320785198
GPR[EPVS]-1661320785198
========
if(len>0){
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320785200
GPR[SPVAP]-1661320785200
GPR[EPVAP]-1661320785906
GPR[EPVS]-1661320785906
========
if(len>0){
ensureCapacity(index+len);
size+=len;
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320785908
GPR[SPVAP]-1661320785908
GPR[EPVAP]-1661320786607
GPR[EPVS]-1661320786607
========
if(len>0){
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320786609
GPR[SPVAP]-1661320786609
GPR[EPVAP]-1661320787313
GPR[EPVS]-1661320787313
========
if(length>0){
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320787314
GPR[SPVAP]-1661320787314
GPR[EPVAP]-1661320788018
GPR[EPVS]-1661320788018
========
if(length>0){
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320788020
GPR[SPVAP]-1661320788020
GPR[EPVAP]-1661320788724
GPR[EPVS]-1661320788724
========
if(length>0){
ensureCapacity(index+len);
size+=len;
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320788726
GPR[SPVAP]-1661320788726
GPR[EPVAP]-1661320789442
GPR[EPVS]-1661320789442
========
if(length>0){
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320789445
GPR[SPVAP]-1661320789445
GPR[EPVAP]-1661320790152
GPR[EPVS]-1661320790152
========
if(len>0){
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;
ensureCapacity(index+len);
str.getChars(CAPACITY,startIndex+len,buffer,index);
size+=len;

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}

========
MM Copying to MM
GPR[SPVS]-1661320790153
GPR[SPVAP]-1661320790153
GPR[EPVAP]-1661320790860
GPR[EPVS]-1661320790860
========
int len=(str==null?0:str.length());
if(len>pos){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320791864
GPR[SPVAP]-1661320791864
GPR[EPVAP]-1661320792563
GPR[EPVS]-1661320792563
========
int len=(str==null?0:str.length());
if(str==null||str==null){
return -1;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320792564
GPR[SPVAP]-1661320792564
GPR[EPVAP]-1661320793266
GPR[EPVS]-1661320793266
========
int len=(searchStr==null?0:searchStr.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320793268
GPR[SPVAP]-1661320793268
GPR[EPVAP]-1661320793968
GPR[EPVS]-1661320793968
========
int len=(searchStr==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320793970
GPR[SPVAP]-1661320793970
GPR[EPVAP]-1661320794668
GPR[EPVS]-1661320794668
========
int len=(str==null?0:searchStr.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320794670
GPR[SPVAP]-1661320794670
GPR[EPVAP]-1661320795370
GPR[EPVS]-1661320795370
========
int len=(str==null?0:str.length());
if(searchLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320795372
GPR[SPVAP]-1661320795372
GPR[EPVAP]-1661320796068
GPR[EPVS]-1661320796069
========
int len=(str==null?0:str.length());
if(str==null){
return false;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320796070
GPR[SPVAP]-1661320796070
GPR[EPVAP]-1661320796775
GPR[EPVS]-1661320796775
========
if(len>size){
return false;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320796776
GPR[SPVAP]-1661320796776
GPR[EPVAP]-1661320797488
GPR[EPVS]-1661320797488
========
int len=(str==null?0:str.length());
if(end>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320797489
GPR[SPVAP]-1661320797490
GPR[EPVAP]-1661320798184
GPR[EPVS]-1661320798184
========
int len=(str==null?0:str.length());
if(str==null||newLine==null||str==null){
return null;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320798186
GPR[SPVAP]-1661320798186
GPR[EPVAP]-1661320799336
GPR[SPVATF]-1661320799336
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320800257
GPR[EPVS]-1661320800257
========
int len=(str==null?0:str.length());
if(str==null){
return null;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320800259
GPR[SPVAP]-1661320800259
GPR[EPVAP]-1661320801443
GPR[SPVATF]-1661320801443
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320802364
GPR[EPVS]-1661320802364
========
int len=(str==null?0:str.length());
if(pos>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320802366
GPR[SPVAP]-1661320802366
GPR[EPVAP]-1661320803085
GPR[EPVS]-1661320803085
========
int len=(str==null?0:str.length());
if(index>len){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320803086
GPR[SPVAP]-1661320803086
GPR[EPVAP]-1661320803789
GPR[EPVS]-1661320803789
========
int len=(str==null?0:str.length());
if(index>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320803790
GPR[SPVAP]-1661320803790
GPR[EPVAP]-1661320804488
GPR[EPVS]-1661320804488
========
int len=(str==null?0:str.length());
if(start>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320804489
GPR[SPVAP]-1661320804489
GPR[EPVAP]-1661320805191
GPR[EPVS]-1661320805191
========
int len=(str==null?0:str.length());
if(newLine==null){
overlay=EMPTY;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320805193
GPR[SPVAP]-1661320805193
GPR[EPVAP]-1661320805889
GPR[EPVS]-1661320805889
========
int len=(str==null?0:str.length());
if(index<0){
start=0;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320805891
GPR[SPVAP]-1661320805891
GPR[EPVAP]-1661320806596
GPR[EPVS]-1661320806596
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
if(str==null){
return appendNull();
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320806597
GPR[SPVAP]-1661320806597
GPR[EPVAP]-1661320807757
GPR[SPVATF]-1661320807757
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320808698
GPR[EPVS]-1661320808698
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
if(index>0){
int len=length();
ensureCapacity(len+strLen);
str.getChars(0,strLen,buffer,len);
size+=strLen;
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320808700
GPR[SPVAP]-1661320808700
GPR[EPVAP]-1661320809410
GPR[EPVS]-1661320809410
========
int len=(str==null?0:str.length());
if(offset>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320809412
GPR[SPVAP]-1661320809412
GPR[EPVAP]-1661320810118
GPR[EPVS]-1661320810118
========
if((str==null)||("".equals(separator))){
return split(str,null,CAPACITY);
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320810120
GPR[SPVAP]-1661320810120
GPR[EPVAP]-1661320810816
GPR[EPVS]-1661320810816
========
int len=(str==null?0:str.length());
if(idx>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320810818
GPR[SPVAP]-1661320810818
GPR[EPVAP]-1661320811517
GPR[EPVS]-1661320811517
========
int len=(str==null?0:str.length());
if(len>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320811519
GPR[SPVAP]-1661320811519
GPR[EPVAP]-1661320812217
GPR[EPVS]-1661320812217
========
int len=(str==null?0:str.length());
if(expPos>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320812219
GPR[SPVAP]-1661320812219
GPR[EPVAP]-1661320812920
GPR[EPVS]-1661320812920
========
int len=(str==null?0:str.length());
if(str==null){
return true;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320812923
GPR[SPVAP]-1661320812923
GPR[EPVAP]-1661320813620
GPR[EPVS]-1661320813620
========
if(len<0){
start=0;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320813622
GPR[SPVAP]-1661320813622
GPR[EPVAP]-1661320814329
GPR[EPVS]-1661320814329
========
if(len>str.length()){
return EMPTY;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320814331
GPR[SPVAP]-1661320814331
GPR[EPVAP]-1661320815023
GPR[EPVS]-1661320815023
========
int len=(str==null?0:str.length());
if(str==null){
return null;
}
if(start>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320815025
GPR[SPVAP]-1661320815025
GPR[EPVAP]-1661320815725
GPR[EPVS]-1661320815725
========
int len=(str==null?0:str.length());
if(strLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320815727
GPR[SPVAP]-1661320815727
GPR[EPVAP]-1661320816435
GPR[EPVS]-1661320816435
========
int len=(str==null?0:str.length());
index=(startIndex<0?0:startIndex);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320816437
GPR[SPVAP]-1661320816437
GPR[EPVAP]-1661320817143
GPR[EPVS]-1661320817143
========
int len=(str==null?0:str.length());
if(str==null||index>=size){
return -1;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320817145
GPR[SPVAP]-1661320817145
GPR[EPVAP]-1661320817840
GPR[EPVS]-1661320817840
========
if(len==0){
return index;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320817843
GPR[SPVAP]-1661320817843
GPR[EPVAP]-1661320818541
GPR[EPVS]-1661320818541
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
if(index<0||index>=size){
throw new StringIndexOutOfBoundsException(index);
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320818543
GPR[SPVAP]-1661320818543
GPR[EPVAP]-1661320819245
GPR[EPVS]-1661320819245
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
deleteImpl(index,index+1,1);
return this;

========
MM Copying to MM
GPR[SPVS]-1661320819247
GPR[SPVAP]-1661320819247
GPR[EPVAP]-1661320819947
GPR[EPVS]-1661320819947
========
int len=(str==null?0:str.length());
if(CR>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320819949
GPR[SPVAP]-1661320819949
GPR[EPVAP]-1661320820663
GPR[EPVS]-1661320820663
========
int len=(str==null?0:str.length());
if(isEmpty(str)||str==null){
return str;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320820665
GPR[SPVAP]-1661320820665
GPR[EPVAP]-1661320821368
GPR[EPVS]-1661320821368
========
int len=(str==null?0:str.length());
if(str.length()==0){
return EMPTY;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320821370
GPR[SPVAP]-1661320821370
GPR[EPVAP]-1661320822067
GPR[EPVS]-1661320822067
========
int len=(str==null?0:str.length());
if(isEmpty(str)){
return str;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320822069
GPR[SPVAP]-1661320822069
GPR[EPVAP]-1661320822772
GPR[EPVS]-1661320822772
========
int len=(str==null?0:str.length());
if(str==null){
return EMPTY;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320822774
GPR[SPVAP]-1661320822774
GPR[EPVAP]-1661320823473
GPR[EPVS]-1661320823473
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
if(index>0){
int len=length();
ensureCapacity(len+strLen);
System.arraycopy(str.buffer,0,buffer,len,strLen);
size+=strLen;
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320823475
GPR[SPVAP]-1661320823475
GPR[EPVAP]-1661320824181
GPR[EPVS]-1661320824181
========
int len=(str==null?0:str.length());
if(len>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320824182
GPR[SPVAP]-1661320824183
GPR[EPVAP]-1661320825371
GPR[SPVATF]-1661320825371
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320826312
GPR[EPVS]-1661320826312
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
ensureCapacity(len+1);
return this;

========
MM Copying to MM
GPR[SPVS]-1661320826314
GPR[SPVAP]-1661320826314
GPR[EPVAP]-1661320827477
GPR[SPVATF]-1661320827477
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320828437
GPR[EPVS]-1661320828437
========
int len=(str==null?0:str.length());
if(length>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320828439
GPR[SPVAP]-1661320828439
GPR[EPVAP]-1661320829138
GPR[EPVS]-1661320829138
========
System.arraycopy(buffer,0,buffer,0,len);
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320829140
GPR[SPVAP]-1661320829140
GPR[EPVAP]-1661320829850
GPR[EPVS]-1661320829850
========
int len=(str==null?0:str.length());
if(startIndex>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320829853
GPR[SPVAP]-1661320829853
GPR[EPVAP]-1661320830561
GPR[EPVS]-1661320830561
========
int len=(str==null?0:str.length());
if(i>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320830563
GPR[SPVAP]-1661320830563
GPR[EPVAP]-1661320831262
GPR[EPVS]-1661320831262
========
int len=(str==null?0:str.length());
if(n>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320831264
GPR[SPVAP]-1661320831264
GPR[EPVAP]-1661320831974
GPR[EPVS]-1661320831974
========
int len=(str==null?0:str.length());
if(str==null||newLine==null){
throw new IllegalArgumentException("Strings must not be null");
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320831976
GPR[SPVAP]-1661320831976
GPR[EPVAP]-1661320833132
GPR[SPVATF]-1661320833132
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320834072
GPR[EPVS]-1661320834072
========
int len=(str==null?0:str.length());
if(tmp>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320834074
GPR[SPVAP]-1661320834074
GPR[EPVAP]-1661320834772
GPR[EPVS]-1661320834772
========
if(str==null){
str=nullText;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320834774
GPR[SPVAP]-1661320834774
GPR[EPVAP]-1661320835928
GPR[SPVATF]-1661320835929
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320836850
GPR[EPVS]-1661320836850
========
if(str==null){
str=nullText;
}
int len=(str==null?0:str.length());
if(strLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320836852
GPR[SPVAP]-1661320836852
GPR[EPVAP]-1661320837552
GPR[EPVS]-1661320837552
========
str=str.toLowerCase();
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320837555
GPR[SPVAP]-1661320837555
GPR[EPVAP]-1661320838703
GPR[SPVATF]-1661320838703
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320839644
GPR[EPVS]-1661320839644
========
int len=(str==null?0:str.length());
if(amph>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320839646
GPR[SPVAP]-1661320839646
GPR[EPVAP]-1661320840349
GPR[EPVS]-1661320840349
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
if(buffer==null){
return appendNull();
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320840350
GPR[SPVAP]-1661320840350
GPR[EPVAP]-1661320841515
GPR[SPVATF]-1661320841515
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320842453
GPR[EPVS]-1661320842453
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
if(index>0){
int len=length();
ensureCapacity(len+strLen);
System.arraycopy(buffer,0,buffer,len,strLen);
size+=strLen;
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320842454
GPR[SPVAP]-1661320842454
GPR[EPVAP]-1661320843157
GPR[EPVS]-1661320843157
========
int len=(str==null?0:str.length());
if(maxWidth>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320843159
GPR[SPVAP]-1661320843159
GPR[EPVAP]-1661320843861
GPR[EPVS]-1661320843861
========
if(index<7){
throw new IllegalArgumentException("Minimum abbreviation width with offset is 7");
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320843863
GPR[SPVAP]-1661320843863
GPR[EPVAP]-1661320844559
GPR[EPVS]-1661320844559
========
if((len+(index-3))<str.length()){
return "..."+abbreviate(str.substring(offset),maxWidth-3);
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320844560
GPR[SPVAP]-1661320844560
GPR[EPVAP]-1661320845274
GPR[EPVS]-1661320845274
========
int len=(str==null?0:str.length());
if(lastIdx>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320845276
GPR[SPVAP]-1661320845276
GPR[EPVAP]-1661320845973
GPR[EPVS]-1661320845973
========
if(index==CharUtils.LF){
if(str.charAt(len-1)==CharUtils.CR){
lastIdx--;
}
}else {
lastIdx++;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320845975
GPR[SPVAP]-1661320845975
GPR[EPVAP]-1661320846673
GPR[EPVS]-1661320846673
========
int len=(str==null?0:str.length());
if(pos+len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320846675
GPR[SPVAP]-1661320846675
GPR[EPVAP]-1661320847395
GPR[EPVS]-1661320847395
========
int len=(str==null?0:str.length());
if(pos>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320847397
GPR[SPVAP]-1661320847397
GPR[EPVAP]-1661320848100
GPR[EPVS]-1661320848100
========
if(len>index){
return false;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320848102
GPR[SPVAP]-1661320848102
GPR[EPVAP]-1661320848801
GPR[EPVS]-1661320848801
========
int len=(str==null?0:str.length());
if(len>size){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320848803
GPR[SPVAP]-1661320848803
GPR[EPVAP]-1661320849979
GPR[SPVATF]-1661320849979
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320850963
GPR[EPVS]-1661320850963
========
int len=(str==null?0:str.length());
if(index>size){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320850964
GPR[SPVAP]-1661320850964
GPR[EPVAP]-1661320851668
GPR[EPVS]-1661320851668
========
int len=(str==null?0:str.length());
if(pads>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320851670
GPR[SPVAP]-1661320851670
GPR[EPVAP]-1661320852434
GPR[EPVS]-1661320852434
========
int len=(str==null?0:str.length());
if(str==null){
return null;
}
if(pads>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320852437
GPR[SPVAP]-1661320852437
GPR[EPVAP]-1661320853154
GPR[EPVS]-1661320853154
========
int len=(str==null?0:str.length());
if(numberOfSubstrings>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320853157
GPR[SPVAP]-1661320853157
GPR[EPVAP]-1661320853851
GPR[EPVS]-1661320853851
========
int len=(str==null?0:str.length());
if(bufSize>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320853854
GPR[SPVAP]-1661320853854
GPR[EPVAP]-1661320854565
GPR[EPVS]-1661320854565
========
int len=(str==null?0:str.length());
if(len>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320854567
GPR[SPVAP]-1661320854567
GPR[EPVAP]-1661320855759
GPR[SPVATF]-1661320855759
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320856726
GPR[EPVS]-1661320856726
========
int len=(str==null?0:str.length());
if(index>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320856727
GPR[SPVAP]-1661320856727
GPR[EPVAP]-1661320857427
GPR[EPVS]-1661320857427
========
int len=(str==null?0:str.length());
if(inputLength>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320857428
GPR[SPVAP]-1661320857428
GPR[EPVAP]-1661320858128
GPR[EPVS]-1661320858128
========
int len=(str==null?0:str.length());
if(len>PAD_LIMIT){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320858129
GPR[SPVAP]-1661320858129
GPR[EPVAP]-1661320858829
GPR[EPVS]-1661320858829
========
int len=(str==null?0:str.length());
if(removeLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320858831
GPR[SPVAP]-1661320858831
GPR[EPVAP]-1661320859536
GPR[EPVS]-1661320859536
========
int len=(str==null?0:str.length());
if(strLen>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320859538
GPR[SPVAP]-1661320859538
GPR[EPVAP]-1661320860236
GPR[EPVS]-1661320860236
========
int len=(str==null?0:str.length());
if(len>=CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320860238
GPR[SPVAP]-1661320860238
GPR[EPVAP]-1661320861459
GPR[SPVATF]-1661320861459
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320862400
GPR[EPVS]-1661320862400
========
int len=(str==null?0:str.length());
if(strLen>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320862402
GPR[SPVAP]-1661320862402
GPR[EPVAP]-1661320863136
GPR[EPVS]-1661320863136
========
int len=(str==null?0:str.length());
if(strLen>=CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320863139
GPR[SPVAP]-1661320863139
GPR[EPVAP]-1661320863852
GPR[EPVS]-1661320863852
========
if(index>len){
int index=start;
start=end;
end=temp;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320863854
GPR[SPVAP]-1661320863854
GPR[EPVAP]-1661320864589
GPR[EPVS]-1661320864589
========
int len=(str==null?0:str.length());
if(pos1>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320864591
GPR[SPVAP]-1661320864591
GPR[EPVAP]-1661320865283
GPR[EPVS]-1661320865283
========
int len=(str==null?0:str.length());
if(pos2>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320865285
GPR[SPVAP]-1661320865285
GPR[EPVAP]-1661320865976
GPR[EPVS]-1661320865976
========
int len=(str==null?0:str.length());
if(hash>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320865978
GPR[SPVAP]-1661320865978
GPR[EPVAP]-1661320866674
GPR[EPVS]-1661320866674
========
int len=(str==null?0:str.length());
if(len>0){
if(str.charAt(2)!='_'){
throw new IllegalArgumentException("Invalid locale format: "+str);
}
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320866677
GPR[SPVAP]-1661320866677
GPR[EPVAP]-1661320867849
GPR[SPVATF]-1661320867849
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320868773
GPR[EPVS]-1661320868773
========
int len=(str==null?0:str.length());
if(len>0){
if(len==5){
return new Locale(str.substring(0,2),str.substring(3,5));
}else {
if(str.charAt(5)!='_'){
throw new IllegalArgumentException("Invalid locale format: "+str);
}
return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
}
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320868774
GPR[SPVAP]-1661320868774
GPR[EPVAP]-1661320869475
GPR[EPVS]-1661320869475
========
int len=(str==null?0:str.length());
if(len>0){
if(str.charAt(2)!='_'){
throw new IllegalArgumentException("Invalid locale format: "+str);
}
if(len==5){
return new Locale(str.substring(0,2),str.substring(3,5));
}else {
if(str.charAt(5)!='_'){
throw new IllegalArgumentException("Invalid locale format: "+str);
}
return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
}

int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320869477
GPR[SPVAP]-1661320869477
GPR[EPVAP]-1661320870177
GPR[EPVS]-1661320870177
========
int len=(str==null?0:str.length());
if(quoteLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320870179
GPR[SPVAP]-1661320870179
GPR[EPVAP]-1661320870877
GPR[EPVS]-1661320870877
========
int len=(str==null?0:str.length());
if(delimLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320870879
GPR[SPVAP]-1661320870879
GPR[EPVAP]-1661320871590
GPR[EPVS]-1661320871590
========
int len=(str==null?0:str.length());
if(index>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320871593
GPR[SPVAP]-1661320871593
GPR[EPVAP]-1661320872301
GPR[EPVS]-1661320872301
========
int len=(str==null?0:str.length());
if(length>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320872302
GPR[SPVAP]-1661320872302
GPR[EPVAP]-1661320873010
GPR[EPVS]-1661320873010
========
int len=(str==null?0:str.length());
if(len>chars.length){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320873012
GPR[SPVAP]-1661320873012
GPR[EPVAP]-1661320873718
GPR[EPVS]-1661320873718
========
int len=(str==null?0:str.length());
validateIndex(index);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320873720
GPR[SPVAP]-1661320873720
GPR[EPVAP]-1661320874420
GPR[EPVS]-1661320874420
========
int len=(str==null?0:str.length());
if(buffer==null){
return insert(index,str);
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320874421
GPR[SPVAP]-1661320874421
GPR[EPVAP]-1661320875127
GPR[EPVS]-1661320875127
========
if(CAPACITY<0||len+length>chars.length){
throw new StringIndexOutOfBoundsException("Invalid length: "+length);
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320875128
GPR[SPVAP]-1661320875128
GPR[EPVAP]-1661320875847
GPR[EPVS]-1661320875847
========
int len=(str==null?0:str.length());
if(amphersandIdx>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320875849
GPR[SPVAP]-1661320875849
GPR[EPVAP]-1661320876545
GPR[EPVS]-1661320876545
========
int len=(str==null?0:str.length());
if(value>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320876547
GPR[SPVAP]-1661320876547
GPR[EPVAP]-1661320877253
GPR[EPVS]-1661320877253
========
int len=(str==null?0:str.length());
if(endIndex>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320877257
GPR[SPVAP]-1661320877257
GPR[EPVAP]-1661320877958
GPR[EPVS]-1661320877958
========
int len=(replaceStr==null?0:replaceStr.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320877960
GPR[SPVAP]-1661320877960
GPR[EPVAP]-1661320878661
GPR[EPVS]-1661320878661
========
int len=(replaceStr==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320878663
GPR[SPVAP]-1661320878663
GPR[EPVAP]-1661320879368
GPR[EPVS]-1661320879368
========
int len=(str==null?0:replaceStr.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320879370
GPR[SPVAP]-1661320879370
GPR[EPVAP]-1661320880079
GPR[EPVS]-1661320880079
========
int len=(str==null?0:str.length());
if(tokenLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320880082
GPR[SPVAP]-1661320880082
GPR[EPVAP]-1661320880784
GPR[EPVS]-1661320880784
========
index=validateRange(CAPACITY,endIndex);
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320880786
GPR[SPVAP]-1661320880786
GPR[EPVAP]-1661320881489
GPR[EPVS]-1661320881489
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
replaceImpl(CAPACITY,index,endIndex-startIndex,str,len);
return this;

========
MM Copying to MM
GPR[SPVS]-1661320881491
GPR[SPVAP]-1661320881491
GPR[EPVAP]-1661320882198
GPR[EPVS]-1661320882198
========
int len=(str==null?0:str.length());
if(size>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320882201
GPR[SPVAP]-1661320882201
GPR[EPVAP]-1661320883370
GPR[SPVATF]-1661320883370
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320884313
GPR[EPVS]-1661320884313
========
int len=(str==null?0:str.length());
if(size>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320884315
GPR[SPVAP]-1661320884315
GPR[EPVAP]-1661320885017
GPR[EPVS]-1661320885017
========
int len=(str==null?0:str.length());
if(size>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320885018
GPR[SPVAP]-1661320885018
GPR[EPVAP]-1661320886171
GPR[SPVATF]-1661320886171
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320887129
GPR[EPVS]-1661320887129
========
if(index<0){
end=0;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320887132
GPR[SPVAP]-1661320887132
GPR[EPVAP]-1661320887846
GPR[EPVS]-1661320887846
========
int len=(str==null?0:str.length());
if(start>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320887848
GPR[SPVAP]-1661320887848
GPR[EPVAP]-1661320888556
GPR[EPVS]-1661320888556
========
if(len<0){
start=0;
}
int len=(str==null?0:str.length());
if(start>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320888558
GPR[SPVAP]-1661320888558
GPR[EPVAP]-1661320889281
GPR[EPVS]-1661320889281
========
if(len<0){
start=0;
}
int len=(str==null?0:str.length());
if(len>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320889283
GPR[SPVAP]-1661320889283
GPR[EPVAP]-1661320889989
GPR[EPVS]-1661320889989
========
if(len<0){
start=0;
}
int len=(str==null?0:str.length());
if(start>index){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320889991
GPR[SPVAP]-1661320889991
GPR[EPVAP]-1661320890696
GPR[EPVS]-1661320890696
========
int len=(str==null?0:str.length());
index=validateRange(CAPACITY,endIndex);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320890698
GPR[SPVAP]-1661320890698
GPR[EPVAP]-1661320891393
GPR[EPVS]-1661320891393
========
System.arraycopy(buffer,CAPACITY,new char[len],0,len);
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320891394
GPR[SPVAP]-1661320891394
GPR[EPVAP]-1661320892100
GPR[EPVS]-1661320892100
========
int len=(str==null?0:str.length());
if(len>0&&CAPACITY>0&&len>=CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320892102
GPR[SPVAP]-1661320892102
GPR[EPVAP]-1661320893285
GPR[SPVATF]-1661320893285
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320894230
GPR[EPVS]-1661320894230
========
int len=(str==null?0:str.length());
if(sepLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320894231
GPR[SPVAP]-1661320894231
GPR[EPVAP]-1661320894925
GPR[EPVS]-1661320894925
========
int len=(str==null?0:str.length());
if(at>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320894926
GPR[SPVAP]-1661320894926
GPR[EPVAP]-1661320895632
GPR[EPVS]-1661320895632
========
int len=(str==null?0:str.length());
if(trimmedLen>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320895634
GPR[SPVAP]-1661320895634
GPR[EPVAP]-1661320896333
GPR[EPVS]-1661320896333
========
int len=(str==null?0:str.length());
if(CAPACITY>0){
index+=ignoredLen;
continue;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320896334
GPR[SPVAP]-1661320896334
GPR[EPVAP]-1661320897044
GPR[EPVS]-1661320897044
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
validateIndex(index);
return this;

========
MM Copying to MM
GPR[SPVS]-1661320897046
GPR[SPVAP]-1661320897046
GPR[EPVAP]-1661320897745
GPR[EPVS]-1661320897745
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
System.arraycopy(buffer,index,buffer,index+1,len-index);
return this;

========
MM Copying to MM
GPR[SPVS]-1661320897747
GPR[SPVAP]-1661320897747
GPR[EPVAP]-1661320898453
GPR[EPVS]-1661320898453
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
len++;
return this;

========
MM Copying to MM
GPR[SPVS]-1661320898455
GPR[SPVAP]-1661320898455
GPR[EPVAP]-1661320899647
GPR[SPVATF]-1661320899647
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320900577
GPR[EPVS]-1661320900577
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
ensureCapacity(len+1);
len++;
return this;

========
MM Copying to MM
GPR[SPVS]-1661320900579
GPR[SPVAP]-1661320900579
GPR[EPVAP]-1661320901730
GPR[SPVATF]-1661320901730
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320902661
GPR[EPVS]-1661320902661
========
if(len+index>size()){
len=this.size()-pos;
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320902663
GPR[SPVAP]-1661320902663
GPR[EPVAP]-1661320903396
GPR[EPVS]-1661320903396
========
this.getChars(len,pos+index,buffer,CAPACITY);
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320903398
GPR[SPVAP]-1661320903398
GPR[EPVAP]-1661320904135
GPR[EPVS]-1661320904135
========
len+=index;
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320904138
GPR[SPVAP]-1661320904138
GPR[EPVAP]-1661320904843
GPR[EPVS]-1661320904843
========
int len=(str==null?0:str.length());
if(pos>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320904845
GPR[SPVAP]-1661320904845
GPR[EPVAP]-1661320905548
GPR[EPVS]-1661320905548
========
if(index==CharUtils.LF){
if(str.substring(0,len-1).charAt(len-1-1)==CharUtils.CR){
return ret.substring(0,lastIdx-1);
}
}
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320905550
GPR[SPVAP]-1661320905550
GPR[EPVAP]-1661320906253
GPR[EPVS]-1661320906253
========
int len=(str==null?0:str.length());
if(isEmpty(str)||isEmpty(str)){
return str;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320906255
GPR[SPVAP]-1661320906255
GPR[EPVAP]-1661320906957
GPR[EPVS]-1661320906957
========
int len=(str==null?0:str.length());
CAPACITY=(startIndex<0?0:startIndex);
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320906959
GPR[SPVAP]-1661320906959
GPR[EPVAP]-1661320907665
GPR[EPVS]-1661320907665
========
int len=(str==null?0:str.length());
if(off>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320907667
GPR[SPVAP]-1661320907667
GPR[EPVAP]-1661320908373
GPR[EPVS]-1661320908373
========
int len=(str==null?0:str.length());
if(index+len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320908374
GPR[SPVAP]-1661320908374
GPR[EPVAP]-1661320909072
GPR[EPVS]-1661320909072
========
int len=(str==null?0:str.length());
if(pads>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320909075
GPR[SPVAP]-1661320909075
GPR[EPVAP]-1661320909781
GPR[EPVS]-1661320909781
========
int len=(str==null?0:str.length());
if(isEmpty(str)||str==null){
return str;
}
if(pos>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320909783
GPR[SPVAP]-1661320909783
GPR[EPVAP]-1661320910487
GPR[EPVS]-1661320910487
========
int len=(str==null?0:str.length());
if(str.length()==0){
return EMPTY;
}
if(pos>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320910490
GPR[SPVAP]-1661320910490
GPR[EPVAP]-1661320911193
GPR[EPVS]-1661320911193
========
int len=(str==null?0:str.length());
if(isEmpty(str)||str==null){
return str;
}
if(str.length()==0){
return EMPTY;
}
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320911195
GPR[SPVAP]-1661320911195
GPR[EPVAP]-1661320911897
GPR[EPVS]-1661320911897
========
int len=(str==null?0:str.length());
if(isEmpty(str)||str==null){
return str;
}
if(str.length()==0){
return EMPTY;
}
if(pos>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320911898
GPR[SPVAP]-1661320911898
GPR[EPVAP]-1661320912635
GPR[EPVS]-1661320912635
========
int len=(str!=null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320912638
GPR[SPVAP]-1661320912638
GPR[EPVAP]-1661320913802
GPR[SPVATF]-1661320913802
TESTING : org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM:   - org.apache.commons.lang.text.StrBuilderTest::testLang295_purify_1
MM: Failing tests: 1
MM: Running ant (run.dev.tests)................................................ OK
MM: Running ant (compile.tests)................................................ OK
GPR[EPVATF]-1661320914737
GPR[EPVS]-1661320914737
========
int len=(str==null?0:str.length());
if(startIndex>chars.length){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320914739
GPR[SPVAP]-1661320914739
GPR[EPVAP]-1661320915449
GPR[EPVS]-1661320915449
========
int len=(str==null?0:str.length());
if(fromIndex>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320915452
GPR[SPVAP]-1661320915452
GPR[EPVAP]-1661320916149
GPR[EPVS]-1661320916149
========
int len=(str==null?0:str.length());
if(len>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
if(str==null){
return appendNull();
}
if(index>0){
int len=length();
ensureCapacity(len+strLen);
str.getChars(0,strLen,buffer,len);
size+=strLen;
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320916151
GPR[SPVAP]-1661320916152
GPR[EPVAP]-1661320916857
GPR[EPVS]-1661320916857
========
int len=(str==null?0:str.length());
if(length>=0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320916859
GPR[SPVAP]-1661320916859
GPR[EPVAP]-1661320917557
GPR[EPVS]-1661320917557
========
int len=(str==null?0:str.length());
if(length>CAPACITY){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320917560
GPR[SPVAP]-1661320917560
GPR[EPVAP]-1661320918265
GPR[EPVS]-1661320918265
========
int len=(str==null?0:str.length());
if(length>chars.length){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320918266
GPR[SPVAP]-1661320918266
GPR[EPVAP]-1661320918972
GPR[EPVS]-1661320918972
========
int len=(str==null?0:str.length());
if(capacity>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320918975
GPR[SPVAP]-1661320918975
GPR[EPVAP]-1661320919700
GPR[EPVS]-1661320919700
========
int len=(str==null?0:str.length());
if(trimmed>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320919703
GPR[SPVAP]-1661320919703
GPR[EPVAP]-1661320920408
GPR[EPVS]-1661320920408
========
int len=(str==null?0:str.length());
if(valueToFind>0){
int index=indexOf(str,0);
if(index>=0){
deleteImpl(index,index+len,len);
}
}
return this;

========
MM Copying to MM
GPR[SPVS]-1661320920413
GPR[SPVAP]-1661320920413
GPR[EPVAP]-1661320921129
GPR[EPVS]-1661320921129
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f5932298770, pid=456125, tid=140021436557056
#
# JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# J 4771 C2 cofix.core.parser.node.expr.InfixExpr.match(Lcofix/core/parser/node/Node;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)Z (1104 bytes) @ 0x00007f5932298770 [0x00007f5932295d60+0x2a10]
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# script/workingdir/SimFix/lang/lang_60_buggy/hs_err_pid456125.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#
End running Lang/60 results at /experiment_home///results/SimFix/Lang/60/seed_283/
\n\nNode: host-58\n
\n\nDate: Tue 23 Aug 2022 11:02:01 PM PDT\n
Removing checked out dir script/workingdir/SimFix/lang/lang_60_buggy
Killing all java process
GPR[SSLE]-1661320922105
GPR[ESLE]-1661320982108
