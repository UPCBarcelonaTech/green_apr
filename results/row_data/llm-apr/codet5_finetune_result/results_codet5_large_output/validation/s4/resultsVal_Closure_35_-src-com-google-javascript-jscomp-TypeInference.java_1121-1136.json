{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codet5_large_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689824181592,
      "ESLB": 1689824201611,
      "SPVS": 1689824201611,
      "SPVAP": 1689824201615,
      "EPVAP": 1689824201616,
      "SPVATF": 1689824201617,
      "EPVATF": 1689824204632,
      "SPVATR": 1689824204632,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(constraintObj)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(constraintObj);\n        }\n        objType.defineInferredProperty(constraintObj, typeToInfer, null);\n",
      "EPVS": 1689824204633
    },
    {
      "rank": 1,
      "SSLB": 1689824204633,
      "ESLB": 1689824224653,
      "SPVS": 1689824224653,
      "SPVAP": 1689824224654,
      "EPVAP": 1689824224655,
      "SPVATF": 1689824224655,
      "EPVATF": 1689824227662,
      "SPVATR": 1689824227662,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(objType)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(prop)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(prop, typeToInfer, null);\n",
      "EPVS": 1689824227663
    },
    {
      "rank": 2,
      "SSLB": 1689824227663,
      "ESLB": 1689824247683,
      "SPVS": 1689824247683,
      "SPVAP": 1689824247684,
      "EPVAP": 1689824247685,
      "SPVATF": 1689824247685,
      "EPVATF": 1689824250693,
      "SPVATR": 1689824250693,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(type)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(type)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(type);\n        }\n        objType.defineInferredProperty(type, typeToInfer, null);\n",
      "EPVS": 1689824250694
    },
    {
      "rank": 3,
      "SSLB": 1689824250694,
      "ESLB": 1689824270714,
      "SPVS": 1689824270714,
      "SPVAP": 1689824270715,
      "EPVAP": 1689824270717,
      "SPVATF": 1689824270717,
      "EPVATF": 1689824273725,
      "SPVATR": 1689824273725,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(type)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(prop)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(prop, typeToInfer, null);\n",
      "EPVS": 1689824273726
    },
    {
      "rank": 4,
      "SSLB": 1689824273726,
      "ESLB": 1689824293746,
      "SPVS": 1689824293746,
      "SPVAP": 1689824293749,
      "EPVAP": 1689824293750,
      "SPVATF": 1689824293750,
      "EPVATF": 1689824295756,
      "SPVATR": 1689824295756,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(prop)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(prop, typeToInfer, null);\n",
      "EPVS": 1689824295757
    },
    {
      "rank": 5,
      "SSLB": 1689824295757,
      "ESLB": 1689824315777,
      "SPVS": 1689824315777,
      "SPVAP": 1689824315778,
      "EPVAP": 1689824315779,
      "SPVATF": 1689824315779,
      "EPVATF": 1689824318786,
      "SPVATR": 1689824318786,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        ObjectType typeToInfer = objType;\n        if (!objType.hasProperty(constraintObj)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(constraintObj);\n        }\n        objType.defineInferredProperty(constraintObj, typeToInfer, null);\n",
      "EPVS": 1689824318787
    },
    {
      "rank": 6,
      "SSLB": 1689824318787,
      "ESLB": 1689824338807,
      "SPVS": 1689824338807,
      "SPVAP": 1689824338808,
      "EPVAP": 1689824338809,
      "SPVATF": 1689824338809,
      "EPVATF": 1689824341826,
      "SPVATR": 1689824341826,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                break;\n            }\n            objType.defineInferredProperty(prop, typeToInfer, null);\n        }\n",
      "EPVS": 1689824341827
    },
    {
      "rank": 7,
      "SSLB": 1689824341827,
      "ESLB": 1689824361847,
      "SPVS": 1689824361847,
      "SPVAP": 1689824361848,
      "EPVAP": 1689824361849,
      "SPVATF": 1689824361849,
      "EPVATF": 1689824364857,
      "SPVATR": 1689824364857,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null && objType.isRecordType()) {\n        objType.defineInferredProperty(objType, typeToInfer, null);\n",
      "EPVS": 1689824364858
    },
    {
      "rank": 8,
      "SSLB": 1689824364858,
      "ESLB": 1689824384878,
      "SPVS": 1689824384878,
      "SPVAP": 1689824384879,
      "EPVAP": 1689824384880,
      "SPVATF": 1689824384880,
      "EPVATF": 1689824387887,
      "SPVATR": 1689824387887,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(constraintObj)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(constraintObj, typeToInfer, null);\n",
      "EPVS": 1689824387888
    },
    {
      "rank": 9,
      "SSLB": 1689824387888,
      "ESLB": 1689824407908,
      "SPVS": 1689824407908,
      "SPVAP": 1689824407910,
      "EPVAP": 1689824407911,
      "SPVATF": 1689824407911,
      "EPVATF": 1689824410919,
      "SPVATR": 1689824410919,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                objType.defineInferredProperty(prop, typeToInfer, null);\n            }\n        }\n",
      "EPVS": 1689824410922
    }
  ],
  "SSLI": 1689816890949,
  "ESLI": 1689816920957,
  "hostname": "gros-44.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}