{
  "key": "Mockito_38_/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java_48-49",
  "proj": "Mockito",
  "bug_id": "38",
  "loc": "48-49",
  "input_file": "codet5_large_output.json",
  "path": "/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689885981223,
      "ESLB": 1689886001243,
      "SPVS": 1689886001243,
      "SPVAP": 1689886001244,
      "EPVAP": 1689886006417,
      "SPVATF": 1689886006417,
      "EPVATF": 1689886006417,
      "SPVATR": 1689886013428,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equals(arg);\n",
      "EPVS": 1689886013429
    },
    {
      "rank": 1,
      "SSLB": 1689886013429,
      "ESLB": 1689886033442,
      "SPVS": 1689886033442,
      "SPVAP": 1689886033443,
      "EPVAP": 1689886038665,
      "SPVATF": 1689886038665,
      "EPVATF": 1689886038665,
      "SPVATR": 1689886045676,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(arg.toString());\n",
      "EPVS": 1689886045677
    },
    {
      "rank": 2,
      "SSLB": 1689886045677,
      "ESLB": 1689886065697,
      "SPVS": 1689886065697,
      "SPVAP": 1689886065698,
      "EPVAP": 1689886070839,
      "SPVATF": 1689886070839,
      "EPVATF": 1689886070839,
      "SPVATR": 1689886077849,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString().toLowerCase());\n",
      "EPVS": 1689886077850
    },
    {
      "rank": 3,
      "SSLB": 1689886077850,
      "ESLB": 1689886097870,
      "SPVS": 1689886097870,
      "SPVAP": 1689886097871,
      "EPVAP": 1689886103035,
      "SPVATF": 1689886103035,
      "EPVATF": 1689886103035,
      "SPVATR": 1689886110045,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString());\n",
      "EPVS": 1689886110046
    },
    {
      "rank": 4,
      "SSLB": 1689886110046,
      "ESLB": 1689886130066,
      "SPVS": 1689886130066,
      "SPVAP": 1689886130067,
      "EPVAP": 1689886135020,
      "SPVATF": 1689886135020,
      "EPVATF": 1689886135020,
      "SPVATR": 1689886142031,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return m.toString().equals(arg.toString());\n",
      "EPVS": 1689886142032
    },
    {
      "rank": 5,
      "SSLB": 1689886142032,
      "ESLB": 1689886162052,
      "SPVS": 1689886162052,
      "SPVAP": 1689886162053,
      "EPVAP": 1689886167144,
      "SPVATF": 1689886167144,
      "EPVATF": 1689886167144,
      "SPVATR": 1689886174154,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "    return arg == null? false : StringDescription.toString(m).equals(arg.toString());\n",
      "EPVS": 1689886174155
    },
    {
      "rank": 6,
      "SSLB": 1689886174155,
      "ESLB": 1689886194175,
      "SPVS": 1689886194175,
      "SPVAP": 1689886194178,
      "EPVAP": 1689886199331,
      "SPVATF": 1689886199332,
      "EPVATF": 1689886199332,
      "SPVATR": 1689886206342,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return m == null? false : StringDescription.toString(m).equals(arg.toString());\n",
      "EPVS": 1689886206343
    },
    {
      "rank": 7,
      "SSLB": 1689886206343,
      "ESLB": 1689886226363,
      "SPVS": 1689886226363,
      "SPVAP": 1689886226364,
      "EPVAP": 1689886228237,
      "SPVATF": 1689886228237,
      "EPVATF": 1689886228237,
      "SPVATR": 1689886230242,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return Matchers.toString(m).equals(arg.toString());\n",
      "EPVS": 1689886230243
    },
    {
      "rank": 8,
      "SSLB": 1689886230243,
      "ESLB": 1689886250263,
      "SPVS": 1689886250263,
      "SPVAP": 1689886250264,
      "EPVAP": 1689886255212,
      "SPVATF": 1689886255212,
      "EPVATF": 1689886255212,
      "SPVATR": 1689886262222,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toString().equals(arg.toString());\n",
      "EPVS": 1689886262223
    },
    {
      "rank": 9,
      "SSLB": 1689886262223,
      "ESLB": 1689886282243,
      "SPVS": 1689886282243,
      "SPVAP": 1689886282244,
      "EPVAP": 1689886284107,
      "SPVATF": 1689886284107,
      "EPVATF": 1689886284107,
      "SPVATR": 1689886286113,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toLowerCase());\n",
      "EPVS": 1689886286114
    }
  ],
  "SSLI": 1689872915404,
  "ESLI": 1689872945408,
  "hostname": "gros-45.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}