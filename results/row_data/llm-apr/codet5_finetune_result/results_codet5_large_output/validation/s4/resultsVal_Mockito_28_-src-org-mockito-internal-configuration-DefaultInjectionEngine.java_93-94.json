{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_large_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689885017158,
      "ESLB": 1689885037178,
      "SPVS": 1689885037178,
      "SPVAP": 1689885037180,
      "EPVAP": 1689885043116,
      "SPVATF": 1689885043116,
      "EPVATF": 1689885043116,
      "SPVATR": 1689885052129,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689885052130
    },
    {
      "rank": 1,
      "SSLB": 1689885052130,
      "ESLB": 1689885072150,
      "SPVS": 1689885072150,
      "SPVAP": 1689885072151,
      "EPVAP": 1689885074200,
      "SPVATF": 1689885074200,
      "EPVATF": 1689885074200,
      "SPVATR": 1689885076206,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1689885076206
    },
    {
      "rank": 2,
      "SSLB": 1689885076206,
      "ESLB": 1689885096226,
      "SPVS": 1689885096226,
      "SPVAP": 1689885096227,
      "EPVAP": 1689885097926,
      "SPVATF": 1689885097926,
      "EPVATF": 1689885097926,
      "SPVATR": 1689885099933,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689885099934
    },
    {
      "rank": 3,
      "SSLB": 1689885099934,
      "ESLB": 1689885119954,
      "SPVS": 1689885119954,
      "SPVAP": 1689885119955,
      "EPVAP": 1689885121807,
      "SPVATF": 1689885121807,
      "EPVATF": 1689885121807,
      "SPVATR": 1689885123813,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689885123814
    },
    {
      "rank": 4,
      "SSLB": 1689885123814,
      "ESLB": 1689885143834,
      "SPVS": 1689885143834,
      "SPVAP": 1689885143835,
      "EPVAP": 1689885145684,
      "SPVATF": 1689885145684,
      "EPVATF": 1689885145684,
      "SPVATR": 1689885147690,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689885147691
    },
    {
      "rank": 5,
      "SSLB": 1689885147691,
      "ESLB": 1689885167711,
      "SPVS": 1689885167711,
      "SPVAP": 1689885167712,
      "EPVAP": 1689885169432,
      "SPVATF": 1689885169432,
      "EPVATF": 1689885169432,
      "SPVATR": 1689885171437,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidateFilter);\n",
      "EPVS": 1689885171438
    },
    {
      "rank": 6,
      "SSLB": 1689885171438,
      "ESLB": 1689885191458,
      "SPVS": 1689885191458,
      "SPVAP": 1689885191459,
      "EPVAP": 1689885193302,
      "SPVATF": 1689885193302,
      "EPVATF": 1689885193302,
      "SPVATR": 1689885195307,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(true);\n",
      "EPVS": 1689885195308
    },
    {
      "rank": 7,
      "SSLB": 1689885195308,
      "ESLB": 1689885215328,
      "SPVS": 1689885215328,
      "SPVAP": 1689885215329,
      "EPVAP": 1689885217167,
      "SPVATF": 1689885217167,
      "EPVATF": 1689885217167,
      "SPVATR": 1689885219173,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1689885219174
    },
    {
      "rank": 8,
      "SSLB": 1689885219174,
      "ESLB": 1689885239194,
      "SPVS": 1689885239194,
      "SPVAP": 1689885239195,
      "EPVAP": 1689885240874,
      "SPVATF": 1689885240874,
      "EPVATF": 1689885240874,
      "SPVATR": 1689885242879,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidates).thenInject();\n",
      "EPVS": 1689885242880
    },
    {
      "rank": 9,
      "SSLB": 1689885242880,
      "ESLB": 1689885262900,
      "SPVS": 1689885262900,
      "SPVAP": 1689885262901,
      "EPVAP": 1689885263992,
      "SPVATF": 1689885263992,
      "EPVATF": 1689885263992,
      "SPVATR": 1689885265998,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this::addMock);\n",
      "EPVS": 1689885265999
    }
  ],
  "SSLI": 1689872915404,
  "ESLI": 1689872945408,
  "hostname": "gros-45.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}