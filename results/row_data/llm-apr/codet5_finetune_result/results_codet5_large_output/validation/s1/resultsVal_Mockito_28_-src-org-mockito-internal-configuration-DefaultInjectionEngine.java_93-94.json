{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_large_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689030528135,
      "ESLB": 1689030548155,
      "SPVS": 1689030548155,
      "SPVAP": 1689030548156,
      "EPVAP": 1689030553890,
      "SPVATF": 1689030553890,
      "EPVATF": 1689030553890,
      "SPVATR": 1689030562903,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689030562904
    },
    {
      "rank": 1,
      "SSLB": 1689030562904,
      "ESLB": 1689030582924,
      "SPVS": 1689030582924,
      "SPVAP": 1689030582925,
      "EPVAP": 1689030584784,
      "SPVATF": 1689030584784,
      "EPVATF": 1689030584784,
      "SPVATR": 1689030586790,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1689030586791
    },
    {
      "rank": 2,
      "SSLB": 1689030586791,
      "ESLB": 1689030606811,
      "SPVS": 1689030606811,
      "SPVAP": 1689030606813,
      "EPVAP": 1689030608473,
      "SPVATF": 1689030608473,
      "EPVATF": 1689030608473,
      "SPVATR": 1689030610493,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689030610494
    },
    {
      "rank": 3,
      "SSLB": 1689030610494,
      "ESLB": 1689030630514,
      "SPVS": 1689030630514,
      "SPVAP": 1689030630517,
      "EPVAP": 1689030632157,
      "SPVATF": 1689030632157,
      "EPVATF": 1689030632157,
      "SPVATR": 1689030634163,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689030634164
    },
    {
      "rank": 4,
      "SSLB": 1689030634164,
      "ESLB": 1689030654184,
      "SPVS": 1689030654184,
      "SPVAP": 1689030654187,
      "EPVAP": 1689030655827,
      "SPVATF": 1689030655827,
      "EPVATF": 1689030655827,
      "SPVATR": 1689030657833,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689030657834
    },
    {
      "rank": 5,
      "SSLB": 1689030657834,
      "ESLB": 1689030677854,
      "SPVS": 1689030677854,
      "SPVAP": 1689030677857,
      "EPVAP": 1689030679573,
      "SPVATF": 1689030679573,
      "EPVATF": 1689030679573,
      "SPVATR": 1689030681580,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidateFilter);\n",
      "EPVS": 1689030681580
    },
    {
      "rank": 6,
      "SSLB": 1689030681580,
      "ESLB": 1689030701601,
      "SPVS": 1689030701601,
      "SPVAP": 1689030701603,
      "EPVAP": 1689030703304,
      "SPVATF": 1689030703304,
      "EPVATF": 1689030703304,
      "SPVATR": 1689030705311,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(true);\n",
      "EPVS": 1689030705312
    },
    {
      "rank": 7,
      "SSLB": 1689030705312,
      "ESLB": 1689030725332,
      "SPVS": 1689030725332,
      "SPVAP": 1689030725335,
      "EPVAP": 1689030726992,
      "SPVATF": 1689030726992,
      "EPVATF": 1689030726992,
      "SPVATR": 1689030728999,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1689030728999
    },
    {
      "rank": 8,
      "SSLB": 1689030728999,
      "ESLB": 1689030749020,
      "SPVS": 1689030749020,
      "SPVAP": 1689030749024,
      "EPVAP": 1689030750800,
      "SPVATF": 1689030750800,
      "EPVATF": 1689030750800,
      "SPVATR": 1689030752807,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidates).thenInject();\n",
      "EPVS": 1689030752808
    },
    {
      "rank": 9,
      "SSLB": 1689030752808,
      "ESLB": 1689030772828,
      "SPVS": 1689030772828,
      "SPVAP": 1689030772831,
      "EPVAP": 1689030773847,
      "SPVATF": 1689030773847,
      "EPVATF": 1689030773847,
      "SPVATR": 1689030775853,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this::addMock);\n",
      "EPVS": 1689030775854
    }
  ],
  "SSLI": 1689010038331,
  "ESLI": 1689010068361,
  "hostname": "gros-63.nancy.grid5000.fr",
  "OAR_JOB_ID": "4228532"
}