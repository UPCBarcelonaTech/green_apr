{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_large_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689019807436,
      "ESLB": 1689019827456,
      "SPVS": 1689019827456,
      "SPVAP": 1689019827457,
      "EPVAP": 1689019827459,
      "SPVATF": 1689019827459,
      "EPVATF": 1689019827459,
      "SPVATR": 1689019829466,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689019829467
    },
    {
      "rank": 1,
      "SSLB": 1689019829467,
      "ESLB": 1689019849487,
      "SPVS": 1689019849487,
      "SPVAP": 1689019849489,
      "EPVAP": 1689019849490,
      "SPVATF": 1689019849490,
      "EPVATF": 1689019849490,
      "SPVATR": 1689019851496,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null && node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689019851498
    },
    {
      "rank": 2,
      "SSLB": 1689019851498,
      "ESLB": 1689019871518,
      "SPVS": 1689019871518,
      "SPVAP": 1689019871519,
      "EPVAP": 1689019871520,
      "SPVATF": 1689019871520,
      "EPVATF": 1689019871520,
      "SPVATR": 1689019873527,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node next = node.getNext();\n    if (next.getType() == Token.CALL) {\n        Node child = next.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689019873528
    },
    {
      "rank": 3,
      "SSLB": 1689019873528,
      "ESLB": 1689019893548,
      "SPVS": 1689019893548,
      "SPVAP": 1689019893549,
      "EPVAP": 1689019893551,
      "SPVATF": 1689019893551,
      "EPVATF": 1689019893551,
      "SPVATR": 1689019895558,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getChildCount() > 0) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689019895559
    },
    {
      "rank": 4,
      "SSLB": 1689019895559,
      "ESLB": 1689019915579,
      "SPVS": 1689019915579,
      "SPVAP": 1689019915581,
      "EPVAP": 1689019915582,
      "SPVATF": 1689019915582,
      "EPVATF": 1689019915582,
      "SPVATR": 1689019917589,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n",
      "EPVS": 1689019917590
    },
    {
      "rank": 5,
      "SSLB": 1689019917590,
      "ESLB": 1689019937610,
      "SPVS": 1689019937610,
      "SPVAP": 1689019937612,
      "EPVAP": 1689019937613,
      "SPVATF": 1689019937613,
      "EPVATF": 1689019937613,
      "SPVATR": 1689019939621,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild().getType() == Token.NAME) {\n        changed.add(node.getFirstChild().getString());\n",
      "EPVS": 1689019939623
    },
    {
      "rank": 6,
      "SSLB": 1689019939623,
      "ESLB": 1689019959643,
      "SPVS": 1689019959643,
      "SPVAP": 1689019959644,
      "EPVAP": 1689019959647,
      "SPVATF": 1689019959647,
      "EPVATF": 1689019959647,
      "SPVATR": 1689019961654,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getChildCount() == 1) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689019961655
    },
    {
      "rank": 7,
      "SSLB": 1689019961655,
      "ESLB": 1689019981675,
      "SPVS": 1689019981675,
      "SPVAP": 1689019981677,
      "EPVAP": 1689019981679,
      "SPVATF": 1689019981679,
      "EPVATF": 1689019981679,
      "SPVATR": 1689019983686,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node parent = node.getParent();\n    if (parent.getType() == Token.CALL) {\n        Node child = parent.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689019983687
    },
    {
      "rank": 8,
      "SSLB": 1689019983687,
      "ESLB": 1689020003707,
      "SPVS": 1689020003707,
      "SPVAP": 1689020004851,
      "EPVAP": 1689020004853,
      "SPVATF": 1689020004853,
      "EPVATF": 1689020004853,
      "SPVATR": 1689020006862,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getFirstChild().getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689020006863
    },
    {
      "rank": 9,
      "SSLB": 1689020006863,
      "ESLB": 1689020026883,
      "SPVS": 1689020026883,
      "SPVAP": 1689020026885,
      "EPVAP": 1689020026887,
      "SPVATF": 1689020026887,
      "EPVATF": 1689020026887,
      "SPVATR": 1689020028894,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    int type = node.getType();\n    if (type == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689020028895
    }
  ],
  "SSLI": 1689010038331,
  "ESLI": 1689010068361,
  "hostname": "gros-63.nancy.grid5000.fr",
  "OAR_JOB_ID": "4228532"
}