{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_large_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688069742273,
      "ESLB": 1688069762293,
      "SPVS": 1688069762293,
      "SPVAP": 1688069762294,
      "EPVAP": 1688069762296,
      "SPVATF": 1688069762296,
      "EPVATF": 1688069762296,
      "SPVATR": 1688069764301,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688069764303
    },
    {
      "rank": 1,
      "SSLB": 1688069764303,
      "ESLB": 1688069784323,
      "SPVS": 1688069784323,
      "SPVAP": 1688069784326,
      "EPVAP": 1688069784327,
      "SPVATF": 1688069784327,
      "EPVATF": 1688069784327,
      "SPVATR": 1688069786339,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null && node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688069786340
    },
    {
      "rank": 2,
      "SSLB": 1688069786340,
      "ESLB": 1688069806361,
      "SPVS": 1688069806361,
      "SPVAP": 1688069806365,
      "EPVAP": 1688069806366,
      "SPVATF": 1688069806366,
      "EPVATF": 1688069806366,
      "SPVATR": 1688069808373,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node next = node.getNext();\n    if (next.getType() == Token.CALL) {\n        Node child = next.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688069808375
    },
    {
      "rank": 3,
      "SSLB": 1688069808375,
      "ESLB": 1688069828395,
      "SPVS": 1688069828395,
      "SPVAP": 1688069828398,
      "EPVAP": 1688069828400,
      "SPVATF": 1688069828400,
      "EPVATF": 1688069828400,
      "SPVATR": 1688069830406,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getChildCount() > 0) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688069830407
    },
    {
      "rank": 4,
      "SSLB": 1688069830407,
      "ESLB": 1688069850428,
      "SPVS": 1688069850428,
      "SPVAP": 1688069850429,
      "EPVAP": 1688069850430,
      "SPVATF": 1688069850430,
      "EPVATF": 1688069850430,
      "SPVATR": 1688069852451,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n",
      "EPVS": 1688069852453
    },
    {
      "rank": 5,
      "SSLB": 1688069852453,
      "ESLB": 1688069872473,
      "SPVS": 1688069872473,
      "SPVAP": 1688069872474,
      "EPVAP": 1688069872475,
      "SPVATF": 1688069872475,
      "EPVATF": 1688069872475,
      "SPVATR": 1688069874482,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild().getType() == Token.NAME) {\n        changed.add(node.getFirstChild().getString());\n",
      "EPVS": 1688069874483
    },
    {
      "rank": 6,
      "SSLB": 1688069874483,
      "ESLB": 1688069894503,
      "SPVS": 1688069894503,
      "SPVAP": 1688069894505,
      "EPVAP": 1688069894506,
      "SPVATF": 1688069894506,
      "EPVATF": 1688069894506,
      "SPVATR": 1688069896512,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getChildCount() == 1) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688069896513
    },
    {
      "rank": 7,
      "SSLB": 1688069896513,
      "ESLB": 1688069916533,
      "SPVS": 1688069916533,
      "SPVAP": 1688069916535,
      "EPVAP": 1688069916536,
      "SPVATF": 1688069916536,
      "EPVATF": 1688069916536,
      "SPVATR": 1688069918544,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node parent = node.getParent();\n    if (parent.getType() == Token.CALL) {\n        Node child = parent.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688069918545
    },
    {
      "rank": 8,
      "SSLB": 1688069918545,
      "ESLB": 1688069938565,
      "SPVS": 1688069938565,
      "SPVAP": 1688069938567,
      "EPVAP": 1688069938569,
      "SPVATF": 1688069938569,
      "EPVATF": 1688069938569,
      "SPVATR": 1688069940575,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getFirstChild().getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688069940577
    },
    {
      "rank": 9,
      "SSLB": 1688069940577,
      "ESLB": 1688069960597,
      "SPVS": 1688069960597,
      "SPVAP": 1688069960598,
      "EPVAP": 1688069960600,
      "SPVATF": 1688069960600,
      "EPVATF": 1688069960600,
      "SPVATR": 1688069962607,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    int type = node.getType();\n    if (type == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688069962608
    }
  ],
  "SSLI": 1688059783311,
  "ESLI": 1688059813341,
  "hostname": "gros-67.nancy.grid5000.fr",
  "OAR_JOB_ID": "4214427"
}