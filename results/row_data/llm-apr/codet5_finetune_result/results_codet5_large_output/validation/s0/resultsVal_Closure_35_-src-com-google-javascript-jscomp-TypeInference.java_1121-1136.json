{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codet5_large_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688162338070,
      "ESLB": 1688162358074,
      "SPVS": 1688162358074,
      "SPVAP": 1688162358077,
      "EPVAP": 1688162358078,
      "SPVATF": 1688162358078,
      "EPVATF": 1688162361090,
      "SPVATR": 1688162361090,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(constraintObj)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(constraintObj);\n        }\n        objType.defineInferredProperty(constraintObj, typeToInfer, null);\n",
      "EPVS": 1688162361091
    },
    {
      "rank": 1,
      "SSLB": 1688162361091,
      "ESLB": 1688162381111,
      "SPVS": 1688162381111,
      "SPVAP": 1688162381113,
      "EPVAP": 1688162381115,
      "SPVATF": 1688162381115,
      "EPVATF": 1688162384123,
      "SPVATR": 1688162384123,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(objType)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(prop)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(prop, typeToInfer, null);\n",
      "EPVS": 1688162384125
    },
    {
      "rank": 2,
      "SSLB": 1688162384125,
      "ESLB": 1688162404145,
      "SPVS": 1688162404145,
      "SPVAP": 1688162404146,
      "EPVAP": 1688162404148,
      "SPVATF": 1688162404148,
      "EPVATF": 1688162406154,
      "SPVATR": 1688162406154,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(type)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(type)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(type);\n        }\n        objType.defineInferredProperty(type, typeToInfer, null);\n",
      "EPVS": 1688162406156
    },
    {
      "rank": 3,
      "SSLB": 1688162406156,
      "ESLB": 1688162426176,
      "SPVS": 1688162426176,
      "SPVAP": 1688162426177,
      "EPVAP": 1688162426179,
      "SPVATF": 1688162426179,
      "EPVATF": 1688162428188,
      "SPVATR": 1688162428188,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(type)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(prop)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(prop, typeToInfer, null);\n",
      "EPVS": 1688162428190
    },
    {
      "rank": 4,
      "SSLB": 1688162428190,
      "ESLB": 1688162448210,
      "SPVS": 1688162448210,
      "SPVAP": 1688162448212,
      "EPVAP": 1688162448214,
      "SPVATF": 1688162448214,
      "EPVATF": 1688162450222,
      "SPVATR": 1688162450222,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(prop)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(prop, typeToInfer, null);\n",
      "EPVS": 1688162450223
    },
    {
      "rank": 5,
      "SSLB": 1688162450223,
      "ESLB": 1688162470243,
      "SPVS": 1688162470243,
      "SPVAP": 1688162470245,
      "EPVAP": 1688162470247,
      "SPVATF": 1688162470247,
      "EPVATF": 1688162473256,
      "SPVATR": 1688162473256,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        ObjectType typeToInfer = objType;\n        if (!objType.hasProperty(constraintObj)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(constraintObj);\n        }\n        objType.defineInferredProperty(constraintObj, typeToInfer, null);\n",
      "EPVS": 1688162473257
    },
    {
      "rank": 6,
      "SSLB": 1688162473257,
      "ESLB": 1688162493277,
      "SPVS": 1688162493277,
      "SPVAP": 1688162493279,
      "EPVAP": 1688162493281,
      "SPVATF": 1688162493281,
      "EPVATF": 1688162495291,
      "SPVATR": 1688162495291,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                break;\n            }\n            objType.defineInferredProperty(prop, typeToInfer, null);\n        }\n",
      "EPVS": 1688162495292
    },
    {
      "rank": 7,
      "SSLB": 1688162495292,
      "ESLB": 1688162515312,
      "SPVS": 1688162515312,
      "SPVAP": 1688162515314,
      "EPVAP": 1688162515316,
      "SPVATF": 1688162515316,
      "EPVATF": 1688162517323,
      "SPVATR": 1688162517323,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null && objType.isRecordType()) {\n        objType.defineInferredProperty(objType, typeToInfer, null);\n",
      "EPVS": 1688162517324
    },
    {
      "rank": 8,
      "SSLB": 1688162517324,
      "ESLB": 1688162537345,
      "SPVS": 1688162537345,
      "SPVAP": 1688162537346,
      "EPVAP": 1688162537348,
      "SPVATF": 1688162537348,
      "EPVATF": 1688162539355,
      "SPVATR": 1688162539355,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(constraintObj)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(constraintObj, typeToInfer, null);\n",
      "EPVS": 1688162539356
    },
    {
      "rank": 9,
      "SSLB": 1688162539356,
      "ESLB": 1688162559376,
      "SPVS": 1688162559376,
      "SPVAP": 1688162559378,
      "EPVAP": 1688162559379,
      "SPVATF": 1688162559379,
      "EPVATF": 1688162562389,
      "SPVATR": 1688162562389,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                objType.defineInferredProperty(prop, typeToInfer, null);\n            }\n        }\n",
      "EPVS": 1688162562390
    }
  ],
  "SSLI": 1688158155713,
  "ESLI": 1688158185743,
  "hostname": "gros-62.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212950"
}