{
  "key": "Mockito_38_/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java_48-49",
  "proj": "Mockito",
  "bug_id": "38",
  "loc": "48-49",
  "input_file": "codet5_large_output.json",
  "path": "/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689737249329,
      "ESLB": 1689737269349,
      "SPVS": 1689737269349,
      "SPVAP": 1689737269350,
      "EPVAP": 1689737274481,
      "SPVATF": 1689737274481,
      "EPVATF": 1689737274481,
      "SPVATR": 1689737281491,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equals(arg);\n",
      "EPVS": 1689737281492
    },
    {
      "rank": 1,
      "SSLB": 1689737281492,
      "ESLB": 1689737301512,
      "SPVS": 1689737301512,
      "SPVAP": 1689737301513,
      "EPVAP": 1689737306605,
      "SPVATF": 1689737306605,
      "EPVATF": 1689737306605,
      "SPVATR": 1689737313615,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(arg.toString());\n",
      "EPVS": 1689737313616
    },
    {
      "rank": 2,
      "SSLB": 1689737313616,
      "ESLB": 1689737333636,
      "SPVS": 1689737333636,
      "SPVAP": 1689737333637,
      "EPVAP": 1689737338679,
      "SPVATF": 1689737338679,
      "EPVATF": 1689737338679,
      "SPVATR": 1689737345691,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString().toLowerCase());\n",
      "EPVS": 1689737345691
    },
    {
      "rank": 3,
      "SSLB": 1689737345691,
      "ESLB": 1689737365711,
      "SPVS": 1689737365711,
      "SPVAP": 1689737365712,
      "EPVAP": 1689737370732,
      "SPVATF": 1689737370732,
      "EPVATF": 1689737370732,
      "SPVATR": 1689737377744,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString());\n",
      "EPVS": 1689737377744
    },
    {
      "rank": 4,
      "SSLB": 1689737377744,
      "ESLB": 1689737397764,
      "SPVS": 1689737397764,
      "SPVAP": 1689737397765,
      "EPVAP": 1689737402759,
      "SPVATF": 1689737402759,
      "EPVATF": 1689737402759,
      "SPVATR": 1689737409771,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return m.toString().equals(arg.toString());\n",
      "EPVS": 1689737409771
    },
    {
      "rank": 5,
      "SSLB": 1689737409771,
      "ESLB": 1689737429792,
      "SPVS": 1689737429792,
      "SPVAP": 1689737429793,
      "EPVAP": 1689737434724,
      "SPVATF": 1689737434724,
      "EPVATF": 1689737434724,
      "SPVATR": 1689737441735,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "    return arg == null? false : StringDescription.toString(m).equals(arg.toString());\n",
      "EPVS": 1689737441735
    },
    {
      "rank": 6,
      "SSLB": 1689737441735,
      "ESLB": 1689737461755,
      "SPVS": 1689737461755,
      "SPVAP": 1689737461759,
      "EPVAP": 1689737466872,
      "SPVATF": 1689737466872,
      "EPVATF": 1689737466872,
      "SPVATR": 1689737473884,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return m == null? false : StringDescription.toString(m).equals(arg.toString());\n",
      "EPVS": 1689737473884
    },
    {
      "rank": 7,
      "SSLB": 1689737473884,
      "ESLB": 1689737493905,
      "SPVS": 1689737493905,
      "SPVAP": 1689737493905,
      "EPVAP": 1689737495789,
      "SPVATF": 1689737495789,
      "EPVATF": 1689737495789,
      "SPVATR": 1689737497795,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return Matchers.toString(m).equals(arg.toString());\n",
      "EPVS": 1689737497796
    },
    {
      "rank": 8,
      "SSLB": 1689737497796,
      "ESLB": 1689737517816,
      "SPVS": 1689737517816,
      "SPVAP": 1689737517817,
      "EPVAP": 1689737522957,
      "SPVATF": 1689737522957,
      "EPVATF": 1689737522957,
      "SPVATR": 1689737529970,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toString().equals(arg.toString());\n",
      "EPVS": 1689737529970
    },
    {
      "rank": 9,
      "SSLB": 1689737529970,
      "ESLB": 1689737549990,
      "SPVS": 1689737549990,
      "SPVAP": 1689737549991,
      "EPVAP": 1689737551697,
      "SPVATF": 1689737551697,
      "EPVATF": 1689737551697,
      "SPVATR": 1689737553703,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toLowerCase());\n",
      "EPVS": 1689737553704
    }
  ],
  "SSLI": 1689705076175,
  "ESLI": 1689705106205,
  "hostname": "gros-44.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}