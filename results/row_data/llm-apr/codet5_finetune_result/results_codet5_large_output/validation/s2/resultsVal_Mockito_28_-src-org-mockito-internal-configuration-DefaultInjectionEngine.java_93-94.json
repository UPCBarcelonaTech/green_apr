{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_large_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689736287921,
      "ESLB": 1689736307926,
      "SPVS": 1689736307926,
      "SPVAP": 1689736307930,
      "EPVAP": 1689736313938,
      "SPVATF": 1689736313938,
      "EPVATF": 1689736313938,
      "SPVATR": 1689736322952,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689736322953
    },
    {
      "rank": 1,
      "SSLB": 1689736322953,
      "ESLB": 1689736342973,
      "SPVS": 1689736342973,
      "SPVAP": 1689736342973,
      "EPVAP": 1689736344858,
      "SPVATF": 1689736344858,
      "EPVATF": 1689736344858,
      "SPVATR": 1689736346863,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1689736346864
    },
    {
      "rank": 2,
      "SSLB": 1689736346864,
      "ESLB": 1689736366869,
      "SPVS": 1689736366869,
      "SPVAP": 1689736366872,
      "EPVAP": 1689736368560,
      "SPVATF": 1689736368560,
      "EPVATF": 1689736368560,
      "SPVATR": 1689736370582,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689736370583
    },
    {
      "rank": 3,
      "SSLB": 1689736370583,
      "ESLB": 1689736390603,
      "SPVS": 1689736390603,
      "SPVAP": 1689736390604,
      "EPVAP": 1689736392364,
      "SPVATF": 1689736392364,
      "EPVATF": 1689736392364,
      "SPVATR": 1689736394370,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689736394371
    },
    {
      "rank": 4,
      "SSLB": 1689736394371,
      "ESLB": 1689736414391,
      "SPVS": 1689736414391,
      "SPVAP": 1689736414392,
      "EPVAP": 1689736416136,
      "SPVATF": 1689736416136,
      "EPVATF": 1689736416136,
      "SPVATR": 1689736418142,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689736418143
    },
    {
      "rank": 5,
      "SSLB": 1689736418143,
      "ESLB": 1689736438163,
      "SPVS": 1689736438163,
      "SPVAP": 1689736438164,
      "EPVAP": 1689736439910,
      "SPVATF": 1689736439910,
      "EPVATF": 1689736439910,
      "SPVATR": 1689736441916,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidateFilter);\n",
      "EPVS": 1689736441917
    },
    {
      "rank": 6,
      "SSLB": 1689736441917,
      "ESLB": 1689736461937,
      "SPVS": 1689736461937,
      "SPVAP": 1689736461940,
      "EPVAP": 1689736463648,
      "SPVATF": 1689736463648,
      "EPVATF": 1689736463648,
      "SPVATR": 1689736465654,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(true);\n",
      "EPVS": 1689736465655
    },
    {
      "rank": 7,
      "SSLB": 1689736465655,
      "ESLB": 1689736485675,
      "SPVS": 1689736485675,
      "SPVAP": 1689736485676,
      "EPVAP": 1689736487415,
      "SPVATF": 1689736487415,
      "EPVATF": 1689736487415,
      "SPVATR": 1689736489422,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1689736489422
    },
    {
      "rank": 8,
      "SSLB": 1689736489423,
      "ESLB": 1689736509443,
      "SPVS": 1689736509443,
      "SPVAP": 1689736509443,
      "EPVAP": 1689736511236,
      "SPVATF": 1689736511236,
      "EPVATF": 1689736511236,
      "SPVATR": 1689736513243,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidates).thenInject();\n",
      "EPVS": 1689736513243
    },
    {
      "rank": 9,
      "SSLB": 1689736513243,
      "ESLB": 1689736533264,
      "SPVS": 1689736533264,
      "SPVAP": 1689736533264,
      "EPVAP": 1689736534421,
      "SPVATF": 1689736534421,
      "EPVATF": 1689736534421,
      "SPVATR": 1689736536427,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this::addMock);\n",
      "EPVS": 1689736536428
    }
  ],
  "SSLI": 1689705076175,
  "ESLI": 1689705106205,
  "hostname": "gros-44.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}