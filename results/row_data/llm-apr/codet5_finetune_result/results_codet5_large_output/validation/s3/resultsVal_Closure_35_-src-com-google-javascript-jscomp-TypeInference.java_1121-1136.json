{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codet5_large_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689745592223,
      "ESLB": 1689745612243,
      "SPVS": 1689745612243,
      "SPVAP": 1689745612245,
      "EPVAP": 1689745612246,
      "SPVATF": 1689745612246,
      "EPVATF": 1689745615255,
      "SPVATR": 1689745615255,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(constraintObj)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(constraintObj);\n        }\n        objType.defineInferredProperty(constraintObj, typeToInfer, null);\n",
      "EPVS": 1689745615256
    },
    {
      "rank": 1,
      "SSLB": 1689745615256,
      "ESLB": 1689745635276,
      "SPVS": 1689745635276,
      "SPVAP": 1689745635277,
      "EPVAP": 1689745635278,
      "SPVATF": 1689745635278,
      "EPVATF": 1689745638285,
      "SPVATR": 1689745638285,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(objType)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(prop)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(prop, typeToInfer, null);\n",
      "EPVS": 1689745638286
    },
    {
      "rank": 2,
      "SSLB": 1689745638286,
      "ESLB": 1689745658306,
      "SPVS": 1689745658306,
      "SPVAP": 1689745658307,
      "EPVAP": 1689745658308,
      "SPVATF": 1689745658308,
      "EPVATF": 1689745660314,
      "SPVATR": 1689745660314,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(type)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(type)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(type);\n        }\n        objType.defineInferredProperty(type, typeToInfer, null);\n",
      "EPVS": 1689745660315
    },
    {
      "rank": 3,
      "SSLB": 1689745660315,
      "ESLB": 1689745680335,
      "SPVS": 1689745680335,
      "SPVAP": 1689745680336,
      "EPVAP": 1689745680337,
      "SPVATF": 1689745680337,
      "EPVATF": 1689745683346,
      "SPVATR": 1689745683346,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(type)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(prop)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(prop, typeToInfer, null);\n",
      "EPVS": 1689745683347
    },
    {
      "rank": 4,
      "SSLB": 1689745683347,
      "ESLB": 1689745703367,
      "SPVS": 1689745703367,
      "SPVAP": 1689745703368,
      "EPVAP": 1689745703369,
      "SPVATF": 1689745703369,
      "EPVATF": 1689745706376,
      "SPVATR": 1689745706376,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(prop)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(prop, typeToInfer, null);\n",
      "EPVS": 1689745706376
    },
    {
      "rank": 5,
      "SSLB": 1689745706376,
      "ESLB": 1689745726397,
      "SPVS": 1689745726397,
      "SPVAP": 1689745726398,
      "EPVAP": 1689745726399,
      "SPVATF": 1689745726399,
      "EPVATF": 1689745729406,
      "SPVATR": 1689745729406,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        ObjectType typeToInfer = objType;\n        if (!objType.hasProperty(constraintObj)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(constraintObj);\n        }\n        objType.defineInferredProperty(constraintObj, typeToInfer, null);\n",
      "EPVS": 1689745729407
    },
    {
      "rank": 6,
      "SSLB": 1689745729407,
      "ESLB": 1689745749427,
      "SPVS": 1689745749427,
      "SPVAP": 1689745749429,
      "EPVAP": 1689745749430,
      "SPVATF": 1689745749430,
      "EPVATF": 1689745752438,
      "SPVATR": 1689745752438,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                break;\n            }\n            objType.defineInferredProperty(prop, typeToInfer, null);\n        }\n",
      "EPVS": 1689745752439
    },
    {
      "rank": 7,
      "SSLB": 1689745752439,
      "ESLB": 1689745772460,
      "SPVS": 1689745772460,
      "SPVAP": 1689745772461,
      "EPVAP": 1689745772462,
      "SPVATF": 1689745772462,
      "EPVATF": 1689745775469,
      "SPVATR": 1689745775469,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null && objType.isRecordType()) {\n        objType.defineInferredProperty(objType, typeToInfer, null);\n",
      "EPVS": 1689745775470
    },
    {
      "rank": 8,
      "SSLB": 1689745775470,
      "ESLB": 1689745795490,
      "SPVS": 1689745795490,
      "SPVAP": 1689745795491,
      "EPVAP": 1689745795492,
      "SPVATF": 1689745795493,
      "EPVATF": 1689745798500,
      "SPVATR": 1689745798500,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null &&!objType.isPropertyTypeDeclared(constraintObj)) {\n        JSType typeToInfer = objType;\n        if (!objType.hasProperty(constraintObj)) {\n            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);\n        }\n        objType.defineInferredProperty(constraintObj, typeToInfer, null);\n",
      "EPVS": 1689745798501
    },
    {
      "rank": 9,
      "SSLB": 1689745798501,
      "ESLB": 1689745818521,
      "SPVS": 1689745818521,
      "SPVAP": 1689745818522,
      "EPVAP": 1689745818523,
      "SPVATF": 1689745818523,
      "EPVATF": 1689745821532,
      "SPVATR": 1689745821532,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                objType.defineInferredProperty(prop, typeToInfer, null);\n            }\n        }\n",
      "EPVS": 1689745821533
    }
  ],
  "SSLI": 1689738300676,
  "ESLI": 1689738330706,
  "hostname": "gros-44.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}