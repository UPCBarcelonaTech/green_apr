{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_large_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689814879145,
      "ESLB": 1689814899165,
      "SPVS": 1689814899165,
      "SPVAP": 1689814899166,
      "EPVAP": 1689814905277,
      "SPVATF": 1689814905277,
      "EPVATF": 1689814905277,
      "SPVATR": 1689814913289,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689814913289
    },
    {
      "rank": 1,
      "SSLB": 1689814913289,
      "ESLB": 1689814933309,
      "SPVS": 1689814933309,
      "SPVAP": 1689814933310,
      "EPVAP": 1689814935108,
      "SPVATF": 1689814935108,
      "EPVATF": 1689814935108,
      "SPVATR": 1689814937114,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1689814937115
    },
    {
      "rank": 2,
      "SSLB": 1689814937115,
      "ESLB": 1689814957135,
      "SPVS": 1689814957135,
      "SPVAP": 1689814957136,
      "EPVAP": 1689814958909,
      "SPVATF": 1689814958909,
      "EPVATF": 1689814958909,
      "SPVATR": 1689814960916,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689814960917
    },
    {
      "rank": 3,
      "SSLB": 1689814960917,
      "ESLB": 1689814980937,
      "SPVS": 1689814980937,
      "SPVAP": 1689814980938,
      "EPVAP": 1689814982747,
      "SPVATF": 1689814982747,
      "EPVATF": 1689814982747,
      "SPVATR": 1689814984754,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689814984755
    },
    {
      "rank": 4,
      "SSLB": 1689814984755,
      "ESLB": 1689815004775,
      "SPVS": 1689815004775,
      "SPVAP": 1689815004777,
      "EPVAP": 1689815006583,
      "SPVATF": 1689815006583,
      "EPVATF": 1689815006583,
      "SPVATR": 1689815008589,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689815008589
    },
    {
      "rank": 5,
      "SSLB": 1689815008589,
      "ESLB": 1689815028610,
      "SPVS": 1689815028610,
      "SPVAP": 1689815028612,
      "EPVAP": 1689815030390,
      "SPVATF": 1689815030390,
      "EPVATF": 1689815030390,
      "SPVATR": 1689815032397,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidateFilter);\n",
      "EPVS": 1689815032398
    },
    {
      "rank": 6,
      "SSLB": 1689815032398,
      "ESLB": 1689815052418,
      "SPVS": 1689815052418,
      "SPVAP": 1689815052421,
      "EPVAP": 1689815054249,
      "SPVATF": 1689815054249,
      "EPVATF": 1689815054249,
      "SPVATR": 1689815056255,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(true);\n",
      "EPVS": 1689815056256
    },
    {
      "rank": 7,
      "SSLB": 1689815056256,
      "ESLB": 1689815076263,
      "SPVS": 1689815076263,
      "SPVAP": 1689815076264,
      "EPVAP": 1689815078060,
      "SPVATF": 1689815078060,
      "EPVATF": 1689815078060,
      "SPVATR": 1689815080066,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1689815080067
    },
    {
      "rank": 8,
      "SSLB": 1689815080067,
      "ESLB": 1689815100087,
      "SPVS": 1689815100087,
      "SPVAP": 1689815100090,
      "EPVAP": 1689815101730,
      "SPVATF": 1689815101730,
      "EPVATF": 1689815101730,
      "SPVATR": 1689815103736,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidates).thenInject();\n",
      "EPVS": 1689815103737
    },
    {
      "rank": 9,
      "SSLB": 1689815103737,
      "ESLB": 1689815123757,
      "SPVS": 1689815123757,
      "SPVAP": 1689815123758,
      "EPVAP": 1689815124925,
      "SPVATF": 1689815124925,
      "EPVATF": 1689815124925,
      "SPVATR": 1689815126931,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this::addMock);\n",
      "EPVS": 1689815126932
    }
  ],
  "SSLI": 1689794841358,
  "ESLI": 1689794871388,
  "hostname": "gros-44.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}