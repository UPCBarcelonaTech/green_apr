{
  "key": "Mockito_38_/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java_48-49",
  "proj": "Mockito",
  "bug_id": "38",
  "loc": "48-49",
  "input_file": "codet5_large_output.json",
  "path": "/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689815838622,
      "ESLB": 1689815858642,
      "SPVS": 1689815858642,
      "SPVAP": 1689815858643,
      "EPVAP": 1689815863781,
      "SPVATF": 1689815863781,
      "EPVATF": 1689815863781,
      "SPVATR": 1689815873796,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equals(arg);\n",
      "EPVS": 1689815873796
    },
    {
      "rank": 1,
      "SSLB": 1689815873796,
      "ESLB": 1689815893816,
      "SPVS": 1689815893816,
      "SPVAP": 1689815893817,
      "EPVAP": 1689815898735,
      "SPVATF": 1689815898735,
      "EPVATF": 1689815898735,
      "SPVATR": 1689815905747,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(arg.toString());\n",
      "EPVS": 1689815905748
    },
    {
      "rank": 2,
      "SSLB": 1689815905748,
      "ESLB": 1689815925768,
      "SPVS": 1689815925768,
      "SPVAP": 1689815925773,
      "EPVAP": 1689815930730,
      "SPVATF": 1689815930730,
      "EPVATF": 1689815930730,
      "SPVATR": 1689815937741,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString().toLowerCase());\n",
      "EPVS": 1689815937741
    },
    {
      "rank": 3,
      "SSLB": 1689815937741,
      "ESLB": 1689815957761,
      "SPVS": 1689815957761,
      "SPVAP": 1689815957764,
      "EPVAP": 1689815962811,
      "SPVATF": 1689815962811,
      "EPVATF": 1689815962811,
      "SPVATR": 1689815969822,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString());\n",
      "EPVS": 1689815969823
    },
    {
      "rank": 4,
      "SSLB": 1689815969823,
      "ESLB": 1689815989843,
      "SPVS": 1689815989843,
      "SPVAP": 1689815989844,
      "EPVAP": 1689815994884,
      "SPVATF": 1689815994884,
      "EPVATF": 1689815994884,
      "SPVATR": 1689816001896,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return m.toString().equals(arg.toString());\n",
      "EPVS": 1689816001897
    },
    {
      "rank": 5,
      "SSLB": 1689816001897,
      "ESLB": 1689816021917,
      "SPVS": 1689816021917,
      "SPVAP": 1689816021919,
      "EPVAP": 1689816027021,
      "SPVATF": 1689816027021,
      "EPVATF": 1689816027021,
      "SPVATR": 1689816034033,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "    return arg == null? false : StringDescription.toString(m).equals(arg.toString());\n",
      "EPVS": 1689816034033
    },
    {
      "rank": 6,
      "SSLB": 1689816034033,
      "ESLB": 1689816054053,
      "SPVS": 1689816054053,
      "SPVAP": 1689816054054,
      "EPVAP": 1689816059339,
      "SPVATF": 1689816059339,
      "EPVATF": 1689816059339,
      "SPVATR": 1689816066350,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return m == null? false : StringDescription.toString(m).equals(arg.toString());\n",
      "EPVS": 1689816066351
    },
    {
      "rank": 7,
      "SSLB": 1689816066351,
      "ESLB": 1689816086371,
      "SPVS": 1689816086371,
      "SPVAP": 1689816086374,
      "EPVAP": 1689816088159,
      "SPVATF": 1689816088159,
      "EPVATF": 1689816088159,
      "SPVATR": 1689816090165,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return Matchers.toString(m).equals(arg.toString());\n",
      "EPVS": 1689816090166
    },
    {
      "rank": 8,
      "SSLB": 1689816090166,
      "ESLB": 1689816110186,
      "SPVS": 1689816110186,
      "SPVAP": 1689816110188,
      "EPVAP": 1689816115068,
      "SPVATF": 1689816115068,
      "EPVATF": 1689816115068,
      "SPVATR": 1689816122080,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toString().equals(arg.toString());\n",
      "EPVS": 1689816122081
    },
    {
      "rank": 9,
      "SSLB": 1689816122081,
      "ESLB": 1689816142099,
      "SPVS": 1689816142099,
      "SPVAP": 1689816142101,
      "EPVAP": 1689816143910,
      "SPVATF": 1689816143910,
      "EPVATF": 1689816143910,
      "SPVATR": 1689816145917,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toLowerCase());\n",
      "EPVS": 1689816145917
    }
  ],
  "SSLI": 1689794841358,
  "ESLI": 1689794871388,
  "hostname": "gros-44.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}