{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_large_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689917528099,
      "ESLB": 1689917548119,
      "SPVS": 1689917548119,
      "SPVAP": 1689917548120,
      "EPVAP": 1689917553852,
      "SPVATF": 1689917553852,
      "EPVATF": 1689917553852,
      "SPVATR": 1689917561864,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689917561865
    },
    {
      "rank": 1,
      "SSLB": 1689917561865,
      "ESLB": 1689917581885,
      "SPVS": 1689917581885,
      "SPVAP": 1689917581886,
      "EPVAP": 1689917583739,
      "SPVATF": 1689917583739,
      "EPVATF": 1689917583739,
      "SPVATR": 1689917585745,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1689917585746
    },
    {
      "rank": 2,
      "SSLB": 1689917585746,
      "ESLB": 1689917605766,
      "SPVS": 1689917605766,
      "SPVAP": 1689917605767,
      "EPVAP": 1689917607495,
      "SPVATF": 1689917607495,
      "EPVATF": 1689917607495,
      "SPVATR": 1689917609500,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689917609501
    },
    {
      "rank": 3,
      "SSLB": 1689917609501,
      "ESLB": 1689917629521,
      "SPVS": 1689917629521,
      "SPVAP": 1689917629523,
      "EPVAP": 1689917631210,
      "SPVATF": 1689917631210,
      "EPVATF": 1689917631210,
      "SPVATR": 1689917633216,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689917633217
    },
    {
      "rank": 4,
      "SSLB": 1689917633217,
      "ESLB": 1689917653237,
      "SPVS": 1689917653237,
      "SPVAP": 1689917653238,
      "EPVAP": 1689917654905,
      "SPVATF": 1689917654905,
      "EPVATF": 1689917654905,
      "SPVATR": 1689917656911,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689917656912
    },
    {
      "rank": 5,
      "SSLB": 1689917656912,
      "ESLB": 1689917676920,
      "SPVS": 1689917676920,
      "SPVAP": 1689917676921,
      "EPVAP": 1689917678781,
      "SPVATF": 1689917678781,
      "EPVATF": 1689917678781,
      "SPVATR": 1689917680787,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidateFilter);\n",
      "EPVS": 1689917680788
    },
    {
      "rank": 6,
      "SSLB": 1689917680788,
      "ESLB": 1689917700808,
      "SPVS": 1689917700808,
      "SPVAP": 1689917700809,
      "EPVAP": 1689917702484,
      "SPVATF": 1689917702484,
      "EPVATF": 1689917702484,
      "SPVATR": 1689917704490,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(true);\n",
      "EPVS": 1689917704490
    },
    {
      "rank": 7,
      "SSLB": 1689917704490,
      "ESLB": 1689917724510,
      "SPVS": 1689917724510,
      "SPVAP": 1689917724511,
      "EPVAP": 1689917726278,
      "SPVATF": 1689917726278,
      "EPVATF": 1689917726278,
      "SPVATR": 1689917728284,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1689917728285
    },
    {
      "rank": 8,
      "SSLB": 1689917728285,
      "ESLB": 1689917748305,
      "SPVS": 1689917748305,
      "SPVAP": 1689917748306,
      "EPVAP": 1689917749955,
      "SPVATF": 1689917749955,
      "EPVATF": 1689917749955,
      "SPVATR": 1689917751961,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidates).thenInject();\n",
      "EPVS": 1689917751962
    },
    {
      "rank": 9,
      "SSLB": 1689917751962,
      "ESLB": 1689917771982,
      "SPVS": 1689917771982,
      "SPVAP": 1689917771983,
      "EPVAP": 1689917773048,
      "SPVATF": 1689917773048,
      "EPVATF": 1689917773048,
      "SPVATR": 1689917775054,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this::addMock);\n",
      "EPVS": 1689917775054
    }
  ],
  "SSLI": 1689887030917,
  "ESLI": 1689887060947,
  "hostname": "gros-45.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}