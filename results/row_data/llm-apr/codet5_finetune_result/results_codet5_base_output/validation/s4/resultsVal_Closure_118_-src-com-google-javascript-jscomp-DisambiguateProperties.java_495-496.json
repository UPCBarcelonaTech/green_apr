{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codet5_base_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689828915389,
      "ESLB": 1689828935407,
      "SPVS": 1689828935407,
      "SPVAP": 1689828935409,
      "EPVAP": 1689828935410,
      "SPVATF": 1689828935410,
      "EPVATF": 1689828938416,
      "SPVATR": 1689828938416,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689828938419
    },
    {
      "rank": 1,
      "SSLB": 1689828938419,
      "ESLB": 1689828958439,
      "SPVS": 1689828958439,
      "SPVAP": 1689828958443,
      "EPVAP": 1689828958444,
      "SPVATF": 1689828958444,
      "EPVATF": 1689828961450,
      "SPVATR": 1689828961450,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isIdentifier()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689828961451
    },
    {
      "rank": 2,
      "SSLB": 1689828961451,
      "ESLB": 1689828981471,
      "SPVS": 1689828981471,
      "SPVAP": 1689828981472,
      "EPVAP": 1689828981473,
      "SPVATF": 1689828981473,
      "EPVATF": 1689828983487,
      "SPVATR": 1689828983487,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    try {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1689828983488
    },
    {
      "rank": 3,
      "SSLB": 1689828983488,
      "ESLB": 1689829003508,
      "SPVS": 1689829003508,
      "SPVAP": 1689829003509,
      "EPVAP": 1689829003510,
      "SPVATF": 1689829003510,
      "EPVATF": 1689829006516,
      "SPVATR": 1689829006516,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.getType()!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION,",
      "EPVS": 1689829006517
    },
    {
      "rank": 4,
      "SSLB": 1689829006517,
      "ESLB": 1689829026537,
      "SPVS": 1689829026537,
      "SPVAP": 1689829026538,
      "EPVAP": 1689829026539,
      "SPVATF": 1689829026539,
      "EPVATF": 1689829028545,
      "SPVATR": 1689829028545,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689829028546
    },
    {
      "rank": 5,
      "SSLB": 1689829028546,
      "ESLB": 1689829048566,
      "SPVS": 1689829048566,
      "SPVAP": 1689829048567,
      "EPVAP": 1689829048568,
      "SPVATF": 1689829048568,
      "EPVATF": 1689829051590,
      "SPVATR": 1689829051590,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "            try {\n                String name = child.getString();\n                T type = typeSystem.getType(getScope(), n, name);\n                Property prop = getProperty(name);\n                if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n                    if (propertiesToErrorFor.containsKey(name)) {\n                        compiler.report(JSError.make(\n                        t.getSourceName(), child, propertiesToErrorFor.get(name),\n                        Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1689829051591
    },
    {
      "rank": 6,
      "SSLB": 1689829051591,
      "ESLB": 1689829071608,
      "SPVS": 1689829071608,
      "SPVAP": 1689829071612,
      "EPVAP": 1689829071613,
      "SPVATF": 1689829071613,
      "EPVATF": 1689829074619,
      "SPVATR": 1689829074619,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.",
      "EPVS": 1689829074622
    },
    {
      "rank": 7,
      "SSLB": 1689829074622,
      "ESLB": 1689829094642,
      "SPVS": 1689829094642,
      "SPVAP": 1689829094644,
      "EPVAP": 1689829094645,
      "SPVATF": 1689829094645,
      "EPVATF": 1689829097651,
      "SPVATR": 1689829097651,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isProperty()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689829097652
    },
    {
      "rank": 8,
      "SSLB": 1689829097652,
      "ESLB": 1689829117659,
      "SPVS": 1689829117659,
      "SPVAP": 1689829117660,
      "EPVAP": 1689829117660,
      "SPVATF": 1689829117660,
      "EPVATF": 1689829120682,
      "SPVATR": 1689829120682,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child, csrf               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689829120683
    },
    {
      "rank": 9,
      "SSLB": 1689829120683,
      "ESLB": 1689829140703,
      "SPVS": 1689829140703,
      "SPVAP": 1689829140708,
      "EPVAP": 1689829140709,
      "SPVATF": 1689829140709,
      "EPVATF": 1689829142714,
      "SPVATR": 1689829142714,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isGetProp()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name,",
      "EPVS": 1689829142715
    }
  ],
  "SSLI": 1689815510877,
  "ESLI": 1689815540908,
  "hostname": "gros-45.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}