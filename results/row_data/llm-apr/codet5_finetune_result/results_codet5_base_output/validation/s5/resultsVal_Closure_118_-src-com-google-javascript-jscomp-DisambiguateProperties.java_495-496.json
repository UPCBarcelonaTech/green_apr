{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codet5_base_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689898520348,
      "ESLB": 1689898540368,
      "SPVS": 1689898540368,
      "SPVAP": 1689898540369,
      "EPVAP": 1689898540370,
      "SPVATF": 1689898540370,
      "EPVATF": 1689898543378,
      "SPVATR": 1689898543378,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689898543379
    },
    {
      "rank": 1,
      "SSLB": 1689898543379,
      "ESLB": 1689898563399,
      "SPVS": 1689898563399,
      "SPVAP": 1689898563400,
      "EPVAP": 1689898563401,
      "SPVATF": 1689898563401,
      "EPVATF": 1689898566409,
      "SPVATR": 1689898566409,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isIdentifier()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689898566410
    },
    {
      "rank": 2,
      "SSLB": 1689898566410,
      "ESLB": 1689898586430,
      "SPVS": 1689898586430,
      "SPVAP": 1689898586431,
      "EPVAP": 1689898586432,
      "SPVATF": 1689898586432,
      "EPVATF": 1689898588439,
      "SPVATR": 1689898588439,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    try {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1689898588440
    },
    {
      "rank": 3,
      "SSLB": 1689898588440,
      "ESLB": 1689898608460,
      "SPVS": 1689898608460,
      "SPVAP": 1689898608461,
      "EPVAP": 1689898608462,
      "SPVATF": 1689898608462,
      "EPVATF": 1689898611470,
      "SPVATR": 1689898611470,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.getType()!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION,",
      "EPVS": 1689898611471
    },
    {
      "rank": 4,
      "SSLB": 1689898611471,
      "ESLB": 1689898631491,
      "SPVS": 1689898631491,
      "SPVAP": 1689898631493,
      "EPVAP": 1689898631494,
      "SPVATF": 1689898631494,
      "EPVATF": 1689898633500,
      "SPVATR": 1689898633500,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689898633501
    },
    {
      "rank": 5,
      "SSLB": 1689898633501,
      "ESLB": 1689898653513,
      "SPVS": 1689898653513,
      "SPVAP": 1689898653514,
      "EPVAP": 1689898653515,
      "SPVATF": 1689898653515,
      "EPVATF": 1689898655523,
      "SPVATR": 1689898655523,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "            try {\n                String name = child.getString();\n                T type = typeSystem.getType(getScope(), n, name);\n                Property prop = getProperty(name);\n                if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n                    if (propertiesToErrorFor.containsKey(name)) {\n                        compiler.report(JSError.make(\n                        t.getSourceName(), child, propertiesToErrorFor.get(name),\n                        Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1689898655524
    },
    {
      "rank": 6,
      "SSLB": 1689898655524,
      "ESLB": 1689898675527,
      "SPVS": 1689898675527,
      "SPVAP": 1689898675528,
      "EPVAP": 1689898675529,
      "SPVATF": 1689898675529,
      "EPVATF": 1689898677535,
      "SPVATR": 1689898677535,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.",
      "EPVS": 1689898677536
    },
    {
      "rank": 7,
      "SSLB": 1689898677536,
      "ESLB": 1689898697556,
      "SPVS": 1689898697556,
      "SPVAP": 1689898697558,
      "EPVAP": 1689898697559,
      "SPVATF": 1689898697559,
      "EPVATF": 1689898699565,
      "SPVATR": 1689898699565,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isProperty()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689898699566
    },
    {
      "rank": 8,
      "SSLB": 1689898699566,
      "ESLB": 1689898719586,
      "SPVS": 1689898719586,
      "SPVAP": 1689898719587,
      "EPVAP": 1689898719588,
      "SPVATF": 1689898719588,
      "EPVATF": 1689898721595,
      "SPVATR": 1689898721595,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child, csrf               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689898721596
    },
    {
      "rank": 9,
      "SSLB": 1689898721596,
      "ESLB": 1689898741607,
      "SPVS": 1689898741607,
      "SPVAP": 1689898741608,
      "EPVAP": 1689898741609,
      "SPVATF": 1689898741609,
      "EPVATF": 1689898744616,
      "SPVATR": 1689898744616,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isGetProp()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name,",
      "EPVS": 1689898744617
    }
  ],
  "SSLI": 1689885111119,
  "ESLI": 1689885141149,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}