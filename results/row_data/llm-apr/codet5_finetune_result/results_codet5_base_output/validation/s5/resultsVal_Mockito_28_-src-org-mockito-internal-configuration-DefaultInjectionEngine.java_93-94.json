{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_base_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689915047356,
      "ESLB": 1689915067376,
      "SPVS": 1689915067376,
      "SPVAP": 1689915067377,
      "EPVAP": 1689915069284,
      "SPVATF": 1689915069284,
      "EPVATF": 1689915069284,
      "SPVATR": 1689915071291,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689915071291
    },
    {
      "rank": 1,
      "SSLB": 1689915071291,
      "ESLB": 1689915091312,
      "SPVS": 1689915091312,
      "SPVAP": 1689915091312,
      "EPVAP": 1689915093008,
      "SPVATF": 1689915093008,
      "EPVATF": 1689915093008,
      "SPVATR": 1689915095015,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689915095016
    },
    {
      "rank": 2,
      "SSLB": 1689915095016,
      "ESLB": 1689915115036,
      "SPVS": 1689915115036,
      "SPVAP": 1689915115037,
      "EPVAP": 1689915116798,
      "SPVATF": 1689915116798,
      "EPVATF": 1689915116798,
      "SPVATR": 1689915118804,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689915118805
    },
    {
      "rank": 3,
      "SSLB": 1689915118805,
      "ESLB": 1689915138825,
      "SPVS": 1689915138825,
      "SPVAP": 1689915138826,
      "EPVAP": 1689915140524,
      "SPVATF": 1689915140524,
      "EPVATF": 1689915140524,
      "SPVATR": 1689915142530,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1689915142531
    },
    {
      "rank": 4,
      "SSLB": 1689915142531,
      "ESLB": 1689915162551,
      "SPVS": 1689915162551,
      "SPVAP": 1689915162552,
      "EPVAP": 1689915164233,
      "SPVATF": 1689915164233,
      "EPVATF": 1689915164233,
      "SPVATR": 1689915166240,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689915166240
    },
    {
      "rank": 5,
      "SSLB": 1689915166240,
      "ESLB": 1689915186261,
      "SPVS": 1689915186261,
      "SPVAP": 1689915186261,
      "EPVAP": 1689915187965,
      "SPVATF": 1689915187965,
      "EPVATF": 1689915187965,
      "SPVATR": 1689915189972,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689915189973
    },
    {
      "rank": 6,
      "SSLB": 1689915189973,
      "ESLB": 1689915209993,
      "SPVS": 1689915209993,
      "SPVAP": 1689915209994,
      "EPVAP": 1689915211769,
      "SPVATF": 1689915211769,
      "EPVATF": 1689915211769,
      "SPVATR": 1689915213775,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1689915213776
    },
    {
      "rank": 7,
      "SSLB": 1689915213776,
      "ESLB": 1689915233796,
      "SPVS": 1689915233796,
      "SPVAP": 1689915233797,
      "EPVAP": 1689915235540,
      "SPVATF": 1689915235540,
      "EPVATF": 1689915235540,
      "SPVATR": 1689915237546,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1689915237547
    },
    {
      "rank": 8,
      "SSLB": 1689915237547,
      "ESLB": 1689915257567,
      "SPVS": 1689915257567,
      "SPVAP": 1689915257568,
      "EPVAP": 1689915259298,
      "SPVATF": 1689915259298,
      "EPVATF": 1689915259298,
      "SPVATR": 1689915261304,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689915261305
    },
    {
      "rank": 9,
      "SSLB": 1689915261305,
      "ESLB": 1689915281325,
      "SPVS": 1689915281325,
      "SPVAP": 1689915281326,
      "EPVAP": 1689915283106,
      "SPVATF": 1689915283106,
      "EPVATF": 1689915283106,
      "SPVATR": 1689915285112,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockMethod).thenInject();\n",
      "EPVS": 1689915285112
    }
  ],
  "SSLI": 1689885111119,
  "ESLI": 1689885141149,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}