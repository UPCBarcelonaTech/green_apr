{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codet5_base_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689796663478,
      "ESLB": 1689796683498,
      "SPVS": 1689796683498,
      "SPVAP": 1689796683500,
      "EPVAP": 1689796683501,
      "SPVATF": 1689796683501,
      "EPVATF": 1689796685507,
      "SPVATR": 1689796685507,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689796685508
    },
    {
      "rank": 1,
      "SSLB": 1689796685508,
      "ESLB": 1689796705528,
      "SPVS": 1689796705528,
      "SPVAP": 1689796705530,
      "EPVAP": 1689796705531,
      "SPVATF": 1689796705531,
      "EPVATF": 1689796708538,
      "SPVATR": 1689796708538,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isIdentifier()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689796708540
    },
    {
      "rank": 2,
      "SSLB": 1689796708540,
      "ESLB": 1689796728560,
      "SPVS": 1689796728560,
      "SPVAP": 1689796728561,
      "EPVAP": 1689796728564,
      "SPVATF": 1689796728564,
      "EPVATF": 1689796730571,
      "SPVATR": 1689796730571,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    try {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1689796730572
    },
    {
      "rank": 3,
      "SSLB": 1689796730572,
      "ESLB": 1689796750593,
      "SPVS": 1689796750593,
      "SPVAP": 1689796750594,
      "EPVAP": 1689796750595,
      "SPVATF": 1689796750595,
      "EPVATF": 1689796752601,
      "SPVATR": 1689796752601,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.getType()!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION,",
      "EPVS": 1689796752602
    },
    {
      "rank": 4,
      "SSLB": 1689796752602,
      "ESLB": 1689796772623,
      "SPVS": 1689796772623,
      "SPVAP": 1689796772627,
      "EPVAP": 1689796772628,
      "SPVATF": 1689796772628,
      "EPVATF": 1689796774635,
      "SPVATR": 1689796774635,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689796774636
    },
    {
      "rank": 5,
      "SSLB": 1689796774636,
      "ESLB": 1689796794656,
      "SPVS": 1689796794656,
      "SPVAP": 1689796794657,
      "EPVAP": 1689796794658,
      "SPVATF": 1689796794658,
      "EPVATF": 1689796796665,
      "SPVATR": 1689796796665,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "            try {\n                String name = child.getString();\n                T type = typeSystem.getType(getScope(), n, name);\n                Property prop = getProperty(name);\n                if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n                    if (propertiesToErrorFor.containsKey(name)) {\n                        compiler.report(JSError.make(\n                        t.getSourceName(), child, propertiesToErrorFor.get(name),\n                        Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1689796796667
    },
    {
      "rank": 6,
      "SSLB": 1689796796667,
      "ESLB": 1689796816687,
      "SPVS": 1689796816687,
      "SPVAP": 1689796816688,
      "EPVAP": 1689796816689,
      "SPVATF": 1689796816690,
      "EPVATF": 1689796818695,
      "SPVATR": 1689796818695,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.",
      "EPVS": 1689796818697
    },
    {
      "rank": 7,
      "SSLB": 1689796818697,
      "ESLB": 1689796838717,
      "SPVS": 1689796838717,
      "SPVAP": 1689796838718,
      "EPVAP": 1689796838720,
      "SPVATF": 1689796838720,
      "EPVATF": 1689796841727,
      "SPVATR": 1689796841727,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isProperty()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689796841729
    },
    {
      "rank": 8,
      "SSLB": 1689796841729,
      "ESLB": 1689796861749,
      "SPVS": 1689796861749,
      "SPVAP": 1689796861751,
      "EPVAP": 1689796861752,
      "SPVATF": 1689796861752,
      "EPVATF": 1689796864763,
      "SPVATR": 1689796864763,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child, csrf               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689796864764
    },
    {
      "rank": 9,
      "SSLB": 1689796864764,
      "ESLB": 1689796884784,
      "SPVS": 1689796884784,
      "SPVAP": 1689796884786,
      "EPVAP": 1689796884787,
      "SPVATF": 1689796884787,
      "EPVATF": 1689796886794,
      "SPVATR": 1689796886794,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isGetProp()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name,",
      "EPVS": 1689796886795
    }
  ],
  "SSLI": 1689794874992,
  "ESLI": 1689794905023,
  "hostname": "gros-45.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}