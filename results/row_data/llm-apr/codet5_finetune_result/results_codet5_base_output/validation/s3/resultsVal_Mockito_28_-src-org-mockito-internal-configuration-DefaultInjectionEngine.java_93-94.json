{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_base_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689813620912,
      "ESLB": 1689813640926,
      "SPVS": 1689813640926,
      "SPVAP": 1689813640929,
      "EPVAP": 1689813642804,
      "SPVATF": 1689813642804,
      "EPVATF": 1689813642804,
      "SPVATR": 1689813644810,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689813644811
    },
    {
      "rank": 1,
      "SSLB": 1689813644811,
      "ESLB": 1689813664829,
      "SPVS": 1689813664829,
      "SPVAP": 1689813664832,
      "EPVAP": 1689813666527,
      "SPVATF": 1689813666527,
      "EPVATF": 1689813666527,
      "SPVATR": 1689813668533,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689813668533
    },
    {
      "rank": 2,
      "SSLB": 1689813668533,
      "ESLB": 1689813688553,
      "SPVS": 1689813688553,
      "SPVAP": 1689813688556,
      "EPVAP": 1689813690244,
      "SPVATF": 1689813690244,
      "EPVATF": 1689813690244,
      "SPVATR": 1689813692250,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689813692251
    },
    {
      "rank": 3,
      "SSLB": 1689813692251,
      "ESLB": 1689813712271,
      "SPVS": 1689813712271,
      "SPVAP": 1689813712276,
      "EPVAP": 1689813714188,
      "SPVATF": 1689813714188,
      "EPVATF": 1689813714188,
      "SPVATR": 1689813716193,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1689813716194
    },
    {
      "rank": 4,
      "SSLB": 1689813716194,
      "ESLB": 1689813736213,
      "SPVS": 1689813736213,
      "SPVAP": 1689813736214,
      "EPVAP": 1689813737903,
      "SPVATF": 1689813737903,
      "EPVATF": 1689813737903,
      "SPVATR": 1689813739909,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689813739910
    },
    {
      "rank": 5,
      "SSLB": 1689813739910,
      "ESLB": 1689813759929,
      "SPVS": 1689813759929,
      "SPVAP": 1689813759930,
      "EPVAP": 1689813761659,
      "SPVATF": 1689813761659,
      "EPVATF": 1689813761659,
      "SPVATR": 1689813763664,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689813763665
    },
    {
      "rank": 6,
      "SSLB": 1689813763665,
      "ESLB": 1689813783681,
      "SPVS": 1689813783681,
      "SPVAP": 1689813783686,
      "EPVAP": 1689813785553,
      "SPVATF": 1689813785553,
      "EPVATF": 1689813785553,
      "SPVATR": 1689813787558,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1689813787558
    },
    {
      "rank": 7,
      "SSLB": 1689813787559,
      "ESLB": 1689813807577,
      "SPVS": 1689813807577,
      "SPVAP": 1689813807581,
      "EPVAP": 1689813809281,
      "SPVATF": 1689813809281,
      "EPVATF": 1689813809281,
      "SPVATR": 1689813811287,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1689813811288
    },
    {
      "rank": 8,
      "SSLB": 1689813811288,
      "ESLB": 1689813831308,
      "SPVS": 1689813831308,
      "SPVAP": 1689813831308,
      "EPVAP": 1689813833191,
      "SPVATF": 1689813833191,
      "EPVATF": 1689813833191,
      "SPVATR": 1689813835197,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689813835198
    },
    {
      "rank": 9,
      "SSLB": 1689813835198,
      "ESLB": 1689813855217,
      "SPVS": 1689813855217,
      "SPVAP": 1689813855222,
      "EPVAP": 1689813857080,
      "SPVATF": 1689813857080,
      "EPVATF": 1689813857080,
      "SPVATR": 1689813859085,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockMethod).thenInject();\n",
      "EPVS": 1689813859086
    }
  ],
  "SSLI": 1689794874992,
  "ESLI": 1689794905023,
  "hostname": "gros-45.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}