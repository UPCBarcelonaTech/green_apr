{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_base_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689735767188,
      "ESLB": 1689735787208,
      "SPVS": 1689735787208,
      "SPVAP": 1689735787210,
      "EPVAP": 1689735789057,
      "SPVATF": 1689735789057,
      "EPVATF": 1689735789057,
      "SPVATR": 1689735791063,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689735791064
    },
    {
      "rank": 1,
      "SSLB": 1689735791064,
      "ESLB": 1689735811084,
      "SPVS": 1689735811084,
      "SPVAP": 1689735811085,
      "EPVAP": 1689735812732,
      "SPVATF": 1689735812732,
      "EPVATF": 1689735812732,
      "SPVATR": 1689735814738,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689735814739
    },
    {
      "rank": 2,
      "SSLB": 1689735814739,
      "ESLB": 1689735834759,
      "SPVS": 1689735834759,
      "SPVAP": 1689735834760,
      "EPVAP": 1689735836457,
      "SPVATF": 1689735836457,
      "EPVATF": 1689735836457,
      "SPVATR": 1689735838463,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689735838464
    },
    {
      "rank": 3,
      "SSLB": 1689735838464,
      "ESLB": 1689735858484,
      "SPVS": 1689735858484,
      "SPVAP": 1689735858487,
      "EPVAP": 1689735860229,
      "SPVATF": 1689735860229,
      "EPVATF": 1689735860229,
      "SPVATR": 1689735862235,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1689735862236
    },
    {
      "rank": 4,
      "SSLB": 1689735862236,
      "ESLB": 1689735882256,
      "SPVS": 1689735882256,
      "SPVAP": 1689735882257,
      "EPVAP": 1689735883995,
      "SPVATF": 1689735883995,
      "EPVATF": 1689735883995,
      "SPVATR": 1689735886002,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689735886003
    },
    {
      "rank": 5,
      "SSLB": 1689735886003,
      "ESLB": 1689735906023,
      "SPVS": 1689735906023,
      "SPVAP": 1689735906024,
      "EPVAP": 1689735907720,
      "SPVATF": 1689735907720,
      "EPVATF": 1689735907720,
      "SPVATR": 1689735909727,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689735909727
    },
    {
      "rank": 6,
      "SSLB": 1689735909727,
      "ESLB": 1689735929747,
      "SPVS": 1689735929747,
      "SPVAP": 1689735929748,
      "EPVAP": 1689735931441,
      "SPVATF": 1689735931441,
      "EPVATF": 1689735931441,
      "SPVATR": 1689735933447,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1689735933448
    },
    {
      "rank": 7,
      "SSLB": 1689735933448,
      "ESLB": 1689735953468,
      "SPVS": 1689735953468,
      "SPVAP": 1689735953469,
      "EPVAP": 1689735955150,
      "SPVATF": 1689735955150,
      "EPVATF": 1689735955150,
      "SPVATR": 1689735957157,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1689735957158
    },
    {
      "rank": 8,
      "SSLB": 1689735957158,
      "ESLB": 1689735977178,
      "SPVS": 1689735977178,
      "SPVAP": 1689735977178,
      "EPVAP": 1689735978856,
      "SPVATF": 1689735978856,
      "EPVATF": 1689735978856,
      "SPVATR": 1689735980863,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689735980863
    },
    {
      "rank": 9,
      "SSLB": 1689735980863,
      "ESLB": 1689736000883,
      "SPVS": 1689736000883,
      "SPVAP": 1689736000884,
      "EPVAP": 1689736002561,
      "SPVATF": 1689736002561,
      "EPVATF": 1689736002561,
      "SPVATR": 1689736004567,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockMethod).thenInject();\n",
      "EPVS": 1689736004568
    }
  ],
  "SSLI": 1689704955058,
  "ESLI": 1689704985088,
  "hostname": "gros-45.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}