{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codet5_base_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689718818507,
      "ESLB": 1689718838527,
      "SPVS": 1689718838527,
      "SPVAP": 1689718838531,
      "EPVAP": 1689718838532,
      "SPVATF": 1689718838532,
      "EPVATF": 1689718840539,
      "SPVATR": 1689718840539,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689718840541
    },
    {
      "rank": 1,
      "SSLB": 1689718840541,
      "ESLB": 1689718860561,
      "SPVS": 1689718860561,
      "SPVAP": 1689718860562,
      "EPVAP": 1689718860564,
      "SPVATF": 1689718860564,
      "EPVATF": 1689718863571,
      "SPVATR": 1689718863571,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isIdentifier()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689718863573
    },
    {
      "rank": 2,
      "SSLB": 1689718863573,
      "ESLB": 1689718883593,
      "SPVS": 1689718883593,
      "SPVAP": 1689718883594,
      "EPVAP": 1689718883595,
      "SPVATF": 1689718883595,
      "EPVATF": 1689718885607,
      "SPVATR": 1689718885607,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    try {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1689718885608
    },
    {
      "rank": 3,
      "SSLB": 1689718885608,
      "ESLB": 1689718905628,
      "SPVS": 1689718905628,
      "SPVAP": 1689718905629,
      "EPVAP": 1689718905631,
      "SPVATF": 1689718905631,
      "EPVATF": 1689718907639,
      "SPVATR": 1689718907639,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.getType()!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION,",
      "EPVS": 1689718907640
    },
    {
      "rank": 4,
      "SSLB": 1689718907640,
      "ESLB": 1689718927642,
      "SPVS": 1689718927642,
      "SPVAP": 1689718927644,
      "EPVAP": 1689718927645,
      "SPVATF": 1689718927645,
      "EPVATF": 1689718930653,
      "SPVATR": 1689718930653,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689718930654
    },
    {
      "rank": 5,
      "SSLB": 1689718930654,
      "ESLB": 1689718950674,
      "SPVS": 1689718950674,
      "SPVAP": 1689718950676,
      "EPVAP": 1689718950677,
      "SPVATF": 1689718950677,
      "EPVATF": 1689718952686,
      "SPVATR": 1689718952686,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "            try {\n                String name = child.getString();\n                T type = typeSystem.getType(getScope(), n, name);\n                Property prop = getProperty(name);\n                if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n                    if (propertiesToErrorFor.containsKey(name)) {\n                        compiler.report(JSError.make(\n                        t.getSourceName(), child, propertiesToErrorFor.get(name),\n                        Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1689718952686
    },
    {
      "rank": 6,
      "SSLB": 1689718952686,
      "ESLB": 1689718972707,
      "SPVS": 1689718972707,
      "SPVAP": 1689718972708,
      "EPVAP": 1689718972709,
      "SPVATF": 1689718972709,
      "EPVATF": 1689718974716,
      "SPVATR": 1689718974716,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.",
      "EPVS": 1689718974717
    },
    {
      "rank": 7,
      "SSLB": 1689718974717,
      "ESLB": 1689718994737,
      "SPVS": 1689718994737,
      "SPVAP": 1689718994739,
      "EPVAP": 1689718994740,
      "SPVATF": 1689718994740,
      "EPVATF": 1689718996748,
      "SPVATR": 1689718996748,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isProperty()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689718996749
    },
    {
      "rank": 8,
      "SSLB": 1689718996749,
      "ESLB": 1689719016769,
      "SPVS": 1689719016769,
      "SPVAP": 1689719016771,
      "EPVAP": 1689719016772,
      "SPVATF": 1689719016772,
      "EPVATF": 1689719018781,
      "SPVATR": 1689719018781,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child, csrf               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1689719018782
    },
    {
      "rank": 9,
      "SSLB": 1689719018782,
      "ESLB": 1689719038802,
      "SPVS": 1689719038802,
      "SPVAP": 1689719038804,
      "EPVAP": 1689719038805,
      "SPVATF": 1689719038805,
      "EPVATF": 1689719040811,
      "SPVATR": 1689719040811,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isGetProp()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name,",
      "EPVS": 1689719040812
    }
  ],
  "SSLI": 1689704955058,
  "ESLI": 1689704985088,
  "hostname": "gros-45.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}