{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_base_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689721848596,
      "ESLB": 1689721868616,
      "SPVS": 1689721868616,
      "SPVAP": 1689721868622,
      "EPVAP": 1689721868623,
      "SPVATF": 1689721868623,
      "EPVATF": 1689721868623,
      "SPVATR": 1689721870645,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null) {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n",
      "EPVS": 1689721870648
    },
    {
      "rank": 1,
      "SSLB": 1689721870648,
      "ESLB": 1689721890668,
      "SPVS": 1689721890668,
      "SPVAP": 1689721890672,
      "EPVAP": 1689721890673,
      "SPVATF": 1689721890673,
      "EPVATF": 1689721890673,
      "SPVATR": 1689721892681,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n            break;\n        default:\n            break;\n",
      "EPVS": 1689721892682
    },
    {
      "rank": 2,
      "SSLB": 1689721892682,
      "ESLB": 1689721912702,
      "SPVS": 1689721912702,
      "SPVAP": 1689721912704,
      "EPVAP": 1689721912706,
      "SPVATF": 1689721912706,
      "EPVATF": 1689721912706,
      "SPVATR": 1689721914714,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Token type = node.getType();\n    if (type == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n                 changed.add(child.getString());\n        }\n",
      "EPVS": 1689721914715
    },
    {
      "rank": 3,
      "SSLB": 1689721914715,
      "ESLB": 1689721934734,
      "SPVS": 1689721934734,
      "SPVAP": 1689721934737,
      "EPVAP": 1689721934739,
      "SPVATF": 1689721934739,
      "EPVATF": 1689721934739,
      "SPVATR": 1689721936752,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node firstChild = node.getFirstChild();\n    if (firstChild.getType() == Token.CALL) {\n        Node child = firstChild;\n        if (child.getType() == Token.NAME) {\n                 changed.add(child.getString());\n        }\n",
      "EPVS": 1689721936753
    },
    {
      "rank": 4,
      "SSLB": 1689721936753,
      "ESLB": 1689721956773,
      "SPVS": 1689721956773,
      "SPVAP": 1689721956775,
      "EPVAP": 1689721956776,
      "SPVATF": 1689721956776,
      "EPVATF": 1689721956776,
      "SPVATR": 1689721958783,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n    } catch (RuntimeException e) {\n",
      "EPVS": 1689721958785
    },
    {
      "rank": 5,
      "SSLB": 1689721958785,
      "ESLB": 1689721978805,
      "SPVS": 1689721978805,
      "SPVAP": 1689721978807,
      "EPVAP": 1689721978808,
      "SPVATF": 1689721978808,
      "EPVATF": 1689721978808,
      "SPVATR": 1689721980815,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null) {\n        Token type = node.getType();\n        if (type == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n",
      "EPVS": 1689721980817
    },
    {
      "rank": 6,
      "SSLB": 1689721980817,
      "ESLB": 1689722000837,
      "SPVS": 1689722000837,
      "SPVAP": 1689722000839,
      "EPVAP": 1689722000840,
      "SPVATF": 1689722000840,
      "EPVATF": 1689722000840,
      "SPVATR": 1689722002849,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Token type = node.getType();\n    if (type == Token.CALL || type == Token.NAME) {\n        for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n            findCalledFunctions(c, changed);\n        }\n",
      "EPVS": 1689722002851
    },
    {
      "rank": 7,
      "SSLB": 1689722002851,
      "ESLB": 1689722022871,
      "SPVS": 1689722022871,
      "SPVAP": 1689722022872,
      "EPVAP": 1689722022874,
      "SPVATF": 1689722022874,
      "EPVATF": 1689722022874,
      "SPVATR": 1689722024881,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n                break;\n            }\n            break;\n        default:\n            break;\n",
      "EPVS": 1689722024883
    },
    {
      "rank": 8,
      "SSLB": 1689722024883,
      "ESLB": 1689722044903,
      "SPVS": 1689722044903,
      "SPVAP": 1689722048530,
      "EPVAP": 1689722048532,
      "SPVATF": 1689722048532,
      "EPVATF": 1689722048532,
      "SPVATR": 1689722050539,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node firstChild = node.getFirstChild();\n    if (firstChild.getType() == Token.CALL) {\n        Node child = firstChild.getFirstChild();\n        if (child.getType() == Token.NAME) {\n                 changed.add(child.getString());\n        }\n",
      "EPVS": 1689722050541
    },
    {
      "rank": 9,
      "SSLB": 1689722050541,
      "ESLB": 1689722070561,
      "SPVS": 1689722070561,
      "SPVAP": 1689722070562,
      "EPVAP": 1689722070564,
      "SPVATF": 1689722070564,
      "EPVATF": 1689722070564,
      "SPVATR": 1689722072577,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n    } catch (Exception e) {\n",
      "EPVS": 1689722072579
    }
  ],
  "SSLI": 1689704955058,
  "ESLI": 1689704985088,
  "hostname": "gros-45.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}