{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_base_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688816397233,
      "ESLB": 1688816417253,
      "SPVS": 1688816417253,
      "SPVAP": 1688816417254,
      "EPVAP": 1688816417256,
      "SPVATF": 1688816417256,
      "EPVATF": 1688816417256,
      "SPVATR": 1688816419264,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null) {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n",
      "EPVS": 1688816419266
    },
    {
      "rank": 1,
      "SSLB": 1688816419266,
      "ESLB": 1688816439286,
      "SPVS": 1688816439286,
      "SPVAP": 1688816439287,
      "EPVAP": 1688816439289,
      "SPVATF": 1688816439289,
      "EPVATF": 1688816439289,
      "SPVATR": 1688816441296,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n            break;\n        default:\n            break;\n",
      "EPVS": 1688816441297
    },
    {
      "rank": 2,
      "SSLB": 1688816441297,
      "ESLB": 1688816461317,
      "SPVS": 1688816461317,
      "SPVAP": 1688816461319,
      "EPVAP": 1688816461320,
      "SPVATF": 1688816461320,
      "EPVATF": 1688816461320,
      "SPVATR": 1688816463327,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Token type = node.getType();\n    if (type == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n                 changed.add(child.getString());\n        }\n",
      "EPVS": 1688816463328
    },
    {
      "rank": 3,
      "SSLB": 1688816463328,
      "ESLB": 1688816483349,
      "SPVS": 1688816483349,
      "SPVAP": 1688816483350,
      "EPVAP": 1688816483351,
      "SPVATF": 1688816483351,
      "EPVATF": 1688816483351,
      "SPVATR": 1688816485360,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node firstChild = node.getFirstChild();\n    if (firstChild.getType() == Token.CALL) {\n        Node child = firstChild;\n        if (child.getType() == Token.NAME) {\n                 changed.add(child.getString());\n        }\n",
      "EPVS": 1688816485361
    },
    {
      "rank": 4,
      "SSLB": 1688816485361,
      "ESLB": 1688816505382,
      "SPVS": 1688816505382,
      "SPVAP": 1688816505383,
      "EPVAP": 1688816505384,
      "SPVATF": 1688816505384,
      "EPVATF": 1688816505384,
      "SPVATR": 1688816507391,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n    } catch (RuntimeException e) {\n",
      "EPVS": 1688816507393
    },
    {
      "rank": 5,
      "SSLB": 1688816507393,
      "ESLB": 1688816527413,
      "SPVS": 1688816527413,
      "SPVAP": 1688816527414,
      "EPVAP": 1688816527415,
      "SPVATF": 1688816527415,
      "EPVATF": 1688816527415,
      "SPVATR": 1688816529423,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null) {\n        Token type = node.getType();\n        if (type == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n",
      "EPVS": 1688816529424
    },
    {
      "rank": 6,
      "SSLB": 1688816529424,
      "ESLB": 1688816549444,
      "SPVS": 1688816549444,
      "SPVAP": 1688816549446,
      "EPVAP": 1688816549447,
      "SPVATF": 1688816549447,
      "EPVATF": 1688816549447,
      "SPVATR": 1688816551456,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Token type = node.getType();\n    if (type == Token.CALL || type == Token.NAME) {\n        for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n            findCalledFunctions(c, changed);\n        }\n",
      "EPVS": 1688816551458
    },
    {
      "rank": 7,
      "SSLB": 1688816551458,
      "ESLB": 1688816571478,
      "SPVS": 1688816571478,
      "SPVAP": 1688816571479,
      "EPVAP": 1688816571481,
      "SPVATF": 1688816571481,
      "EPVATF": 1688816571481,
      "SPVATR": 1688816573488,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n                break;\n            }\n            break;\n        default:\n            break;\n",
      "EPVS": 1688816573490
    },
    {
      "rank": 8,
      "SSLB": 1688816573490,
      "ESLB": 1688816593510,
      "SPVS": 1688816593510,
      "SPVAP": 1688816593511,
      "EPVAP": 1688816593512,
      "SPVATF": 1688816593512,
      "EPVATF": 1688816593512,
      "SPVATR": 1688816595520,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node firstChild = node.getFirstChild();\n    if (firstChild.getType() == Token.CALL) {\n        Node child = firstChild.getFirstChild();\n        if (child.getType() == Token.NAME) {\n                 changed.add(child.getString());\n        }\n",
      "EPVS": 1688816595521
    },
    {
      "rank": 9,
      "SSLB": 1688816595521,
      "ESLB": 1688816615541,
      "SPVS": 1688816615541,
      "SPVAP": 1688816615545,
      "EPVAP": 1688816615547,
      "SPVATF": 1688816615547,
      "EPVATF": 1688816615547,
      "SPVATR": 1688816617556,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n    } catch (Exception e) {\n",
      "EPVS": 1688816617557
    }
  ],
  "SSLI": 1688801247168,
  "ESLI": 1688801277195,
  "hostname": "gros-70.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}