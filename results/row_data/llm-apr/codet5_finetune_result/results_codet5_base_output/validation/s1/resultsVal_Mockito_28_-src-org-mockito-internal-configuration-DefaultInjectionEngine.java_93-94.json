{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_base_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688830105019,
      "ESLB": 1688830125039,
      "SPVS": 1688830125039,
      "SPVAP": 1688830125043,
      "EPVAP": 1688830126970,
      "SPVATF": 1688830126970,
      "EPVATF": 1688830126970,
      "SPVATR": 1688830128976,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1688830128977
    },
    {
      "rank": 1,
      "SSLB": 1688830128977,
      "ESLB": 1688830148997,
      "SPVS": 1688830148997,
      "SPVAP": 1688830148998,
      "EPVAP": 1688830150777,
      "SPVATF": 1688830150777,
      "EPVATF": 1688830150777,
      "SPVATR": 1688830152783,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1688830152784
    },
    {
      "rank": 2,
      "SSLB": 1688830152784,
      "ESLB": 1688830172804,
      "SPVS": 1688830172804,
      "SPVAP": 1688830172805,
      "EPVAP": 1688830174473,
      "SPVATF": 1688830174473,
      "EPVATF": 1688830174473,
      "SPVATR": 1688830176479,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1688830176480
    },
    {
      "rank": 3,
      "SSLB": 1688830176480,
      "ESLB": 1688830196492,
      "SPVS": 1688830196492,
      "SPVAP": 1688830196493,
      "EPVAP": 1688830198237,
      "SPVATF": 1688830198237,
      "EPVATF": 1688830198237,
      "SPVATR": 1688830200243,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1688830200244
    },
    {
      "rank": 4,
      "SSLB": 1688830200244,
      "ESLB": 1688830220264,
      "SPVS": 1688830220264,
      "SPVAP": 1688830220265,
      "EPVAP": 1688830221965,
      "SPVATF": 1688830221965,
      "EPVATF": 1688830221965,
      "SPVATR": 1688830223971,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1688830223972
    },
    {
      "rank": 5,
      "SSLB": 1688830223972,
      "ESLB": 1688830243992,
      "SPVS": 1688830243992,
      "SPVAP": 1688830243993,
      "EPVAP": 1688830245696,
      "SPVATF": 1688830245696,
      "EPVATF": 1688830245696,
      "SPVATR": 1688830247702,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1688830247703
    },
    {
      "rank": 6,
      "SSLB": 1688830247703,
      "ESLB": 1688830267723,
      "SPVS": 1688830267723,
      "SPVAP": 1688830267724,
      "EPVAP": 1688830269389,
      "SPVATF": 1688830269389,
      "EPVATF": 1688830269389,
      "SPVATR": 1688830271395,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1688830271396
    },
    {
      "rank": 7,
      "SSLB": 1688830271396,
      "ESLB": 1688830291416,
      "SPVS": 1688830291416,
      "SPVAP": 1688830291417,
      "EPVAP": 1688830293143,
      "SPVATF": 1688830293143,
      "EPVATF": 1688830293143,
      "SPVATR": 1688830295150,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1688830295150
    },
    {
      "rank": 8,
      "SSLB": 1688830295150,
      "ESLB": 1688830315170,
      "SPVS": 1688830315170,
      "SPVAP": 1688830315171,
      "EPVAP": 1688830316843,
      "SPVATF": 1688830316843,
      "EPVATF": 1688830316843,
      "SPVATR": 1688830318849,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1688830318850
    },
    {
      "rank": 9,
      "SSLB": 1688830318850,
      "ESLB": 1688830338870,
      "SPVS": 1688830338870,
      "SPVAP": 1688830338871,
      "EPVAP": 1688830340607,
      "SPVATF": 1688830340607,
      "EPVATF": 1688830340607,
      "SPVATR": 1688830342613,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockMethod).thenInject();\n",
      "EPVS": 1688830342614
    }
  ],
  "SSLI": 1688801247168,
  "ESLI": 1688801277195,
  "hostname": "gros-70.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}