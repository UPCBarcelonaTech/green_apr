{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codet5_base_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688813697187,
      "ESLB": 1688813717207,
      "SPVS": 1688813717207,
      "SPVAP": 1688813717209,
      "EPVAP": 1688813717210,
      "SPVATF": 1688813717210,
      "EPVATF": 1688813719218,
      "SPVATR": 1688813719218,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688813719218
    },
    {
      "rank": 1,
      "SSLB": 1688813719218,
      "ESLB": 1688813739239,
      "SPVS": 1688813739239,
      "SPVAP": 1688813739240,
      "EPVAP": 1688813739242,
      "SPVATF": 1688813739242,
      "EPVATF": 1688813741249,
      "SPVATR": 1688813741249,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isIdentifier()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688813741250
    },
    {
      "rank": 2,
      "SSLB": 1688813741250,
      "ESLB": 1688813761270,
      "SPVS": 1688813761270,
      "SPVAP": 1688813761274,
      "EPVAP": 1688813761275,
      "SPVATF": 1688813761275,
      "EPVATF": 1688813763290,
      "SPVATR": 1688813763290,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    try {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1688813763291
    },
    {
      "rank": 3,
      "SSLB": 1688813763291,
      "ESLB": 1688813783311,
      "SPVS": 1688813783311,
      "SPVAP": 1688813783312,
      "EPVAP": 1688813783314,
      "SPVATF": 1688813783314,
      "EPVATF": 1688813786322,
      "SPVATR": 1688813786322,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.getType()!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION,",
      "EPVS": 1688813786324
    },
    {
      "rank": 4,
      "SSLB": 1688813786324,
      "ESLB": 1688813806344,
      "SPVS": 1688813806344,
      "SPVAP": 1688813806346,
      "EPVAP": 1688813806347,
      "SPVATF": 1688813806347,
      "EPVATF": 1688813808355,
      "SPVATR": 1688813808355,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688813808356
    },
    {
      "rank": 5,
      "SSLB": 1688813808356,
      "ESLB": 1688813828376,
      "SPVS": 1688813828376,
      "SPVAP": 1688813828378,
      "EPVAP": 1688813828379,
      "SPVATF": 1688813828379,
      "EPVATF": 1688813830388,
      "SPVATR": 1688813830388,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "            try {\n                String name = child.getString();\n                T type = typeSystem.getType(getScope(), n, name);\n                Property prop = getProperty(name);\n                if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n                    if (propertiesToErrorFor.containsKey(name)) {\n                        compiler.report(JSError.make(\n                        t.getSourceName(), child, propertiesToErrorFor.get(name),\n                        Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1688813830389
    },
    {
      "rank": 6,
      "SSLB": 1688813830389,
      "ESLB": 1688813850409,
      "SPVS": 1688813850409,
      "SPVAP": 1688813850416,
      "EPVAP": 1688813850424,
      "SPVATF": 1688813850424,
      "EPVATF": 1688813854435,
      "SPVATR": 1688813854435,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.",
      "EPVS": 1688813854436
    },
    {
      "rank": 7,
      "SSLB": 1688813854436,
      "ESLB": 1688813874456,
      "SPVS": 1688813874456,
      "SPVAP": 1688813874458,
      "EPVAP": 1688813874459,
      "SPVATF": 1688813874459,
      "EPVATF": 1688813877468,
      "SPVATR": 1688813877468,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isProperty()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688813877470
    },
    {
      "rank": 8,
      "SSLB": 1688813877470,
      "ESLB": 1688813897490,
      "SPVS": 1688813897490,
      "SPVAP": 1688813897491,
      "EPVAP": 1688813897492,
      "SPVATF": 1688813897492,
      "EPVATF": 1688813899507,
      "SPVATR": 1688813899507,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child, csrf               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688813899509
    },
    {
      "rank": 9,
      "SSLB": 1688813899509,
      "ESLB": 1688813919527,
      "SPVS": 1688813919527,
      "SPVAP": 1688813919528,
      "EPVAP": 1688813919530,
      "SPVATF": 1688813919530,
      "EPVATF": 1688813921536,
      "SPVATR": 1688813921536,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isGetProp()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name,",
      "EPVS": 1688813921537
    }
  ],
  "SSLI": 1688801247168,
  "ESLI": 1688801277195,
  "hostname": "gros-70.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}