{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_base_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688175839695,
      "ESLB": 1688175859715,
      "SPVS": 1688175859715,
      "SPVAP": 1688175859716,
      "EPVAP": 1688175861426,
      "SPVATF": 1688175861426,
      "EPVATF": 1688175861426,
      "SPVATR": 1688175863432,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1688175863433
    },
    {
      "rank": 1,
      "SSLB": 1688175863433,
      "ESLB": 1688175883453,
      "SPVS": 1688175883453,
      "SPVAP": 1688175883454,
      "EPVAP": 1688175885058,
      "SPVATF": 1688175885058,
      "EPVATF": 1688175885058,
      "SPVATR": 1688175887064,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1688175887065
    },
    {
      "rank": 2,
      "SSLB": 1688175887065,
      "ESLB": 1688175907085,
      "SPVS": 1688175907085,
      "SPVAP": 1688175907086,
      "EPVAP": 1688175908795,
      "SPVATF": 1688175908795,
      "EPVATF": 1688175908795,
      "SPVATR": 1688175910801,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1688175910802
    },
    {
      "rank": 3,
      "SSLB": 1688175910802,
      "ESLB": 1688175930822,
      "SPVS": 1688175930822,
      "SPVAP": 1688175930843,
      "EPVAP": 1688175932448,
      "SPVATF": 1688175932448,
      "EPVATF": 1688175932448,
      "SPVATR": 1688175934455,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1688175934455
    },
    {
      "rank": 4,
      "SSLB": 1688175934455,
      "ESLB": 1688175954475,
      "SPVS": 1688175954475,
      "SPVAP": 1688175954476,
      "EPVAP": 1688175956067,
      "SPVATF": 1688175956067,
      "EPVATF": 1688175956067,
      "SPVATR": 1688175958073,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1688175958074
    },
    {
      "rank": 5,
      "SSLB": 1688175958074,
      "ESLB": 1688175978094,
      "SPVS": 1688175978094,
      "SPVAP": 1688175978096,
      "EPVAP": 1688175979689,
      "SPVATF": 1688175979689,
      "EPVATF": 1688175979689,
      "SPVATR": 1688175981696,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1688175981696
    },
    {
      "rank": 6,
      "SSLB": 1688175981696,
      "ESLB": 1688176001716,
      "SPVS": 1688176001716,
      "SPVAP": 1688176001718,
      "EPVAP": 1688176003302,
      "SPVATF": 1688176003302,
      "EPVATF": 1688176003302,
      "SPVATR": 1688176005308,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1688176005309
    },
    {
      "rank": 7,
      "SSLB": 1688176005309,
      "ESLB": 1688176025330,
      "SPVS": 1688176025330,
      "SPVAP": 1688176025331,
      "EPVAP": 1688176026934,
      "SPVATF": 1688176026934,
      "EPVATF": 1688176026934,
      "SPVATR": 1688176028941,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance, MockCandidate.class).thenInject();\n",
      "EPVS": 1688176028942
    },
    {
      "rank": 8,
      "SSLB": 1688176028942,
      "ESLB": 1688176048962,
      "SPVS": 1688176048962,
      "SPVAP": 1688176048963,
      "EPVAP": 1688176050602,
      "SPVATF": 1688176050602,
      "EPVATF": 1688176050602,
      "SPVATR": 1688176052608,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        MockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1688176052609
    },
    {
      "rank": 9,
      "SSLB": 1688176052609,
      "ESLB": 1688176072629,
      "SPVS": 1688176072629,
      "SPVAP": 1688176072630,
      "EPVAP": 1688176074209,
      "SPVATF": 1688176074209,
      "EPVATF": 1688176074209,
      "SPVATR": 1688176076216,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockMethod).thenInject();\n",
      "EPVS": 1688176076216
    }
  ],
  "SSLI": 1688158183014,
  "ESLI": 1688158213044,
  "hostname": "gros-63.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212950"
}