{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_base_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688068706566,
      "ESLB": 1688068726586,
      "SPVS": 1688068726586,
      "SPVAP": 1688068726588,
      "EPVAP": 1688068726589,
      "SPVATF": 1688068726589,
      "EPVATF": 1688068726589,
      "SPVATR": 1688068727596,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node!= null) {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n",
      "EPVS": 1688068727598
    },
    {
      "rank": 1,
      "SSLB": 1688068727598,
      "ESLB": 1688068747618,
      "SPVS": 1688068747618,
      "SPVAP": 1688068747621,
      "EPVAP": 1688068747622,
      "SPVATF": 1688068747622,
      "EPVATF": 1688068747622,
      "SPVATR": 1688068748628,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    switch(node.getType()) {\n        case CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n            break;\n        default:\n            break;\n",
      "EPVS": 1688068748630
    },
    {
      "rank": 2,
      "SSLB": 1688068748630,
      "ESLB": 1688068768650,
      "SPVS": 1688068768650,
      "SPVAP": 1688068768656,
      "EPVAP": 1688068768658,
      "SPVATF": 1688068768658,
      "EPVATF": 1688068768658,
      "SPVATR": 1688068769664,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    Token type = node.getType();\n    if (type == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n                 changed.add(child.getString());\n        }\n",
      "EPVS": 1688068769666
    },
    {
      "rank": 3,
      "SSLB": 1688068769666,
      "ESLB": 1688068789686,
      "SPVS": 1688068789686,
      "SPVAP": 1688068789687,
      "EPVAP": 1688068789689,
      "SPVATF": 1688068789689,
      "EPVATF": 1688068789689,
      "SPVATR": 1688068790709,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    Node firstChild = node.getFirstChild();\n    if (firstChild.getType() == Token.CALL) {\n        Node child = firstChild;\n        if (child.getType() == Token.NAME) {\n                 changed.add(child.getString());\n        }\n",
      "EPVS": 1688068790710
    },
    {
      "rank": 4,
      "SSLB": 1688068790710,
      "ESLB": 1688068810731,
      "SPVS": 1688068810731,
      "SPVAP": 1688068810733,
      "EPVAP": 1688068810734,
      "SPVATF": 1688068810734,
      "EPVATF": 1688068810734,
      "SPVATR": 1688068811741,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n    } catch (RuntimeException e) {\n",
      "EPVS": 1688068811742
    },
    {
      "rank": 5,
      "SSLB": 1688068811742,
      "ESLB": 1688068831762,
      "SPVS": 1688068831762,
      "SPVAP": 1688068831768,
      "EPVAP": 1688068831770,
      "SPVATF": 1688068831770,
      "EPVATF": 1688068831770,
      "SPVATR": 1688068832776,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node!= null) {\n        Token type = node.getType();\n        if (type == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n",
      "EPVS": 1688068832778
    },
    {
      "rank": 6,
      "SSLB": 1688068832778,
      "ESLB": 1688068852798,
      "SPVS": 1688068852798,
      "SPVAP": 1688068852803,
      "EPVAP": 1688068852804,
      "SPVATF": 1688068852804,
      "EPVATF": 1688068852804,
      "SPVATR": 1688068853816,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    Token type = node.getType();\n    if (type == Token.CALL || type == Token.NAME) {\n        for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n            findCalledFunctions(c, changed);\n        }\n",
      "EPVS": 1688068853817
    },
    {
      "rank": 7,
      "SSLB": 1688068853817,
      "ESLB": 1688068873838,
      "SPVS": 1688068873838,
      "SPVAP": 1688068873840,
      "EPVAP": 1688068873842,
      "SPVATF": 1688068873842,
      "EPVATF": 1688068873842,
      "SPVATR": 1688068874849,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    switch(node.getType()) {\n        case CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n                break;\n            }\n            break;\n        default:\n            break;\n",
      "EPVS": 1688068874851
    },
    {
      "rank": 8,
      "SSLB": 1688068874851,
      "ESLB": 1688068894871,
      "SPVS": 1688068894871,
      "SPVAP": 1688068894873,
      "EPVAP": 1688068894874,
      "SPVATF": 1688068894874,
      "EPVATF": 1688068894874,
      "SPVATR": 1688068895880,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    Node firstChild = node.getFirstChild();\n    if (firstChild.getType() == Token.CALL) {\n        Node child = firstChild.getFirstChild();\n        if (child.getType() == Token.NAME) {\n                 changed.add(child.getString());\n        }\n",
      "EPVS": 1688068895882
    },
    {
      "rank": 9,
      "SSLB": 1688068895882,
      "ESLB": 1688068915902,
      "SPVS": 1688068915902,
      "SPVAP": 1688068915907,
      "EPVAP": 1688068915908,
      "SPVATF": 1688068915908,
      "EPVATF": 1688068915908,
      "SPVATR": 1688068916927,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                     changed.add(child.getString());\n            }\n        }\n    } catch (Exception e) {\n",
      "EPVS": 1688068916928
    }
  ],
  "SSLI": 1688059810339,
  "ESLI": 1688059840369,
  "hostname": "gros-68.nancy.grid5000.fr",
  "OAR_JOB_ID": "4214427"
}