{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codet5_base_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688066650261,
      "ESLB": 1688066670281,
      "SPVS": 1688066670281,
      "SPVAP": 1688066670288,
      "EPVAP": 1688066670290,
      "SPVATF": 1688066670290,
      "EPVATF": 1688066670290,
      "SPVATR": 1688066672311,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688066672312
    },
    {
      "rank": 1,
      "SSLB": 1688066672312,
      "ESLB": 1688066692332,
      "SPVS": 1688066692332,
      "SPVAP": 1688066692336,
      "EPVAP": 1688066692337,
      "SPVATF": 1688066692337,
      "EPVATF": 1688066692337,
      "SPVATR": 1688066694345,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (child.isIdentifier()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688066694346
    },
    {
      "rank": 2,
      "SSLB": 1688066694346,
      "ESLB": 1688066714366,
      "SPVS": 1688066714366,
      "SPVAP": 1688066714370,
      "EPVAP": 1688066714372,
      "SPVATF": 1688066714372,
      "EPVATF": 1688066714372,
      "SPVATR": 1688066716379,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    try {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1688066716380
    },
    {
      "rank": 3,
      "SSLB": 1688066716381,
      "ESLB": 1688066736401,
      "SPVS": 1688066736401,
      "SPVAP": 1688066736405,
      "EPVAP": 1688066736406,
      "SPVATF": 1688066736406,
      "EPVATF": 1688066736406,
      "SPVATR": 1688066738424,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (child.getType()!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION,",
      "EPVS": 1688066738425
    },
    {
      "rank": 4,
      "SSLB": 1688066738425,
      "ESLB": 1688066758445,
      "SPVS": 1688066758445,
      "SPVAP": 1688066758447,
      "EPVAP": 1688066758449,
      "SPVATF": 1688066758449,
      "EPVATF": 1688066758449,
      "SPVATR": 1688066760456,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688066760457
    },
    {
      "rank": 5,
      "SSLB": 1688066760457,
      "ESLB": 1688066780477,
      "SPVS": 1688066780477,
      "SPVAP": 1688066780479,
      "EPVAP": 1688066780480,
      "SPVATF": 1688066780480,
      "EPVATF": 1688066780480,
      "SPVATR": 1688066782487,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "            try {\n                String name = child.getString();\n                T type = typeSystem.getType(getScope(), n, name);\n                Property prop = getProperty(name);\n                if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n                    if (propertiesToErrorFor.containsKey(name)) {\n                        compiler.report(JSError.make(\n                        t.getSourceName(), child, propertiesToErrorFor.get(name),\n                        Warnings.INVALIDATION, name, child.toString(), \"\"));\n",
      "EPVS": 1688066782488
    },
    {
      "rank": 6,
      "SSLB": 1688066782488,
      "ESLB": 1688066802508,
      "SPVS": 1688066802508,
      "SPVAP": 1688066802510,
      "EPVAP": 1688066802511,
      "SPVATF": 1688066802511,
      "EPVATF": 1688066802511,
      "SPVATR": 1688066804519,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (child!= null) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child.",
      "EPVS": 1688066804520
    },
    {
      "rank": 7,
      "SSLB": 1688066804520,
      "ESLB": 1688066824540,
      "SPVS": 1688066824540,
      "SPVAP": 1688066824542,
      "EPVAP": 1688066824543,
      "SPVATF": 1688066824543,
      "EPVATF": 1688066824543,
      "SPVATR": 1688066826550,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (child.isProperty()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688066826551
    },
    {
      "rank": 8,
      "SSLB": 1688066826551,
      "ESLB": 1688066846572,
      "SPVS": 1688066846572,
      "SPVAP": 1688066846573,
      "EPVAP": 1688066846575,
      "SPVATF": 1688066846575,
      "EPVATF": 1688066846575,
      "SPVATR": 1688066848582,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (child.isString()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child, csrf               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, child",
      "EPVS": 1688066848584
    },
    {
      "rank": 9,
      "SSLB": 1688066848584,
      "ESLB": 1688066868604,
      "SPVS": 1688066868604,
      "SPVAP": 1688066868607,
      "EPVAP": 1688066868608,
      "SPVATF": 1688066868608,
      "EPVATF": 1688066868608,
      "SPVATR": 1688066870616,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (child.isGetProp()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(\n                t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name,",
      "EPVS": 1688066870617
    }
  ],
  "SSLI": 1688059810339,
  "ESLI": 1688059840369,
  "hostname": "gros-68.nancy.grid5000.fr",
  "OAR_JOB_ID": "4214427"
}