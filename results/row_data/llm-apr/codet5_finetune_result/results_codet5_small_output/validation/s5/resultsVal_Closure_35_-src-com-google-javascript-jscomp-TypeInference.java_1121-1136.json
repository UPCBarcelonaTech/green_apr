{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689901860444,
      "ESLB": 1689901880464,
      "SPVS": 1689901880464,
      "SPVAP": 1689901880465,
      "EPVAP": 1689901880466,
      "SPVATF": 1689901880466,
      "EPVATF": 1689901883474,
      "SPVATR": 1689901883474,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (constraintObj!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =",
      "EPVS": 1689901883476
    },
    {
      "rank": 1,
      "SSLB": 1689901883476,
      "ESLB": 1689901903493,
      "SPVS": 1689901903493,
      "SPVAP": 1689901903495,
      "EPVAP": 1689901903496,
      "SPVATF": 1689901903496,
      "EPVATF": 1689901905503,
      "SPVATR": 1689901905503,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (constraintObj!= null && constraintObj.isRecordType()) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {",
      "EPVS": 1689901905504
    },
    {
      "rank": 2,
      "SSLB": 1689901905504,
      "ESLB": 1689901925524,
      "SPVS": 1689901925524,
      "SPVAP": 1689901925525,
      "EPVAP": 1689901925526,
      "SPVATF": 1689901925526,
      "EPVATF": 1689901927531,
      "SPVATR": 1689901927531,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null && constraintObj.isRecordType()) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {",
      "EPVS": 1689901927532
    },
    {
      "rank": 3,
      "SSLB": 1689901927532,
      "ESLB": 1689901947552,
      "SPVS": 1689901947552,
      "SPVAP": 1689901947553,
      "EPVAP": 1689901947554,
      "SPVATF": 1689901947554,
      "EPVATF": 1689901949561,
      "SPVATR": 1689901949561,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =",
      "EPVS": 1689901949562
    },
    {
      "rank": 4,
      "SSLB": 1689901949562,
      "ESLB": 1689901969582,
      "SPVS": 1689901969582,
      "SPVAP": 1689901969583,
      "EPVAP": 1689901969584,
      "SPVATF": 1689901969584,
      "EPVATF": 1689901971590,
      "SPVATR": 1689901971590,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = objType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType",
      "EPVS": 1689901971591
    },
    {
      "rank": 5,
      "SSLB": 1689901971591,
      "ESLB": 1689901991601,
      "SPVS": 1689901991601,
      "SPVAP": 1689901991602,
      "EPVAP": 1689901991603,
      "SPVATF": 1689901991603,
      "EPVATF": 1689901993609,
      "SPVATR": 1689901993609,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = objType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(",
      "EPVS": 1689901993610
    },
    {
      "rank": 6,
      "SSLB": 1689901993610,
      "ESLB": 1689902013630,
      "SPVS": 1689902013630,
      "SPVAP": 1689902013631,
      "EPVAP": 1689902013632,
      "SPVATF": 1689902013632,
      "EPVATF": 1689902016640,
      "SPVATR": 1689902016641,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer =\n                    getNativeType(VOID_TYPE).getLeastSupertype(propType);\n                }\n                objType.defineInferred",
      "EPVS": 1689902016642
    },
    {
      "rank": 7,
      "SSLB": 1689902016642,
      "ESLB": 1689902036649,
      "SPVS": 1689902036649,
      "SPVAP": 1689902036650,
      "EPVAP": 1689902036651,
      "SPVATF": 1689902036651,
      "EPVATF": 1689902039659,
      "SPVATR": 1689902039659,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(VOID_TYPE).getLeastSupertype(propType",
      "EPVS": 1689902039659
    },
    {
      "rank": 8,
      "SSLB": 1689902039659,
      "ESLB": 1689902059680,
      "SPVS": 1689902059680,
      "SPVAP": 1689902059680,
      "EPVAP": 1689902059681,
      "SPVATF": 1689902059681,
      "EPVATF": 1689902061687,
      "SPVATR": 1689902061687,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType",
      "EPVS": 1689902061688
    },
    {
      "rank": 9,
      "SSLB": 1689902061688,
      "ESLB": 1689902081708,
      "SPVS": 1689902081708,
      "SPVAP": 1689902081709,
      "EPVAP": 1689902081710,
      "SPVATF": 1689902081710,
      "EPVATF": 1689902084718,
      "SPVATR": 1689902084718,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(",
      "EPVS": 1689902084719
    }
  ],
  "SSLI": 1689895109414,
  "ESLI": 1689895139444,
  "hostname": "gros-47.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}