{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689911432428,
      "ESLB": 1689911452448,
      "SPVS": 1689911452448,
      "SPVAP": 1689911452450,
      "EPVAP": 1689911452451,
      "SPVATF": 1689911452451,
      "EPVATF": 1689911452451,
      "SPVATR": 1689911454457,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689911454458
    },
    {
      "rank": 1,
      "SSLB": 1689911454458,
      "ESLB": 1689911474478,
      "SPVS": 1689911474478,
      "SPVAP": 1689911474479,
      "EPVAP": 1689911474480,
      "SPVATF": 1689911474480,
      "EPVATF": 1689911474480,
      "SPVATR": 1689911476486,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType()!= Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689911476487
    },
    {
      "rank": 2,
      "SSLB": 1689911476487,
      "ESLB": 1689911496507,
      "SPVS": 1689911496507,
      "SPVAP": 1689911496508,
      "EPVAP": 1689911496510,
      "SPVATF": 1689911496510,
      "EPVATF": 1689911496510,
      "SPVATR": 1689911498517,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case Token.CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n        default:\n            break;\n",
      "EPVS": 1689911498518
    },
    {
      "rank": 3,
      "SSLB": 1689911498518,
      "ESLB": 1689911518538,
      "SPVS": 1689911518538,
      "SPVAP": 1689911518539,
      "EPVAP": 1689911518540,
      "SPVATF": 1689911518540,
      "EPVATF": 1689911518540,
      "SPVATR": 1689911520546,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Token child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689911520547
    },
    {
      "rank": 4,
      "SSLB": 1689911520547,
      "ESLB": 1689911540567,
      "SPVS": 1689911540567,
      "SPVAP": 1689911540568,
      "EPVAP": 1689911540569,
      "SPVATF": 1689911540569,
      "EPVATF": 1689911540569,
      "SPVATR": 1689911542575,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null && node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689911542576
    },
    {
      "rank": 5,
      "SSLB": 1689911542576,
      "ESLB": 1689911562596,
      "SPVS": 1689911562596,
      "SPVAP": 1689911562597,
      "EPVAP": 1689911562598,
      "SPVATF": 1689911562598,
      "EPVATF": 1689911562598,
      "SPVATR": 1689911564605,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        if (node.getType() == Token.NAME) {\n            changed.add(node.getString());\n        }\n",
      "EPVS": 1689911564606
    },
    {
      "rank": 6,
      "SSLB": 1689911564606,
      "ESLB": 1689911584626,
      "SPVS": 1689911584626,
      "SPVAP": 1689911584627,
      "EPVAP": 1689911584628,
      "SPVATF": 1689911584628,
      "EPVATF": 1689911584628,
      "SPVATR": 1689911586634,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689911586635
    },
    {
      "rank": 7,
      "SSLB": 1689911586636,
      "ESLB": 1689911606656,
      "SPVS": 1689911606656,
      "SPVAP": 1689911606657,
      "EPVAP": 1689911606657,
      "SPVATF": 1689911606657,
      "EPVATF": 1689911606657,
      "SPVATR": 1689911608663,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1689911608664
    },
    {
      "rank": 8,
      "SSLB": 1689911608664,
      "ESLB": 1689911628684,
      "SPVS": 1689911628684,
      "SPVAP": 1689911628685,
      "EPVAP": 1689911628686,
      "SPVATF": 1689911628686,
      "EPVATF": 1689911628686,
      "SPVATR": 1689911633696,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node!= null) {\n         if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689911633697
    },
    {
      "rank": 9,
      "SSLB": 1689911633697,
      "ESLB": 1689911653717,
      "SPVS": 1689911653717,
      "SPVAP": 1689911653718,
      "EPVAP": 1689911653719,
      "SPVATF": 1689911653719,
      "EPVATF": 1689911653719,
      "SPVATR": 1689911655725,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.FUNCTION) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689911655726
    }
  ],
  "SSLI": 1689895109414,
  "ESLI": 1689895139444,
  "hostname": "gros-47.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}