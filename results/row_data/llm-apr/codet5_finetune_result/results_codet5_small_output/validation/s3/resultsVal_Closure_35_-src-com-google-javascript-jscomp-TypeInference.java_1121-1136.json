{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689800604622,
      "ESLB": 1689800624642,
      "SPVS": 1689800624642,
      "SPVAP": 1689800624644,
      "EPVAP": 1689800624645,
      "SPVATF": 1689800624645,
      "EPVATF": 1689800627654,
      "SPVATR": 1689800627654,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (constraintObj!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =",
      "EPVS": 1689800627656
    },
    {
      "rank": 1,
      "SSLB": 1689800627656,
      "ESLB": 1689800647676,
      "SPVS": 1689800647676,
      "SPVAP": 1689800647677,
      "EPVAP": 1689800647679,
      "SPVATF": 1689800647679,
      "EPVATF": 1689800650687,
      "SPVATR": 1689800650687,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (constraintObj!= null && constraintObj.isRecordType()) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {",
      "EPVS": 1689800650688
    },
    {
      "rank": 2,
      "SSLB": 1689800650688,
      "ESLB": 1689800670708,
      "SPVS": 1689800670708,
      "SPVAP": 1689800670710,
      "EPVAP": 1689800670712,
      "SPVATF": 1689800670712,
      "EPVATF": 1689800672718,
      "SPVATR": 1689800672719,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null && constraintObj.isRecordType()) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {",
      "EPVS": 1689800672720
    },
    {
      "rank": 3,
      "SSLB": 1689800672720,
      "ESLB": 1689800692740,
      "SPVS": 1689800692740,
      "SPVAP": 1689800692741,
      "EPVAP": 1689800692743,
      "SPVATF": 1689800692743,
      "EPVATF": 1689800695752,
      "SPVATR": 1689800695752,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =",
      "EPVS": 1689800695753
    },
    {
      "rank": 4,
      "SSLB": 1689800695753,
      "ESLB": 1689800715773,
      "SPVS": 1689800715773,
      "SPVAP": 1689800715775,
      "EPVAP": 1689800715776,
      "SPVATF": 1689800715776,
      "EPVATF": 1689800717782,
      "SPVATR": 1689800717782,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = objType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType",
      "EPVS": 1689800717784
    },
    {
      "rank": 5,
      "SSLB": 1689800717784,
      "ESLB": 1689800737804,
      "SPVS": 1689800737804,
      "SPVAP": 1689800737806,
      "EPVAP": 1689800737808,
      "SPVATF": 1689800737808,
      "EPVATF": 1689800739814,
      "SPVATR": 1689800739814,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = objType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(",
      "EPVS": 1689800739815
    },
    {
      "rank": 6,
      "SSLB": 1689800739815,
      "ESLB": 1689800759835,
      "SPVS": 1689800759835,
      "SPVAP": 1689800759837,
      "EPVAP": 1689800759838,
      "SPVATF": 1689800759838,
      "EPVATF": 1689800762847,
      "SPVATR": 1689800762847,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer =\n                    getNativeType(VOID_TYPE).getLeastSupertype(propType);\n                }\n                objType.defineInferred",
      "EPVS": 1689800762849
    },
    {
      "rank": 7,
      "SSLB": 1689800762849,
      "ESLB": 1689800782869,
      "SPVS": 1689800782869,
      "SPVAP": 1689800782871,
      "EPVAP": 1689800782872,
      "SPVATF": 1689800782872,
      "EPVATF": 1689800784879,
      "SPVATR": 1689800784879,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(VOID_TYPE).getLeastSupertype(propType",
      "EPVS": 1689800784880
    },
    {
      "rank": 8,
      "SSLB": 1689800784880,
      "ESLB": 1689800804900,
      "SPVS": 1689800804900,
      "SPVAP": 1689800804901,
      "EPVAP": 1689800804903,
      "SPVATF": 1689800804903,
      "EPVATF": 1689800806910,
      "SPVATR": 1689800806910,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType",
      "EPVS": 1689800806911
    },
    {
      "rank": 9,
      "SSLB": 1689800806911,
      "ESLB": 1689800826931,
      "SPVS": 1689800826931,
      "SPVAP": 1689800826933,
      "EPVAP": 1689800826934,
      "SPVATF": 1689800826934,
      "EPVATF": 1689800829943,
      "SPVATR": 1689800829943,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(",
      "EPVS": 1689800829945
    }
  ],
  "SSLI": 1689794899686,
  "ESLI": 1689794929716,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}