{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689810154502,
      "ESLB": 1689810174522,
      "SPVS": 1689810174522,
      "SPVAP": 1689810174526,
      "EPVAP": 1689810174527,
      "SPVATF": 1689810174527,
      "EPVATF": 1689810174527,
      "SPVATR": 1689810176534,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689810176535
    },
    {
      "rank": 1,
      "SSLB": 1689810176535,
      "ESLB": 1689810196555,
      "SPVS": 1689810196555,
      "SPVAP": 1689810196557,
      "EPVAP": 1689810196559,
      "SPVATF": 1689810196559,
      "EPVATF": 1689810196559,
      "SPVATR": 1689810198566,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType()!= Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689810198567
    },
    {
      "rank": 2,
      "SSLB": 1689810198567,
      "ESLB": 1689810218587,
      "SPVS": 1689810218587,
      "SPVAP": 1689810218592,
      "EPVAP": 1689810218593,
      "SPVATF": 1689810218593,
      "EPVATF": 1689810218593,
      "SPVATR": 1689810220606,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case Token.CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n        default:\n            break;\n",
      "EPVS": 1689810220607
    },
    {
      "rank": 3,
      "SSLB": 1689810220607,
      "ESLB": 1689810240627,
      "SPVS": 1689810240627,
      "SPVAP": 1689810240633,
      "EPVAP": 1689810240635,
      "SPVATF": 1689810240635,
      "EPVATF": 1689810240635,
      "SPVATR": 1689810242641,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Token child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689810242642
    },
    {
      "rank": 4,
      "SSLB": 1689810242642,
      "ESLB": 1689810262662,
      "SPVS": 1689810262662,
      "SPVAP": 1689810262664,
      "EPVAP": 1689810262666,
      "SPVATF": 1689810262666,
      "EPVATF": 1689810262666,
      "SPVATR": 1689810264673,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null && node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689810264674
    },
    {
      "rank": 5,
      "SSLB": 1689810264674,
      "ESLB": 1689810284695,
      "SPVS": 1689810284695,
      "SPVAP": 1689810284696,
      "EPVAP": 1689810284697,
      "SPVATF": 1689810284697,
      "EPVATF": 1689810284697,
      "SPVATR": 1689810286714,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        if (node.getType() == Token.NAME) {\n            changed.add(node.getString());\n        }\n",
      "EPVS": 1689810286715
    },
    {
      "rank": 6,
      "SSLB": 1689810286715,
      "ESLB": 1689810306735,
      "SPVS": 1689810306735,
      "SPVAP": 1689810306741,
      "EPVAP": 1689810306742,
      "SPVATF": 1689810306742,
      "EPVATF": 1689810306742,
      "SPVATR": 1689810308749,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689810308750
    },
    {
      "rank": 7,
      "SSLB": 1689810308750,
      "ESLB": 1689810328770,
      "SPVS": 1689810328770,
      "SPVAP": 1689810328772,
      "EPVAP": 1689810328773,
      "SPVATF": 1689810328773,
      "EPVATF": 1689810328773,
      "SPVATR": 1689810330780,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1689810330781
    },
    {
      "rank": 8,
      "SSLB": 1689810330781,
      "ESLB": 1689810350801,
      "SPVS": 1689810350801,
      "SPVAP": 1689810350803,
      "EPVAP": 1689810350804,
      "SPVATF": 1689810350804,
      "EPVATF": 1689810350804,
      "SPVATR": 1689810355830,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node!= null) {\n         if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689810355831
    },
    {
      "rank": 9,
      "SSLB": 1689810355831,
      "ESLB": 1689810375851,
      "SPVS": 1689810375851,
      "SPVAP": 1689810375853,
      "EPVAP": 1689810375854,
      "SPVATF": 1689810375854,
      "EPVATF": 1689810375854,
      "SPVATR": 1689810377860,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.FUNCTION) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689810377861
    }
  ],
  "SSLI": 1689794899686,
  "ESLI": 1689794929716,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}