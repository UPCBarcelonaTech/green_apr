{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_small_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689823851335,
      "ESLB": 1689823871355,
      "SPVS": 1689823871355,
      "SPVAP": 1689823871356,
      "EPVAP": 1689823877181,
      "SPVATF": 1689823877181,
      "EPVATF": 1689823877181,
      "SPVATR": 1689823886193,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689823886194
    },
    {
      "rank": 1,
      "SSLB": 1689823886194,
      "ESLB": 1689823906214,
      "SPVS": 1689823906214,
      "SPVAP": 1689823906215,
      "EPVAP": 1689823912196,
      "SPVATF": 1689823912196,
      "EPVATF": 1689823912196,
      "SPVATR": 1689823921209,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1689823921209
    },
    {
      "rank": 2,
      "SSLB": 1689823921209,
      "ESLB": 1689823941229,
      "SPVS": 1689823941229,
      "SPVAP": 1689823941230,
      "EPVAP": 1689823943140,
      "SPVATF": 1689823943140,
      "EPVATF": 1689823943140,
      "SPVATR": 1689823945145,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, fieldInstance).thenInject();\n",
      "EPVS": 1689823945146
    },
    {
      "rank": 3,
      "SSLB": 1689823945146,
      "ESLB": 1689823965166,
      "SPVS": 1689823965166,
      "SPVAP": 1689823965167,
      "EPVAP": 1689823966925,
      "SPVATF": 1689823966925,
      "EPVATF": 1689823966925,
      "SPVATR": 1689823968931,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateFilter).thenInject();\n",
      "EPVS": 1689823968933
    },
    {
      "rank": 4,
      "SSLB": 1689823968933,
      "ESLB": 1689823988953,
      "SPVS": 1689823988953,
      "SPVAP": 1689823988956,
      "EPVAP": 1689823990648,
      "SPVATF": 1689823990648,
      "EPVATF": 1689823990648,
      "SPVATR": 1689823992654,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidate);\n",
      "EPVS": 1689823992655
    },
    {
      "rank": 5,
      "SSLB": 1689823992655,
      "ESLB": 1689824012675,
      "SPVS": 1689824012675,
      "SPVAP": 1689824012677,
      "EPVAP": 1689824014423,
      "SPVATF": 1689824014423,
      "EPVATF": 1689824014423,
      "SPVATR": 1689824016428,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockContext).thenInject();\n",
      "EPVS": 1689824016429
    },
    {
      "rank": 6,
      "SSLB": 1689824016429,
      "ESLB": 1689824036449,
      "SPVS": 1689824036449,
      "SPVAP": 1689824036452,
      "EPVAP": 1689824038124,
      "SPVATF": 1689824038124,
      "EPVATF": 1689824038124,
      "SPVATR": 1689824040129,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field.getName(), fieldInstance).thenInject();\n",
      "EPVS": 1689824040130
    },
    {
      "rank": 7,
      "SSLB": 1689824040130,
      "ESLB": 1689824060150,
      "SPVS": 1689824060150,
      "SPVAP": 1689824060151,
      "EPVAP": 1689824061818,
      "SPVATF": 1689824061818,
      "EPVATF": 1689824061818,
      "SPVATR": 1689824063824,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1689824063825
    },
    {
      "rank": 8,
      "SSLB": 1689824063825,
      "ESLB": 1689824083845,
      "SPVS": 1689824083845,
      "SPVAP": 1689824083845,
      "EPVAP": 1689824085555,
      "SPVATF": 1689824085555,
      "EPVATF": 1689824085555,
      "SPVATR": 1689824087560,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateClass).thenInject();\n",
      "EPVS": 1689824087561
    },
    {
      "rank": 9,
      "SSLB": 1689824087561,
      "ESLB": 1689824107581,
      "SPVS": 1689824107581,
      "SPVAP": 1689824107582,
      "EPVAP": 1689824109382,
      "SPVATF": 1689824109382,
      "EPVATF": 1689824109382,
      "SPVATR": 1689824111388,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689824111389
    }
  ],
  "SSLI": 1689794899686,
  "ESLI": 1689794929716,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}