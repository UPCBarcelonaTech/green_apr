{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_small_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689746130237,
      "ESLB": 1689746150256,
      "SPVS": 1689746150256,
      "SPVAP": 1689746150257,
      "EPVAP": 1689746156159,
      "SPVATF": 1689746156159,
      "EPVATF": 1689746156159,
      "SPVATR": 1689746165172,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689746165173
    },
    {
      "rank": 1,
      "SSLB": 1689746165173,
      "ESLB": 1689746185193,
      "SPVS": 1689746185193,
      "SPVAP": 1689746185194,
      "EPVAP": 1689746191048,
      "SPVATF": 1689746191048,
      "EPVATF": 1689746191048,
      "SPVATR": 1689746200061,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1689746200062
    },
    {
      "rank": 2,
      "SSLB": 1689746200062,
      "ESLB": 1689746220082,
      "SPVS": 1689746220082,
      "SPVAP": 1689746220083,
      "EPVAP": 1689746221968,
      "SPVATF": 1689746221968,
      "EPVATF": 1689746221968,
      "SPVATR": 1689746223973,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, fieldInstance).thenInject();\n",
      "EPVS": 1689746223974
    },
    {
      "rank": 3,
      "SSLB": 1689746223974,
      "ESLB": 1689746243994,
      "SPVS": 1689746243994,
      "SPVAP": 1689746243995,
      "EPVAP": 1689746245697,
      "SPVATF": 1689746245697,
      "EPVATF": 1689746245697,
      "SPVATR": 1689746247703,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateFilter).thenInject();\n",
      "EPVS": 1689746247704
    },
    {
      "rank": 4,
      "SSLB": 1689746247704,
      "ESLB": 1689746267724,
      "SPVS": 1689746267724,
      "SPVAP": 1689746267725,
      "EPVAP": 1689746269399,
      "SPVATF": 1689746269399,
      "EPVATF": 1689746269399,
      "SPVATR": 1689746271405,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidate);\n",
      "EPVS": 1689746271406
    },
    {
      "rank": 5,
      "SSLB": 1689746271406,
      "ESLB": 1689746291426,
      "SPVS": 1689746291426,
      "SPVAP": 1689746291427,
      "EPVAP": 1689746293125,
      "SPVATF": 1689746293125,
      "EPVATF": 1689746293125,
      "SPVATR": 1689746295132,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockContext).thenInject();\n",
      "EPVS": 1689746295133
    },
    {
      "rank": 6,
      "SSLB": 1689746295133,
      "ESLB": 1689746315153,
      "SPVS": 1689746315153,
      "SPVAP": 1689746315154,
      "EPVAP": 1689746316867,
      "SPVATF": 1689746316867,
      "EPVATF": 1689746316867,
      "SPVATR": 1689746318873,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field.getName(), fieldInstance).thenInject();\n",
      "EPVS": 1689746318874
    },
    {
      "rank": 7,
      "SSLB": 1689746318874,
      "ESLB": 1689746338894,
      "SPVS": 1689746338894,
      "SPVAP": 1689746338895,
      "EPVAP": 1689746340658,
      "SPVATF": 1689746340658,
      "EPVATF": 1689746340658,
      "SPVATR": 1689746342664,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1689746342665
    },
    {
      "rank": 8,
      "SSLB": 1689746342665,
      "ESLB": 1689746362685,
      "SPVS": 1689746362685,
      "SPVAP": 1689746362686,
      "EPVAP": 1689746364467,
      "SPVATF": 1689746364467,
      "EPVATF": 1689746364467,
      "SPVATR": 1689746366473,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateClass).thenInject();\n",
      "EPVS": 1689746366474
    },
    {
      "rank": 9,
      "SSLB": 1689746366474,
      "ESLB": 1689746386494,
      "SPVS": 1689746386494,
      "SPVAP": 1689746386499,
      "EPVAP": 1689746388202,
      "SPVATF": 1689746388202,
      "EPVATF": 1689746388202,
      "SPVATR": 1689746390208,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689746390209
    }
  ],
  "SSLI": 1689716131355,
  "ESLI": 1689716161385,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}