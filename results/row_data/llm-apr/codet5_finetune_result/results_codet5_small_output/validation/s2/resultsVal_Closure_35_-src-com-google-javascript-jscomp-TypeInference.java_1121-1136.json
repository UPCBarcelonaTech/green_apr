{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689722907909,
      "ESLB": 1689722927929,
      "SPVS": 1689722927929,
      "SPVAP": 1689722927932,
      "EPVAP": 1689722927933,
      "SPVATF": 1689722927933,
      "EPVATF": 1689722929942,
      "SPVATR": 1689722929942,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (constraintObj!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =",
      "EPVS": 1689722929943
    },
    {
      "rank": 1,
      "SSLB": 1689722929944,
      "ESLB": 1689722949964,
      "SPVS": 1689722949964,
      "SPVAP": 1689722949965,
      "EPVAP": 1689722949967,
      "SPVATF": 1689722949967,
      "EPVATF": 1689722951974,
      "SPVATR": 1689722951974,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (constraintObj!= null && constraintObj.isRecordType()) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {",
      "EPVS": 1689722951976
    },
    {
      "rank": 2,
      "SSLB": 1689722951976,
      "ESLB": 1689722971996,
      "SPVS": 1689722971996,
      "SPVAP": 1689722971997,
      "EPVAP": 1689722971999,
      "SPVATF": 1689722971999,
      "EPVATF": 1689722974006,
      "SPVATR": 1689722974006,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null && constraintObj.isRecordType()) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {",
      "EPVS": 1689722974007
    },
    {
      "rank": 3,
      "SSLB": 1689722974007,
      "ESLB": 1689722994027,
      "SPVS": 1689722994027,
      "SPVAP": 1689722994029,
      "EPVAP": 1689722994031,
      "SPVATF": 1689722994031,
      "EPVATF": 1689722997042,
      "SPVATR": 1689722997042,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =",
      "EPVS": 1689722997044
    },
    {
      "rank": 4,
      "SSLB": 1689722997044,
      "ESLB": 1689723017064,
      "SPVS": 1689723017064,
      "SPVAP": 1689723017065,
      "EPVAP": 1689723017067,
      "SPVATF": 1689723017067,
      "EPVATF": 1689723019074,
      "SPVATR": 1689723019074,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = objType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType",
      "EPVS": 1689723019075
    },
    {
      "rank": 5,
      "SSLB": 1689723019075,
      "ESLB": 1689723039095,
      "SPVS": 1689723039095,
      "SPVAP": 1689723039102,
      "EPVAP": 1689723039103,
      "SPVATF": 1689723039103,
      "EPVATF": 1689723042112,
      "SPVATR": 1689723042112,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = objType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(",
      "EPVS": 1689723042113
    },
    {
      "rank": 6,
      "SSLB": 1689723042113,
      "ESLB": 1689723062133,
      "SPVS": 1689723062133,
      "SPVAP": 1689723062136,
      "EPVAP": 1689723062137,
      "SPVATF": 1689723062137,
      "EPVATF": 1689723064148,
      "SPVATR": 1689723064148,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer =\n                    getNativeType(VOID_TYPE).getLeastSupertype(propType);\n                }\n                objType.defineInferred",
      "EPVS": 1689723064150
    },
    {
      "rank": 7,
      "SSLB": 1689723064150,
      "ESLB": 1689723084170,
      "SPVS": 1689723084170,
      "SPVAP": 1689723084171,
      "EPVAP": 1689723084173,
      "SPVATF": 1689723084173,
      "EPVATF": 1689723086181,
      "SPVATR": 1689723086181,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(VOID_TYPE).getLeastSupertype(propType",
      "EPVS": 1689723086182
    },
    {
      "rank": 8,
      "SSLB": 1689723086182,
      "ESLB": 1689723106202,
      "SPVS": 1689723106202,
      "SPVAP": 1689723106203,
      "EPVAP": 1689723106205,
      "SPVATF": 1689723106205,
      "EPVATF": 1689723109213,
      "SPVATR": 1689723109213,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType",
      "EPVS": 1689723109215
    },
    {
      "rank": 9,
      "SSLB": 1689723109215,
      "ESLB": 1689723129235,
      "SPVS": 1689723129235,
      "SPVAP": 1689723129237,
      "EPVAP": 1689723129238,
      "SPVATF": 1689723129238,
      "EPVATF": 1689723132248,
      "SPVATR": 1689723132248,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(",
      "EPVS": 1689723132249
    }
  ],
  "SSLI": 1689716131355,
  "ESLI": 1689716161385,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}