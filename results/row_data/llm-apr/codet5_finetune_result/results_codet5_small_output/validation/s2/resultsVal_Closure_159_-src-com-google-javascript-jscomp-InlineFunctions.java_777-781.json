{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689732438377,
      "ESLB": 1689732458398,
      "SPVS": 1689732458398,
      "SPVAP": 1689732458400,
      "EPVAP": 1689732458401,
      "SPVATF": 1689732458401,
      "EPVATF": 1689732458401,
      "SPVATR": 1689732460408,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689732460409
    },
    {
      "rank": 1,
      "SSLB": 1689732460409,
      "ESLB": 1689732480429,
      "SPVS": 1689732480429,
      "SPVAP": 1689732480431,
      "EPVAP": 1689732480432,
      "SPVATF": 1689732480432,
      "EPVATF": 1689732480432,
      "SPVATR": 1689732482439,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType()!= Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689732482441
    },
    {
      "rank": 2,
      "SSLB": 1689732482441,
      "ESLB": 1689732502461,
      "SPVS": 1689732502461,
      "SPVAP": 1689732502462,
      "EPVAP": 1689732502464,
      "SPVATF": 1689732502464,
      "EPVATF": 1689732502464,
      "SPVATR": 1689732504472,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case Token.CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n        default:\n            break;\n",
      "EPVS": 1689732504474
    },
    {
      "rank": 3,
      "SSLB": 1689732504474,
      "ESLB": 1689732524494,
      "SPVS": 1689732524494,
      "SPVAP": 1689732524496,
      "EPVAP": 1689732524497,
      "SPVATF": 1689732524497,
      "EPVATF": 1689732524497,
      "SPVATR": 1689732526505,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Token child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689732526506
    },
    {
      "rank": 4,
      "SSLB": 1689732526506,
      "ESLB": 1689732546526,
      "SPVS": 1689732546526,
      "SPVAP": 1689732546528,
      "EPVAP": 1689732546529,
      "SPVATF": 1689732546529,
      "EPVATF": 1689732546529,
      "SPVATR": 1689732548536,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null && node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689732548537
    },
    {
      "rank": 5,
      "SSLB": 1689732548537,
      "ESLB": 1689732568557,
      "SPVS": 1689732568557,
      "SPVAP": 1689732568559,
      "EPVAP": 1689732568560,
      "SPVATF": 1689732568560,
      "EPVATF": 1689732568560,
      "SPVATR": 1689732570569,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        if (node.getType() == Token.NAME) {\n            changed.add(node.getString());\n        }\n",
      "EPVS": 1689732570571
    },
    {
      "rank": 6,
      "SSLB": 1689732570571,
      "ESLB": 1689732590591,
      "SPVS": 1689732590591,
      "SPVAP": 1689732590592,
      "EPVAP": 1689732590594,
      "SPVATF": 1689732590594,
      "EPVATF": 1689732590594,
      "SPVATR": 1689732592601,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689732592603
    },
    {
      "rank": 7,
      "SSLB": 1689732592603,
      "ESLB": 1689732612623,
      "SPVS": 1689732612623,
      "SPVAP": 1689732612626,
      "EPVAP": 1689732612627,
      "SPVATF": 1689732612627,
      "EPVATF": 1689732612627,
      "SPVATR": 1689732614635,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1689732614636
    },
    {
      "rank": 8,
      "SSLB": 1689732614636,
      "ESLB": 1689732634657,
      "SPVS": 1689732634657,
      "SPVAP": 1689732634658,
      "EPVAP": 1689732634659,
      "SPVATF": 1689732634659,
      "EPVATF": 1689732634659,
      "SPVATR": 1689732639683,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node!= null) {\n         if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689732639684
    },
    {
      "rank": 9,
      "SSLB": 1689732639684,
      "ESLB": 1689732659704,
      "SPVS": 1689732659704,
      "SPVAP": 1689732659706,
      "EPVAP": 1689732659707,
      "SPVATF": 1689732659707,
      "EPVATF": 1689732659707,
      "SPVATR": 1689732661713,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.FUNCTION) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689732661714
    }
  ],
  "SSLI": 1689716131355,
  "ESLI": 1689716161385,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}