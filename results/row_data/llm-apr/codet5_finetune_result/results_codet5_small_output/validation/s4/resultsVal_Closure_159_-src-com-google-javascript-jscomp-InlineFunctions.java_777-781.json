{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689879403433,
      "ESLB": 1689879423453,
      "SPVS": 1689879423453,
      "SPVAP": 1689879423455,
      "EPVAP": 1689879423456,
      "SPVATF": 1689879423456,
      "EPVATF": 1689879425463,
      "SPVATR": 1689879425463,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689879425465
    },
    {
      "rank": 1,
      "SSLB": 1689879425465,
      "ESLB": 1689879445485,
      "SPVS": 1689879445485,
      "SPVAP": 1689879445486,
      "EPVAP": 1689879445487,
      "SPVATF": 1689879445487,
      "EPVATF": 1689879447495,
      "SPVATR": 1689879447495,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType()!= Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689879447496
    },
    {
      "rank": 2,
      "SSLB": 1689879447496,
      "ESLB": 1689879467505,
      "SPVS": 1689879467505,
      "SPVAP": 1689879467509,
      "EPVAP": 1689879467510,
      "SPVATF": 1689879467510,
      "EPVATF": 1689879469531,
      "SPVATR": 1689879469531,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case Token.CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n        default:\n            break;\n",
      "EPVS": 1689879469532
    },
    {
      "rank": 3,
      "SSLB": 1689879469532,
      "ESLB": 1689879489552,
      "SPVS": 1689879489552,
      "SPVAP": 1689879489556,
      "EPVAP": 1689879489557,
      "SPVATF": 1689879489557,
      "EPVATF": 1689879491565,
      "SPVATR": 1689879491565,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Token child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689879491566
    },
    {
      "rank": 4,
      "SSLB": 1689879491566,
      "ESLB": 1689879511586,
      "SPVS": 1689879511586,
      "SPVAP": 1689879511589,
      "EPVAP": 1689879511590,
      "SPVATF": 1689879511590,
      "EPVATF": 1689879513598,
      "SPVATR": 1689879513598,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node!= null && node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689879513599
    },
    {
      "rank": 5,
      "SSLB": 1689879513599,
      "ESLB": 1689879533619,
      "SPVS": 1689879533619,
      "SPVAP": 1689879533625,
      "EPVAP": 1689879533626,
      "SPVATF": 1689879533626,
      "EPVATF": 1689879535643,
      "SPVATR": 1689879535643,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        if (node.getType() == Token.NAME) {\n            changed.add(node.getString());\n        }\n",
      "EPVS": 1689879535644
    },
    {
      "rank": 6,
      "SSLB": 1689879535644,
      "ESLB": 1689879555665,
      "SPVS": 1689879555665,
      "SPVAP": 1689879555666,
      "EPVAP": 1689879555668,
      "SPVATF": 1689879555668,
      "EPVATF": 1689879557675,
      "SPVATR": 1689879557675,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689879557677
    },
    {
      "rank": 7,
      "SSLB": 1689879557677,
      "ESLB": 1689879577697,
      "SPVS": 1689879577697,
      "SPVAP": 1689879577698,
      "EPVAP": 1689879577700,
      "SPVATF": 1689879577700,
      "EPVATF": 1689879579708,
      "SPVATR": 1689879579708,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1689879579709
    },
    {
      "rank": 8,
      "SSLB": 1689879579709,
      "ESLB": 1689879599729,
      "SPVS": 1689879599729,
      "SPVAP": 1689879599731,
      "EPVAP": 1689879599733,
      "SPVATF": 1689879599733,
      "EPVATF": 1689879602742,
      "SPVATR": 1689879602742,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (node!= null) {\n         if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689879602742
    },
    {
      "rank": 9,
      "SSLB": 1689879602742,
      "ESLB": 1689879622763,
      "SPVS": 1689879622763,
      "SPVAP": 1689879622764,
      "EPVAP": 1689879622765,
      "SPVATF": 1689879622765,
      "EPVATF": 1689879624771,
      "SPVATR": 1689879624771,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.FUNCTION) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689879624772
    }
  ],
  "SSLI": 1689872965184,
  "ESLI": 1689872995214,
  "hostname": "gros-47.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}