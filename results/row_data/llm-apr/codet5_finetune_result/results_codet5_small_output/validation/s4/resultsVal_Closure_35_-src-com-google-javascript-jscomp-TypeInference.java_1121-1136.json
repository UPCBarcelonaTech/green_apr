{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689832644580,
      "ESLB": 1689832664600,
      "SPVS": 1689832664600,
      "SPVAP": 1689832664602,
      "EPVAP": 1689832664603,
      "SPVATF": 1689832664603,
      "EPVATF": 1689832666624,
      "SPVATR": 1689832666624,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (constraintObj!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =",
      "EPVS": 1689832666625
    },
    {
      "rank": 1,
      "SSLB": 1689832666625,
      "ESLB": 1689832686645,
      "SPVS": 1689832686645,
      "SPVAP": 1689832686647,
      "EPVAP": 1689832686648,
      "SPVATF": 1689832686648,
      "EPVATF": 1689832689654,
      "SPVATR": 1689832689654,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (constraintObj!= null && constraintObj.isRecordType()) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {",
      "EPVS": 1689832689655
    },
    {
      "rank": 2,
      "SSLB": 1689832689655,
      "ESLB": 1689832709659,
      "SPVS": 1689832709659,
      "SPVAP": 1689832709660,
      "EPVAP": 1689832709661,
      "SPVATF": 1689832709661,
      "EPVATF": 1689832712668,
      "SPVATR": 1689832712668,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null && constraintObj.isRecordType()) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {",
      "EPVS": 1689832712669
    },
    {
      "rank": 3,
      "SSLB": 1689832712669,
      "ESLB": 1689832732689,
      "SPVS": 1689832732689,
      "SPVAP": 1689832732690,
      "EPVAP": 1689832732691,
      "SPVATF": 1689832732691,
      "EPVATF": 1689832734698,
      "SPVATR": 1689832734698,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =",
      "EPVS": 1689832734699
    },
    {
      "rank": 4,
      "SSLB": 1689832734699,
      "ESLB": 1689832754719,
      "SPVS": 1689832754719,
      "SPVAP": 1689832754720,
      "EPVAP": 1689832754721,
      "SPVATF": 1689832754721,
      "EPVATF": 1689832757727,
      "SPVATR": 1689832757727,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = objType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType",
      "EPVS": 1689832757728
    },
    {
      "rank": 5,
      "SSLB": 1689832757728,
      "ESLB": 1689832777749,
      "SPVS": 1689832777749,
      "SPVAP": 1689832777749,
      "EPVAP": 1689832777751,
      "SPVATF": 1689832777751,
      "EPVATF": 1689832780757,
      "SPVATR": 1689832780757,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = objType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(",
      "EPVS": 1689832780758
    },
    {
      "rank": 6,
      "SSLB": 1689832780758,
      "ESLB": 1689832800778,
      "SPVS": 1689832800778,
      "SPVAP": 1689832800780,
      "EPVAP": 1689832800781,
      "SPVATF": 1689832800781,
      "EPVATF": 1689832802787,
      "SPVATR": 1689832802787,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer =\n                    getNativeType(VOID_TYPE).getLeastSupertype(propType);\n                }\n                objType.defineInferred",
      "EPVS": 1689832802787
    },
    {
      "rank": 7,
      "SSLB": 1689832802787,
      "ESLB": 1689832822808,
      "SPVS": 1689832822808,
      "SPVAP": 1689832822811,
      "EPVAP": 1689832822812,
      "SPVATF": 1689832822812,
      "EPVATF": 1689832825819,
      "SPVATR": 1689832825819,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj!= null) {\n        ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n        if (objType!= null) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!objType.isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(VOID_TYPE).getLeastSupertype(propType",
      "EPVS": 1689832825820
    },
    {
      "rank": 8,
      "SSLB": 1689832825820,
      "ESLB": 1689832845840,
      "SPVS": 1689832845840,
      "SPVAP": 1689832845843,
      "EPVAP": 1689832845844,
      "SPVATF": 1689832845844,
      "EPVATF": 1689832848851,
      "SPVATR": 1689832848851,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType",
      "EPVS": 1689832848854
    },
    {
      "rank": 9,
      "SSLB": 1689832848854,
      "ESLB": 1689832868874,
      "SPVS": 1689832868874,
      "SPVAP": 1689832868879,
      "EPVAP": 1689832868880,
      "SPVATF": 1689832868880,
      "EPVATF": 1689832871892,
      "SPVATR": 1689832871892,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                typeToInfer = propType;\n                if (!objType.hasProperty(prop)) {\n                    typeToInfer = propType;\n                    if (!objType.hasProperty(prop)) {\n                        typeToInfer =\n                        getNativeType(",
      "EPVS": 1689832871895
    }
  ],
  "SSLI": 1689825879446,
  "ESLI": 1689825909476,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}