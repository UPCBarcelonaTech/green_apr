{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_small_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689893082039,
      "ESLB": 1689893102059,
      "SPVS": 1689893102059,
      "SPVAP": 1689893102060,
      "EPVAP": 1689893107994,
      "SPVATF": 1689893107994,
      "EPVATF": 1689893107994,
      "SPVATR": 1689893117007,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689893117007
    },
    {
      "rank": 1,
      "SSLB": 1689893117007,
      "ESLB": 1689893137028,
      "SPVS": 1689893137028,
      "SPVAP": 1689893137028,
      "EPVAP": 1689893143058,
      "SPVATF": 1689893143058,
      "EPVATF": 1689893143058,
      "SPVATR": 1689893152071,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1689893152071
    },
    {
      "rank": 2,
      "SSLB": 1689893152072,
      "ESLB": 1689893172092,
      "SPVS": 1689893172092,
      "SPVAP": 1689893172093,
      "EPVAP": 1689893173927,
      "SPVATF": 1689893173927,
      "EPVATF": 1689893173927,
      "SPVATR": 1689893175934,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, fieldInstance).thenInject();\n",
      "EPVS": 1689893175934
    },
    {
      "rank": 3,
      "SSLB": 1689893175934,
      "ESLB": 1689893195955,
      "SPVS": 1689893195955,
      "SPVAP": 1689893195955,
      "EPVAP": 1689893197711,
      "SPVATF": 1689893197711,
      "EPVATF": 1689893197711,
      "SPVATR": 1689893199718,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateFilter).thenInject();\n",
      "EPVS": 1689893199719
    },
    {
      "rank": 4,
      "SSLB": 1689893199719,
      "ESLB": 1689893219739,
      "SPVS": 1689893219739,
      "SPVAP": 1689893219742,
      "EPVAP": 1689893221407,
      "SPVATF": 1689893221407,
      "EPVATF": 1689893221407,
      "SPVATR": 1689893223413,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidate);\n",
      "EPVS": 1689893223414
    },
    {
      "rank": 5,
      "SSLB": 1689893223414,
      "ESLB": 1689893243434,
      "SPVS": 1689893243434,
      "SPVAP": 1689893243435,
      "EPVAP": 1689893245129,
      "SPVATF": 1689893245129,
      "EPVATF": 1689893245129,
      "SPVATR": 1689893247135,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockContext).thenInject();\n",
      "EPVS": 1689893247136
    },
    {
      "rank": 6,
      "SSLB": 1689893247136,
      "ESLB": 1689893267156,
      "SPVS": 1689893267156,
      "SPVAP": 1689893267157,
      "EPVAP": 1689893268853,
      "SPVATF": 1689893268853,
      "EPVATF": 1689893268853,
      "SPVATR": 1689893270859,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field.getName(), fieldInstance).thenInject();\n",
      "EPVS": 1689893270860
    },
    {
      "rank": 7,
      "SSLB": 1689893270860,
      "ESLB": 1689893290880,
      "SPVS": 1689893290880,
      "SPVAP": 1689893290881,
      "EPVAP": 1689893292577,
      "SPVATF": 1689893292577,
      "EPVATF": 1689893292577,
      "SPVATR": 1689893294584,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1689893294584
    },
    {
      "rank": 8,
      "SSLB": 1689893294584,
      "ESLB": 1689893314604,
      "SPVS": 1689893314604,
      "SPVAP": 1689893314605,
      "EPVAP": 1689893316272,
      "SPVATF": 1689893316272,
      "EPVATF": 1689893316272,
      "SPVATR": 1689893318278,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateClass).thenInject();\n",
      "EPVS": 1689893318279
    },
    {
      "rank": 9,
      "SSLB": 1689893318279,
      "ESLB": 1689893338299,
      "SPVS": 1689893338299,
      "SPVAP": 1689893338300,
      "EPVAP": 1689893339994,
      "SPVATF": 1689893339994,
      "EPVATF": 1689893339994,
      "SPVATR": 1689893342001,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689893342002
    }
  ],
  "SSLI": 1689872965184,
  "ESLI": 1689872995214,
  "hostname": "gros-47.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}