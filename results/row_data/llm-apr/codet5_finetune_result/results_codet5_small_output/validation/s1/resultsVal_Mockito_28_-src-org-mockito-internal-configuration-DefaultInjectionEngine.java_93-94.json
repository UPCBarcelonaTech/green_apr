{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_small_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689714602308,
      "ESLB": 1689714622328,
      "SPVS": 1689714622328,
      "SPVAP": 1689714622330,
      "EPVAP": 1689714628895,
      "SPVATF": 1689714628895,
      "EPVATF": 1689714628895,
      "SPVATR": 1689714637908,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689714637909
    },
    {
      "rank": 1,
      "SSLB": 1689714637909,
      "ESLB": 1689714657930,
      "SPVS": 1689714657930,
      "SPVAP": 1689714657931,
      "EPVAP": 1689714664233,
      "SPVATF": 1689714664233,
      "EPVATF": 1689714664233,
      "SPVATR": 1689714673248,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1689714673249
    },
    {
      "rank": 2,
      "SSLB": 1689714673249,
      "ESLB": 1689714693269,
      "SPVS": 1689714693269,
      "SPVAP": 1689714693271,
      "EPVAP": 1689714695345,
      "SPVATF": 1689714695345,
      "EPVATF": 1689714695345,
      "SPVATR": 1689714697352,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, fieldInstance).thenInject();\n",
      "EPVS": 1689714697353
    },
    {
      "rank": 3,
      "SSLB": 1689714697353,
      "ESLB": 1689714717373,
      "SPVS": 1689714717373,
      "SPVAP": 1689714717894,
      "EPVAP": 1689714719681,
      "SPVATF": 1689714719681,
      "EPVATF": 1689714719681,
      "SPVATR": 1689714721687,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateFilter).thenInject();\n",
      "EPVS": 1689714721689
    },
    {
      "rank": 4,
      "SSLB": 1689714721689,
      "ESLB": 1689714741709,
      "SPVS": 1689714741709,
      "SPVAP": 1689714741710,
      "EPVAP": 1689714743464,
      "SPVATF": 1689714743464,
      "EPVATF": 1689714743464,
      "SPVATR": 1689714745470,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidate);\n",
      "EPVS": 1689714745472
    },
    {
      "rank": 5,
      "SSLB": 1689714745472,
      "ESLB": 1689714765492,
      "SPVS": 1689714765492,
      "SPVAP": 1689714765494,
      "EPVAP": 1689714767173,
      "SPVATF": 1689714767173,
      "EPVATF": 1689714767173,
      "SPVATR": 1689714769179,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockContext).thenInject();\n",
      "EPVS": 1689714769180
    },
    {
      "rank": 6,
      "SSLB": 1689714769180,
      "ESLB": 1689714789200,
      "SPVS": 1689714789200,
      "SPVAP": 1689714789202,
      "EPVAP": 1689714790941,
      "SPVATF": 1689714790941,
      "EPVATF": 1689714790941,
      "SPVATR": 1689714792947,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field.getName(), fieldInstance).thenInject();\n",
      "EPVS": 1689714792948
    },
    {
      "rank": 7,
      "SSLB": 1689714792948,
      "ESLB": 1689714812969,
      "SPVS": 1689714812969,
      "SPVAP": 1689714812973,
      "EPVAP": 1689714814769,
      "SPVATF": 1689714814769,
      "EPVATF": 1689714814769,
      "SPVATR": 1689714816776,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1689714816777
    },
    {
      "rank": 8,
      "SSLB": 1689714816777,
      "ESLB": 1689714836797,
      "SPVS": 1689714836797,
      "SPVAP": 1689714836799,
      "EPVAP": 1689714838536,
      "SPVATF": 1689714838536,
      "EPVATF": 1689714838536,
      "SPVATR": 1689714840542,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateClass).thenInject();\n",
      "EPVS": 1689714840542
    },
    {
      "rank": 9,
      "SSLB": 1689714840542,
      "ESLB": 1689714860563,
      "SPVS": 1689714860563,
      "SPVAP": 1689714860564,
      "EPVAP": 1689714862494,
      "SPVATF": 1689714862494,
      "EPVATF": 1689714862494,
      "SPVATR": 1689714864500,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1689714864502
    }
  ],
  "SSLI": 1689700428830,
  "ESLI": 1689700458860,
  "hostname": "gros-46.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}