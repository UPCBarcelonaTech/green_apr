{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688811261579,
      "ESLB": 1688811281600,
      "SPVS": 1688811281600,
      "SPVAP": 1688811281601,
      "EPVAP": 1688811281603,
      "SPVATF": 1688811281603,
      "EPVATF": 1688811281603,
      "SPVATR": 1688811283610,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688811283611
    },
    {
      "rank": 1,
      "SSLB": 1688811283611,
      "ESLB": 1688811303631,
      "SPVS": 1688811303631,
      "SPVAP": 1688811303632,
      "EPVAP": 1688811303633,
      "SPVATF": 1688811303633,
      "EPVATF": 1688811303633,
      "SPVATR": 1688811305641,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType()!= Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688811305643
    },
    {
      "rank": 2,
      "SSLB": 1688811305643,
      "ESLB": 1688811325663,
      "SPVS": 1688811325663,
      "SPVAP": 1688811325665,
      "EPVAP": 1688811325666,
      "SPVATF": 1688811325666,
      "EPVATF": 1688811325666,
      "SPVATR": 1688811327673,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case Token.CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n        default:\n            break;\n",
      "EPVS": 1688811327674
    },
    {
      "rank": 3,
      "SSLB": 1688811327674,
      "ESLB": 1688811347694,
      "SPVS": 1688811347694,
      "SPVAP": 1688811347696,
      "EPVAP": 1688811347697,
      "SPVATF": 1688811347697,
      "EPVATF": 1688811347697,
      "SPVATR": 1688811349704,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Token child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688811349705
    },
    {
      "rank": 4,
      "SSLB": 1688811349705,
      "ESLB": 1688811369725,
      "SPVS": 1688811369725,
      "SPVAP": 1688811369727,
      "EPVAP": 1688811369728,
      "SPVATF": 1688811369728,
      "EPVATF": 1688811369728,
      "SPVATR": 1688811371737,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null && node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688811371738
    },
    {
      "rank": 5,
      "SSLB": 1688811371738,
      "ESLB": 1688811391758,
      "SPVS": 1688811391758,
      "SPVAP": 1688811391760,
      "EPVAP": 1688811391761,
      "SPVATF": 1688811391761,
      "EPVATF": 1688811391761,
      "SPVATR": 1688811393768,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        if (node.getType() == Token.NAME) {\n            changed.add(node.getString());\n        }\n",
      "EPVS": 1688811393769
    },
    {
      "rank": 6,
      "SSLB": 1688811393769,
      "ESLB": 1688811413789,
      "SPVS": 1688811413789,
      "SPVAP": 1688811413791,
      "EPVAP": 1688811413792,
      "SPVATF": 1688811413792,
      "EPVATF": 1688811413792,
      "SPVATR": 1688811415800,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688811415802
    },
    {
      "rank": 7,
      "SSLB": 1688811415802,
      "ESLB": 1688811435822,
      "SPVS": 1688811435822,
      "SPVAP": 1688811435824,
      "EPVAP": 1688811435825,
      "SPVATF": 1688811435825,
      "EPVATF": 1688811435825,
      "SPVATR": 1688811437834,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1688811437835
    },
    {
      "rank": 8,
      "SSLB": 1688811437835,
      "ESLB": 1688811457855,
      "SPVS": 1688811457855,
      "SPVAP": 1688811457857,
      "EPVAP": 1688811457859,
      "SPVATF": 1688811457859,
      "EPVATF": 1688811457859,
      "SPVATR": 1688811462869,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node!= null) {\n         if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688811462870
    },
    {
      "rank": 9,
      "SSLB": 1688811462870,
      "ESLB": 1688811482890,
      "SPVS": 1688811482890,
      "SPVAP": 1688811482892,
      "EPVAP": 1688811482893,
      "SPVATF": 1688811482893,
      "EPVATF": 1688811482893,
      "SPVATR": 1688811484900,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.FUNCTION) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688811484901
    }
  ],
  "SSLI": 1688801276182,
  "ESLI": 1688801306212,
  "hostname": "gros-71.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}