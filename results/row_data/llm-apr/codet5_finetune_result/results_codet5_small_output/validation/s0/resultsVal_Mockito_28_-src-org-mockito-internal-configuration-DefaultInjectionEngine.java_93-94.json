{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codet5_small_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688333556167,
      "ESLB": 1688333576187,
      "SPVS": 1688333576187,
      "SPVAP": 1688333576188,
      "EPVAP": 1688333581857,
      "SPVATF": 1688333581857,
      "EPVATF": 1688333581857,
      "SPVATR": 1688333589869,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1688333589870
    },
    {
      "rank": 1,
      "SSLB": 1688333589870,
      "ESLB": 1688333609890,
      "SPVS": 1688333609890,
      "SPVAP": 1688333609891,
      "EPVAP": 1688333615539,
      "SPVATF": 1688333615539,
      "EPVATF": 1688333615539,
      "SPVATR": 1688333623552,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1688333623553
    },
    {
      "rank": 2,
      "SSLB": 1688333623553,
      "ESLB": 1688333643573,
      "SPVS": 1688333643573,
      "SPVAP": 1688333643574,
      "EPVAP": 1688333645366,
      "SPVATF": 1688333645366,
      "EPVATF": 1688333645366,
      "SPVATR": 1688333647372,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, fieldInstance).thenInject();\n",
      "EPVS": 1688333647373
    },
    {
      "rank": 3,
      "SSLB": 1688333647373,
      "ESLB": 1688333667393,
      "SPVS": 1688333667393,
      "SPVAP": 1688333667394,
      "EPVAP": 1688333668989,
      "SPVATF": 1688333668989,
      "EPVATF": 1688333668989,
      "SPVATR": 1688333670996,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateFilter).thenInject();\n",
      "EPVS": 1688333670997
    },
    {
      "rank": 4,
      "SSLB": 1688333670997,
      "ESLB": 1688333691017,
      "SPVS": 1688333691017,
      "SPVAP": 1688333691018,
      "EPVAP": 1688333692654,
      "SPVATF": 1688333692654,
      "EPVATF": 1688333692654,
      "SPVATR": 1688333694661,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(mockCandidate);\n",
      "EPVS": 1688333694662
    },
    {
      "rank": 5,
      "SSLB": 1688333694662,
      "ESLB": 1688333714682,
      "SPVS": 1688333714682,
      "SPVAP": 1688333714683,
      "EPVAP": 1688333716329,
      "SPVATF": 1688333716329,
      "EPVATF": 1688333716329,
      "SPVATR": 1688333718336,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockContext).thenInject();\n",
      "EPVS": 1688333718337
    },
    {
      "rank": 6,
      "SSLB": 1688333718337,
      "ESLB": 1688333738357,
      "SPVS": 1688333738357,
      "SPVAP": 1688333738358,
      "EPVAP": 1688333739962,
      "SPVATF": 1688333739962,
      "EPVATF": 1688333739962,
      "SPVATR": 1688333741968,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field.getName(), fieldInstance).thenInject();\n",
      "EPVS": 1688333741970
    },
    {
      "rank": 7,
      "SSLB": 1688333741970,
      "ESLB": 1688333761990,
      "SPVS": 1688333761990,
      "SPVAP": 1688333761993,
      "EPVAP": 1688333763613,
      "SPVATF": 1688333763613,
      "EPVATF": 1688333763613,
      "SPVATR": 1688333765620,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(this);\n",
      "EPVS": 1688333765621
    },
    {
      "rank": 8,
      "SSLB": 1688333765621,
      "ESLB": 1688333785641,
      "SPVS": 1688333785641,
      "SPVAP": 1688333785642,
      "EPVAP": 1688333787298,
      "SPVATF": 1688333787298,
      "EPVATF": 1688333787298,
      "SPVATR": 1688333789305,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, mockCandidateClass).thenInject();\n",
      "EPVS": 1688333789306
    },
    {
      "rank": 9,
      "SSLB": 1688333789306,
      "ESLB": 1688333809326,
      "SPVS": 1688333809326,
      "SPVAP": 1688333809327,
      "EPVAP": 1688333810930,
      "SPVATF": 1688333810930,
      "EPVATF": 1688333810930,
      "SPVATR": 1688333812937,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(fieldInstance);\n",
      "EPVS": 1688333812939
    }
  ],
  "SSLI": 1688324571866,
  "ESLI": 1688324601896,
  "hostname": "gros-66.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212950"
}