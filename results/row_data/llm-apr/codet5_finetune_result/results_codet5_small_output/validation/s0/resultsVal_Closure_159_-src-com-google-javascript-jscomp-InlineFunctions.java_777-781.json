{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codet5_small_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688167867958,
      "ESLB": 1688167887979,
      "SPVS": 1688167887979,
      "SPVAP": 1688167887981,
      "EPVAP": 1688167887982,
      "SPVATF": 1688167887982,
      "EPVATF": 1688167887982,
      "SPVATR": 1688167889988,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688167889990
    },
    {
      "rank": 1,
      "SSLB": 1688167889990,
      "ESLB": 1688167910010,
      "SPVS": 1688167910010,
      "SPVAP": 1688167910012,
      "EPVAP": 1688167910012,
      "SPVATF": 1688167910012,
      "EPVATF": 1688167910012,
      "SPVATR": 1688167912021,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType()!= Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688167912022
    },
    {
      "rank": 2,
      "SSLB": 1688167912022,
      "ESLB": 1688167932042,
      "SPVS": 1688167932042,
      "SPVAP": 1688167932044,
      "EPVAP": 1688167932045,
      "SPVATF": 1688167932045,
      "EPVATF": 1688167932045,
      "SPVATR": 1688167934053,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    switch(node.getType()) {\n        case Token.CALL:\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n        default:\n            break;\n",
      "EPVS": 1688167934054
    },
    {
      "rank": 3,
      "SSLB": 1688167934054,
      "ESLB": 1688167954074,
      "SPVS": 1688167954074,
      "SPVAP": 1688167954076,
      "EPVAP": 1688167954077,
      "SPVATF": 1688167954077,
      "EPVATF": 1688167954077,
      "SPVATR": 1688167956084,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Token child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688167956086
    },
    {
      "rank": 4,
      "SSLB": 1688167956086,
      "ESLB": 1688167976106,
      "SPVS": 1688167976106,
      "SPVAP": 1688167976108,
      "EPVAP": 1688167976110,
      "SPVATF": 1688167976110,
      "EPVATF": 1688167976110,
      "SPVATR": 1688167978118,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node!= null && node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688167978120
    },
    {
      "rank": 5,
      "SSLB": 1688167978120,
      "ESLB": 1688167998140,
      "SPVS": 1688167998140,
      "SPVAP": 1688167998141,
      "EPVAP": 1688167998143,
      "SPVATF": 1688167998143,
      "EPVATF": 1688167998143,
      "SPVATR": 1688168000150,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        if (node.getType() == Token.NAME) {\n            changed.add(node.getString());\n        }\n",
      "EPVS": 1688168000152
    },
    {
      "rank": 6,
      "SSLB": 1688168000152,
      "ESLB": 1688168020172,
      "SPVS": 1688168020172,
      "SPVAP": 1688168020173,
      "EPVAP": 1688168020174,
      "SPVATF": 1688168020174,
      "EPVATF": 1688168020174,
      "SPVATR": 1688168022180,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688168022182
    },
    {
      "rank": 7,
      "SSLB": 1688168022182,
      "ESLB": 1688168042202,
      "SPVS": 1688168042202,
      "SPVAP": 1688168042204,
      "EPVAP": 1688168042206,
      "SPVATF": 1688168042206,
      "EPVATF": 1688168042206,
      "SPVATR": 1688168044214,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1688168044216
    },
    {
      "rank": 8,
      "SSLB": 1688168044216,
      "ESLB": 1688168064236,
      "SPVS": 1688168064236,
      "SPVAP": 1688168064237,
      "EPVAP": 1688168064238,
      "SPVATF": 1688168064238,
      "EPVATF": 1688168064238,
      "SPVATR": 1688168069250,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node!= null) {\n         if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688168069251
    },
    {
      "rank": 9,
      "SSLB": 1688168069251,
      "ESLB": 1688168089271,
      "SPVS": 1688168089271,
      "SPVAP": 1688168089273,
      "EPVAP": 1688168089274,
      "SPVATF": 1688168089274,
      "EPVATF": 1688168089274,
      "SPVATR": 1688168091282,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.FUNCTION) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688168091283
    }
  ],
  "SSLI": 1688158226484,
  "ESLI": 1688158256514,
  "hostname": "gros-64.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212950"
}