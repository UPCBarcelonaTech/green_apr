{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1687983984151",
  "GPR[ESLB]": "1687984004171",
  "file": "Lang_24_src/main/java/org/apache/commons/lang3/math/NumberUtils.java_1413-1414",
  "input": {
    "loc": "1413-1414",
    "input": "public static boolean isNumber(String str) {\n    if (StringUtils.isEmpty(str)) {\n        return false;\n    }\n    char[] chars = str.toCharArray();\n    int sz = chars.length;\n    boolean hasExp = false;\n    boolean hasDecPoint = false;\n    boolean allowSigns = false;\n    boolean foundDigit = false;\n    int start = (chars[0] == '-') ? 1 : 0;\n    if (sz > start + 1) {\n        if (chars[start] == '0' && chars[start + 1] == 'x') {\n            int i = start + 2;\n            if (i == sz) {\n                return false; \n            }\n            for (; i < chars.length; i++) {\n                if ((chars[i] < '0' || chars[i] > '9')\n                    && (chars[i] < 'a' || chars[i] > 'f')\n                    && (chars[i] < 'A' || chars[i] > 'F')) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    sz--; \n    int i = start;\n    while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {\n        if (chars[i] >= '0' && chars[i] <= '9') {\n            foundDigit = true;\n            allowSigns = false;\n        } else if (chars[i] == '.') {\n            if (hasDecPoint || hasExp) {\n                return false;\n            }\n            hasDecPoint = true;\n        } else if (chars[i] == 'e' || chars[i] == 'E') {\n            if (hasExp) {\n                return false;\n            }\n            if (!foundDigit) {\n                return false;\n            }\n            hasExp = true;\n            allowSigns = true;\n        } else if (chars[i] == '+' || chars[i] == '-') {\n            if (!allowSigns) {\n                return false;\n            }\n            allowSigns = false;\n            foundDigit = false; \n        } else {\n            return false;\n        }\n        i++;\n    }\n    if (i < chars.length) {\n        if (chars[i] >= '0' && chars[i] <= '9') {\n            return true;\n        }\n        if (chars[i] == 'e' || chars[i] == 'E') {\n            return false;\n        }\n        if (chars[i] == '.') {\n            if (hasDecPoint || hasExp) {\n                return false;\n            }\n            return foundDigit;\n        }\n        if (!allowSigns\n            && (chars[i] == 'd'\n                || chars[i] == 'D'\n                || chars[i] == 'f'\n                || chars[i] == 'F')) {\n            return foundDigit;\n        }\n        if (chars[i] == 'l'\n            || chars[i] == 'L') {\n</s>            return foundDigit && !hasExp;\n</s>        }\n        return false;\n    }\n    return !allowSigns && foundDigit;\n}\n"
  },
  "nvidea": "measures-nvidea-Lang_24_src-main-java-org-apache-commons-lang3-math-NumberUtils.java_1413-1414.txt",
  "OAR_JOB_ID": "1548579",
  "GPR[SSLI]": "1687983750212",
  "GPR[ESLI]": "1687983780242",
  "GPR[SPS]": "1687984004201",
  "nrTokens": 760,
  "status": "ok",
  "message": "input too long:760skip",
  "GPR[EPS]": "1687984004207",
  "time": 6,
  "tokentime": 6,
  "inferencetime": 0,
  "output": []
}