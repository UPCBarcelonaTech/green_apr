{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1687984886270",
  "GPR[ESLB]": "1687984906291",
  "file": "Closure_97_/src/com/google/javascript/jscomp/PeepholeFoldConstants.java_698-699",
  "input": {
    "loc": "698-699",
    "input": "private Node tryFoldShift(Node n, Node left, Node right) {\n  if (left.getType() == Token.NUMBER &&\n      right.getType() == Token.NUMBER) {\n    double result;\n    double lval = left.getDouble();\n    double rval = right.getDouble();\n    if (!(lval >= Integer.MIN_VALUE && lval <= Integer.MAX_VALUE)) {\n      error(BITWISE_OPERAND_OUT_OF_RANGE, left);\n      return n;\n    }\n    if (!(rval >= 0 && rval < 32)) {\n      error(SHIFT_AMOUNT_OUT_OF_BOUNDS, right);\n      return n;\n    }\n    int lvalInt = (int) lval;\n    if (lvalInt != lval) {\n      error(FRACTIONAL_BITWISE_OPERAND, left);\n      return n;\n    }\n    int rvalInt = (int) rval;\n    if (rvalInt != rval) {\n      error(FRACTIONAL_BITWISE_OPERAND, right);\n      return n;\n    }\n    switch (n.getType()) {\n      case Token.LSH:\n        result = lvalInt << rvalInt;\n        break;\n      case Token.RSH:\n        result = lvalInt >> rvalInt;\n        break;\n      case Token.URSH:\n</s>        result = lvalInt >>> rvalInt;\n</s>        break;\n      default:\n        throw new AssertionError(\"Unknown shift operator: \" +\n            Node.tokenToName(n.getType()));\n    }\n    Node newNumber = Node.newNumber(result);\n    n.getParent().replaceChild(n, newNumber);\n    reportCodeChange();\n    return newNumber;\n  }\n  return n;\n}\n"
  },
  "nvidea": "measures-nvidea-Closure_97_-src-com-google-javascript-jscomp-PeepholeFoldConstants.java_698-699.txt",
  "OAR_JOB_ID": "1548579",
  "GPR[SSLI]": "1687983750212",
  "GPR[ESLI]": "1687983780242",
  "GPR[SPS]": "1687984906331",
  "nrTokens": 425,
  "status": "ok",
  "GPR[EPS]": "1687984906732",
  "time": 401,
  "tokentime": 5,
  "inferencetime": 396,
  "output": [
    "<pad><s>        result = lvalInt >>> rvalInt;\n</s></s></s></s></s>",
    "<pad><s>        result = lvalInt << rvalInt;\n</s></s></s></s></s>",
    "<pad><s>        result = lvalInt >> rvalInt;\n</s></s></s></s></s>",
    "<pad><s>        result = rvalInt >>> rvalInt;\n</s></s></s></s></s>",
    "<pad><s>        result = (lvalInt >>> rvalInt);\n</s></s></s></s>",
    "<pad><s>        result = lvalInt >>> (rvalInt - 1);\n</s>",
    "<pad><s>        result = lvalInt & 0xFF;\n</s></s></s></s></s>",
    "<pad><s>        result = lvalInt >>> rval;\n</s></s></s></s></s></s>",
    "<pad><s>        result = lvalInt & ~rvalInt;\n</s></s></s>",
    "<pad><s>        result = lvalInt >>> rvalInt;\n</s></s></s></s>"
  ]
}