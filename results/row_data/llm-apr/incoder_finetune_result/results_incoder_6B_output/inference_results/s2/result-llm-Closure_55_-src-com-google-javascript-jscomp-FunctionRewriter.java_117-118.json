{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1689923732080",
  "GPR[ESLB]": "1689923752101",
  "file": "Closure_55_/src/com/google/javascript/jscomp/FunctionRewriter.java_117-118",
  "input": {
    "loc": "117-118",
    "input": "private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n",
    "output": [
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionDeclaration(n);\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n    return NodeUtil.isFunctionExpression(n);\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionExpression(n) || NodeUtil.isFunctionDeclaration(n);\n<|endofmask|><|endofmask|>",
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionDeclaration(n) || NodeUtil.isFunctionExpression(n);\n<|endofmask|><|endofmask|>",
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n    return NodeUtil.isFunctionExpression(n) || NodeUtil.isFunctionDeclaration(n);\n<|endofmask|><|endofmask|>",
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return isFunctionExpression(n);\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionExpression(n) &&!NodeUtil.isFunctionDeclaration(n);\n<|endofmask|><|endofmask|>",
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return (NodeUtil.isFunctionExpression(n) || NodeUtil.isFunctionDeclaration(n));\n<|endofmask|><|endofmask|>",
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionExpression(n) || NodeUtil.isArrowFunctionExpression(n);\n<|endofmask|>",
      "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionExpression(n) || NodeUtil.isFunctionObjectExpression(n);\n<|endofmask|>"
    ]
  },
  "nvidea": "measures-nvidea-Closure_55_-src-com-google-javascript-jscomp-FunctionRewriter.java_117-118.txt",
  "OAR_JOB_ID": "1561661",
  "GPR[SSLI]": "1689922748116",
  "GPR[ESLI]": "1689922778146",
  "GPR[SPS]": "1689923752150",
  "nrTokens": 39,
  "status": "ok",
  "GPR[EPS]": "1689923753648",
  "time": 1498,
  "tokentime": 2,
  "inferencetime": 1496,
  "output": [
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionDeclaration(n);\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n    return NodeUtil.isFunctionExpression(n);\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionExpression(n) || NodeUtil.isFunctionDeclaration(n);\n<|endofmask|><|endofmask|>",
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionDeclaration(n) || NodeUtil.isFunctionExpression(n);\n<|endofmask|><|endofmask|>",
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n    return NodeUtil.isFunctionExpression(n) || NodeUtil.isFunctionDeclaration(n);\n<|endofmask|><|endofmask|>",
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return isFunctionExpression(n);\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionExpression(n) &&!NodeUtil.isFunctionDeclaration(n);\n<|endofmask|><|endofmask|>",
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return (NodeUtil.isFunctionExpression(n) || NodeUtil.isFunctionDeclaration(n));\n<|endofmask|><|endofmask|>",
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionExpression(n) || NodeUtil.isArrowFunctionExpression(n);\n<|endofmask|>",
    "<|endoftext|>private static boolean isReduceableFunctionExpression(Node n) {\n// buggy lines start:\n  return NodeUtil.isFunctionExpression(n);\n// buggy lines end:\n}\n// fixed lines:\n  return NodeUtil.isFunctionExpression(n) || NodeUtil.isFunctionObjectExpression(n);\n<|endofmask|>"
  ]
}