{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1688165674358",
  "GPR[ESLB]": "1688165694378",
  "file": "Lang_38_src/java/org/apache/commons/lang3/time/FastDateFormat.java_872-872",
  "input": {
    "loc": "872-872",
    "input": "public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n",
    "output": [
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = calendar.clone();\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = (Calendar) calendar.clone();\n<|endofmask|><|endofmask|>",
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar.setTimeZone(mTimeZone);\n<|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = clone(calendar);\n<|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = (Calendar) mCalendar.clone();\n<|endofmask|>",
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = cloneCalendar(calendar);\n<|endofmask|><|endofmask|>",
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        mCalendar = (Calendar) calendar.clone();\n<|endofmask|><|endofmask|>",
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = mCalendar.clone();\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = (Calendar) calendar.clone(false);\n<|endofmask|>",
      "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = (Calendar) calendar.clone(true);\n<|endofmask|>"
    ]
  },
  "nvidea": "measures-nvidea-Lang_38_src-java-org-apache-commons-lang3-time-FastDateFormat.java_872-872.txt",
  "OAR_JOB_ID": "1550236",
  "GPR[SSLI]": "1688165397952",
  "GPR[ESLI]": "1688165427982",
  "GPR[SPS]": "1688165694429",
  "nrTokens": 66,
  "status": "ok",
  "GPR[EPS]": "1688165695894",
  "time": 1465,
  "tokentime": 2,
  "inferencetime": 1463,
  "output": [
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = calendar.clone();\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = (Calendar) calendar.clone();\n<|endofmask|><|endofmask|>",
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar.setTimeZone(mTimeZone);\n<|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = clone(calendar);\n<|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = (Calendar) mCalendar.clone();\n<|endofmask|>",
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = cloneCalendar(calendar);\n<|endofmask|><|endofmask|>",
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        mCalendar = (Calendar) calendar.clone();\n<|endofmask|><|endofmask|>",
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = mCalendar.clone();\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = (Calendar) calendar.clone(false);\n<|endofmask|>",
    "<|endoftext|>public StringBuffer format(Calendar calendar, StringBuffer buf) {\n    if (mTimeZoneForced) {\n// buggy lines start:\n        calendar = (Calendar) calendar.clone();\n// buggy lines end:\n        calendar.setTimeZone(mTimeZone);\n    }\n    return applyRules(calendar, buf);\n}\n// fixed lines:\n        calendar = (Calendar) calendar.clone(true);\n<|endofmask|>"
  ]
}