{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1688165739667",
  "GPR[ESLB]": "1688165759687",
  "file": "Math_98_src/java/org/apache/commons/math/linear/BigMatrixImpl.java_991-992",
  "input": {
    "loc": "991-992",
    "input": "public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length != this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n",
    "output": [
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] out = new BigDecimal[nRows];\n<|endofmask|><|endofmask|>",
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    BigDecimal[] out = new BigDecimal[v.length];\n<|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    BigDecimal[] out = new BigDecimal[nRows];\n<|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] result = new BigDecimal[v.length];\n<|endofmask|><|endofmask|>",
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final Decimal[] out = new Decimal[v.length];\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    out = new BigDecimal[v.length];\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] result = new BigDecimal[nRows];\n<|endofmask|><|endofmask|>",
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] out = new BigDecimal[v.size()];\n<|endofmask|>",
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] res = new BigDecimal[v.length];\n<|endofmask|><|endofmask|>",
      "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] out = new BigDecimal[v.size];\n<|endofmask|>"
    ]
  },
  "nvidea": "measures-nvidea-Math_98_src-java-org-apache-commons-math-linear-BigMatrixImpl.java_991-992.txt",
  "OAR_JOB_ID": "1550236",
  "GPR[SSLI]": "1688165397952",
  "GPR[ESLI]": "1688165427982",
  "GPR[SPS]": "1688165759737",
  "nrTokens": 149,
  "status": "ok",
  "GPR[EPS]": "1688165762151",
  "time": 2414,
  "tokentime": 3,
  "inferencetime": 2411,
  "output": [
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] out = new BigDecimal[nRows];\n<|endofmask|><|endofmask|>",
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    BigDecimal[] out = new BigDecimal[v.length];\n<|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    BigDecimal[] out = new BigDecimal[nRows];\n<|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] result = new BigDecimal[v.length];\n<|endofmask|><|endofmask|>",
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final Decimal[] out = new Decimal[v.length];\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    out = new BigDecimal[v.length];\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] result = new BigDecimal[nRows];\n<|endofmask|><|endofmask|>",
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] out = new BigDecimal[v.size()];\n<|endofmask|>",
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] res = new BigDecimal[v.length];\n<|endofmask|><|endofmask|>",
    "<|endoftext|>public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\n    if (v.length!= this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"vector has wrong length\");\n    }\n    final int nRows = this.getRowDimension();\n    final int nCols = this.getColumnDimension();\n// buggy lines start:\n    final BigDecimal[] out = new BigDecimal[v.length];\n// buggy lines end:\n    for (int row = 0; row < nRows; row++) {\n        BigDecimal sum = ZERO;\n        for (int i = 0; i < nCols; i++) {\n            sum = sum.add(data[row][i].multiply(v[i]));\n        }\n        out[row] = sum;\n    }\n    return out;\n}\n// fixed lines:\n    final BigDecimal[] out = new BigDecimal[v.size];\n<|endofmask|>"
  ]
}