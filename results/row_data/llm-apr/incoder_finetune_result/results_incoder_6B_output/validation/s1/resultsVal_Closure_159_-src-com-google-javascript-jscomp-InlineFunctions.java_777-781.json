{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "incoder_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689709659368,
      "ESLB": 1689709679388,
      "SPVS": 1689709679388,
      "SPVAP": 1689709679390,
      "EPVAP": 1689709679392,
      "SPVATF": 1689709679392,
      "EPVATF": 1689709681399,
      "SPVATR": 1689709681399,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689709681401
    },
    {
      "rank": 1,
      "SSLB": 1689709681401,
      "ESLB": 1689709701421,
      "SPVS": 1689709701421,
      "SPVAP": 1689709701423,
      "EPVAP": 1689709701424,
      "SPVATF": 1689709701424,
      "EPVATF": 1689709703444,
      "SPVATR": 1689709703444,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n        findCalledFunctions(c, changed);\n",
      "EPVS": 1689709703446
    },
    {
      "rank": 2,
      "SSLB": 1689709703446,
      "ESLB": 1689709723466,
      "SPVS": 1689709723466,
      "SPVAP": 1689709723472,
      "EPVAP": 1689709723473,
      "SPVATF": 1689709723473,
      "EPVATF": 1689709725480,
      "SPVATR": 1689709725480,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n",
      "EPVS": 1689709725482
    },
    {
      "rank": 3,
      "SSLB": 1689709725482,
      "ESLB": 1689709745502,
      "SPVS": 1689709745502,
      "SPVAP": 1689709745509,
      "EPVAP": 1689709745510,
      "SPVATF": 1689709745510,
      "EPVATF": 1689709747518,
      "SPVATR": 1689709747518,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n      findCalledFunctions(c, changed);\n",
      "EPVS": 1689709747519
    },
    {
      "rank": 4,
      "SSLB": 1689709747519,
      "ESLB": 1689709767539,
      "SPVS": 1689709767539,
      "SPVAP": 1689709767544,
      "EPVAP": 1689709767545,
      "SPVATF": 1689709767545,
      "EPVATF": 1689709769568,
      "SPVATR": 1689709769568,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1689709769582
    },
    {
      "rank": 5,
      "SSLB": 1689709769582,
      "ESLB": 1689709789602,
      "SPVS": 1689709789602,
      "SPVAP": 1689709789608,
      "EPVAP": 1689709789609,
      "SPVATF": 1689709789609,
      "EPVATF": 1689709794619,
      "SPVATR": 1689709794619,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n      changed.add(child.getString());\n",
      "EPVS": 1689709794621
    },
    {
      "rank": 6,
      "SSLB": 1689709794621,
      "ESLB": 1689709814641,
      "SPVS": 1689709814641,
      "SPVAP": 1689709814644,
      "EPVAP": 1689709814647,
      "SPVATF": 1689709814647,
      "EPVATF": 1689709818656,
      "SPVATR": 1689709818656,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (node.getType() == Token.CALL) {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689709818657
    },
    {
      "rank": 7,
      "SSLB": 1689709818657,
      "ESLB": 1689709838677,
      "SPVS": 1689709838677,
      "SPVAP": 1689709838680,
      "EPVAP": 1689709838681,
      "SPVATF": 1689709838681,
      "EPVATF": 1689709842699,
      "SPVATR": 1689709842699,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689709842701
    },
    {
      "rank": 8,
      "SSLB": 1689709842701,
      "ESLB": 1689709862721,
      "SPVS": 1689709862721,
      "SPVAP": 1689709862730,
      "EPVAP": 1689709862733,
      "SPVATF": 1689709862733,
      "EPVATF": 1689709864740,
      "SPVATR": 1689709864740,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        findCalledFunctions(node.getFirstChild(), changed);\n",
      "EPVS": 1689709864741
    },
    {
      "rank": 9,
      "SSLB": 1689709864741,
      "ESLB": 1689709884761,
      "SPVS": 1689709884761,
      "SPVAP": 1689709884763,
      "EPVAP": 1689709884765,
      "SPVATF": 1689709884765,
      "EPVATF": 1689709886773,
      "SPVATR": 1689709886773,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n      Node child = node.getFirstChild();\n      while (child!= null) {\n        if (child.getType() == Token.NAME) {\n",
      "EPVS": 1689709886775
    }
  ],
  "SSLI": 1689700487534,
  "ESLI": 1689700517561,
  "hostname": "gros-48.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}