{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "incoder_6B_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688832407720,
      "ESLB": 1688832427740,
      "SPVS": 1688832427740,
      "SPVAP": 1688832427744,
      "EPVAP": 1688832429906,
      "SPVATF": 1688832429906,
      "EPVATF": 1688832431914,
      "SPVATR": 1688832431914,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "        filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1688832431915
    },
    {
      "rank": 1,
      "SSLB": 1688832431915,
      "ESLB": 1688832451935,
      "SPVS": 1688832451935,
      "SPVAP": 1688832451936,
      "EPVAP": 1688832453797,
      "SPVATF": 1688832453797,
      "EPVATF": 1688832455805,
      "SPVATR": 1688832455805,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "        injectMockCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1688832455805
    },
    {
      "rank": 2,
      "SSLB": 1688832455806,
      "ESLB": 1688832475826,
      "SPVS": 1688832475826,
      "SPVAP": 1688832475827,
      "EPVAP": 1688832477783,
      "SPVATF": 1688832477783,
      "EPVATF": 1688832479790,
      "SPVATR": 1688832479790,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "        filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1688832479791
    },
    {
      "rank": 3,
      "SSLB": 1688832479791,
      "ESLB": 1688832499811,
      "SPVS": 1688832499811,
      "SPVAP": 1688832499816,
      "EPVAP": 1688832501677,
      "SPVATF": 1688832501677,
      "EPVATF": 1688832503684,
      "SPVATR": 1688832503684,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "        inject(mocks, field, fieldInstance);\n",
      "EPVS": 1688832503685
    },
    {
      "rank": 4,
      "SSLB": 1688832503685,
      "ESLB": 1688832523702,
      "SPVS": 1688832523702,
      "SPVAP": 1688832523703,
      "EPVAP": 1688832525645,
      "SPVATF": 1688832525645,
      "EPVATF": 1688832527652,
      "SPVATR": 1688832527652,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "        filterCandidates(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1688832527653
    },
    {
      "rank": 5,
      "SSLB": 1688832527653,
      "ESLB": 1688832547673,
      "SPVS": 1688832547673,
      "SPVAP": 1688832547674,
      "EPVAP": 1688832553909,
      "SPVATF": 1688832553909,
      "EPVATF": 1688832562923,
      "SPVATR": 1688832562923,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1688832562924
    },
    {
      "rank": 6,
      "SSLB": 1688832562924,
      "ESLB": 1688832582930,
      "SPVS": 1688832582930,
      "SPVAP": 1688832582930,
      "EPVAP": 1688832585014,
      "SPVATF": 1688832585014,
      "EPVATF": 1688832587022,
      "SPVATR": 1688832587022,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).inject();\n",
      "EPVS": 1688832587022
    },
    {
      "rank": 7,
      "SSLB": 1688832587022,
      "ESLB": 1688832607043,
      "SPVS": 1688832607043,
      "SPVAP": 1688832607043,
      "EPVAP": 1688832613348,
      "SPVATF": 1688832613348,
      "EPVATF": 1688832622362,
      "SPVATR": 1688832622362,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "        try {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        } finally {\n            field.setAccessible(true);\n        }\n",
      "EPVS": 1688832622363
    },
    {
      "rank": 8,
      "SSLB": 1688832622363,
      "ESLB": 1688832642380,
      "SPVS": 1688832642380,
      "SPVAP": 1688832642381,
      "EPVAP": 1688832648674,
      "SPVATF": 1688832648674,
      "EPVATF": 1688832657687,
      "SPVATR": 1688832657687,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "        try {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        } finally {\n            field.setAccessible(false);\n        }\n",
      "EPVS": 1688832657688
    },
    {
      "rank": 9,
      "SSLB": 1688832657688,
      "ESLB": 1688832677708,
      "SPVS": 1688832677708,
      "SPVAP": 1688832677709,
      "EPVAP": 1688832684094,
      "SPVATF": 1688832684094,
      "EPVATF": 1688832693108,
      "SPVATR": 1688832693108,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "        try {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        } catch (Throwable throwable) {\n        }\n",
      "EPVS": 1688832693109
    }
  ],
  "SSLI": 1688801326966,
  "ESLI": 1688801356982,
  "hostname": "gros-73.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}