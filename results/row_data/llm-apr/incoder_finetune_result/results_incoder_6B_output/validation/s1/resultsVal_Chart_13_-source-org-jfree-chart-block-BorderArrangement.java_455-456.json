{
  "key": "Chart_13_/source/org/jfree/chart/block/BorderArrangement.java_455-456",
  "proj": "Chart",
  "bug_id": "13",
  "loc": "455-456",
  "input_file": "incoder_6B_output.json",
  "path": "/source/org/jfree/chart/block/BorderArrangement.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688806061973,
      "ESLB": 1688806081993,
      "SPVS": 1688806081993,
      "SPVAP": 1688806081995,
      "EPVAP": 1688806081996,
      "SPVATF": 1688806081996,
      "EPVATF": 1688806081996,
      "SPVATR": 1688806087007,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), ",
      "EPVS": 1688806087008
    },
    {
      "rank": 1,
      "SSLB": 1688806087008,
      "ESLB": 1688806107028,
      "SPVS": 1688806107028,
      "SPVAP": 1688806107030,
      "EPVAP": 1688806107031,
      "SPVATF": 1688806107031,
      "EPVATF": 1688806107031,
      "SPVATR": 1688806112043,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "                new Range(0.0, constraint.getWidth() - w[1]),\n",
      "EPVS": 1688806112044
    },
    {
      "rank": 2,
      "SSLB": 1688806112044,
      "ESLB": 1688806132050,
      "SPVS": 1688806132050,
      "SPVAP": 1688806132051,
      "EPVAP": 1688806132052,
      "SPVATF": 1688806132052,
      "EPVATF": 1688806132052,
      "SPVATR": 1688806137063,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "                new Range(0.0, constraint.getWidth() - w[2]), ",
      "EPVS": 1688806137064
    },
    {
      "rank": 3,
      "SSLB": 1688806137064,
      "ESLB": 1688806157084,
      "SPVS": 1688806157084,
      "SPVAP": 1688806157085,
      "EPVAP": 1688806157086,
      "SPVATF": 1688806157086,
      "EPVATF": 1688806157086,
      "SPVATR": 1688806158094,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[1]));\n",
      "EPVS": 1688806158095
    },
    {
      "rank": 4,
      "SSLB": 1688806158095,
      "ESLB": 1688806178115,
      "SPVS": 1688806178115,
      "SPVAP": 1688806178117,
      "EPVAP": 1688806178118,
      "SPVATF": 1688806178118,
      "EPVATF": 1688806178118,
      "SPVATR": 1688806183129,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), ",
      "EPVS": 1688806183130
    },
    {
      "rank": 5,
      "SSLB": 1688806183130,
      "ESLB": 1688806203150,
      "SPVS": 1688806203150,
      "SPVAP": 1688806203151,
      "EPVAP": 1688806203152,
      "SPVATF": 1688806203152,
      "EPVATF": 1688806203152,
      "SPVATR": 1688806204158,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0], h[0]));\n    }\n",
      "EPVS": 1688806204159
    },
    {
      "rank": 6,
      "SSLB": 1688806204159,
      "ESLB": 1688806224180,
      "SPVS": 1688806224180,
      "SPVAP": 1688806224181,
      "EPVAP": 1688806224182,
      "SPVATF": 1688806224182,
      "EPVATF": 1688806224182,
      "SPVATR": 1688806225191,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }",
      "EPVS": 1688806225192
    },
    {
      "rank": 7,
      "SSLB": 1688806225192,
      "ESLB": 1688806245212,
      "SPVS": 1688806245212,
      "SPVAP": 1688806245213,
      "EPVAP": 1688806245214,
      "SPVATF": 1688806245214,
      "EPVATF": 1688806245214,
      "SPVATR": 1688806246222,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[3];\n    w[4] = constraint.getWidth() - w[3] - w[3];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottomBlock!= null) {\n        this.bottomBlock",
      "EPVS": 1688806246224
    },
    {
      "rank": 8,
      "SSLB": 1688806246224,
      "ESLB": 1688806266244,
      "SPVS": 1688806266244,
      "SPVAP": 1688806266245,
      "EPVAP": 1688806266247,
      "SPVATF": 1688806266247,
      "EPVATF": 1688806266247,
      "SPVATR": 1688806267253,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.RANGE, h[3], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[3];\n    w[4] = constraint.getWidth() - w[3] - w[3];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottom",
      "EPVS": 1688806267255
    },
    {
      "rank": 9,
      "SSLB": 1688806267255,
      "ESLB": 1688806287275,
      "SPVS": 1688806287275,
      "SPVAP": 1688806287276,
      "EPVAP": 1688806287277,
      "SPVATF": 1688806287277,
      "EPVATF": 1688806287277,
      "SPVATR": 1688806288284,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottom",
      "EPVS": 1688806288285
    }
  ],
  "SSLI": 1688801326966,
  "ESLI": 1688801356982,
  "hostname": "gros-73.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}