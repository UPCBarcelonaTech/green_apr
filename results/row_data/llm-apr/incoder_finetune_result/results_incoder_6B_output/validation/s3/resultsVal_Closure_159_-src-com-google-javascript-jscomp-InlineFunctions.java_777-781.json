{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "incoder_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689816183429,
      "ESLB": 1689816203450,
      "SPVS": 1689816203450,
      "SPVAP": 1689816203452,
      "EPVAP": 1689816203453,
      "SPVATF": 1689816203453,
      "EPVATF": 1689816203453,
      "SPVATR": 1689816205460,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689816205462
    },
    {
      "rank": 1,
      "SSLB": 1689816205462,
      "ESLB": 1689816225482,
      "SPVS": 1689816225482,
      "SPVAP": 1689816225483,
      "EPVAP": 1689816225485,
      "SPVATF": 1689816225485,
      "EPVATF": 1689816225485,
      "SPVATR": 1689816227491,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n        findCalledFunctions(c, changed);\n",
      "EPVS": 1689816227493
    },
    {
      "rank": 2,
      "SSLB": 1689816227493,
      "ESLB": 1689816247513,
      "SPVS": 1689816247513,
      "SPVAP": 1689816247514,
      "EPVAP": 1689816247516,
      "SPVATF": 1689816247516,
      "EPVATF": 1689816247516,
      "SPVATR": 1689816249523,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n",
      "EPVS": 1689816249525
    },
    {
      "rank": 3,
      "SSLB": 1689816249525,
      "ESLB": 1689816269545,
      "SPVS": 1689816269545,
      "SPVAP": 1689816269547,
      "EPVAP": 1689816269548,
      "SPVATF": 1689816269548,
      "EPVATF": 1689816269548,
      "SPVATR": 1689816271555,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n      findCalledFunctions(c, changed);\n",
      "EPVS": 1689816271556
    },
    {
      "rank": 4,
      "SSLB": 1689816271556,
      "ESLB": 1689816291577,
      "SPVS": 1689816291577,
      "SPVAP": 1689816291578,
      "EPVAP": 1689816291579,
      "SPVATF": 1689816291579,
      "EPVATF": 1689816291579,
      "SPVATR": 1689816293585,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1689816293586
    },
    {
      "rank": 5,
      "SSLB": 1689816293586,
      "ESLB": 1689816313606,
      "SPVS": 1689816313606,
      "SPVAP": 1689816313608,
      "EPVAP": 1689816313609,
      "SPVATF": 1689816313609,
      "EPVATF": 1689816313609,
      "SPVATR": 1689816318619,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n      changed.add(child.getString());\n",
      "EPVS": 1689816318620
    },
    {
      "rank": 6,
      "SSLB": 1689816318620,
      "ESLB": 1689816338640,
      "SPVS": 1689816338640,
      "SPVAP": 1689816338642,
      "EPVAP": 1689816338643,
      "SPVATF": 1689816338643,
      "EPVATF": 1689816338643,
      "SPVATR": 1689816343654,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node.getType() == Token.CALL) {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689816343655
    },
    {
      "rank": 7,
      "SSLB": 1689816343655,
      "ESLB": 1689816363675,
      "SPVS": 1689816363675,
      "SPVAP": 1689816363676,
      "EPVAP": 1689816363677,
      "SPVATF": 1689816363677,
      "EPVATF": 1689816363677,
      "SPVATR": 1689816368687,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689816368688
    },
    {
      "rank": 8,
      "SSLB": 1689816368688,
      "ESLB": 1689816388708,
      "SPVS": 1689816388708,
      "SPVAP": 1689816388709,
      "EPVAP": 1689816388710,
      "SPVATF": 1689816388710,
      "EPVATF": 1689816388710,
      "SPVATR": 1689816390717,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        findCalledFunctions(node.getFirstChild(), changed);\n",
      "EPVS": 1689816390718
    },
    {
      "rank": 9,
      "SSLB": 1689816390718,
      "ESLB": 1689816410738,
      "SPVS": 1689816410738,
      "SPVAP": 1689816410740,
      "EPVAP": 1689816410741,
      "SPVATF": 1689816410741,
      "EPVATF": 1689816410741,
      "SPVATR": 1689816412749,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n      Node child = node.getFirstChild();\n      while (child!= null) {\n        if (child.getType() == Token.NAME) {\n",
      "EPVS": 1689816412751
    }
  ],
  "SSLI": 1689795548933,
  "ESLI": 1689795578963,
  "hostname": "gros-48.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}