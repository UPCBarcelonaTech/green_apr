{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "incoder_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689892556633,
      "ESLB": 1689892576654,
      "SPVS": 1689892576654,
      "SPVAP": 1689892576655,
      "EPVAP": 1689892576656,
      "SPVATF": 1689892576656,
      "EPVATF": 1689892576656,
      "SPVATR": 1689892578663,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689892578664
    },
    {
      "rank": 1,
      "SSLB": 1689892578664,
      "ESLB": 1689892598684,
      "SPVS": 1689892598684,
      "SPVAP": 1689892598686,
      "EPVAP": 1689892598687,
      "SPVATF": 1689892598687,
      "EPVATF": 1689892598687,
      "SPVATR": 1689892600694,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n        findCalledFunctions(c, changed);\n",
      "EPVS": 1689892600695
    },
    {
      "rank": 2,
      "SSLB": 1689892600695,
      "ESLB": 1689892620715,
      "SPVS": 1689892620715,
      "SPVAP": 1689892620717,
      "EPVAP": 1689892620719,
      "SPVATF": 1689892620719,
      "EPVATF": 1689892620719,
      "SPVATR": 1689892622726,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n",
      "EPVS": 1689892622727
    },
    {
      "rank": 3,
      "SSLB": 1689892622727,
      "ESLB": 1689892642747,
      "SPVS": 1689892642747,
      "SPVAP": 1689892642749,
      "EPVAP": 1689892642750,
      "SPVATF": 1689892642750,
      "EPVATF": 1689892642750,
      "SPVATR": 1689892644757,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n      findCalledFunctions(c, changed);\n",
      "EPVS": 1689892644758
    },
    {
      "rank": 4,
      "SSLB": 1689892644758,
      "ESLB": 1689892664778,
      "SPVS": 1689892664778,
      "SPVAP": 1689892664780,
      "EPVAP": 1689892664782,
      "SPVATF": 1689892664782,
      "EPVATF": 1689892664782,
      "SPVATR": 1689892666789,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1689892666790
    },
    {
      "rank": 5,
      "SSLB": 1689892666790,
      "ESLB": 1689892686810,
      "SPVS": 1689892686810,
      "SPVAP": 1689892686811,
      "EPVAP": 1689892686813,
      "SPVATF": 1689892686813,
      "EPVATF": 1689892686813,
      "SPVATR": 1689892691825,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n      changed.add(child.getString());\n",
      "EPVS": 1689892691826
    },
    {
      "rank": 6,
      "SSLB": 1689892691826,
      "ESLB": 1689892711846,
      "SPVS": 1689892711846,
      "SPVAP": 1689892711848,
      "EPVAP": 1689892711850,
      "SPVATF": 1689892711850,
      "EPVATF": 1689892711850,
      "SPVATR": 1689892716860,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node.getType() == Token.CALL) {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689892716862
    },
    {
      "rank": 7,
      "SSLB": 1689892716862,
      "ESLB": 1689892736882,
      "SPVS": 1689892736882,
      "SPVAP": 1689892736884,
      "EPVAP": 1689892736885,
      "SPVATF": 1689892736885,
      "EPVATF": 1689892736885,
      "SPVATR": 1689892741894,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689892741896
    },
    {
      "rank": 8,
      "SSLB": 1689892741896,
      "ESLB": 1689892761916,
      "SPVS": 1689892761916,
      "SPVAP": 1689892761917,
      "EPVAP": 1689892761918,
      "SPVATF": 1689892761918,
      "EPVATF": 1689892761918,
      "SPVATR": 1689892763926,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        findCalledFunctions(node.getFirstChild(), changed);\n",
      "EPVS": 1689892763927
    },
    {
      "rank": 9,
      "SSLB": 1689892763927,
      "ESLB": 1689892783947,
      "SPVS": 1689892783947,
      "SPVAP": 1689892783949,
      "EPVAP": 1689892783950,
      "SPVATF": 1689892783950,
      "EPVATF": 1689892783950,
      "SPVATR": 1689892785957,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n      Node child = node.getFirstChild();\n      while (child!= null) {\n        if (child.getType() == Token.NAME) {\n",
      "EPVS": 1689892785958
    }
  ],
  "SSLI": 1689873007394,
  "ESLI": 1689873037424,
  "hostname": "gros-49.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}