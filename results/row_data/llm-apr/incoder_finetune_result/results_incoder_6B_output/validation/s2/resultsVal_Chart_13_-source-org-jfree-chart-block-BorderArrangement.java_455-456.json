{
  "key": "Chart_13_/source/org/jfree/chart/block/BorderArrangement.java_455-456",
  "proj": "Chart",
  "bug_id": "13",
  "loc": "455-456",
  "input_file": "incoder_6B_output.json",
  "path": "/source/org/jfree/chart/block/BorderArrangement.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689715864456,
      "ESLB": 1689715884476,
      "SPVS": 1689715884476,
      "SPVAP": 1689715884478,
      "EPVAP": 1689715884479,
      "SPVATF": 1689715884479,
      "EPVATF": 1689715884479,
      "SPVATR": 1689715889491,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), ",
      "EPVS": 1689715889492
    },
    {
      "rank": 1,
      "SSLB": 1689715889492,
      "ESLB": 1689715909513,
      "SPVS": 1689715909513,
      "SPVAP": 1689715909514,
      "EPVAP": 1689715909516,
      "SPVATF": 1689715909516,
      "EPVATF": 1689715909516,
      "SPVATR": 1689715914525,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "                new Range(0.0, constraint.getWidth() - w[1]),\n",
      "EPVS": 1689715914527
    },
    {
      "rank": 2,
      "SSLB": 1689715914527,
      "ESLB": 1689715934547,
      "SPVS": 1689715934547,
      "SPVAP": 1689715934548,
      "EPVAP": 1689715934549,
      "SPVATF": 1689715934549,
      "EPVATF": 1689715934549,
      "SPVATR": 1689715939560,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "                new Range(0.0, constraint.getWidth() - w[2]), ",
      "EPVS": 1689715939561
    },
    {
      "rank": 3,
      "SSLB": 1689715939561,
      "ESLB": 1689715959581,
      "SPVS": 1689715959581,
      "SPVAP": 1689715959583,
      "EPVAP": 1689715959584,
      "SPVATF": 1689715959584,
      "EPVATF": 1689715959584,
      "SPVATR": 1689715960594,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[1]));\n",
      "EPVS": 1689715960595
    },
    {
      "rank": 4,
      "SSLB": 1689715960595,
      "ESLB": 1689715980615,
      "SPVS": 1689715980615,
      "SPVAP": 1689715980616,
      "EPVAP": 1689715980618,
      "SPVATF": 1689715980618,
      "EPVATF": 1689715980618,
      "SPVATR": 1689715985629,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), ",
      "EPVS": 1689715985630
    },
    {
      "rank": 5,
      "SSLB": 1689715985630,
      "ESLB": 1689716005650,
      "SPVS": 1689716005650,
      "SPVAP": 1689716005652,
      "EPVAP": 1689716005653,
      "SPVATF": 1689716005653,
      "EPVATF": 1689716005653,
      "SPVATR": 1689716006660,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0], h[0]));\n    }\n",
      "EPVS": 1689716006661
    },
    {
      "rank": 6,
      "SSLB": 1689716006661,
      "ESLB": 1689716026681,
      "SPVS": 1689716026681,
      "SPVAP": 1689716026682,
      "EPVAP": 1689716026683,
      "SPVATF": 1689716026683,
      "EPVATF": 1689716026683,
      "SPVATR": 1689716027689,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }",
      "EPVS": 1689716027690
    },
    {
      "rank": 7,
      "SSLB": 1689716027690,
      "ESLB": 1689716047710,
      "SPVS": 1689716047710,
      "SPVAP": 1689716047712,
      "EPVAP": 1689716047713,
      "SPVATF": 1689716047713,
      "EPVATF": 1689716047713,
      "SPVATR": 1689716048720,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[3];\n    w[4] = constraint.getWidth() - w[3] - w[3];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottomBlock!= null) {\n        this.bottomBlock",
      "EPVS": 1689716048720
    },
    {
      "rank": 8,
      "SSLB": 1689716048720,
      "ESLB": 1689716068741,
      "SPVS": 1689716068741,
      "SPVAP": 1689716068742,
      "EPVAP": 1689716068744,
      "SPVATF": 1689716068744,
      "EPVATF": 1689716068744,
      "SPVATR": 1689716069750,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.RANGE, h[3], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[3];\n    w[4] = constraint.getWidth() - w[3] - w[3];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottom",
      "EPVS": 1689716069751
    },
    {
      "rank": 9,
      "SSLB": 1689716069751,
      "ESLB": 1689716089771,
      "SPVS": 1689716089771,
      "SPVAP": 1689716089773,
      "EPVAP": 1689716089775,
      "SPVATF": 1689716089775,
      "EPVATF": 1689716089775,
      "SPVATR": 1689716090784,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottom",
      "EPVS": 1689716090785
    }
  ],
  "SSLI": 1689710656531,
  "ESLI": 1689710686557,
  "hostname": "gros-48.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}