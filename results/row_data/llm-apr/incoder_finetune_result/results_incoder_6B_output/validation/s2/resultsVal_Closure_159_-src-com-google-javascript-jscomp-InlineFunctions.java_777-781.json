{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "incoder_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689731477298,
      "ESLB": 1689731497318,
      "SPVS": 1689731497318,
      "SPVAP": 1689731497320,
      "EPVAP": 1689731497321,
      "SPVATF": 1689731497321,
      "EPVATF": 1689731497321,
      "SPVATR": 1689731499329,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689731499330
    },
    {
      "rank": 1,
      "SSLB": 1689731499330,
      "ESLB": 1689731519350,
      "SPVS": 1689731519350,
      "SPVAP": 1689731519352,
      "EPVAP": 1689731519353,
      "SPVATF": 1689731519353,
      "EPVATF": 1689731519353,
      "SPVATR": 1689731521361,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n        findCalledFunctions(c, changed);\n",
      "EPVS": 1689731521362
    },
    {
      "rank": 2,
      "SSLB": 1689731521362,
      "ESLB": 1689731541382,
      "SPVS": 1689731541382,
      "SPVAP": 1689731541384,
      "EPVAP": 1689731541385,
      "SPVATF": 1689731541385,
      "EPVATF": 1689731541385,
      "SPVATR": 1689731543402,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n",
      "EPVS": 1689731543404
    },
    {
      "rank": 3,
      "SSLB": 1689731543404,
      "ESLB": 1689731563424,
      "SPVS": 1689731563424,
      "SPVAP": 1689731563425,
      "EPVAP": 1689731563426,
      "SPVATF": 1689731563426,
      "EPVATF": 1689731563426,
      "SPVATR": 1689731565434,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n      findCalledFunctions(c, changed);\n",
      "EPVS": 1689731565435
    },
    {
      "rank": 4,
      "SSLB": 1689731565435,
      "ESLB": 1689731585456,
      "SPVS": 1689731585456,
      "SPVAP": 1689731585458,
      "EPVAP": 1689731585459,
      "SPVATF": 1689731585459,
      "EPVATF": 1689731585459,
      "SPVATR": 1689731587466,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1689731587467
    },
    {
      "rank": 5,
      "SSLB": 1689731587467,
      "ESLB": 1689731607487,
      "SPVS": 1689731607487,
      "SPVAP": 1689731607488,
      "EPVAP": 1689731607490,
      "SPVATF": 1689731607490,
      "EPVATF": 1689731607490,
      "SPVATR": 1689731612502,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n      changed.add(child.getString());\n",
      "EPVS": 1689731612503
    },
    {
      "rank": 6,
      "SSLB": 1689731612503,
      "ESLB": 1689731632523,
      "SPVS": 1689731632523,
      "SPVAP": 1689731632524,
      "EPVAP": 1689731632525,
      "SPVATF": 1689731632525,
      "EPVATF": 1689731632525,
      "SPVATR": 1689731637535,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node.getType() == Token.CALL) {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689731637536
    },
    {
      "rank": 7,
      "SSLB": 1689731637537,
      "ESLB": 1689731657557,
      "SPVS": 1689731657557,
      "SPVAP": 1689731657558,
      "EPVAP": 1689731657559,
      "SPVATF": 1689731657559,
      "EPVATF": 1689731657559,
      "SPVATR": 1689731662569,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689731662570
    },
    {
      "rank": 8,
      "SSLB": 1689731662570,
      "ESLB": 1689731682589,
      "SPVS": 1689731682589,
      "SPVAP": 1689731682590,
      "EPVAP": 1689731682591,
      "SPVATF": 1689731682591,
      "EPVATF": 1689731682591,
      "SPVATR": 1689731684601,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        findCalledFunctions(node.getFirstChild(), changed);\n",
      "EPVS": 1689731684602
    },
    {
      "rank": 9,
      "SSLB": 1689731684602,
      "ESLB": 1689731704622,
      "SPVS": 1689731704622,
      "SPVAP": 1689731704623,
      "EPVAP": 1689731704624,
      "SPVATF": 1689731704624,
      "EPVATF": 1689731704624,
      "SPVATR": 1689731706631,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n      Node child = node.getFirstChild();\n      while (child!= null) {\n        if (child.getType() == Token.NAME) {\n",
      "EPVS": 1689731706632
    }
  ],
  "SSLI": 1689710656531,
  "ESLI": 1689710686557,
  "hostname": "gros-48.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}