{
  "key": "Chart_13_/source/org/jfree/chart/block/BorderArrangement.java_455-456",
  "proj": "Chart",
  "bug_id": "13",
  "loc": "455-456",
  "input_file": "incoder_6B_output.json",
  "path": "/source/org/jfree/chart/block/BorderArrangement.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688064914993,
      "ESLB": 1688064935013,
      "SPVS": 1688064935013,
      "SPVAP": 1688064935016,
      "EPVAP": 1688064935017,
      "SPVATF": 1688064935017,
      "EPVATF": 1688064935017,
      "SPVATR": 1688064940027,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), ",
      "EPVS": 1688064940029
    },
    {
      "rank": 1,
      "SSLB": 1688064940029,
      "ESLB": 1688064960049,
      "SPVS": 1688064960049,
      "SPVAP": 1688064960051,
      "EPVAP": 1688064960052,
      "SPVATF": 1688064960052,
      "EPVATF": 1688064960052,
      "SPVATR": 1688064965073,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "                new Range(0.0, constraint.getWidth() - w[1]),\n",
      "EPVS": 1688064965074
    },
    {
      "rank": 2,
      "SSLB": 1688064965074,
      "ESLB": 1688064985094,
      "SPVS": 1688064985094,
      "SPVAP": 1688064985095,
      "EPVAP": 1688064985096,
      "SPVATF": 1688064985096,
      "EPVATF": 1688064985096,
      "SPVATR": 1688064990106,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "                new Range(0.0, constraint.getWidth() - w[2]), ",
      "EPVS": 1688064990107
    },
    {
      "rank": 3,
      "SSLB": 1688064990107,
      "ESLB": 1688065010127,
      "SPVS": 1688065010127,
      "SPVAP": 1688065010129,
      "EPVAP": 1688065010130,
      "SPVATF": 1688065010130,
      "EPVATF": 1688065010130,
      "SPVATR": 1688065011137,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[1]));\n",
      "EPVS": 1688065011139
    },
    {
      "rank": 4,
      "SSLB": 1688065011139,
      "ESLB": 1688065031159,
      "SPVS": 1688065031159,
      "SPVAP": 1688065031161,
      "EPVAP": 1688065031162,
      "SPVATF": 1688065031162,
      "EPVATF": 1688065031162,
      "SPVATR": 1688065036173,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), ",
      "EPVS": 1688065036174
    },
    {
      "rank": 5,
      "SSLB": 1688065036174,
      "ESLB": 1688065056195,
      "SPVS": 1688065056195,
      "SPVAP": 1688065056196,
      "EPVAP": 1688065056197,
      "SPVATF": 1688065056197,
      "EPVATF": 1688065056197,
      "SPVATR": 1688065057203,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0], h[0]));\n    }\n",
      "EPVS": 1688065057204
    },
    {
      "rank": 6,
      "SSLB": 1688065057204,
      "ESLB": 1688065077224,
      "SPVS": 1688065077224,
      "SPVAP": 1688065077227,
      "EPVAP": 1688065077229,
      "SPVATF": 1688065077229,
      "EPVATF": 1688065077229,
      "SPVATR": 1688065078235,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }",
      "EPVS": 1688065078236
    },
    {
      "rank": 7,
      "SSLB": 1688065078236,
      "ESLB": 1688065098256,
      "SPVS": 1688065098256,
      "SPVAP": 1688065098258,
      "EPVAP": 1688065098259,
      "SPVATF": 1688065098259,
      "EPVATF": 1688065098259,
      "SPVATR": 1688065099279,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[3];\n    w[4] = constraint.getWidth() - w[3] - w[3];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottomBlock!= null) {\n        this.bottomBlock",
      "EPVS": 1688065099280
    },
    {
      "rank": 8,
      "SSLB": 1688065099280,
      "ESLB": 1688065119300,
      "SPVS": 1688065119300,
      "SPVAP": 1688065119301,
      "EPVAP": 1688065119303,
      "SPVATF": 1688065119303,
      "EPVATF": 1688065119303,
      "SPVATR": 1688065120309,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.RANGE, h[3], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[3];\n    w[4] = constraint.getWidth() - w[3] - w[3];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottom",
      "EPVS": 1688065120310
    },
    {
      "rank": 9,
      "SSLB": 1688065120310,
      "ESLB": 1688065140330,
      "SPVS": 1688065140330,
      "SPVAP": 1688065140331,
      "EPVAP": 1688065140333,
      "SPVATF": 1688065140333,
      "EPVATF": 1688065140333,
      "SPVATR": 1688065141339,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottom",
      "EPVS": 1688065141342
    }
  ],
  "SSLI": 1688059893164,
  "ESLI": 1688059923194,
  "hostname": "gros-71.nancy.grid5000.fr",
  "OAR_JOB_ID": "4214427"
}