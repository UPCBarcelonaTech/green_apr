{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "incoder_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688080563408,
      "ESLB": 1688080583428,
      "SPVS": 1688080583428,
      "SPVAP": 1688080583430,
      "EPVAP": 1688080583431,
      "SPVATF": 1688080583431,
      "EPVATF": 1688080583431,
      "SPVATR": 1688080585437,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1688080585439
    },
    {
      "rank": 1,
      "SSLB": 1688080585439,
      "ESLB": 1688080605459,
      "SPVS": 1688080605459,
      "SPVAP": 1688080605460,
      "EPVAP": 1688080605463,
      "SPVATF": 1688080605463,
      "EPVATF": 1688080605463,
      "SPVATR": 1688080607469,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n        findCalledFunctions(c, changed);\n",
      "EPVS": 1688080607471
    },
    {
      "rank": 2,
      "SSLB": 1688080607471,
      "ESLB": 1688080627491,
      "SPVS": 1688080627491,
      "SPVAP": 1688080627492,
      "EPVAP": 1688080627494,
      "SPVATF": 1688080627494,
      "EPVATF": 1688080627494,
      "SPVATR": 1688080629503,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n",
      "EPVS": 1688080629504
    },
    {
      "rank": 3,
      "SSLB": 1688080629504,
      "ESLB": 1688080649524,
      "SPVS": 1688080649524,
      "SPVAP": 1688080649526,
      "EPVAP": 1688080649527,
      "SPVATF": 1688080649527,
      "EPVATF": 1688080649527,
      "SPVATR": 1688080651535,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {\n      findCalledFunctions(c, changed);\n",
      "EPVS": 1688080651536
    },
    {
      "rank": 4,
      "SSLB": 1688080651536,
      "ESLB": 1688080671556,
      "SPVS": 1688080671556,
      "SPVAP": 1688080671557,
      "EPVAP": 1688080671558,
      "SPVATF": 1688080671558,
      "EPVATF": 1688080671558,
      "SPVATR": 1688080673565,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.NAME) {\n        changed.add(node.getString());\n",
      "EPVS": 1688080673567
    },
    {
      "rank": 5,
      "SSLB": 1688080673567,
      "ESLB": 1688080693587,
      "SPVS": 1688080693587,
      "SPVAP": 1688080693588,
      "EPVAP": 1688080693589,
      "SPVATF": 1688080693589,
      "EPVATF": 1688080693589,
      "SPVATR": 1688080698601,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n      changed.add(child.getString());\n",
      "EPVS": 1688080698602
    },
    {
      "rank": 6,
      "SSLB": 1688080698603,
      "ESLB": 1688080718623,
      "SPVS": 1688080718623,
      "SPVAP": 1688080718624,
      "EPVAP": 1688080718625,
      "SPVATF": 1688080718625,
      "EPVATF": 1688080718625,
      "SPVATR": 1688080723634,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (node.getType() == Token.CALL) {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1688080723635
    },
    {
      "rank": 7,
      "SSLB": 1688080723635,
      "ESLB": 1688080743656,
      "SPVS": 1688080743656,
      "SPVAP": 1688080743657,
      "EPVAP": 1688080743658,
      "SPVATF": 1688080743658,
      "EPVATF": 1688080743658,
      "SPVATR": 1688080748667,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1688080748668
    },
    {
      "rank": 8,
      "SSLB": 1688080748668,
      "ESLB": 1688080768689,
      "SPVS": 1688080768689,
      "SPVAP": 1688080768690,
      "EPVAP": 1688080768692,
      "SPVATF": 1688080768692,
      "EPVATF": 1688080768692,
      "SPVATR": 1688080770701,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        findCalledFunctions(node.getFirstChild(), changed);\n",
      "EPVS": 1688080770702
    },
    {
      "rank": 9,
      "SSLB": 1688080770702,
      "ESLB": 1688080790722,
      "SPVS": 1688080790722,
      "SPVAP": 1688080790723,
      "EPVAP": 1688080790725,
      "SPVATF": 1688080790725,
      "EPVATF": 1688080790725,
      "SPVATR": 1688080792732,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n      Node child = node.getFirstChild();\n      while (child!= null) {\n        if (child.getType() == Token.NAME) {\n",
      "EPVS": 1688080792733
    }
  ],
  "SSLI": 1688059893164,
  "ESLI": 1688059923194,
  "hostname": "gros-71.nancy.grid5000.fr",
  "OAR_JOB_ID": "4214427"
}