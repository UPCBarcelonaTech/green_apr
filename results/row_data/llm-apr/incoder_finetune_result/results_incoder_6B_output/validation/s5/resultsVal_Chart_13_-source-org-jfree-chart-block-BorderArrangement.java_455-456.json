{
  "key": "Chart_13_/source/org/jfree/chart/block/BorderArrangement.java_455-456",
  "proj": "Chart",
  "bug_id": "13",
  "loc": "455-456",
  "input_file": "incoder_6B_output.json",
  "path": "/source/org/jfree/chart/block/BorderArrangement.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689916112004,
      "ESLB": 1689916132024,
      "SPVS": 1689916132024,
      "SPVAP": 1689916132026,
      "EPVAP": 1689916132027,
      "SPVATF": 1689916132027,
      "EPVATF": 1689916132027,
      "SPVATR": 1689916137036,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), ",
      "EPVS": 1689916137037
    },
    {
      "rank": 1,
      "SSLB": 1689916137037,
      "ESLB": 1689916157057,
      "SPVS": 1689916157057,
      "SPVAP": 1689916157058,
      "EPVAP": 1689916157059,
      "SPVATF": 1689916157059,
      "EPVATF": 1689916157059,
      "SPVATR": 1689916162070,
      "exectuteRegression": true,
      "correctness": "plausible",
      "patch": "                new Range(0.0, constraint.getWidth() - w[1]),\n",
      "EPVS": 1689916162070
    },
    {
      "rank": 2,
      "SSLB": 1689916162070,
      "ESLB": 1689916182090,
      "SPVS": 1689916182090,
      "SPVAP": 1689916182091,
      "EPVAP": 1689916182092,
      "SPVATF": 1689916182092,
      "EPVATF": 1689916182092,
      "SPVATR": 1689916187100,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "                new Range(0.0, constraint.getWidth() - w[2]), ",
      "EPVS": 1689916187101
    },
    {
      "rank": 3,
      "SSLB": 1689916187101,
      "ESLB": 1689916207102,
      "SPVS": 1689916207102,
      "SPVAP": 1689916207103,
      "EPVAP": 1689916207104,
      "SPVATF": 1689916207104,
      "EPVATF": 1689916207104,
      "SPVATR": 1689916208109,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[1]));\n",
      "EPVS": 1689916208110
    },
    {
      "rank": 4,
      "SSLB": 1689916208110,
      "ESLB": 1689916228130,
      "SPVS": 1689916228130,
      "SPVAP": 1689916228131,
      "EPVAP": 1689916228132,
      "SPVATF": 1689916228132,
      "EPVATF": 1689916228132,
      "SPVATR": 1689916233142,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), ",
      "EPVS": 1689916233143
    },
    {
      "rank": 5,
      "SSLB": 1689916233143,
      "ESLB": 1689916253163,
      "SPVS": 1689916253163,
      "SPVAP": 1689916253164,
      "EPVAP": 1689916253165,
      "SPVATF": 1689916253165,
      "EPVATF": 1689916253165,
      "SPVATR": 1689916254170,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0], h[0]));\n    }\n",
      "EPVS": 1689916254170
    },
    {
      "rank": 6,
      "SSLB": 1689916254170,
      "ESLB": 1689916274190,
      "SPVS": 1689916274190,
      "SPVAP": 1689916274191,
      "EPVAP": 1689916274191,
      "SPVATF": 1689916274191,
      "EPVATF": 1689916274191,
      "SPVATR": 1689916275196,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0,\n                        constraint.getWidth() - w[2]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }",
      "EPVS": 1689916275197
    },
    {
      "rank": 7,
      "SSLB": 1689916275197,
      "ESLB": 1689916295217,
      "SPVS": 1689916295217,
      "SPVAP": 1689916295218,
      "EPVAP": 1689916295219,
      "SPVATF": 1689916295219,
      "EPVATF": 1689916295219,
      "SPVATR": 1689916296226,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[3];\n    w[4] = constraint.getWidth() - w[3] - w[3];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottomBlock!= null) {\n        this.bottomBlock",
      "EPVS": 1689916296226
    },
    {
      "rank": 8,
      "SSLB": 1689916296226,
      "ESLB": 1689916316247,
      "SPVS": 1689916316247,
      "SPVAP": 1689916316248,
      "EPVAP": 1689916316248,
      "SPVATF": 1689916316248,
      "EPVATF": 1689916316248,
      "SPVATR": 1689916317253,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.RANGE, h[3], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[3];\n    w[4] = constraint.getWidth() - w[3] - w[3];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottom",
      "EPVS": 1689916317254
    },
    {
      "rank": 9,
      "SSLB": 1689916317254,
      "ESLB": 1689916337275,
      "SPVS": 1689916337275,
      "SPVAP": 1689916337276,
      "EPVAP": 1689916337277,
      "SPVATF": 1689916337277,
      "EPVATF": 1689916337277,
      "SPVATR": 1689916338282,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "                new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.RANGE, h[2], null, LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n    }\n    h[4] = h[2];\n    w[4] = constraint.getWidth() - w[3] - w[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock!= null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n    if (this.topBlock!= null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[0],\n                h[0]));\n    }\n    if (this.bottom",
      "EPVS": 1689916338283
    }
  ],
  "SSLI": 1689911032759,
  "ESLI": 1689911062789,
  "hostname": "gros-49.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}