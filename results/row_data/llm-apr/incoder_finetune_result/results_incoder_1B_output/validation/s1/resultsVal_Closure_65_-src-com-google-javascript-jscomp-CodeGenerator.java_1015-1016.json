{
  "key": "Closure_65_/src/com/google/javascript/jscomp/CodeGenerator.java_1015-1016",
  "proj": "Closure",
  "bug_id": "65",
  "loc": "1015-1016",
  "input_file": "incoder_1B_output.json",
  "path": "/src/com/google/javascript/jscomp/CodeGenerator.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688811220957,
      "ESLB": 1688811240978,
      "SPVS": 1688811240978,
      "SPVAP": 1688811240980,
      "EPVAP": 1688811240981,
      "SPVATF": 1688811240981,
      "EPVATF": 1688811240981,
      "SPVATR": 1688811241987,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\\\': sb.append(backslashEscape); break;\n",
      "EPVS": 1688811241988
    },
    {
      "rank": 1,
      "SSLB": 1688811241988,
      "ESLB": 1688811262008,
      "SPVS": 1688811262008,
      "SPVAP": 1688811262010,
      "EPVAP": 1688811262012,
      "SPVATF": 1688811262012,
      "EPVATF": 1688811262012,
      "SPVATR": 1688811263021,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\\\': sb.append(\"\\\\\\\\\");\n",
      "EPVS": 1688811263022
    },
    {
      "rank": 2,
      "SSLB": 1688811263022,
      "ESLB": 1688811283042,
      "SPVS": 1688811283042,
      "SPVAP": 1688811283044,
      "EPVAP": 1688811283046,
      "SPVATF": 1688811283046,
      "EPVATF": 1688811283046,
      "SPVATR": 1688811284052,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n",
      "EPVS": 1688811284054
    },
    {
      "rank": 3,
      "SSLB": 1688811284054,
      "ESLB": 1688811304074,
      "SPVS": 1688811304074,
      "SPVAP": 1688811304075,
      "EPVAP": 1688811304077,
      "SPVATF": 1688811304077,
      "EPVATF": 1688811304077,
      "SPVATR": 1688811305082,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\\\': sb.append('\\\\'); break;\n",
      "EPVS": 1688811305084
    },
    {
      "rank": 4,
      "SSLB": 1688811305084,
      "ESLB": 1688811325104,
      "SPVS": 1688811325104,
      "SPVAP": 1688811325106,
      "EPVAP": 1688811325107,
      "SPVATF": 1688811325107,
      "EPVATF": 1688811325107,
      "SPVATR": 1688811326114,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n",
      "EPVS": 1688811326116
    },
    {
      "rank": 5,
      "SSLB": 1688811326116,
      "ESLB": 1688811346136,
      "SPVS": 1688811346136,
      "SPVAP": 1688811346139,
      "EPVAP": 1688811346139,
      "SPVATF": 1688811346140,
      "EPVATF": 1688811346140,
      "SPVATR": 1688811347145,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\\\':\n        sb.append(\"\\\\\\\\\");\n        break;\n",
      "EPVS": 1688811347147
    },
    {
      "rank": 6,
      "SSLB": 1688811347147,
      "ESLB": 1688811367167,
      "SPVS": 1688811367167,
      "SPVAP": 1688811367169,
      "EPVAP": 1688811367170,
      "SPVATF": 1688811367170,
      "EPVATF": 1688811367170,
      "SPVATR": 1688811368175,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '<':\n        sb.append(\"String_Node_Str",
      "EPVS": 1688811368177
    },
    {
      "rank": 7,
      "SSLB": 1688811368177,
      "ESLB": 1688811388197,
      "SPVS": 1688811388197,
      "SPVAP": 1688811388199,
      "EPVAP": 1688811388200,
      "SPVATF": 1688811388200,
      "EPVATF": 1688811388200,
      "SPVATR": 1688811389206,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        if (i >= 2 && (s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-')) {\n            sb.append(\"",
      "EPVS": 1688811389207
    },
    {
      "rank": 8,
      "SSLB": 1688811389207,
      "ESLB": 1688811409228,
      "SPVS": 1688811409228,
      "SPVAP": 1688811409230,
      "EPVAP": 1688811409231,
      "SPVATF": 1688811409231,
      "EPVATF": 1688811409231,
      "SPVATR": 1688811410238,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '<':\n        final String END_SCRIPT",
      "EPVS": 1688811410239
    },
    {
      "rank": 9,
      "SSLB": 1688811410239,
      "ESLB": 1688811430259,
      "SPVS": 1688811430259,
      "SPVAP": 1688811430261,
      "EPVAP": 1688811430262,
      "SPVATF": 1688811430262,
      "EPVATF": 1688811430262,
      "SPVATR": 1688811431268,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "      case '\\b': sb.append(\"\\\\b\"); break;\n      case '\\f': sb.append(\"\\\\f\"); break;\n      case '\\n': sb.append(\"\\\\n\"); break;\n      case '\\r': sb.append(\"\\\\r\"); break;\n      case '\\t': sb.append(\"\\\\t\"); break;\n      case '\\\\': sb.append(backslashEscape); break;\n      case '\\\"': sb.append(doublequoteEscape); break;\n      case '\\'': sb.append(singlequoteEscape); break;\n      case '>':\n        if (i >= 2 && ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') || (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {",
      "EPVS": 1688811431270
    }
  ],
  "SSLI": 1688801300969,
  "ESLI": 1688801330999,
  "hostname": "gros-72.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}