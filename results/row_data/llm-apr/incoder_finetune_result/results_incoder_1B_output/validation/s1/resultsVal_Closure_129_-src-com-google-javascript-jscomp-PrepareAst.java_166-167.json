{
  "key": "Closure_129_/src/com/google/javascript/jscomp/PrepareAst.java_166-167",
  "proj": "Closure",
  "bug_id": "129",
  "loc": "166-167",
  "input_file": "incoder_1B_output.json",
  "path": "/src/com/google/javascript/jscomp/PrepareAst.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688815991423,
      "ESLB": 1688816011443,
      "SPVS": 1688816011443,
      "SPVAP": 1688816011445,
      "EPVAP": 1688816011446,
      "SPVATF": 1688816011446,
      "EPVATF": 1688816016456,
      "SPVATR": 1688816016456,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1688816016457
    },
    {
      "rank": 1,
      "SSLB": 1688816016457,
      "ESLB": 1688816036477,
      "SPVS": 1688816036477,
      "SPVAP": 1688816036479,
      "EPVAP": 1688816036479,
      "SPVATF": 1688816036479,
      "EPVATF": 1688816041489,
      "SPVATR": 1688816100558,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  n.putBooleanProp(Node.FREE_CALL, true);\n",
      "EPVS": 1688816100559
    },
    {
      "rank": 2,
      "SSLB": 1688816100559,
      "ESLB": 1688816120579,
      "SPVS": 1688816120579,
      "SPVAP": 1688816120581,
      "EPVAP": 1688816120582,
      "SPVATF": 1688816120582,
      "EPVATF": 1688816125631,
      "SPVATR": 1688816125631,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "  Preconditions.checkState(NodeUtil.isGet(first));\n",
      "EPVS": 1688816125632
    },
    {
      "rank": 3,
      "SSLB": 1688816125632,
      "ESLB": 1688816145652,
      "SPVS": 1688816145652,
      "SPVAP": 1688816145653,
      "EPVAP": 1688816145654,
      "SPVATF": 1688816145654,
      "EPVATF": 1688816150665,
      "SPVATR": 1688816209732,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  if (NodeUtil.isGet(first)) {\n    n.putBooleanProp(Node.FREE_CALL, true);\n    n.putBooleanProp(Node.DIRECT_EVAL, true);\n    return;\n  }\n",
      "EPVS": 1688816209733
    },
    {
      "rank": 4,
      "SSLB": 1688816209733,
      "ESLB": 1688816229753,
      "SPVS": 1688816229753,
      "SPVAP": 1688816229754,
      "EPVAP": 1688816229755,
      "SPVATF": 1688816229755,
      "EPVATF": 1688816234815,
      "SPVATR": 1688816293883,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  if (NodeUtil.isGet(first)) {\n    n.putBooleanProp(Node.FREE_CALL, true);\n    if (first.isName() && \"eval\".equals(first.getString())) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n    }\n  }\n",
      "EPVS": 1688816293884
    },
    {
      "rank": 5,
      "SSLB": 1688816293884,
      "ESLB": 1688816313904,
      "SPVS": 1688816313904,
      "SPVAP": 1688816313906,
      "EPVAP": 1688816313907,
      "SPVATF": 1688816313907,
      "EPVATF": 1688816318970,
      "SPVATR": 1688816378039,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  if (NodeUtil.isGet(first)) {\n    n.putBooleanProp(Node.FREE_CALL, true);\n    if (first.isName() && \"eval\".equals(first.getString())) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n    }\n    return;\n  }\n",
      "EPVS": 1688816378040
    },
    {
      "rank": 6,
      "SSLB": 1688816378040,
      "ESLB": 1688816398060,
      "SPVS": 1688816398060,
      "SPVAP": 1688816398062,
      "EPVAP": 1688816398062,
      "SPVATF": 1688816398062,
      "EPVATF": 1688816403073,
      "SPVATR": 1688816462143,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  if (NodeUtil.isGet(first)) {\n    n.putBooleanProp(Node.FREE_CALL, true);\n    if (first.isName() && (\"eval\".equals(first.getString()))) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n    }\n  }\n",
      "EPVS": 1688816462144
    },
    {
      "rank": 7,
      "SSLB": 1688816462144,
      "ESLB": 1688816482164,
      "SPVS": 1688816482164,
      "SPVAP": 1688816482166,
      "EPVAP": 1688816482167,
      "SPVATF": 1688816482167,
      "EPVATF": 1688816487219,
      "SPVATR": 1688816545285,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  if (NodeUtil.isGet(first)) {\n    n.putBooleanProp(Node.FREE_CALL, true);\n    if (first.isName() && (\"eval\".equals(first.getString()))) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n    }\n    return;\n  }\n",
      "EPVS": 1688816545286
    },
    {
      "rank": 8,
      "SSLB": 1688816545286,
      "ESLB": 1688816565306,
      "SPVS": 1688816565306,
      "SPVAP": 1688816565307,
      "EPVAP": 1688816565307,
      "SPVATF": 1688816565307,
      "EPVATF": 1688816570371,
      "SPVATR": 1688816629436,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  if (NodeUtil.isGet(first)) {\n    n.putBooleanProp(Node.FREE_CALL, true);\n    n.putBooleanProp(Node.DIRECT_EVAL, true);\n    if (first.isName() && \"eval\".equals(first.getString())) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n    }\n    return;\n  }\n",
      "EPVS": 1688816629437
    },
    {
      "rank": 9,
      "SSLB": 1688816629437,
      "ESLB": 1688816649457,
      "SPVS": 1688816649457,
      "SPVAP": 1688816649459,
      "EPVAP": 1688816649460,
      "SPVATF": 1688816649460,
      "EPVATF": 1688816654515,
      "SPVATR": 1688816712581,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "  if (NodeUtil.isGet(first)) {\n    n.putBooleanProp(Node.FREE_CALL, true);\n    n.putBooleanProp(Node.DIRECT_EVAL, true);\n    if (first.isName() && (\"eval\".equals(first.getString()))) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n    }\n  }\n",
      "EPVS": 1688816712582
    }
  ],
  "SSLI": 1688801300969,
  "ESLI": 1688801330999,
  "hostname": "gros-72.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}