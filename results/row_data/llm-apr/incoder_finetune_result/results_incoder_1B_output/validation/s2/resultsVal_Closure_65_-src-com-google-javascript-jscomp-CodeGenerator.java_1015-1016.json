{
  "key": "Closure_65_/src/com/google/javascript/jscomp/CodeGenerator.java_1015-1016",
  "proj": "Closure",
  "bug_id": "65",
  "loc": "1015-1016",
  "input_file": "incoder_1B_output.json",
  "path": "/src/com/google/javascript/jscomp/CodeGenerator.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689719295335,
      "ESLB": 1689719315355,
      "SPVS": 1689719315355,
      "SPVAP": 1689719315357,
      "EPVAP": 1689719315359,
      "SPVATF": 1689719315359,
      "EPVATF": 1689719317365,
      "SPVATR": 1689719317365,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\': sb.append(backslashEscape); break;\n",
      "EPVS": 1689719317366
    },
    {
      "rank": 1,
      "SSLB": 1689719317366,
      "ESLB": 1689719337387,
      "SPVS": 1689719337387,
      "SPVAP": 1689719337388,
      "EPVAP": 1689719337390,
      "SPVATF": 1689719337390,
      "EPVATF": 1689719339397,
      "SPVATR": 1689719339397,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\': sb.append(\"\\\\\\\\\");\n",
      "EPVS": 1689719339398
    },
    {
      "rank": 2,
      "SSLB": 1689719339398,
      "ESLB": 1689719359419,
      "SPVS": 1689719359419,
      "SPVAP": 1689719359420,
      "EPVAP": 1689719359422,
      "SPVATF": 1689719359422,
      "EPVATF": 1689719362431,
      "SPVATR": 1689719362431,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n",
      "EPVS": 1689719362432
    },
    {
      "rank": 3,
      "SSLB": 1689719362432,
      "ESLB": 1689719382452,
      "SPVS": 1689719382452,
      "SPVAP": 1689719382454,
      "EPVAP": 1689719382456,
      "SPVATF": 1689719382456,
      "EPVATF": 1689719384463,
      "SPVATR": 1689719384463,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\': sb.append('\\\\'); break;\n",
      "EPVS": 1689719384465
    },
    {
      "rank": 4,
      "SSLB": 1689719384465,
      "ESLB": 1689719404485,
      "SPVS": 1689719404485,
      "SPVAP": 1689719404486,
      "EPVAP": 1689719404488,
      "SPVATF": 1689719404488,
      "EPVATF": 1689719406495,
      "SPVATR": 1689719406495,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n",
      "EPVS": 1689719406496
    },
    {
      "rank": 5,
      "SSLB": 1689719406496,
      "ESLB": 1689719426517,
      "SPVS": 1689719426517,
      "SPVAP": 1689719426519,
      "EPVAP": 1689719426520,
      "SPVATF": 1689719426520,
      "EPVATF": 1689719428529,
      "SPVATR": 1689719428529,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\':\n        sb.append(\"\\\\\\\\\");\n        break;\n",
      "EPVS": 1689719428530
    },
    {
      "rank": 6,
      "SSLB": 1689719428530,
      "ESLB": 1689719448550,
      "SPVS": 1689719448550,
      "SPVAP": 1689719448552,
      "EPVAP": 1689719448553,
      "SPVATF": 1689719448553,
      "EPVATF": 1689719450561,
      "SPVATR": 1689719450561,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '<':\n        sb.append(\"String_Node_Str",
      "EPVS": 1689719450562
    },
    {
      "rank": 7,
      "SSLB": 1689719450562,
      "ESLB": 1689719470583,
      "SPVS": 1689719470583,
      "SPVAP": 1689719470584,
      "EPVAP": 1689719470585,
      "SPVATF": 1689719470585,
      "EPVATF": 1689719472593,
      "SPVATR": 1689719472593,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        if (i >= 2 && (s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-')) {\n            sb.append(\"",
      "EPVS": 1689719472594
    },
    {
      "rank": 8,
      "SSLB": 1689719472594,
      "ESLB": 1689719492615,
      "SPVS": 1689719492615,
      "SPVAP": 1689719492616,
      "EPVAP": 1689719492617,
      "SPVATF": 1689719492617,
      "EPVATF": 1689719494625,
      "SPVATR": 1689719494625,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '<':\n        final String END_SCRIPT",
      "EPVS": 1689719494627
    },
    {
      "rank": 9,
      "SSLB": 1689719494627,
      "ESLB": 1689719514647,
      "SPVS": 1689719514647,
      "SPVAP": 1689719514649,
      "EPVAP": 1689719514650,
      "SPVATF": 1689719514650,
      "EPVATF": 1689719516657,
      "SPVATR": 1689719516657,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\b': sb.append(\"\\\\b\"); break;\n      case '\\f': sb.append(\"\\\\f\"); break;\n      case '\\n': sb.append(\"\\\\n\"); break;\n      case '\\r': sb.append(\"\\\\r\"); break;\n      case '\\t': sb.append(\"\\\\t\"); break;\n      case '\\\\': sb.append(backslashEscape); break;\n      case '\\\"': sb.append(doublequoteEscape); break;\n      case '\\'': sb.append(singlequoteEscape); break;\n      case '>':\n        if (i >= 2 && ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') || (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {",
      "EPVS": 1689719516659
    }
  ],
  "SSLI": 1689706587399,
  "ESLI": 1689706617429,
  "hostname": "gros-47.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}