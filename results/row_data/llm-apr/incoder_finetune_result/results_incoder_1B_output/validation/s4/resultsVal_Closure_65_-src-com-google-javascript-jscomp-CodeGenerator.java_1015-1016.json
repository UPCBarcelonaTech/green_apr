{
  "key": "Closure_65_/src/com/google/javascript/jscomp/CodeGenerator.java_1015-1016",
  "proj": "Closure",
  "bug_id": "65",
  "loc": "1015-1016",
  "input_file": "incoder_1B_output.json",
  "path": "/src/com/google/javascript/jscomp/CodeGenerator.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689881758413,
      "ESLB": 1689881778433,
      "SPVS": 1689881778433,
      "SPVAP": 1689881778435,
      "EPVAP": 1689881778436,
      "SPVATF": 1689881778436,
      "EPVATF": 1689881780444,
      "SPVATR": 1689881780444,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\': sb.append(backslashEscape); break;\n",
      "EPVS": 1689881780445
    },
    {
      "rank": 1,
      "SSLB": 1689881780445,
      "ESLB": 1689881800465,
      "SPVS": 1689881800465,
      "SPVAP": 1689881800466,
      "EPVAP": 1689881800468,
      "SPVATF": 1689881800468,
      "EPVATF": 1689881802476,
      "SPVATR": 1689881802476,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\': sb.append(\"\\\\\\\\\");\n",
      "EPVS": 1689881802478
    },
    {
      "rank": 2,
      "SSLB": 1689881802478,
      "ESLB": 1689881822498,
      "SPVS": 1689881822498,
      "SPVAP": 1689881822501,
      "EPVAP": 1689881822502,
      "SPVATF": 1689881822502,
      "EPVATF": 1689881827515,
      "SPVATR": 1689881827515,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n",
      "EPVS": 1689881827516
    },
    {
      "rank": 3,
      "SSLB": 1689881827516,
      "ESLB": 1689881847536,
      "SPVS": 1689881847536,
      "SPVAP": 1689881847538,
      "EPVAP": 1689881847540,
      "SPVATF": 1689881847540,
      "EPVATF": 1689881849548,
      "SPVATR": 1689881849548,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\': sb.append('\\\\'); break;\n",
      "EPVS": 1689881849549
    },
    {
      "rank": 4,
      "SSLB": 1689881849549,
      "ESLB": 1689881869569,
      "SPVS": 1689881869569,
      "SPVAP": 1689881869571,
      "EPVAP": 1689881869572,
      "SPVATF": 1689881869572,
      "EPVATF": 1689881871580,
      "SPVATR": 1689881871580,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n",
      "EPVS": 1689881871581
    },
    {
      "rank": 5,
      "SSLB": 1689881871581,
      "ESLB": 1689881891601,
      "SPVS": 1689881891601,
      "SPVAP": 1689881891603,
      "EPVAP": 1689881891604,
      "SPVATF": 1689881891604,
      "EPVATF": 1689881893612,
      "SPVATR": 1689881893612,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\':\n        sb.append(\"\\\\\\\\\");\n        break;\n",
      "EPVS": 1689881893613
    },
    {
      "rank": 6,
      "SSLB": 1689881893613,
      "ESLB": 1689881913633,
      "SPVS": 1689881913633,
      "SPVAP": 1689881913634,
      "EPVAP": 1689881913635,
      "SPVATF": 1689881913635,
      "EPVATF": 1689881915642,
      "SPVATR": 1689881915642,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '<':\n        sb.append(\"String_Node_Str",
      "EPVS": 1689881915644
    },
    {
      "rank": 7,
      "SSLB": 1689881915644,
      "ESLB": 1689881935664,
      "SPVS": 1689881935664,
      "SPVAP": 1689881935666,
      "EPVAP": 1689881935668,
      "SPVATF": 1689881935668,
      "EPVATF": 1689881937675,
      "SPVATR": 1689881937675,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        if (i >= 2 && (s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-')) {\n            sb.append(\"",
      "EPVS": 1689881937676
    },
    {
      "rank": 8,
      "SSLB": 1689881937676,
      "ESLB": 1689881957697,
      "SPVS": 1689881957697,
      "SPVAP": 1689881957699,
      "EPVAP": 1689881957700,
      "SPVATF": 1689881957700,
      "EPVATF": 1689881959709,
      "SPVATR": 1689881959709,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '<':\n        final String END_SCRIPT",
      "EPVS": 1689881959710
    },
    {
      "rank": 9,
      "SSLB": 1689881959710,
      "ESLB": 1689881979730,
      "SPVS": 1689881979730,
      "SPVAP": 1689881979732,
      "EPVAP": 1689881979733,
      "SPVATF": 1689881979733,
      "EPVATF": 1689881981740,
      "SPVATR": 1689881981740,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\b': sb.append(\"\\\\b\"); break;\n      case '\\f': sb.append(\"\\\\f\"); break;\n      case '\\n': sb.append(\"\\\\n\"); break;\n      case '\\r': sb.append(\"\\\\r\"); break;\n      case '\\t': sb.append(\"\\\\t\"); break;\n      case '\\\\': sb.append(backslashEscape); break;\n      case '\\\"': sb.append(doublequoteEscape); break;\n      case '\\'': sb.append(singlequoteEscape); break;\n      case '>':\n        if (i >= 2 && ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') || (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {",
      "EPVS": 1689881981741
    }
  ],
  "SSLI": 1689872982079,
  "ESLI": 1689873012110,
  "hostname": "gros-48.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}