{
  "key": "Closure_65_/src/com/google/javascript/jscomp/CodeGenerator.java_1015-1016",
  "proj": "Closure",
  "bug_id": "65",
  "loc": "1015-1016",
  "input_file": "incoder_1B_output.json",
  "path": "/src/com/google/javascript/jscomp/CodeGenerator.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689804685539,
      "ESLB": 1689804705559,
      "SPVS": 1689804705559,
      "SPVAP": 1689804705563,
      "EPVAP": 1689804705564,
      "SPVATF": 1689804705564,
      "EPVATF": 1689804707572,
      "SPVATR": 1689804707572,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\': sb.append(backslashEscape); break;\n",
      "EPVS": 1689804707573
    },
    {
      "rank": 1,
      "SSLB": 1689804707573,
      "ESLB": 1689804727593,
      "SPVS": 1689804727593,
      "SPVAP": 1689804727598,
      "EPVAP": 1689804727600,
      "SPVATF": 1689804727600,
      "EPVATF": 1689804729607,
      "SPVATR": 1689804729607,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\': sb.append(\"\\\\\\\\\");\n",
      "EPVS": 1689804729608
    },
    {
      "rank": 2,
      "SSLB": 1689804729608,
      "ESLB": 1689804749628,
      "SPVS": 1689804749628,
      "SPVAP": 1689804749630,
      "EPVAP": 1689804749632,
      "SPVATF": 1689804749632,
      "EPVATF": 1689804753653,
      "SPVATR": 1689804753653,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n",
      "EPVS": 1689804753654
    },
    {
      "rank": 3,
      "SSLB": 1689804753654,
      "ESLB": 1689804773674,
      "SPVS": 1689804773674,
      "SPVAP": 1689804773679,
      "EPVAP": 1689804773680,
      "SPVATF": 1689804773680,
      "EPVATF": 1689804775688,
      "SPVATR": 1689804775688,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\': sb.append('\\\\'); break;\n",
      "EPVS": 1689804775689
    },
    {
      "rank": 4,
      "SSLB": 1689804775689,
      "ESLB": 1689804795710,
      "SPVS": 1689804795710,
      "SPVAP": 1689804795711,
      "EPVAP": 1689804795713,
      "SPVATF": 1689804795713,
      "EPVATF": 1689804797721,
      "SPVATR": 1689804797721,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n",
      "EPVS": 1689804797722
    },
    {
      "rank": 5,
      "SSLB": 1689804797722,
      "ESLB": 1689804817742,
      "SPVS": 1689804817742,
      "SPVAP": 1689804817746,
      "EPVAP": 1689804817748,
      "SPVATF": 1689804817748,
      "EPVATF": 1689804819761,
      "SPVATR": 1689804819761,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\\\':\n        sb.append(\"\\\\\\\\\");\n        break;\n",
      "EPVS": 1689804819762
    },
    {
      "rank": 6,
      "SSLB": 1689804819762,
      "ESLB": 1689804839783,
      "SPVS": 1689804839783,
      "SPVAP": 1689804839784,
      "EPVAP": 1689804839786,
      "SPVATF": 1689804839786,
      "EPVATF": 1689804841793,
      "SPVATR": 1689804841793,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '<':\n        sb.append(\"String_Node_Str",
      "EPVS": 1689804841794
    },
    {
      "rank": 7,
      "SSLB": 1689804841794,
      "ESLB": 1689804861810,
      "SPVS": 1689804861810,
      "SPVAP": 1689804861812,
      "EPVAP": 1689804861813,
      "SPVATF": 1689804861813,
      "EPVATF": 1689804863821,
      "SPVATR": 1689804863821,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        if (i >= 2 && (s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-')) {\n            sb.append(\"",
      "EPVS": 1689804863823
    },
    {
      "rank": 8,
      "SSLB": 1689804863823,
      "ESLB": 1689804883843,
      "SPVS": 1689804883843,
      "SPVAP": 1689804883847,
      "EPVAP": 1689804883848,
      "SPVATF": 1689804883848,
      "EPVATF": 1689804885862,
      "SPVATR": 1689804885862,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\0':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\n':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\r':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\t':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '\\\\':\n        sb.append(backslashEscape);\n        break;\n      case '\\\"':\n        sb.append(doublequoteEscape);\n        break;\n      case '\\'':\n        sb.append(singlequoteEscape);\n        break;\n      case '>':\n        sb.append(\"String_Node_Str\");\n        break;\n      case '<':\n        final String END_SCRIPT",
      "EPVS": 1689804885864
    },
    {
      "rank": 9,
      "SSLB": 1689804885864,
      "ESLB": 1689804905884,
      "SPVS": 1689804905884,
      "SPVAP": 1689804905886,
      "EPVAP": 1689804905888,
      "SPVATF": 1689804905888,
      "EPVATF": 1689804907896,
      "SPVATR": 1689804907896,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "      case '\\b': sb.append(\"\\\\b\"); break;\n      case '\\f': sb.append(\"\\\\f\"); break;\n      case '\\n': sb.append(\"\\\\n\"); break;\n      case '\\r': sb.append(\"\\\\r\"); break;\n      case '\\t': sb.append(\"\\\\t\"); break;\n      case '\\\\': sb.append(backslashEscape); break;\n      case '\\\"': sb.append(doublequoteEscape); break;\n      case '\\'': sb.append(singlequoteEscape); break;\n      case '>':\n        if (i >= 2 && ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') || (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {",
      "EPVS": 1689804907898
    }
  ],
  "SSLI": 1689794941518,
  "ESLI": 1689794971548,
  "hostname": "gros-47.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}