{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1689921078956",
  "GPR[ESLB]": "1689921098974",
  "file": "Closure_114_/src/com/google/javascript/jscomp/NameAnalyzer.java_578-579",
  "input": {
    "loc": "578-579",
    "input": "private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns != null) {\n    if (parent.isFor() && !NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext() != n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n",
    "output": [
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (parent.isFor()) {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (parent.getFirstChild().getNext()!= n) {\n<|endofmask|><|endofmask|>",
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (NodeUtil.isForIn(parent)) {\n<|endofmask|><|endofmask|>",
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (!parent.isFor()) {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (parent.hasChildren()) {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (!NodeUtil.isForIn(parent)) {\n<|endofmask|>",
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (parent.getFirstChild().getNext() == n) {\n<|endofmask|><|endofmask|>",
      "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    }\n    if (parent.isFor()) {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|>"
    ]
  },
  "nvidea": "measures-nvidea-Closure_114_-src-com-google-javascript-jscomp-NameAnalyzer.java_578-579.txt",
  "OAR_JOB_ID": "1561661",
  "GPR[SSLI]": "1689919809076",
  "GPR[ESLI]": "1689919839106",
  "GPR[SPS]": "1689921099019",
  "nrTokens": 138,
  "status": "ok",
  "GPR[EPS]": "1689921099605",
  "time": 586,
  "tokentime": 2,
  "inferencetime": 584,
  "output": [
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (parent.isFor()) {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (parent.getFirstChild().getNext()!= n) {\n<|endofmask|><|endofmask|>",
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (NodeUtil.isForIn(parent)) {\n<|endofmask|><|endofmask|>",
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (!parent.isFor()) {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (parent.hasChildren()) {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (!NodeUtil.isForIn(parent)) {\n<|endofmask|>",
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    } else if (parent.getFirstChild().getNext() == n) {\n<|endofmask|><|endofmask|>",
    "<|endoftext|>private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        recordDepScope(nameNode, ns);\n      }\n// buggy lines start:\n    } else {\n// buggy lines end:\n      \n      recordDepScope(recordNode, ns);\n    }\n  }\n}\n// fixed lines:\n    }\n    if (parent.isFor()) {\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|>"
  ]
}