{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1689861482145",
  "GPR[ESLB]": "1689861502165",
  "file": "Closure_122_/src/com/google/javascript/jscomp/parsing/IRFactory.java_252-253",
  "input": {
    "loc": "252-253",
    "input": "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\") != -1 || comment.getValue().indexOf(\"\\n * @\") != -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n"
  },
  "nvidea": "measures-nvidea-Closure_122_-src-com-google-javascript-jscomp-parsing-IRFactory.java_252-253.txt",
  "OAR_JOB_ID": "1561538",
  "GPR[SSLI]": "1689859931667",
  "GPR[ESLI]": "1689859961698",
  "GPR[SPS]": "1689861502215",
  "nrTokens": 110,
  "status": "ok",
  "GPR[EPS]": "1689861506881",
  "time": 4666,
  "tokentime": 2,
  "inferencetime": 4664,
  "output": [
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n  if (comment.getValue().indexOf(\"/\")!= -1 || comment.getValue().indexOf(\"\\n\")!= -1) {\n<|endoftext|>",
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n    if (comment.getValue().indexOf(\"/\")!= -1 || comment.getValue().indexOf(\"\\n\")!= -1) {\n<|endoftext|>",
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n  if (comment.getValue().indexOf(\"/\")!= -1) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n  if (comment.getValue().contains(\"String_Node_Str\") || comment.getValue().contains(\"String_Node_Str\")) {\n<|endoftext|>",
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n  if (comment.getValue().indexOf(\"\")!= -1) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n    if (comment.getValue().indexOf(\"/\")!= -1) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n    if (comment.getValue().indexOf(\"\")!= -1) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n  if (comment.getValue()!= null && comment.getValue().indexOf(\"\")!= -1) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n  if (comment.getValue().indexOf(\"String_Node_Str\")!= -1) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void handleBlockComment(Comment comment) {\n// buggy lines start:\n  if (comment.getValue().indexOf(\"/* @\")!= -1 || comment.getValue().indexOf(\"\\n * @\")!= -1) {\n// buggy lines end:\n    errorReporter.warning(\n        SUSPICIOUS_COMMENT_WARNING,\n        sourceName,\n        comment.getLineno(), \"\", 0);\n  }\n}\n// fixed lines: \n  if (comment.getValue()!= null && comment.getValue().indexOf(\"/\")!= -1) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>"
  ]
}