{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1689860964374",
  "GPR[ESLB]": "1689860984394",
  "file": "Closure_57_/src/com/google/javascript/jscomp/ClosureCodingConvention.java_197-198",
  "input": {
    "loc": "197-198",
    "input": "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee != null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target != null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n"
  },
  "nvidea": "measures-nvidea-Closure_57_-src-com-google-javascript-jscomp-ClosureCodingConvention.java_197-198.txt",
  "OAR_JOB_ID": "1561538",
  "GPR[SSLI]": "1689859931667",
  "GPR[ESLI]": "1689859961698",
  "GPR[SPS]": "1689860984429",
  "nrTokens": 179,
  "status": "ok",
  "GPR[EPS]": "1689860988470",
  "time": 4041,
  "tokentime": 4,
  "inferencetime": 4037,
  "output": [
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target!= null && target.getType() == Token.STRING) {\n<|endoftext|>",
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target!= null && target.isString()) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target!= null && target.hasChildren()) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target!= null && target.getType() == Token.CLASS) {\n<|endoftext|><|endoftext|>",
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target!= null && target.getString()!= null) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target!= null && target.getType() == Node.STRING) {\n<|endoftext|>",
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target!= null && target.isQualifiedName()) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target!= null && target.getType() == Token.CLASSNAME) {\n<|endoftext|>",
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target!= null && target.getType() == Token.NAME) {\n<|endoftext|><|endoftext|>",
    "private static String extractClassNameIfGoog(Node node, Node parent,\n    String functionName){\n  String className = null;\n  if (NodeUtil.isExprCall(parent)) {\n    Node callee = node.getFirstChild();\n    if (callee!= null && callee.getType() == Token.GETPROP) {\n      String qualifiedName = callee.getQualifiedName();\n      if (functionName.equals(qualifiedName)) {\n        Node target = callee.getNext();\n// buggy lines start:\n        if (target!= null) {\n// buggy lines end:\n          className = target.getString();\n        }\n      }\n    }\n  }\n  return className;\n}\n// fixed lines: \n        if (target.getType() == Token.STRING) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>"
  ]
}