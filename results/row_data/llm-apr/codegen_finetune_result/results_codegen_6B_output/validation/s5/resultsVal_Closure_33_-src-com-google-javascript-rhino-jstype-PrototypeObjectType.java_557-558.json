{
  "key": "Closure_33_/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java_557-558",
  "proj": "Closure",
  "bug_id": "33",
  "loc": "557-558",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689905900792,
      "ESLB": 1689905920812,
      "SPVS": 1689905920812,
      "SPVAP": 1689905920813,
      "EPVAP": 1689905920814,
      "SPVATF": 1689905920814,
      "EPVATF": 1689905926825,
      "SPVATR": 1689905926825,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689905926826
    },
    {
      "rank": 1,
      "SSLB": 1689905926826,
      "ESLB": 1689905946846,
      "SPVS": 1689905946846,
      "SPVAP": 1689905946848,
      "EPVAP": 1689905946849,
      "SPVATF": 1689905946849,
      "EPVATF": 1689905952860,
      "SPVATR": 1689905952860,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    super.matchConstraint(constraintObj);\n",
      "EPVS": 1689905952861
    },
    {
      "rank": 2,
      "SSLB": 1689905952861,
      "ESLB": 1689905972881,
      "SPVS": 1689905972881,
      "SPVAP": 1689905972882,
      "EPVAP": 1689905972883,
      "SPVATF": 1689905972883,
      "EPVATF": 1689905977895,
      "SPVATR": 1689905977895,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    Preconditions.checkState(constraintObj.isRecordType(), \"String_Node_Str\", constraintObj);\n",
      "EPVS": 1689905977896
    },
    {
      "rank": 3,
      "SSLB": 1689905977896,
      "ESLB": 1689905997915,
      "SPVS": 1689905997915,
      "SPVAP": 1689905997916,
      "EPVAP": 1689905997917,
      "SPVATF": 1689905997917,
      "EPVATF": 1689905999924,
      "SPVATR": 1689905999924,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n",
      "EPVS": 1689905999924
    },
    {
      "rank": 4,
      "SSLB": 1689905999924,
      "ESLB": 1689906019938,
      "SPVS": 1689906019938,
      "SPVAP": 1689906019940,
      "EPVAP": 1689906019940,
      "SPVATF": 1689906019940,
      "EPVATF": 1689906024950,
      "SPVATR": 1689906024950,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (constraintObj.isRecordType()) {\n    }\n",
      "EPVS": 1689906024951
    },
    {
      "rank": 5,
      "SSLB": 1689906024951,
      "ESLB": 1689906044971,
      "SPVS": 1689906044971,
      "SPVAP": 1689906044972,
      "EPVAP": 1689906044972,
      "SPVATF": 1689906044972,
      "EPVATF": 1689906047982,
      "SPVATR": 1689906047982,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    JSType typeToInfer = getNativeType(JSTypeNative.VOID_TYPE);\n",
      "EPVS": 1689906047983
    },
    {
      "rank": 6,
      "SSLB": 1689906047983,
      "ESLB": 1689906067987,
      "SPVS": 1689906067987,
      "SPVAP": 1689906067988,
      "EPVAP": 1689906067989,
      "SPVATF": 1689906067989,
      "EPVATF": 1689906070997,
      "SPVATR": 1689906070997,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            JSType typeToInfer = propType;\n",
      "EPVS": 1689906070998
    },
    {
      "rank": 7,
      "SSLB": 1689906070998,
      "ESLB": 1689906091015,
      "SPVS": 1689906091015,
      "SPVAP": 1689906091016,
      "EPVAP": 1689906091017,
      "SPVATF": 1689906091017,
      "EPVATF": 1689906096027,
      "SPVATR": 1689906096027,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (!constraintObj.isRecordType()) {\n        return;\n    }\n",
      "EPVS": 1689906096027
    },
    {
      "rank": 8,
      "SSLB": 1689906096027,
      "ESLB": 1689906116047,
      "SPVS": 1689906116047,
      "SPVAP": 1689906116048,
      "EPVAP": 1689906116049,
      "SPVATF": 1689906116049,
      "EPVATF": 1689906119058,
      "SPVATR": 1689906119058,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n",
      "EPVS": 1689906119059
    },
    {
      "rank": 9,
      "SSLB": 1689906119059,
      "ESLB": 1689906139079,
      "SPVS": 1689906139079,
      "SPVAP": 1689906139080,
      "EPVAP": 1689906139080,
      "SPVATF": 1689906139080,
      "EPVATF": 1689906144090,
      "SPVATR": 1689906144090,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (!constraintObj.isRecordType()) {\n        throw new Error(\"String_Node_Str\");\n    }\n",
      "EPVS": 1689906144091
    }
  ],
  "SSLI": 1689898051102,
  "ESLI": 1689898081132,
  "hostname": "gros-53.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}