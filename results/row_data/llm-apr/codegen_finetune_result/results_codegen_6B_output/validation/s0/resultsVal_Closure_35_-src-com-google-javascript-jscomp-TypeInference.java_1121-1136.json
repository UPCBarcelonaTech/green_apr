{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688328829444,
      "ESLB": 1688328849464,
      "SPVS": 1688328849464,
      "SPVAP": 1688328849466,
      "EPVAP": 1688328849467,
      "SPVATF": 1688328849467,
      "EPVATF": 1688328851474,
      "SPVATR": 1688328851474,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n",
      "EPVS": 1688328851475
    },
    {
      "rank": 1,
      "SSLB": 1688328851475,
      "ESLB": 1688328871495,
      "SPVS": 1688328871495,
      "SPVAP": 1688328871497,
      "EPVAP": 1688328871498,
      "SPVATF": 1688328871498,
      "EPVATF": 1688328873504,
      "SPVATR": 1688328873504,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    JSType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n",
      "EPVS": 1688328873505
    },
    {
      "rank": 2,
      "SSLB": 1688328873505,
      "ESLB": 1688328893525,
      "SPVS": 1688328893525,
      "SPVAP": 1688328893526,
      "EPVAP": 1688328893527,
      "SPVATF": 1688328893527,
      "EPVATF": 1688328895533,
      "SPVATR": 1688328895533,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "  ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n",
      "EPVS": 1688328895534
    },
    {
      "rank": 3,
      "SSLB": 1688328895534,
      "ESLB": 1688328915554,
      "SPVS": 1688328915554,
      "SPVAP": 1688328915555,
      "EPVAP": 1688328915556,
      "SPVATF": 1688328915556,
      "EPVATF": 1688328920567,
      "SPVATR": 1688328920567,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    for (String prop : constraintObj.getOwnPropertyNames()) {\n        JSType propType = constraintObj.getPropertyType(prop);\n        objType.defineInferredProperty(prop, propType, null);\n",
      "EPVS": 1688328920568
    },
    {
      "rank": 4,
      "SSLB": 1688328920568,
      "ESLB": 1688328940588,
      "SPVS": 1688328940588,
      "SPVAP": 1688328940589,
      "EPVAP": 1688328940590,
      "SPVATF": 1688328940590,
      "EPVATF": 1688328945599,
      "SPVATR": 1688328945599,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType == null) {\n        return;\n",
      "EPVS": 1688328945600
    },
    {
      "rank": 5,
      "SSLB": 1688328945600,
      "ESLB": 1688328965620,
      "SPVS": 1688328965620,
      "SPVAP": 1688328965621,
      "EPVAP": 1688328965622,
      "SPVATF": 1688328965622,
      "EPVATF": 1688328970631,
      "SPVATR": 1688328970631,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            objType.defineInferredProperty(prop, getNativeType(VOID_TYPE).getLeastSupertype(propType), null);\n        }\n",
      "EPVS": 1688328970633
    },
    {
      "rank": 6,
      "SSLB": 1688328970633,
      "ESLB": 1688328990653,
      "SPVS": 1688328990653,
      "SPVAP": 1688328990654,
      "EPVAP": 1688328990655,
      "SPVATF": 1688328990655,
      "EPVATF": 1688328995666,
      "SPVATR": 1688328995666,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    for (String prop : constraintObj.getOwnPropertyNames()) {\n        JSType propType = constraintObj.getPropertyType(prop);\n",
      "EPVS": 1688328995667
    },
    {
      "rank": 7,
      "SSLB": 1688328995667,
      "ESLB": 1688329015687,
      "SPVS": 1688329015687,
      "SPVAP": 1688329015688,
      "EPVAP": 1688329015689,
      "SPVATF": 1688329015689,
      "EPVATF": 1688329020699,
      "SPVATR": 1688329020699,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                objType.defineInferredProperty(prop, getNativeType(VOID_TYPE).getLeastSupertype(propType), null);\n            }\n        }\n",
      "EPVS": 1688329020700
    },
    {
      "rank": 8,
      "SSLB": 1688329020700,
      "ESLB": 1688329040720,
      "SPVS": 1688329040720,
      "SPVAP": 1688329040721,
      "EPVAP": 1688329040722,
      "SPVATF": 1688329040722,
      "EPVATF": 1688329045731,
      "SPVATR": 1688329045731,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            JSType typeToInfer = objType.getLeastSupertype(propType);\n            objType.defineInferredProperty(prop, typeToInfer, null);\n        }\n",
      "EPVS": 1688329045732
    },
    {
      "rank": 9,
      "SSLB": 1688329045732,
      "ESLB": 1688329065752,
      "SPVS": 1688329065752,
      "SPVAP": 1688329065753,
      "EPVAP": 1688329065754,
      "SPVATF": 1688329065754,
      "EPVATF": 1688329067761,
      "SPVATR": 1688329067761,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "",
      "EPVS": 1688329067762
    }
  ],
  "SSLI": 1688324469128,
  "ESLI": 1688324499158,
  "hostname": "gros-63.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212950"
}