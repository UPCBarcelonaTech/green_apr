{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688334661836,
      "ESLB": 1688334681856,
      "SPVS": 1688334681856,
      "SPVAP": 1688334681858,
      "EPVAP": 1688334681858,
      "SPVATF": 1688334681858,
      "EPVATF": 1688334683864,
      "SPVATR": 1688334683864,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n",
      "EPVS": 1688334683865
    },
    {
      "rank": 1,
      "SSLB": 1688334683865,
      "ESLB": 1688334703885,
      "SPVS": 1688334703885,
      "SPVAP": 1688334703890,
      "EPVAP": 1688334703891,
      "SPVATF": 1688334703891,
      "EPVATF": 1688334713908,
      "SPVATR": 1688334713908,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1688334713909
    },
    {
      "rank": 2,
      "SSLB": 1688334713909,
      "ESLB": 1688334733929,
      "SPVS": 1688334733929,
      "SPVAP": 1688334733931,
      "EPVAP": 1688334733932,
      "SPVATF": 1688334733932,
      "EPVATF": 1688334736946,
      "SPVATR": 1688334736946,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().toLowerCase();\n",
      "EPVS": 1688334736947
    },
    {
      "rank": 3,
      "SSLB": 1688334736947,
      "ESLB": 1688334756968,
      "SPVS": 1688334756968,
      "SPVAP": 1688334756970,
      "EPVAP": 1688334756971,
      "SPVATF": 1688334756971,
      "EPVATF": 1688334758977,
      "SPVATR": 1688334758977,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null? \"null\" :",
      "EPVS": 1688334758978
    },
    {
      "rank": 4,
      "SSLB": 1688334758978,
      "ESLB": 1688334778998,
      "SPVS": 1688334778998,
      "SPVAP": 1688334778999,
      "EPVAP": 1688334779000,
      "SPVATF": 1688334779000,
      "EPVATF": 1688334781006,
      "SPVATR": 1688334781006,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, (type == null? \"null",
      "EPVS": 1688334781007
    },
    {
      "rank": 5,
      "SSLB": 1688334781007,
      "ESLB": 1688334801027,
      "SPVS": 1688334801027,
      "SPVAP": 1688334801029,
      "EPVAP": 1688334801029,
      "SPVATF": 1688334801029,
      "EPVATF": 1688334803049,
      "SPVATR": 1688334803049,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name,\n                (type == null? \"null",
      "EPVS": 1688334803050
    },
    {
      "rank": 6,
      "SSLB": 1688334803050,
      "ESLB": 1688334823070,
      "SPVS": 1688334823070,
      "SPVAP": 1688334823071,
      "EPVAP": 1688334823072,
      "SPVATF": 1688334823072,
      "EPVATF": 1688334826078,
      "SPVATR": 1688334826078,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null? \"null\"",
      "EPVS": 1688334826079
    },
    {
      "rank": 7,
      "SSLB": 1688334826079,
      "ESLB": 1688334846090,
      "SPVS": 1688334846090,
      "SPVAP": 1688334846091,
      "EPVAP": 1688334846092,
      "SPVATF": 1688334846092,
      "EPVATF": 1688334848097,
      "SPVATR": 1688334848097,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), child, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null? \"null\"",
      "EPVS": 1688334848098
    },
    {
      "rank": 8,
      "SSLB": 1688334848098,
      "ESLB": 1688334868118,
      "SPVS": 1688334868118,
      "SPVAP": 1688334868119,
      "EPVAP": 1688334868121,
      "SPVATF": 1688334868121,
      "EPVATF": 1688334870128,
      "SPVATR": 1688334870128,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name,\n                (type == null?",
      "EPVS": 1688334870129
    },
    {
      "rank": 9,
      "SSLB": 1688334870129,
      "ESLB": 1688334890149,
      "SPVS": 1688334890149,
      "SPVAP": 1688334890150,
      "EPVAP": 1688334890151,
      "SPVATF": 1688334890151,
      "EPVATF": 1688334893158,
      "SPVATR": 1688334893158,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().toLowerCase();\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null",
      "EPVS": 1688334893159
    }
  ],
  "SSLI": 1688324469128,
  "ESLI": 1688324499158,
  "hostname": "gros-63.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212950"
}