{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689831217656,
      "ESLB": 1689831237668,
      "SPVS": 1689831237668,
      "SPVAP": 1689831237669,
      "EPVAP": 1689831237671,
      "SPVATF": 1689831237671,
      "EPVATF": 1689831240679,
      "SPVATR": 1689831240679,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n",
      "EPVS": 1689831240680
    },
    {
      "rank": 1,
      "SSLB": 1689831240680,
      "ESLB": 1689831260700,
      "SPVS": 1689831260700,
      "SPVAP": 1689831260702,
      "EPVAP": 1689831260703,
      "SPVATF": 1689831260703,
      "EPVATF": 1689831262710,
      "SPVATR": 1689831262710,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    JSType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n",
      "EPVS": 1689831262711
    },
    {
      "rank": 2,
      "SSLB": 1689831262711,
      "ESLB": 1689831282731,
      "SPVS": 1689831282731,
      "SPVAP": 1689831282732,
      "EPVAP": 1689831282734,
      "SPVATF": 1689831282734,
      "EPVATF": 1689831284742,
      "SPVATR": 1689831284742,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "  ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n",
      "EPVS": 1689831284743
    },
    {
      "rank": 3,
      "SSLB": 1689831284743,
      "ESLB": 1689831304761,
      "SPVS": 1689831304761,
      "SPVAP": 1689831304762,
      "EPVAP": 1689831304763,
      "SPVATF": 1689831304763,
      "EPVATF": 1689831310775,
      "SPVATR": 1689831310775,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    for (String prop : constraintObj.getOwnPropertyNames()) {\n        JSType propType = constraintObj.getPropertyType(prop);\n        objType.defineInferredProperty(prop, propType, null);\n",
      "EPVS": 1689831310776
    },
    {
      "rank": 4,
      "SSLB": 1689831310776,
      "ESLB": 1689831330796,
      "SPVS": 1689831330796,
      "SPVAP": 1689831330797,
      "EPVAP": 1689831330798,
      "SPVATF": 1689831330798,
      "EPVATF": 1689831336809,
      "SPVATR": 1689831336809,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType == null) {\n        return;\n",
      "EPVS": 1689831336810
    },
    {
      "rank": 5,
      "SSLB": 1689831336810,
      "ESLB": 1689831356830,
      "SPVS": 1689831356830,
      "SPVAP": 1689831356833,
      "EPVAP": 1689831356834,
      "SPVATF": 1689831356834,
      "EPVATF": 1689831361842,
      "SPVATR": 1689831361842,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            objType.defineInferredProperty(prop, getNativeType(VOID_TYPE).getLeastSupertype(propType), null);\n        }\n",
      "EPVS": 1689831361843
    },
    {
      "rank": 6,
      "SSLB": 1689831361843,
      "ESLB": 1689831381863,
      "SPVS": 1689831381863,
      "SPVAP": 1689831381867,
      "EPVAP": 1689831381868,
      "SPVATF": 1689831381868,
      "EPVATF": 1689831387885,
      "SPVATR": 1689831387885,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    for (String prop : constraintObj.getOwnPropertyNames()) {\n        JSType propType = constraintObj.getPropertyType(prop);\n",
      "EPVS": 1689831387886
    },
    {
      "rank": 7,
      "SSLB": 1689831387886,
      "ESLB": 1689831407905,
      "SPVS": 1689831407905,
      "SPVAP": 1689831407909,
      "EPVAP": 1689831407910,
      "SPVATF": 1689831407910,
      "EPVATF": 1689831412920,
      "SPVATR": 1689831412920,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                objType.defineInferredProperty(prop, getNativeType(VOID_TYPE).getLeastSupertype(propType), null);\n            }\n        }\n",
      "EPVS": 1689831412921
    },
    {
      "rank": 8,
      "SSLB": 1689831412921,
      "ESLB": 1689831432941,
      "SPVS": 1689831432941,
      "SPVAP": 1689831432942,
      "EPVAP": 1689831432944,
      "SPVATF": 1689831432944,
      "EPVATF": 1689831437955,
      "SPVATR": 1689831437955,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            JSType typeToInfer = objType.getLeastSupertype(propType);\n            objType.defineInferredProperty(prop, typeToInfer, null);\n        }\n",
      "EPVS": 1689831437956
    },
    {
      "rank": 9,
      "SSLB": 1689831437956,
      "ESLB": 1689831457976,
      "SPVS": 1689831457976,
      "SPVAP": 1689831457979,
      "EPVAP": 1689831457980,
      "SPVATF": 1689831457980,
      "EPVATF": 1689831460997,
      "SPVATR": 1689831460997,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "",
      "EPVS": 1689831460998
    }
  ],
  "SSLI": 1689823099463,
  "ESLI": 1689823129493,
  "hostname": "gros-51.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}