{
  "key": "Closure_33_/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java_557-558",
  "proj": "Closure",
  "bug_id": "33",
  "loc": "557-558",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689747789603,
      "ESLB": 1689747809618,
      "SPVS": 1689747809618,
      "SPVAP": 1689747809619,
      "EPVAP": 1689747809620,
      "SPVATF": 1689747809620,
      "EPVATF": 1689747814630,
      "SPVATR": 1689747814630,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689747814631
    },
    {
      "rank": 1,
      "SSLB": 1689747814631,
      "ESLB": 1689747834651,
      "SPVS": 1689747834651,
      "SPVAP": 1689747834652,
      "EPVAP": 1689747834653,
      "SPVATF": 1689747834653,
      "EPVATF": 1689747839663,
      "SPVATR": 1689747839663,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    super.matchConstraint(constraintObj);\n",
      "EPVS": 1689747839664
    },
    {
      "rank": 2,
      "SSLB": 1689747839664,
      "ESLB": 1689747859684,
      "SPVS": 1689747859684,
      "SPVAP": 1689747859685,
      "EPVAP": 1689747859686,
      "SPVATF": 1689747859686,
      "EPVATF": 1689747864697,
      "SPVATR": 1689747864697,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    Preconditions.checkState(constraintObj.isRecordType(), \"String_Node_Str\", constraintObj);\n",
      "EPVS": 1689747864698
    },
    {
      "rank": 3,
      "SSLB": 1689747864698,
      "ESLB": 1689747884718,
      "SPVS": 1689747884718,
      "SPVAP": 1689747884719,
      "EPVAP": 1689747884720,
      "SPVATF": 1689747884720,
      "EPVATF": 1689747886728,
      "SPVATR": 1689747886728,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n",
      "EPVS": 1689747886729
    },
    {
      "rank": 4,
      "SSLB": 1689747886729,
      "ESLB": 1689747906749,
      "SPVS": 1689747906749,
      "SPVAP": 1689747906750,
      "EPVAP": 1689747906751,
      "SPVATF": 1689747906751,
      "EPVATF": 1689747911761,
      "SPVATR": 1689747911761,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (constraintObj.isRecordType()) {\n    }\n",
      "EPVS": 1689747911762
    },
    {
      "rank": 5,
      "SSLB": 1689747911762,
      "ESLB": 1689747931782,
      "SPVS": 1689747931782,
      "SPVAP": 1689747931783,
      "EPVAP": 1689747931784,
      "SPVATF": 1689747931784,
      "EPVATF": 1689747934793,
      "SPVATR": 1689747934793,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    JSType typeToInfer = getNativeType(JSTypeNative.VOID_TYPE);\n",
      "EPVS": 1689747934794
    },
    {
      "rank": 6,
      "SSLB": 1689747934794,
      "ESLB": 1689747954814,
      "SPVS": 1689747954814,
      "SPVAP": 1689747954815,
      "EPVAP": 1689747954816,
      "SPVATF": 1689747954816,
      "EPVATF": 1689747956823,
      "SPVATR": 1689747956823,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            JSType typeToInfer = propType;\n",
      "EPVS": 1689747956824
    },
    {
      "rank": 7,
      "SSLB": 1689747956824,
      "ESLB": 1689747976839,
      "SPVS": 1689747976839,
      "SPVAP": 1689747976840,
      "EPVAP": 1689747976841,
      "SPVATF": 1689747976841,
      "EPVATF": 1689747981851,
      "SPVATR": 1689747981851,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (!constraintObj.isRecordType()) {\n        return;\n    }\n",
      "EPVS": 1689747981852
    },
    {
      "rank": 8,
      "SSLB": 1689747981852,
      "ESLB": 1689748001872,
      "SPVS": 1689748001872,
      "SPVAP": 1689748001873,
      "EPVAP": 1689748001874,
      "SPVATF": 1689748001874,
      "EPVATF": 1689748004884,
      "SPVATR": 1689748004884,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n",
      "EPVS": 1689748004885
    },
    {
      "rank": 9,
      "SSLB": 1689748004885,
      "ESLB": 1689748024905,
      "SPVS": 1689748024905,
      "SPVAP": 1689748024906,
      "EPVAP": 1689748024907,
      "SPVATF": 1689748024907,
      "EPVATF": 1689748029917,
      "SPVATR": 1689748029917,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (!constraintObj.isRecordType()) {\n        throw new Error(\"String_Node_Str\");\n    }\n",
      "EPVS": 1689748029918
    }
  ],
  "SSLI": 1689739947429,
  "ESLI": 1689739977460,
  "hostname": "gros-51.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}