{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688809242557,
      "ESLB": 1688809262577,
      "SPVS": 1688809262577,
      "SPVAP": 1688809262578,
      "EPVAP": 1688809262580,
      "SPVATF": 1688809262580,
      "EPVATF": 1688809265588,
      "SPVATR": 1688809265588,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n",
      "EPVS": 1688809265589
    },
    {
      "rank": 1,
      "SSLB": 1688809265589,
      "ESLB": 1688809285609,
      "SPVS": 1688809285609,
      "SPVAP": 1688809285611,
      "EPVAP": 1688809285612,
      "SPVATF": 1688809285612,
      "EPVATF": 1688809295632,
      "SPVATR": 1688809295632,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1688809295633
    },
    {
      "rank": 2,
      "SSLB": 1688809295633,
      "ESLB": 1688809315653,
      "SPVS": 1688809315653,
      "SPVAP": 1688809315654,
      "EPVAP": 1688809315655,
      "SPVATF": 1688809315655,
      "EPVATF": 1688809317664,
      "SPVATR": 1688809317664,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().toLowerCase();\n",
      "EPVS": 1688809317665
    },
    {
      "rank": 3,
      "SSLB": 1688809317665,
      "ESLB": 1688809337685,
      "SPVS": 1688809337685,
      "SPVAP": 1688809337687,
      "EPVAP": 1688809337688,
      "SPVATF": 1688809337688,
      "EPVATF": 1688809339695,
      "SPVATR": 1688809339695,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null? \"null\" :",
      "EPVS": 1688809339696
    },
    {
      "rank": 4,
      "SSLB": 1688809339696,
      "ESLB": 1688809359716,
      "SPVS": 1688809359716,
      "SPVAP": 1688809359720,
      "EPVAP": 1688809359721,
      "SPVATF": 1688809359721,
      "EPVATF": 1688809361728,
      "SPVATR": 1688809361728,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, (type == null? \"null",
      "EPVS": 1688809361729
    },
    {
      "rank": 5,
      "SSLB": 1688809361729,
      "ESLB": 1688809381749,
      "SPVS": 1688809381749,
      "SPVAP": 1688809381751,
      "EPVAP": 1688809381752,
      "SPVATF": 1688809381752,
      "EPVATF": 1688809384774,
      "SPVATR": 1688809384774,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name,\n                (type == null? \"null",
      "EPVS": 1688809384775
    },
    {
      "rank": 6,
      "SSLB": 1688809384775,
      "ESLB": 1688809404795,
      "SPVS": 1688809404795,
      "SPVAP": 1688809404798,
      "EPVAP": 1688809404799,
      "SPVATF": 1688809404799,
      "EPVATF": 1688809406805,
      "SPVATR": 1688809406805,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null? \"null\"",
      "EPVS": 1688809406806
    },
    {
      "rank": 7,
      "SSLB": 1688809406806,
      "ESLB": 1688809426826,
      "SPVS": 1688809426826,
      "SPVAP": 1688809426828,
      "EPVAP": 1688809426829,
      "SPVATF": 1688809426829,
      "EPVATF": 1688809429837,
      "SPVATR": 1688809429837,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), child, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null? \"null\"",
      "EPVS": 1688809429838
    },
    {
      "rank": 8,
      "SSLB": 1688809429838,
      "ESLB": 1688809449858,
      "SPVS": 1688809449858,
      "SPVAP": 1688809449860,
      "EPVAP": 1688809449861,
      "SPVATF": 1688809449861,
      "EPVATF": 1688809451876,
      "SPVATR": 1688809451876,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name,\n                (type == null?",
      "EPVS": 1688809451877
    },
    {
      "rank": 9,
      "SSLB": 1688809451877,
      "ESLB": 1688809471897,
      "SPVS": 1688809471897,
      "SPVAP": 1688809471898,
      "EPVAP": 1688809471899,
      "SPVATF": 1688809471899,
      "EPVATF": 1688809473906,
      "SPVATR": 1688809473906,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().toLowerCase();\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null",
      "EPVS": 1688809473907
    }
  ],
  "SSLI": 1688801428473,
  "ESLI": 1688801458503,
  "hostname": "gros-76.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}