{
  "key": "Closure_33_/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java_557-558",
  "proj": "Closure",
  "bug_id": "33",
  "loc": "557-558",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689015938493,
      "ESLB": 1689015958513,
      "SPVS": 1689015958513,
      "SPVAP": 1689015958515,
      "EPVAP": 1689015958516,
      "SPVATF": 1689015958516,
      "EPVATF": 1689015963526,
      "SPVATR": 1689015963526,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689015963528
    },
    {
      "rank": 1,
      "SSLB": 1689015963528,
      "ESLB": 1689015983548,
      "SPVS": 1689015983548,
      "SPVAP": 1689015983549,
      "EPVAP": 1689015983550,
      "SPVATF": 1689015983550,
      "EPVATF": 1689015988561,
      "SPVATR": 1689015988561,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    super.matchConstraint(constraintObj);\n",
      "EPVS": 1689015988562
    },
    {
      "rank": 2,
      "SSLB": 1689015988562,
      "ESLB": 1689016008582,
      "SPVS": 1689016008582,
      "SPVAP": 1689016008583,
      "EPVAP": 1689016008585,
      "SPVATF": 1689016008585,
      "EPVATF": 1689016013595,
      "SPVATR": 1689016013595,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    Preconditions.checkState(constraintObj.isRecordType(), \"String_Node_Str\", constraintObj);\n",
      "EPVS": 1689016013596
    },
    {
      "rank": 3,
      "SSLB": 1689016013596,
      "ESLB": 1689016033617,
      "SPVS": 1689016033617,
      "SPVAP": 1689016033618,
      "EPVAP": 1689016033619,
      "SPVATF": 1689016033619,
      "EPVATF": 1689016035627,
      "SPVATR": 1689016035627,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n",
      "EPVS": 1689016035628
    },
    {
      "rank": 4,
      "SSLB": 1689016035628,
      "ESLB": 1689016055648,
      "SPVS": 1689016055648,
      "SPVAP": 1689016055649,
      "EPVAP": 1689016055651,
      "SPVATF": 1689016055651,
      "EPVATF": 1689016060660,
      "SPVATR": 1689016060660,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (constraintObj.isRecordType()) {\n    }\n",
      "EPVS": 1689016060661
    },
    {
      "rank": 5,
      "SSLB": 1689016060661,
      "ESLB": 1689016080682,
      "SPVS": 1689016080682,
      "SPVAP": 1689016080683,
      "EPVAP": 1689016080684,
      "SPVATF": 1689016080684,
      "EPVATF": 1689016083693,
      "SPVATR": 1689016083693,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    JSType typeToInfer = getNativeType(JSTypeNative.VOID_TYPE);\n",
      "EPVS": 1689016083694
    },
    {
      "rank": 6,
      "SSLB": 1689016083694,
      "ESLB": 1689016103714,
      "SPVS": 1689016103714,
      "SPVAP": 1689016103715,
      "EPVAP": 1689016103717,
      "SPVATF": 1689016103717,
      "EPVATF": 1689016105724,
      "SPVATR": 1689016105724,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            JSType typeToInfer = propType;\n",
      "EPVS": 1689016105725
    },
    {
      "rank": 7,
      "SSLB": 1689016105725,
      "ESLB": 1689016125728,
      "SPVS": 1689016125728,
      "SPVAP": 1689016125730,
      "EPVAP": 1689016125731,
      "SPVATF": 1689016125731,
      "EPVATF": 1689016130741,
      "SPVATR": 1689016130741,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (!constraintObj.isRecordType()) {\n        return;\n    }\n",
      "EPVS": 1689016130743
    },
    {
      "rank": 8,
      "SSLB": 1689016130743,
      "ESLB": 1689016150763,
      "SPVS": 1689016150763,
      "SPVAP": 1689016150764,
      "EPVAP": 1689016150765,
      "SPVATF": 1689016150765,
      "EPVATF": 1689016152773,
      "SPVATR": 1689016152773,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n",
      "EPVS": 1689016152774
    },
    {
      "rank": 9,
      "SSLB": 1689016152774,
      "ESLB": 1689016172795,
      "SPVS": 1689016172795,
      "SPVAP": 1689016172796,
      "EPVAP": 1689016172797,
      "SPVATF": 1689016172797,
      "EPVATF": 1689016177808,
      "SPVATR": 1689016177808,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (!constraintObj.isRecordType()) {\n        throw new Error(\"String_Node_Str\");\n    }\n",
      "EPVS": 1689016177809
    }
  ],
  "SSLI": 1689009963082,
  "ESLI": 1689009993113,
  "hostname": "gros-57.nancy.grid5000.fr",
  "OAR_JOB_ID": "4228532"
}