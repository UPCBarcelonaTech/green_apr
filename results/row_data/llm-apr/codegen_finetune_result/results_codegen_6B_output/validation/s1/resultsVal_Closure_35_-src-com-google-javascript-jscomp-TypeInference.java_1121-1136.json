{
  "key": "Closure_35_/src/com/google/javascript/jscomp/TypeInference.java_1121-1136",
  "proj": "Closure",
  "bug_id": "35",
  "loc": "1121-1136",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/TypeInference.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689016205559,
      "ESLB": 1689016225580,
      "SPVS": 1689016225580,
      "SPVAP": 1689016225582,
      "EPVAP": 1689016225583,
      "SPVATF": 1689016225583,
      "EPVATF": 1689016228592,
      "SPVATR": 1689016228592,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n",
      "EPVS": 1689016228594
    },
    {
      "rank": 1,
      "SSLB": 1689016228594,
      "ESLB": 1689016248614,
      "SPVS": 1689016248614,
      "SPVAP": 1689016248616,
      "EPVAP": 1689016248617,
      "SPVATF": 1689016248617,
      "EPVATF": 1689016250624,
      "SPVATR": 1689016250624,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    JSType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n",
      "EPVS": 1689016250625
    },
    {
      "rank": 2,
      "SSLB": 1689016250625,
      "ESLB": 1689016270645,
      "SPVS": 1689016270645,
      "SPVAP": 1689016270647,
      "EPVAP": 1689016270649,
      "SPVATF": 1689016270649,
      "EPVATF": 1689016272657,
      "SPVATR": 1689016272657,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "  ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n",
      "EPVS": 1689016272658
    },
    {
      "rank": 3,
      "SSLB": 1689016272658,
      "ESLB": 1689016292678,
      "SPVS": 1689016292678,
      "SPVAP": 1689016292680,
      "EPVAP": 1689016292681,
      "SPVATF": 1689016292681,
      "EPVATF": 1689016297691,
      "SPVATR": 1689016297691,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    for (String prop : constraintObj.getOwnPropertyNames()) {\n        JSType propType = constraintObj.getPropertyType(prop);\n        objType.defineInferredProperty(prop, propType, null);\n",
      "EPVS": 1689016297692
    },
    {
      "rank": 4,
      "SSLB": 1689016297692,
      "ESLB": 1689016317712,
      "SPVS": 1689016317712,
      "SPVAP": 1689016317714,
      "EPVAP": 1689016317715,
      "SPVATF": 1689016317715,
      "EPVATF": 1689016322726,
      "SPVATR": 1689016322726,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType == null) {\n        return;\n",
      "EPVS": 1689016322728
    },
    {
      "rank": 5,
      "SSLB": 1689016322728,
      "ESLB": 1689016342748,
      "SPVS": 1689016342748,
      "SPVAP": 1689016342749,
      "EPVAP": 1689016342751,
      "SPVATF": 1689016342751,
      "EPVATF": 1689016347760,
      "SPVATR": 1689016347760,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            objType.defineInferredProperty(prop, getNativeType(VOID_TYPE).getLeastSupertype(propType), null);\n        }\n",
      "EPVS": 1689016347762
    },
    {
      "rank": 6,
      "SSLB": 1689016347762,
      "ESLB": 1689016367782,
      "SPVS": 1689016367782,
      "SPVAP": 1689016367783,
      "EPVAP": 1689016367785,
      "SPVATF": 1689016367785,
      "EPVATF": 1689016372796,
      "SPVATR": 1689016372796,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    for (String prop : constraintObj.getOwnPropertyNames()) {\n        JSType propType = constraintObj.getPropertyType(prop);\n",
      "EPVS": 1689016372798
    },
    {
      "rank": 7,
      "SSLB": 1689016372798,
      "ESLB": 1689016392818,
      "SPVS": 1689016392818,
      "SPVAP": 1689016392819,
      "EPVAP": 1689016392821,
      "SPVATF": 1689016392821,
      "EPVATF": 1689016397832,
      "SPVATR": 1689016397832,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!objType.isPropertyTypeDeclared(prop)) {\n                objType.defineInferredProperty(prop, getNativeType(VOID_TYPE).getLeastSupertype(propType), null);\n            }\n        }\n",
      "EPVS": 1689016397833
    },
    {
      "rank": 8,
      "SSLB": 1689016397833,
      "ESLB": 1689016417854,
      "SPVS": 1689016417854,
      "SPVAP": 1689016417855,
      "EPVAP": 1689016417856,
      "SPVATF": 1689016417856,
      "EPVATF": 1689016422866,
      "SPVATR": 1689016422866,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());\n    if (objType!= null) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            JSType typeToInfer = objType.getLeastSupertype(propType);\n            objType.defineInferredProperty(prop, typeToInfer, null);\n        }\n",
      "EPVS": 1689016422867
    },
    {
      "rank": 9,
      "SSLB": 1689016422867,
      "ESLB": 1689016442888,
      "SPVS": 1689016442888,
      "SPVAP": 1689016442889,
      "EPVAP": 1689016442891,
      "SPVATF": 1689016442891,
      "EPVATF": 1689016445900,
      "SPVATR": 1689016445900,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "",
      "EPVS": 1689016445901
    }
  ],
  "SSLI": 1689009963082,
  "ESLI": 1689009993113,
  "hostname": "gros-57.nancy.grid5000.fr",
  "OAR_JOB_ID": "4228532"
}