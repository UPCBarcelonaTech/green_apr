{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codegen_6B_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689031787186,
      "ESLB": 1689031807206,
      "SPVS": 1689031807206,
      "SPVAP": 1689031807207,
      "EPVAP": 1689031813544,
      "SPVATF": 1689031813544,
      "EPVATF": 1689031813544,
      "SPVATR": 1689031822558,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1689031822559
    },
    {
      "rank": 1,
      "SSLB": 1689031822559,
      "ESLB": 1689031842579,
      "SPVS": 1689031842579,
      "SPVAP": 1689031842580,
      "EPVAP": 1689031844630,
      "SPVATF": 1689031844630,
      "EPVATF": 1689031844630,
      "SPVATR": 1689031846637,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689031846638
    },
    {
      "rank": 2,
      "SSLB": 1689031846638,
      "ESLB": 1689031866658,
      "SPVS": 1689031866658,
      "SPVAP": 1689031866659,
      "EPVAP": 1689031868546,
      "SPVATF": 1689031868546,
      "EPVATF": 1689031868546,
      "SPVATR": 1689031870553,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689031870554
    },
    {
      "rank": 3,
      "SSLB": 1689031870554,
      "ESLB": 1689031890574,
      "SPVS": 1689031890574,
      "SPVAP": 1689031890575,
      "EPVAP": 1689031892431,
      "SPVATF": 1689031892431,
      "EPVATF": 1689031892431,
      "SPVATR": 1689031894438,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(true);\n",
      "EPVS": 1689031894439
    },
    {
      "rank": 4,
      "SSLB": 1689031894439,
      "ESLB": 1689031914455,
      "SPVS": 1689031914455,
      "SPVAP": 1689031914456,
      "EPVAP": 1689031916369,
      "SPVATF": 1689031916369,
      "EPVATF": 1689031916369,
      "SPVATR": 1689031918376,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(null);\n",
      "EPVS": 1689031918377
    },
    {
      "rank": 5,
      "SSLB": 1689031918377,
      "ESLB": 1689031938397,
      "SPVS": 1689031938397,
      "SPVAP": 1689031938398,
      "EPVAP": 1689031940329,
      "SPVATF": 1689031940330,
      "EPVATF": 1689031940330,
      "SPVATR": 1689031942336,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(field, fieldInstance).thenInject();\n",
      "EPVS": 1689031942337
    },
    {
      "rank": 6,
      "SSLB": 1689031942337,
      "ESLB": 1689031962357,
      "SPVS": 1689031962357,
      "SPVAP": 1689031962358,
      "EPVAP": 1689031964212,
      "SPVATF": 1689031964212,
      "EPVATF": 1689031964212,
      "SPVATR": 1689031966218,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689031966219
    },
    {
      "rank": 7,
      "SSLB": 1689031966219,
      "ESLB": 1689031986239,
      "SPVS": 1689031986239,
      "SPVAP": 1689031986240,
      "EPVAP": 1689031988088,
      "SPVATF": 1689031988088,
      "EPVATF": 1689031988088,
      "SPVATR": 1689031990095,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(false);\n",
      "EPVS": 1689031990096
    },
    {
      "rank": 8,
      "SSLB": 1689031990096,
      "ESLB": 1689032010116,
      "SPVS": 1689032010116,
      "SPVAP": 1689032010117,
      "EPVAP": 1689032011909,
      "SPVATF": 1689032011909,
      "EPVATF": 1689032011909,
      "SPVATR": 1689032013916,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1689032013916
    },
    {
      "rank": 9,
      "SSLB": 1689032013916,
      "ESLB": 1689032033936,
      "SPVS": 1689032033936,
      "SPVAP": 1689032033937,
      "EPVAP": 1689032035844,
      "SPVATF": 1689032035844,
      "EPVATF": 1689032035844,
      "SPVATR": 1689032037850,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        candidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n",
      "EPVS": 1689032037851
    }
  ],
  "SSLI": 1689009963082,
  "ESLI": 1689009993113,
  "hostname": "gros-57.nancy.grid5000.fr",
  "OAR_JOB_ID": "4228532"
}