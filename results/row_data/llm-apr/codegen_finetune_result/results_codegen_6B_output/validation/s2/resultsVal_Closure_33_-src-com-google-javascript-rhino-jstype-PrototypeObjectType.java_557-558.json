{
  "key": "Closure_33_/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java_557-558",
  "proj": "Closure",
  "bug_id": "33",
  "loc": "557-558",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689710639651,
      "ESLB": 1689710659671,
      "SPVS": 1689710659671,
      "SPVAP": 1689710659676,
      "EPVAP": 1689710659677,
      "SPVATF": 1689710659677,
      "EPVATF": 1689710664686,
      "SPVATR": 1689710664686,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689710664687
    },
    {
      "rank": 1,
      "SSLB": 1689710664687,
      "ESLB": 1689710684707,
      "SPVS": 1689710684708,
      "SPVAP": 1689710684710,
      "EPVAP": 1689710684711,
      "SPVATF": 1689710684711,
      "EPVATF": 1689710689720,
      "SPVATR": 1689710689720,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    super.matchConstraint(constraintObj);\n",
      "EPVS": 1689710689720
    },
    {
      "rank": 2,
      "SSLB": 1689710689720,
      "ESLB": 1689710709740,
      "SPVS": 1689710709740,
      "SPVAP": 1689710709742,
      "EPVAP": 1689710709743,
      "SPVATF": 1689710709743,
      "EPVATF": 1689710714766,
      "SPVATR": 1689710714766,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    Preconditions.checkState(constraintObj.isRecordType(), \"String_Node_Str\", constraintObj);\n",
      "EPVS": 1689710714768
    },
    {
      "rank": 3,
      "SSLB": 1689710714768,
      "ESLB": 1689710734788,
      "SPVS": 1689710734788,
      "SPVAP": 1689710734789,
      "EPVAP": 1689710734790,
      "SPVATF": 1689710734790,
      "EPVATF": 1689710737797,
      "SPVATR": 1689710737797,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n",
      "EPVS": 1689710737799
    },
    {
      "rank": 4,
      "SSLB": 1689710737799,
      "ESLB": 1689710757819,
      "SPVS": 1689710757819,
      "SPVAP": 1689710757820,
      "EPVAP": 1689710757821,
      "SPVATF": 1689710757821,
      "EPVATF": 1689710762830,
      "SPVATR": 1689710762830,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (constraintObj.isRecordType()) {\n    }\n",
      "EPVS": 1689710762832
    },
    {
      "rank": 5,
      "SSLB": 1689710762832,
      "ESLB": 1689710782852,
      "SPVS": 1689710782852,
      "SPVAP": 1689710782853,
      "EPVAP": 1689710782854,
      "SPVATF": 1689710782854,
      "EPVATF": 1689710785864,
      "SPVATR": 1689710785864,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    JSType typeToInfer = getNativeType(JSTypeNative.VOID_TYPE);\n",
      "EPVS": 1689710785866
    },
    {
      "rank": 6,
      "SSLB": 1689710785866,
      "ESLB": 1689710805886,
      "SPVS": 1689710805886,
      "SPVAP": 1689710805887,
      "EPVAP": 1689710805888,
      "SPVATF": 1689710805888,
      "EPVATF": 1689710807895,
      "SPVATR": 1689710807895,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            JSType typeToInfer = propType;\n",
      "EPVS": 1689710807896
    },
    {
      "rank": 7,
      "SSLB": 1689710807896,
      "ESLB": 1689710827911,
      "SPVS": 1689710827911,
      "SPVAP": 1689710827913,
      "EPVAP": 1689710827914,
      "SPVATF": 1689710827914,
      "EPVATF": 1689710832924,
      "SPVATR": 1689710832924,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (!constraintObj.isRecordType()) {\n        return;\n    }\n",
      "EPVS": 1689710832924
    },
    {
      "rank": 8,
      "SSLB": 1689710832924,
      "ESLB": 1689710852927,
      "SPVS": 1689710852927,
      "SPVAP": 1689710852928,
      "EPVAP": 1689710852929,
      "SPVATF": 1689710852929,
      "EPVATF": 1689710854939,
      "SPVATR": 1689710854939,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n",
      "EPVS": 1689710854940
    },
    {
      "rank": 9,
      "SSLB": 1689710854940,
      "ESLB": 1689710874960,
      "SPVS": 1689710874960,
      "SPVAP": 1689710874964,
      "EPVAP": 1689710874965,
      "SPVATF": 1689710874965,
      "EPVATF": 1689710879975,
      "SPVATR": 1689710879975,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (!constraintObj.isRecordType()) {\n        throw new Error(\"String_Node_Str\");\n    }\n",
      "EPVS": 1689710879978
    }
  ],
  "SSLI": 1689702672593,
  "ESLI": 1689702702624,
  "hostname": "gros-51.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}