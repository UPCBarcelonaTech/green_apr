{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_6B_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689718053347,
      "ESLB": 1689718073367,
      "SPVS": 1689718073367,
      "SPVAP": 1689718073369,
      "EPVAP": 1689718073370,
      "SPVATF": 1689718073370,
      "EPVATF": 1689718076376,
      "SPVATR": 1689718076376,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n",
      "EPVS": 1689718076377
    },
    {
      "rank": 1,
      "SSLB": 1689718076377,
      "ESLB": 1689718096397,
      "SPVS": 1689718096397,
      "SPVAP": 1689718096399,
      "EPVAP": 1689718096400,
      "SPVATF": 1689718096400,
      "EPVATF": 1689718105416,
      "SPVATR": 1689718105416,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689718105417
    },
    {
      "rank": 2,
      "SSLB": 1689718105417,
      "ESLB": 1689718125435,
      "SPVS": 1689718125435,
      "SPVAP": 1689718125438,
      "EPVAP": 1689718125439,
      "SPVATF": 1689718125439,
      "EPVATF": 1689718128451,
      "SPVATR": 1689718128451,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().toLowerCase();\n",
      "EPVS": 1689718128452
    },
    {
      "rank": 3,
      "SSLB": 1689718128452,
      "ESLB": 1689718148472,
      "SPVS": 1689718148472,
      "SPVAP": 1689718148475,
      "EPVAP": 1689718148476,
      "SPVATF": 1689718148476,
      "EPVATF": 1689718151483,
      "SPVATR": 1689718151483,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null? \"null\" :",
      "EPVS": 1689718151484
    },
    {
      "rank": 4,
      "SSLB": 1689718151484,
      "ESLB": 1689718171504,
      "SPVS": 1689718171504,
      "SPVAP": 1689718171508,
      "EPVAP": 1689718171509,
      "SPVATF": 1689718171509,
      "EPVATF": 1689718174516,
      "SPVATR": 1689718174516,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name, (type == null? \"null",
      "EPVS": 1689718174517
    },
    {
      "rank": 5,
      "SSLB": 1689718174517,
      "ESLB": 1689718194537,
      "SPVS": 1689718194537,
      "SPVAP": 1689718194538,
      "EPVAP": 1689718194539,
      "SPVATF": 1689718194539,
      "EPVATF": 1689718196560,
      "SPVATR": 1689718196560,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name,\n                (type == null? \"null",
      "EPVS": 1689718196561
    },
    {
      "rank": 6,
      "SSLB": 1689718196561,
      "ESLB": 1689718216581,
      "SPVS": 1689718216581,
      "SPVAP": 1689718216587,
      "EPVAP": 1689718216588,
      "SPVATF": 1689718216588,
      "EPVATF": 1689718218595,
      "SPVATR": 1689718218595,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null? \"null\"",
      "EPVS": 1689718218596
    },
    {
      "rank": 7,
      "SSLB": 1689718218596,
      "ESLB": 1689718238616,
      "SPVS": 1689718238616,
      "SPVAP": 1689718238619,
      "EPVAP": 1689718238620,
      "SPVATF": 1689718238620,
      "EPVATF": 1689718240627,
      "SPVATR": 1689718240627,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), child, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null? \"null\"",
      "EPVS": 1689718240628
    },
    {
      "rank": 8,
      "SSLB": 1689718240628,
      "ESLB": 1689718260648,
      "SPVS": 1689718260648,
      "SPVAP": 1689718260652,
      "EPVAP": 1689718260653,
      "SPVATF": 1689718260653,
      "EPVATF": 1689718262670,
      "SPVATR": 1689718262670,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(scope, n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                Warnings.INVALIDATION, name,\n                (type == null?",
      "EPVS": 1689718262671
    },
    {
      "rank": 9,
      "SSLB": 1689718262671,
      "ESLB": 1689718282691,
      "SPVS": 1689718282691,
      "SPVAP": 1689718282692,
      "EPVAP": 1689718282693,
      "SPVATF": 1689718282693,
      "EPVATF": 1689718284699,
      "SPVATR": 1689718284699,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().toLowerCase();\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), Warnings.INVALIDATION, name, (type == null",
      "EPVS": 1689718284700
    }
  ],
  "SSLI": 1689702672593,
  "ESLI": 1689702702624,
  "hostname": "gros-51.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}