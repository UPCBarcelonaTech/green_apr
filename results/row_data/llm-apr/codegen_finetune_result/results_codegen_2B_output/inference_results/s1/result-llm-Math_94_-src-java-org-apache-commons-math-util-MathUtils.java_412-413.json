{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1689797971030",
  "GPR[ESLB]": "1689797991050",
  "file": "Math_94_/src/java/org/apache/commons/math/util/MathUtils.java_412-413",
  "input": {
    "loc": "412-413",
    "input": "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1) ? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t != 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n"
  },
  "nvidea": "measures-nvidea-Math_94_-src-java-org-apache-commons-math-util-MathUtils.java_412-413.txt",
  "OAR_JOB_ID": "1560165",
  "GPR[SSLI]": "1689795274792",
  "GPR[ESLI]": "1689795304822",
  "GPR[SPS]": "1689797991096",
  "nrTokens": 302,
  "status": "ok",
  "GPR[EPS]": "1689797994362",
  "time": 3266,
  "tokentime": 3,
  "inferencetime": 3263,
  "output": [
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if (u == 0 || v == 0) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if (u == 0) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if ((u == 0) || (v == 0)) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if (u < 0 || v < 0) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if (v == 0) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if (u <= 0 || v <= 0) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if (u == v) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if ((u < 0) || (v < 0)) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if (u == 0 && v == 0) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public static int gcd(int u, int v) {\n// buggy lines start:\n    if (u * v == 0) {\n// buggy lines end:\n        return (Math.abs(u) + Math.abs(v));\n    }\n    if (u > 0) {\n        u = -u;\n    } \n    if (v > 0) {\n        v = -v;\n    } \n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { \n        u /= 2;\n        v /= 2;\n        k++; \n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    int t = ((u & 1) == 1)? v : -(u / 2);\n    do {\n        while ((t & 1) == 0) { \n            t /= 2; \n        }\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n        t = (v - u) / 2;\n    } while (t!= 0);\n    return -u * (1 << k); \n}\n// fixed lines: \n    if (u == 0) {\n        return v;\n    } else if (v == 0) {\n<|endoftext|>"
  ]
}