{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1687990040996",
  "GPR[ESLB]": "1687990061016",
  "file": "Math_2_/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java_268-269",
  "input": {
    "loc": "268-269",
    "input": "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n"
  },
  "nvidea": "measures-nvidea-Math_2_-src-main-java-org-apache-commons-math3-distribution-HypergeometricDistribution.java_268-269.txt",
  "OAR_JOB_ID": "1548579",
  "GPR[SSLI]": "1687987971813",
  "GPR[ESLI]": "1687988001843",
  "GPR[SPS]": "1687990061060",
  "nrTokens": 57,
  "status": "ok",
  "GPR[EPS]": "1687990063229",
  "time": 2169,
  "tokentime": 2,
  "inferencetime": 2167,
  "output": [
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getSampleSize();\n<|endoftext|><|endoftext|>",
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return (double) (getSampleSize() * getSuccesses()) / (double) getPopulationSize();\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return (double) (getSampleSize() * getNumberOfSuccesses()) / getPopulationSize();\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getMaxPopulationSize();\n<|endoftext|>",
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return (double) (getSampleSize() * getNumberOfSuccesses()) / getSampleSize();\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return (double) getSampleSize() / (double) getPopulationSize();\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getTotalSampleSize();\n<|endoftext|>",
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return (double) (getSampleSize() - getSuccesses().size()) / (double) getPopulationSize();\n<|endoftext|><|endoftext|>",
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return getSampleSize() * getNumberOfSuccesses() / getPopulationSize();\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "public double getNumericalMean() {\n// buggy lines start:\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n// buggy lines end:\n}\n// fixed lines: \n    return Math.sqrt(getSampleSize() * getNumberOfSuccesses());\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>"
  ]
}