{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1687990918547",
  "GPR[ESLB]": "1687990938567",
  "file": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "input": {
    "loc": "93-94",
    "input": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n"
  },
  "nvidea": "measures-nvidea-Mockito_28_-src-org-mockito-internal-configuration-DefaultInjectionEngine.java_93-94.txt",
  "OAR_JOB_ID": "1548579",
  "GPR[SSLI]": "1687987971813",
  "GPR[ESLI]": "1687988001843",
  "GPR[SPS]": "1687990938611",
  "nrTokens": 98,
  "status": "ok",
  "GPR[EPS]": "1687990942861",
  "time": 4250,
  "tokentime": 3,
  "inferencetime": 4247,
  "output": [
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n        mockCandidateFilter.filterCandidate(field, fieldInstance).thenInject();\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n        if (mockCandidateFilter!= null) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n        mockCandidateFilter.filterCandidate(mocks, field);\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(true);\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n        if (mockCandidateFilter!= null) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n        }\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n        if (!mockCandidateFilter.filterCandidate(mocks, field, fieldInstance)) {\n            continue;\n        }\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n<|endoftext|>",
    "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n// buggy lines start:\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n// buggy lines end:\n    }\n}\n// fixed lines: \n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>"
  ]
}