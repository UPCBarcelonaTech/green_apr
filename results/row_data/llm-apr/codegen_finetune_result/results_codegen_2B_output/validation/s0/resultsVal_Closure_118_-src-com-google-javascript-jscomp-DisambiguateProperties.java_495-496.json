{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_2B_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688069688268,
      "ESLB": 1688069708288,
      "SPVS": 1688069708288,
      "SPVAP": 1688069708290,
      "EPVAP": 1688069708291,
      "SPVATF": 1688069708291,
      "EPVATF": 1688069711300,
      "SPVATR": 1688069711300,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\", name, (type == null? \"null\" : type",
      "EPVS": 1688069711301
    },
    {
      "rank": 1,
      "SSLB": 1688069711301,
      "ESLB": 1688069731321,
      "SPVS": 1688069731321,
      "SPVAP": 1688069731323,
      "EPVAP": 1688069731324,
      "SPVATF": 1688069731324,
      "EPVATF": 1688069733331,
      "SPVATR": 1688069733331,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n",
      "EPVS": 1688069733332
    },
    {
      "rank": 2,
      "SSLB": 1688069733332,
      "ESLB": 1688069753352,
      "SPVS": 1688069753352,
      "SPVAP": 1688069753353,
      "EPVAP": 1688069753355,
      "SPVATF": 1688069753355,
      "EPVATF": 1688069756365,
      "SPVATR": 1688069756365,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                    Warnings.IN",
      "EPVS": 1688069756366
    },
    {
      "rank": 3,
      "SSLB": 1688069756366,
      "ESLB": 1688069776386,
      "SPVS": 1688069776386,
      "SPVAP": 1688069776388,
      "EPVAP": 1688069776389,
      "SPVATF": 1688069776389,
      "EPVATF": 1688069779397,
      "SPVATR": 1688069779397,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                    Warnings.IN",
      "EPVS": 1688069779399
    },
    {
      "rank": 4,
      "SSLB": 1688069779399,
      "ESLB": 1688069799419,
      "SPVS": 1688069799419,
      "SPVAP": 1688069799423,
      "EPVAP": 1688069799424,
      "SPVATF": 1688069799424,
      "EPVATF": 1688069802432,
      "SPVATR": 1688069802432,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    T type = typeSystem.getType(getScope(), n, child.getString());\n",
      "EPVS": 1688069802433
    },
    {
      "rank": 5,
      "SSLB": 1688069802433,
      "ESLB": 1688069822453,
      "SPVS": 1688069822453,
      "SPVAP": 1688069822455,
      "EPVAP": 1688069822456,
      "SPVATF": 1688069822456,
      "EPVATF": 1688069824479,
      "SPVATR": 1688069824479,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\",",
      "EPVS": 1688069824480
    },
    {
      "rank": 6,
      "SSLB": 1688069824480,
      "ESLB": 1688069844500,
      "SPVS": 1688069844500,
      "SPVAP": 1688069844505,
      "EPVAP": 1688069844507,
      "SPVATF": 1688069844507,
      "EPVATF": 1688069846514,
      "SPVATR": 1688069846514,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\",",
      "EPVS": 1688069846516
    },
    {
      "rank": 7,
      "SSLB": 1688069846516,
      "ESLB": 1688069866536,
      "SPVS": 1688069866536,
      "SPVAP": 1688069866537,
      "EPVAP": 1688069866538,
      "SPVATF": 1688069866538,
      "EPVATF": 1688069869547,
      "SPVATR": 1688069869547,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\", name,",
      "EPVS": 1688069869549
    },
    {
      "rank": 8,
      "SSLB": 1688069869549,
      "ESLB": 1688069889569,
      "SPVS": 1688069889569,
      "SPVAP": 1688069889570,
      "EPVAP": 1688069889572,
      "SPVATF": 1688069889572,
      "EPVATF": 1688069891589,
      "SPVATR": 1688069891589,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isGetProp()) {\n        String name = child.getLastChild().getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                    ",
      "EPVS": 1688069891589
    },
    {
      "rank": 9,
      "SSLB": 1688069891589,
      "ESLB": 1688069911609,
      "SPVS": 1688069911610,
      "SPVAP": 1688069911611,
      "EPVAP": 1688069911612,
      "SPVATF": 1688069911612,
      "EPVATF": 1688069913619,
      "SPVATR": 1688069913619,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), child, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\", name, (type == null? \"null\" : type",
      "EPVS": 1688069913621
    }
  ],
  "SSLI": 1688059948858,
  "ESLI": 1688059978889,
  "hostname": "gros-73.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212240"
}