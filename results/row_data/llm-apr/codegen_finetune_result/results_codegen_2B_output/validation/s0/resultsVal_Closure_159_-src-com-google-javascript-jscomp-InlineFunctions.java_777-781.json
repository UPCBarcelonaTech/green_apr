{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codegen_2B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688074154360,
      "ESLB": 1688074174381,
      "SPVS": 1688074174381,
      "SPVAP": 1688074174382,
      "EPVAP": 1688074174383,
      "SPVATF": 1688074174383,
      "EPVATF": 1688074174383,
      "SPVATR": 1688074176391,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild().getType() == Token.NAME) {\n        changed.add(node.getFirstChild().getString());\n",
      "EPVS": 1688074176392
    },
    {
      "rank": 1,
      "SSLB": 1688074176392,
      "ESLB": 1688074196412,
      "SPVS": 1688074196412,
      "SPVAP": 1688074196414,
      "EPVAP": 1688074196414,
      "SPVATF": 1688074196414,
      "EPVATF": 1688074196414,
      "SPVATR": 1688074198422,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688074198423
    },
    {
      "rank": 2,
      "SSLB": 1688074198423,
      "ESLB": 1688074218443,
      "SPVS": 1688074218443,
      "SPVAP": 1688074218445,
      "EPVAP": 1688074218446,
      "SPVATF": 1688074218446,
      "EPVATF": 1688074218446,
      "SPVATR": 1688074220455,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild()!= null) {\n        Node child = node.getLastChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688074220456
    },
    {
      "rank": 3,
      "SSLB": 1688074220456,
      "ESLB": 1688074240476,
      "SPVS": 1688074240476,
      "SPVAP": 1688074240478,
      "EPVAP": 1688074240479,
      "SPVATF": 1688074240479,
      "EPVATF": 1688074240479,
      "SPVATR": 1688074242487,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getFirstChild();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688074242488
    },
    {
      "rank": 4,
      "SSLB": 1688074242488,
      "ESLB": 1688074262508,
      "SPVS": 1688074262508,
      "SPVAP": 1688074262510,
      "EPVAP": 1688074262511,
      "SPVATF": 1688074262511,
      "EPVATF": 1688074262511,
      "SPVATR": 1688074264518,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getTarget();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688074264519
    },
    {
      "rank": 5,
      "SSLB": 1688074264519,
      "ESLB": 1688074284539,
      "SPVS": 1688074284539,
      "SPVAP": 1688074284540,
      "EPVAP": 1688074284542,
      "SPVATF": 1688074284542,
      "EPVATF": 1688074284542,
      "SPVATR": 1688074286552,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild().getType() == Token.NAME) {\n        changed.add(node.getLastChild().getString());\n",
      "EPVS": 1688074286553
    },
    {
      "rank": 6,
      "SSLB": 1688074286553,
      "ESLB": 1688074306573,
      "SPVS": 1688074306573,
      "SPVAP": 1688074306575,
      "EPVAP": 1688074306576,
      "SPVATF": 1688074306576,
      "EPVATF": 1688074306576,
      "SPVATR": 1688074308584,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n",
      "EPVS": 1688074308585
    },
    {
      "rank": 7,
      "SSLB": 1688074308585,
      "ESLB": 1688074328605,
      "SPVS": 1688074328605,
      "SPVAP": 1688074328607,
      "EPVAP": 1688074328608,
      "SPVATF": 1688074328608,
      "EPVATF": 1688074328608,
      "SPVATR": 1688074330616,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688074330622
    },
    {
      "rank": 8,
      "SSLB": 1688074330622,
      "ESLB": 1688074350642,
      "SPVS": 1688074350642,
      "SPVAP": 1688074350643,
      "EPVAP": 1688074350645,
      "SPVATF": 1688074350645,
      "EPVATF": 1688074350645,
      "SPVATR": 1688074352654,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1688074352655
    },
    {
      "rank": 9,
      "SSLB": 1688074352655,
      "ESLB": 1688074372675,
      "SPVS": 1688074372675,
      "SPVAP": 1688074372678,
      "EPVAP": 1688074372678,
      "SPVATF": 1688074372678,
      "EPVATF": 1688074372679,
      "SPVATR": 1688074374686,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.SUB) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688074374689
    }
  ],
  "SSLI": 1688059948858,
  "ESLI": 1688059978889,
  "hostname": "gros-73.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212240"
}