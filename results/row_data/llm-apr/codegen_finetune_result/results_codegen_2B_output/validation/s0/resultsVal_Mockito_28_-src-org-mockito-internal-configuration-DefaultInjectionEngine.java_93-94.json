{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688088798810,
      "ESLB": 1688088818830,
      "SPVS": 1688088818830,
      "SPVAP": 1688088818831,
      "EPVAP": 1688088820953,
      "SPVATF": 1688088820953,
      "EPVATF": 1688088820953,
      "SPVATR": 1688088822960,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1688088822961
    },
    {
      "rank": 1,
      "SSLB": 1688088822961,
      "ESLB": 1688088842962,
      "SPVS": 1688088842962,
      "SPVAP": 1688088842964,
      "EPVAP": 1688088844835,
      "SPVATF": 1688088844835,
      "EPVATF": 1688088844835,
      "SPVATR": 1688088846842,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1688088846843
    },
    {
      "rank": 2,
      "SSLB": 1688088846843,
      "ESLB": 1688088866862,
      "SPVS": 1688088866862,
      "SPVAP": 1688088866863,
      "EPVAP": 1688088868756,
      "SPVATF": 1688088868756,
      "EPVATF": 1688088868756,
      "SPVATR": 1688088870763,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(field, fieldInstance).thenInject();\n",
      "EPVS": 1688088870763
    },
    {
      "rank": 3,
      "SSLB": 1688088870763,
      "ESLB": 1688088890772,
      "SPVS": 1688088890772,
      "SPVAP": 1688088890772,
      "EPVAP": 1688088896947,
      "SPVATF": 1688088896947,
      "EPVATF": 1688088896947,
      "SPVATR": 1688088905961,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        if (mockCandidateFilter!= null) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n",
      "EPVS": 1688088905962
    },
    {
      "rank": 4,
      "SSLB": 1688088905962,
      "ESLB": 1688088925982,
      "SPVS": 1688088925982,
      "SPVAP": 1688088925983,
      "EPVAP": 1688088928098,
      "SPVATF": 1688088928098,
      "EPVATF": 1688088928098,
      "SPVATR": 1688088930105,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1688088930106
    },
    {
      "rank": 5,
      "SSLB": 1688088930106,
      "ESLB": 1688088950126,
      "SPVS": 1688088950126,
      "SPVAP": 1688088950127,
      "EPVAP": 1688088951878,
      "SPVATF": 1688088951878,
      "EPVATF": 1688088951878,
      "SPVATR": 1688088953885,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field);\n",
      "EPVS": 1688088953886
    },
    {
      "rank": 6,
      "SSLB": 1688088953886,
      "ESLB": 1688088973906,
      "SPVS": 1688088973906,
      "SPVAP": 1688088973907,
      "EPVAP": 1688088975787,
      "SPVATF": 1688088975787,
      "EPVATF": 1688088975787,
      "SPVATR": 1688088977793,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(true);\n",
      "EPVS": 1688088977794
    },
    {
      "rank": 7,
      "SSLB": 1688088977794,
      "ESLB": 1688088997814,
      "SPVS": 1688088997814,
      "SPVAP": 1688088997815,
      "EPVAP": 1688089003825,
      "SPVATF": 1688089003825,
      "EPVATF": 1688089003825,
      "SPVATR": 1688089012838,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1688089012838
    },
    {
      "rank": 8,
      "SSLB": 1688089012838,
      "ESLB": 1688089032859,
      "SPVS": 1688089032859,
      "SPVAP": 1688089032859,
      "EPVAP": 1688089034977,
      "SPVATF": 1688089034977,
      "EPVATF": 1688089034977,
      "SPVATR": 1688089036985,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mockedTypes, field, fieldInstance).thenInject();\n",
      "EPVS": 1688089036986
    },
    {
      "rank": 9,
      "SSLB": 1688089036986,
      "ESLB": 1688089057005,
      "SPVS": 1688089057005,
      "SPVAP": 1688089057006,
      "EPVAP": 1688089058890,
      "SPVATF": 1688089058890,
      "EPVATF": 1688089058890,
      "SPVATR": 1688089060897,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field.getType(), field, fieldInstance).thenInject();\n",
      "EPVS": 1688089060898
    }
  ],
  "SSLI": 1688059948858,
  "ESLI": 1688059978889,
  "hostname": "gros-73.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212240"
}