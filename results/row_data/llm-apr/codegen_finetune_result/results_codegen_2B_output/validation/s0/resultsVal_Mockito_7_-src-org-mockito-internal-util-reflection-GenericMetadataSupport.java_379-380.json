{
  "key": "Mockito_7_/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java_379-380",
  "proj": "Mockito",
  "bug_id": "7",
  "loc": "379-380",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688086422221,
      "ESLB": 1688086442241,
      "SPVS": 1688086442241,
      "SPVAP": 1688086442242,
      "EPVAP": 1688086448327,
      "SPVATF": 1688086448327,
      "EPVATF": 1688086455339,
      "SPVATR": 1688086455339,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    registerTypeVariablesOn(actualTypeArgument);\n",
      "EPVS": 1688086455340
    },
    {
      "rank": 1,
      "SSLB": 1688086455340,
      "ESLB": 1688086475360,
      "SPVS": 1688086475360,
      "SPVAP": 1688086475361,
      "EPVAP": 1688086481446,
      "SPVATF": 1688086481446,
      "EPVATF": 1688086487457,
      "SPVATR": 1688086487457,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.getActualTypeArgumentCount() > 0) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688086487457
    },
    {
      "rank": 2,
      "SSLB": 1688086487457,
      "ESLB": 1688086507477,
      "SPVS": 1688086507477,
      "SPVAP": 1688086507478,
      "EPVAP": 1688086513408,
      "SPVATF": 1688086513408,
      "EPVATF": 1688086519418,
      "SPVATR": 1688086519418,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    registerTypeVariablesOn(actualTypeArgumentFor(typeVariable));\n",
      "EPVS": 1688086519418
    },
    {
      "rank": 3,
      "SSLB": 1688086519419,
      "ESLB": 1688086539439,
      "SPVS": 1688086539439,
      "SPVAP": 1688086539440,
      "EPVAP": 1688086545437,
      "SPVATF": 1688086545437,
      "EPVATF": 1688086551448,
      "SPVATR": 1688086551448,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (actualTypeArgument!= null) {\n        registerTypeVariablesOn(actualTypeArgument);\n    }\n",
      "EPVS": 1688086551449
    },
    {
      "rank": 4,
      "SSLB": 1688086551449,
      "ESLB": 1688086571469,
      "SPVS": 1688086571469,
      "SPVAP": 1688086571470,
      "EPVAP": 1688086602356,
      "SPVATF": 1688086602356,
      "EPVATF": 1688086634392,
      "SPVATR": 1688086634392,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (typeVariable!= null) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688086634393
    },
    {
      "rank": 5,
      "SSLB": 1688086634393,
      "ESLB": 1688086654413,
      "SPVS": 1688086654413,
      "SPVAP": 1688086654417,
      "EPVAP": 1688086660521,
      "SPVATF": 1688086660521,
      "EPVATF": 1688086666532,
      "SPVATR": 1688086666532,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (!typeVariable.getBounds().isEmpty()) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688086666533
    },
    {
      "rank": 6,
      "SSLB": 1688086666533,
      "ESLB": 1688086686553,
      "SPVS": 1688086686553,
      "SPVAP": 1688086686554,
      "EPVAP": 1688086692482,
      "SPVATF": 1688086692482,
      "EPVATF": 1688086698493,
      "SPVATR": 1688086698493,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    registerTypeVariablesOn(actualType);\n",
      "EPVS": 1688086698494
    },
    {
      "rank": 7,
      "SSLB": 1688086698494,
      "ESLB": 1688086718514,
      "SPVS": 1688086718514,
      "SPVAP": 1688086718515,
      "EPVAP": 1688086724544,
      "SPVATF": 1688086724544,
      "EPVATF": 1688086730555,
      "SPVATR": 1688086730555,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.getActualTypeArgument()!= null) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688086730556
    },
    {
      "rank": 8,
      "SSLB": 1688086730556,
      "ESLB": 1688086750576,
      "SPVS": 1688086750576,
      "SPVAP": 1688086750577,
      "EPVAP": 1688086756463,
      "SPVATF": 1688086756463,
      "EPVATF": 1688086763474,
      "SPVATR": 1688086763474,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.getActualTypeArgumentCount()!= 0) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688086763475
    },
    {
      "rank": 9,
      "SSLB": 1688086763475,
      "ESLB": 1688086783494,
      "SPVS": 1688086783494,
      "SPVAP": 1688086783496,
      "EPVAP": 1688086789647,
      "SPVATF": 1688086789647,
      "EPVATF": 1688086796659,
      "SPVATR": 1688086796659,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.hasActualTypeArgument()) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688086796660
    }
  ],
  "SSLI": 1688059948858,
  "ESLI": 1688059978889,
  "hostname": "gros-73.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212240"
}