{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codegen_2B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688812291838,
      "ESLB": 1688812311858,
      "SPVS": 1688812311858,
      "SPVAP": 1688812311860,
      "EPVAP": 1688812311861,
      "SPVATF": 1688812311861,
      "EPVATF": 1688812311861,
      "SPVATR": 1688812313868,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild().getType() == Token.NAME) {\n        changed.add(node.getFirstChild().getString());\n",
      "EPVS": 1688812313869
    },
    {
      "rank": 1,
      "SSLB": 1688812313869,
      "ESLB": 1688812333889,
      "SPVS": 1688812333889,
      "SPVAP": 1688812333891,
      "EPVAP": 1688812333892,
      "SPVATF": 1688812333892,
      "EPVATF": 1688812333892,
      "SPVATR": 1688812335899,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688812335901
    },
    {
      "rank": 2,
      "SSLB": 1688812335901,
      "ESLB": 1688812355921,
      "SPVS": 1688812355921,
      "SPVAP": 1688812355922,
      "EPVAP": 1688812355923,
      "SPVATF": 1688812355923,
      "EPVATF": 1688812355923,
      "SPVATR": 1688812357932,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild()!= null) {\n        Node child = node.getLastChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688812357933
    },
    {
      "rank": 3,
      "SSLB": 1688812357933,
      "ESLB": 1688812377953,
      "SPVS": 1688812377953,
      "SPVAP": 1688812377954,
      "EPVAP": 1688812377955,
      "SPVATF": 1688812377955,
      "EPVATF": 1688812377955,
      "SPVATR": 1688812379962,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getFirstChild();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688812379964
    },
    {
      "rank": 4,
      "SSLB": 1688812379964,
      "ESLB": 1688812399984,
      "SPVS": 1688812399984,
      "SPVAP": 1688812399985,
      "EPVAP": 1688812399987,
      "SPVATF": 1688812399987,
      "EPVATF": 1688812399987,
      "SPVATR": 1688812401994,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getTarget();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688812401996
    },
    {
      "rank": 5,
      "SSLB": 1688812401996,
      "ESLB": 1688812422016,
      "SPVS": 1688812422016,
      "SPVAP": 1688812422017,
      "EPVAP": 1688812422019,
      "SPVATF": 1688812422019,
      "EPVATF": 1688812422019,
      "SPVATR": 1688812424027,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild().getType() == Token.NAME) {\n        changed.add(node.getLastChild().getString());\n",
      "EPVS": 1688812424028
    },
    {
      "rank": 6,
      "SSLB": 1688812424028,
      "ESLB": 1688812444048,
      "SPVS": 1688812444048,
      "SPVAP": 1688812444050,
      "EPVAP": 1688812444052,
      "SPVATF": 1688812444052,
      "EPVATF": 1688812444052,
      "SPVATR": 1688812446060,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n",
      "EPVS": 1688812446061
    },
    {
      "rank": 7,
      "SSLB": 1688812446061,
      "ESLB": 1688812466081,
      "SPVS": 1688812466081,
      "SPVAP": 1688812466085,
      "EPVAP": 1688812466086,
      "SPVATF": 1688812466086,
      "EPVATF": 1688812466086,
      "SPVATR": 1688812468093,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688812468095
    },
    {
      "rank": 8,
      "SSLB": 1688812468095,
      "ESLB": 1688812488115,
      "SPVS": 1688812488115,
      "SPVAP": 1688812488116,
      "EPVAP": 1688812488118,
      "SPVATF": 1688812488118,
      "EPVATF": 1688812488118,
      "SPVATR": 1688812490139,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1688812490141
    },
    {
      "rank": 9,
      "SSLB": 1688812490141,
      "ESLB": 1688812510161,
      "SPVS": 1688812510161,
      "SPVAP": 1688812510162,
      "EPVAP": 1688812510163,
      "SPVATF": 1688812510163,
      "EPVATF": 1688812510163,
      "SPVATR": 1688812512171,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.SUB) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688812512172
    }
  ],
  "SSLI": 1688801389536,
  "ESLI": 1688801419566,
  "hostname": "gros-75.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}