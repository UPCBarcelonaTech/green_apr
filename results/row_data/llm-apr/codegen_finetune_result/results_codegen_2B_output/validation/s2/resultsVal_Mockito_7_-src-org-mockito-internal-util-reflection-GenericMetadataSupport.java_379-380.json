{
  "key": "Mockito_7_/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java_379-380",
  "proj": "Mockito",
  "bug_id": "7",
  "loc": "379-380",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688822384279,
      "ESLB": 1688822404299,
      "SPVS": 1688822404299,
      "SPVAP": 1688822404302,
      "EPVAP": 1688822422554,
      "SPVATF": 1688822422554,
      "EPVATF": 1688822422554,
      "SPVATR": 1688822424560,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    registerTypeVariablesOn(actualTypeArgument);\n",
      "EPVS": 1688822424562
    },
    {
      "rank": 1,
      "SSLB": 1688822424562,
      "ESLB": 1688822444582,
      "SPVS": 1688822444582,
      "SPVAP": 1688822444584,
      "EPVAP": 1688822451271,
      "SPVATF": 1688822451271,
      "EPVATF": 1688822451271,
      "SPVATR": 1688822453278,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (typeVariable.getActualTypeArgumentCount() > 0) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688822453279
    },
    {
      "rank": 2,
      "SSLB": 1688822453279,
      "ESLB": 1688822473299,
      "SPVS": 1688822473299,
      "SPVAP": 1688822473303,
      "EPVAP": 1688822479326,
      "SPVATF": 1688822479326,
      "EPVATF": 1688822479326,
      "SPVATR": 1688822481331,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    registerTypeVariablesOn(actualTypeArgumentFor(typeVariable));\n",
      "EPVS": 1688822481333
    },
    {
      "rank": 3,
      "SSLB": 1688822481333,
      "ESLB": 1688822501353,
      "SPVS": 1688822501353,
      "SPVAP": 1688822501354,
      "EPVAP": 1688822509871,
      "SPVATF": 1688822509871,
      "EPVATF": 1688822509871,
      "SPVATR": 1688822511890,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (actualTypeArgument!= null) {\n        registerTypeVariablesOn(actualTypeArgument);\n    }\n",
      "EPVS": 1688822511891
    },
    {
      "rank": 4,
      "SSLB": 1688822511891,
      "ESLB": 1688822531911,
      "SPVS": 1688822531911,
      "SPVAP": 1688822531913,
      "EPVAP": 1688822540761,
      "SPVATF": 1688822540761,
      "EPVATF": 1688822540761,
      "SPVATR": 1688822542767,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (typeVariable!= null) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688822542768
    },
    {
      "rank": 5,
      "SSLB": 1688822542768,
      "ESLB": 1688822562788,
      "SPVS": 1688822562788,
      "SPVAP": 1688822562790,
      "EPVAP": 1688822567949,
      "SPVATF": 1688822567949,
      "EPVATF": 1688822567949,
      "SPVATR": 1688822569955,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (!typeVariable.getBounds().isEmpty()) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688822569957
    },
    {
      "rank": 6,
      "SSLB": 1688822569957,
      "ESLB": 1688822589977,
      "SPVS": 1688822589977,
      "SPVAP": 1688822589978,
      "EPVAP": 1688822595129,
      "SPVATF": 1688822595129,
      "EPVATF": 1688822595129,
      "SPVATR": 1688822597135,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    registerTypeVariablesOn(actualType);\n",
      "EPVS": 1688822597137
    },
    {
      "rank": 7,
      "SSLB": 1688822597137,
      "ESLB": 1688822617157,
      "SPVS": 1688822617157,
      "SPVAP": 1688822617158,
      "EPVAP": 1688822622302,
      "SPVATF": 1688822622302,
      "EPVATF": 1688822622302,
      "SPVATR": 1688822624309,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (typeVariable.getActualTypeArgument()!= null) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688822624310
    },
    {
      "rank": 8,
      "SSLB": 1688822624310,
      "ESLB": 1688822644327,
      "SPVS": 1688822644327,
      "SPVAP": 1688822644329,
      "EPVAP": 1688822649459,
      "SPVATF": 1688822649459,
      "EPVATF": 1688822649459,
      "SPVATR": 1688822651466,
      "exectuteRegression": true,
      "correctness": "timeout",
      "patch": "    if (typeVariable.getActualTypeArgumentCount()!= 0) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688822651467
    },
    {
      "rank": 9,
      "SSLB": 1688822651467,
      "ESLB": 1688822671487,
      "SPVS": 1688822671487,
      "SPVAP": 1688822671488,
      "EPVAP": 1688822671533,
      "SPVATF": 1688822671533,
      "EPVATF": 1688822671533,
      "SPVATR": 1688822672538,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    if (typeVariable.hasActualTypeArgument()) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688822672539
    }
  ],
  "SSLI": 1688801389536,
  "ESLI": 1688801419566,
  "hostname": "gros-75.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}