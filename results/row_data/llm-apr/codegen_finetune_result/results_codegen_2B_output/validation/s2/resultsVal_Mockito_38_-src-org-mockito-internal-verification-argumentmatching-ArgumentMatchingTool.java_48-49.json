{
  "key": "Mockito_38_/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java_48-49",
  "proj": "Mockito",
  "bug_id": "38",
  "loc": "48-49",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689721087618,
      "ESLB": 1689721107639,
      "SPVS": 1689721107639,
      "SPVAP": 1689721107640,
      "EPVAP": 1689721112814,
      "SPVATF": 1689721112814,
      "EPVATF": 1689721112814,
      "SPVATR": 1689721120825,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(arg.toString());\n",
      "EPVS": 1689721120826
    },
    {
      "rank": 1,
      "SSLB": 1689721120826,
      "ESLB": 1689721140846,
      "SPVS": 1689721140846,
      "SPVAP": 1689721140847,
      "EPVAP": 1689721142804,
      "SPVATF": 1689721142804,
      "EPVATF": 1689721142804,
      "SPVATR": 1689721144810,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(StringDescription.toString(arg));\n",
      "EPVS": 1689721144811
    },
    {
      "rank": 2,
      "SSLB": 1689721144811,
      "ESLB": 1689721164831,
      "SPVS": 1689721164831,
      "SPVAP": 1689721164833,
      "EPVAP": 1689721166649,
      "SPVATF": 1689721166649,
      "EPVATF": 1689721166649,
      "SPVATR": 1689721168655,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(StringDescription.toString(arg));\n",
      "EPVS": 1689721168656
    },
    {
      "rank": 3,
      "SSLB": 1689721168656,
      "ESLB": 1689721188676,
      "SPVS": 1689721188676,
      "SPVAP": 1689721188677,
      "EPVAP": 1689721190570,
      "SPVATF": 1689721190570,
      "EPVATF": 1689721190570,
      "SPVATR": 1689721192576,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(false, m).equals(arg.toString());\n",
      "EPVS": 1689721192576
    },
    {
      "rank": 4,
      "SSLB": 1689721192576,
      "ESLB": 1689721212596,
      "SPVS": 1689721212596,
      "SPVAP": 1689721212597,
      "EPVAP": 1689721217737,
      "SPVATF": 1689721217737,
      "EPVATF": 1689721217737,
      "SPVATR": 1689721224747,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString().toLowerCase());\n",
      "EPVS": 1689721224747
    },
    {
      "rank": 5,
      "SSLB": 1689721224747,
      "ESLB": 1689721244768,
      "SPVS": 1689721244768,
      "SPVAP": 1689721244768,
      "EPVAP": 1689721246699,
      "SPVATF": 1689721246699,
      "EPVATF": 1689721246699,
      "SPVATR": 1689721248705,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(Description.toString(arg));\n",
      "EPVS": 1689721248705
    },
    {
      "rank": 6,
      "SSLB": 1689721248705,
      "ESLB": 1689721268709,
      "SPVS": 1689721268709,
      "SPVAP": 1689721268709,
      "EPVAP": 1689721270400,
      "SPVATF": 1689721270400,
      "EPVATF": 1689721270400,
      "SPVATR": 1689721272406,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    StringDescription desc = StringDescription.toString(m);\n    return desc.equals(arg.toString());\n",
      "EPVS": 1689721272406
    },
    {
      "rank": 7,
      "SSLB": 1689721272406,
      "ESLB": 1689721292426,
      "SPVS": 1689721292426,
      "SPVAP": 1689721292427,
      "EPVAP": 1689721294249,
      "SPVATF": 1689721294249,
      "EPVATF": 1689721294249,
      "SPVATR": 1689721296254,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.getString(m).equals(arg.toString());\n",
      "EPVS": 1689721296255
    },
    {
      "rank": 8,
      "SSLB": 1689721296255,
      "ESLB": 1689721316275,
      "SPVS": 1689721316275,
      "SPVAP": 1689721316275,
      "EPVAP": 1689721318027,
      "SPVATF": 1689721318027,
      "EPVATF": 1689721318027,
      "SPVATR": 1689721320033,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m.getIndex()).equals(arg.toString());\n",
      "EPVS": 1689721320034
    },
    {
      "rank": 9,
      "SSLB": 1689721320034,
      "ESLB": 1689721340054,
      "SPVS": 1689721340054,
      "SPVAP": 1689721340055,
      "EPVAP": 1689721341749,
      "SPVATF": 1689721341749,
      "EPVATF": 1689721341749,
      "SPVATR": 1689721343755,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.of(m).equals(arg.toString());\n",
      "EPVS": 1689721343755
    }
  ],
  "SSLI": 1689700566021,
  "ESLI": 1689700596051,
  "hostname": "gros-50.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}