{
  "key": "Mockito_28_/src/org/mockito/internal/configuration/DefaultInjectionEngine.java_93-94",
  "proj": "Mockito",
  "bug_id": "28",
  "loc": "93-94",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689911900736,
      "ESLB": 1689911920756,
      "SPVS": 1689911920756,
      "SPVAP": 1689911920757,
      "EPVAP": 1689911922657,
      "SPVATF": 1689911922657,
      "EPVATF": 1689911922657,
      "SPVATR": 1689911924663,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, true).thenInject();\n",
      "EPVS": 1689911924664
    },
    {
      "rank": 1,
      "SSLB": 1689911924664,
      "ESLB": 1689911944684,
      "SPVS": 1689911944684,
      "SPVAP": 1689911944686,
      "EPVAP": 1689911946461,
      "SPVATF": 1689911946461,
      "EPVATF": 1689911946461,
      "SPVATR": 1689911948468,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(field);\n",
      "EPVS": 1689911948469
    },
    {
      "rank": 2,
      "SSLB": 1689911948469,
      "ESLB": 1689911968489,
      "SPVS": 1689911968489,
      "SPVAP": 1689911968490,
      "EPVAP": 1689911970331,
      "SPVATF": 1689911970331,
      "EPVATF": 1689911970331,
      "SPVATR": 1689911972338,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(field, fieldInstance).thenInject();\n",
      "EPVS": 1689911972339
    },
    {
      "rank": 3,
      "SSLB": 1689911972339,
      "ESLB": 1689911992359,
      "SPVS": 1689911992359,
      "SPVAP": 1689911992360,
      "EPVAP": 1689911998718,
      "SPVATF": 1689911998718,
      "EPVATF": 1689911998718,
      "SPVATR": 1689912007731,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        if (mockCandidateFilter!= null) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n",
      "EPVS": 1689912007732
    },
    {
      "rank": 4,
      "SSLB": 1689912007732,
      "ESLB": 1689912027752,
      "SPVS": 1689912027752,
      "SPVAP": 1689912027753,
      "EPVAP": 1689912029732,
      "SPVATF": 1689912029732,
      "EPVATF": 1689912029732,
      "SPVATR": 1689912031740,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance, false).thenInject();\n",
      "EPVS": 1689912031741
    },
    {
      "rank": 5,
      "SSLB": 1689912031741,
      "ESLB": 1689912051759,
      "SPVS": 1689912051759,
      "SPVAP": 1689912051760,
      "EPVAP": 1689912053559,
      "SPVATF": 1689912053559,
      "EPVATF": 1689912053559,
      "SPVATR": 1689912055565,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field);\n",
      "EPVS": 1689912055566
    },
    {
      "rank": 6,
      "SSLB": 1689912055566,
      "ESLB": 1689912075586,
      "SPVS": 1689912075586,
      "SPVAP": 1689912075587,
      "EPVAP": 1689912077437,
      "SPVATF": 1689912077437,
      "EPVATF": 1689912077437,
      "SPVATR": 1689912079444,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject(true);\n",
      "EPVS": 1689912079444
    },
    {
      "rank": 7,
      "SSLB": 1689912079444,
      "ESLB": 1689912099464,
      "SPVS": 1689912099464,
      "SPVAP": 1689912099465,
      "EPVAP": 1689912105465,
      "SPVATF": 1689912105465,
      "EPVATF": 1689912105465,
      "SPVATR": 1689912114478,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n",
      "EPVS": 1689912114479
    },
    {
      "rank": 8,
      "SSLB": 1689912114479,
      "ESLB": 1689912134499,
      "SPVS": 1689912134499,
      "SPVAP": 1689912134500,
      "EPVAP": 1689912136457,
      "SPVATF": 1689912136457,
      "EPVATF": 1689912136457,
      "SPVATR": 1689912138464,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mockedTypes, field, fieldInstance).thenInject();\n",
      "EPVS": 1689912138464
    },
    {
      "rank": 9,
      "SSLB": 1689912138464,
      "ESLB": 1689912158484,
      "SPVS": 1689912158484,
      "SPVAP": 1689912158485,
      "EPVAP": 1689912160366,
      "SPVATF": 1689912160366,
      "EPVATF": 1689912160366,
      "SPVATR": 1689912162373,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        mockCandidateFilter.filterCandidate(mocks, field.getType(), field, fieldInstance).thenInject();\n",
      "EPVS": 1689912162374
    }
  ],
  "SSLI": 1689878159933,
  "ESLI": 1689878189963,
  "hostname": "gros-52.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}