{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codegen_2B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689897454424,
      "ESLB": 1689897474444,
      "SPVS": 1689897474444,
      "SPVAP": 1689897474445,
      "EPVAP": 1689897474446,
      "SPVATF": 1689897474446,
      "EPVATF": 1689897474446,
      "SPVATR": 1689897476452,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild().getType() == Token.NAME) {\n        changed.add(node.getFirstChild().getString());\n",
      "EPVS": 1689897476453
    },
    {
      "rank": 1,
      "SSLB": 1689897476453,
      "ESLB": 1689897496473,
      "SPVS": 1689897496473,
      "SPVAP": 1689897496474,
      "EPVAP": 1689897496475,
      "SPVATF": 1689897496475,
      "EPVATF": 1689897496475,
      "SPVATR": 1689897498482,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689897498483
    },
    {
      "rank": 2,
      "SSLB": 1689897498483,
      "ESLB": 1689897518503,
      "SPVS": 1689897518503,
      "SPVAP": 1689897518504,
      "EPVAP": 1689897518504,
      "SPVATF": 1689897518504,
      "EPVATF": 1689897518504,
      "SPVATR": 1689897520511,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild()!= null) {\n        Node child = node.getLastChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689897520512
    },
    {
      "rank": 3,
      "SSLB": 1689897520512,
      "ESLB": 1689897540532,
      "SPVS": 1689897540532,
      "SPVAP": 1689897540533,
      "EPVAP": 1689897540534,
      "SPVATF": 1689897540534,
      "EPVATF": 1689897540534,
      "SPVATR": 1689897542540,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getFirstChild();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689897542541
    },
    {
      "rank": 4,
      "SSLB": 1689897542541,
      "ESLB": 1689897562561,
      "SPVS": 1689897562561,
      "SPVAP": 1689897562562,
      "EPVAP": 1689897562563,
      "SPVATF": 1689897562563,
      "EPVATF": 1689897562563,
      "SPVATR": 1689897564570,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getTarget();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689897564571
    },
    {
      "rank": 5,
      "SSLB": 1689897564571,
      "ESLB": 1689897584591,
      "SPVS": 1689897584591,
      "SPVAP": 1689897584592,
      "EPVAP": 1689897584593,
      "SPVATF": 1689897584593,
      "EPVATF": 1689897584593,
      "SPVATR": 1689897586600,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild().getType() == Token.NAME) {\n        changed.add(node.getLastChild().getString());\n",
      "EPVS": 1689897586601
    },
    {
      "rank": 6,
      "SSLB": 1689897586601,
      "ESLB": 1689897606621,
      "SPVS": 1689897606621,
      "SPVAP": 1689897606622,
      "EPVAP": 1689897606623,
      "SPVATF": 1689897606623,
      "EPVATF": 1689897606623,
      "SPVATR": 1689897608629,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n",
      "EPVS": 1689897608630
    },
    {
      "rank": 7,
      "SSLB": 1689897608630,
      "ESLB": 1689897628646,
      "SPVS": 1689897628646,
      "SPVAP": 1689897628647,
      "EPVAP": 1689897628648,
      "SPVATF": 1689897628648,
      "EPVATF": 1689897628648,
      "SPVATR": 1689897630654,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689897630655
    },
    {
      "rank": 8,
      "SSLB": 1689897630655,
      "ESLB": 1689897650675,
      "SPVS": 1689897650675,
      "SPVAP": 1689897650676,
      "EPVAP": 1689897650677,
      "SPVATF": 1689897650677,
      "EPVATF": 1689897650677,
      "SPVATR": 1689897652685,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689897652687
    },
    {
      "rank": 9,
      "SSLB": 1689897652687,
      "ESLB": 1689897672707,
      "SPVS": 1689897672707,
      "SPVAP": 1689897672707,
      "EPVAP": 1689897672709,
      "SPVATF": 1689897672709,
      "EPVATF": 1689897672709,
      "SPVATR": 1689897674715,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.SUB) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689897674716
    }
  ],
  "SSLI": 1689878159933,
  "ESLI": 1689878189963,
  "hostname": "gros-52.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}