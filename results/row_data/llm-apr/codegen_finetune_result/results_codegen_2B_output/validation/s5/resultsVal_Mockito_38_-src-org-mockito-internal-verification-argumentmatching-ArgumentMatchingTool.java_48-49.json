{
  "key": "Mockito_38_/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java_48-49",
  "proj": "Mockito",
  "bug_id": "38",
  "loc": "48-49",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689912810930,
      "ESLB": 1689912830950,
      "SPVS": 1689912830950,
      "SPVAP": 1689912830952,
      "EPVAP": 1689912836360,
      "SPVATF": 1689912836360,
      "EPVATF": 1689912836360,
      "SPVATR": 1689912844372,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(arg.toString());\n",
      "EPVS": 1689912844373
    },
    {
      "rank": 1,
      "SSLB": 1689912844373,
      "ESLB": 1689912864393,
      "SPVS": 1689912864393,
      "SPVAP": 1689912864394,
      "EPVAP": 1689912866359,
      "SPVATF": 1689912866359,
      "EPVATF": 1689912866359,
      "SPVATR": 1689912868366,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(StringDescription.toString(arg));\n",
      "EPVS": 1689912868366
    },
    {
      "rank": 2,
      "SSLB": 1689912868366,
      "ESLB": 1689912888371,
      "SPVS": 1689912888371,
      "SPVAP": 1689912888372,
      "EPVAP": 1689912890146,
      "SPVATF": 1689912890146,
      "EPVATF": 1689912890146,
      "SPVATR": 1689912892152,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(StringDescription.toString(arg));\n",
      "EPVS": 1689912892153
    },
    {
      "rank": 3,
      "SSLB": 1689912892153,
      "ESLB": 1689912912173,
      "SPVS": 1689912912173,
      "SPVAP": 1689912912174,
      "EPVAP": 1689912913996,
      "SPVATF": 1689912913997,
      "EPVATF": 1689912913997,
      "SPVATR": 1689912916004,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(false, m).equals(arg.toString());\n",
      "EPVS": 1689912916004
    },
    {
      "rank": 4,
      "SSLB": 1689912916004,
      "ESLB": 1689912936025,
      "SPVS": 1689912936025,
      "SPVAP": 1689912936025,
      "EPVAP": 1689912941287,
      "SPVATF": 1689912941287,
      "EPVATF": 1689912941287,
      "SPVATR": 1689912949300,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString().toLowerCase());\n",
      "EPVS": 1689912949301
    },
    {
      "rank": 5,
      "SSLB": 1689912949301,
      "ESLB": 1689912969321,
      "SPVS": 1689912969321,
      "SPVAP": 1689912969322,
      "EPVAP": 1689912971205,
      "SPVATF": 1689912971205,
      "EPVATF": 1689912971205,
      "SPVATR": 1689912973212,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(Description.toString(arg));\n",
      "EPVS": 1689912973213
    },
    {
      "rank": 6,
      "SSLB": 1689912973213,
      "ESLB": 1689912993233,
      "SPVS": 1689912993233,
      "SPVAP": 1689912993234,
      "EPVAP": 1689912995092,
      "SPVATF": 1689912995092,
      "EPVATF": 1689912995092,
      "SPVATR": 1689912997099,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    StringDescription desc = StringDescription.toString(m);\n    return desc.equals(arg.toString());\n",
      "EPVS": 1689912997100
    },
    {
      "rank": 7,
      "SSLB": 1689912997100,
      "ESLB": 1689913017120,
      "SPVS": 1689913017120,
      "SPVAP": 1689913017120,
      "EPVAP": 1689913018973,
      "SPVATF": 1689913018973,
      "EPVATF": 1689913018973,
      "SPVATR": 1689913020981,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.getString(m).equals(arg.toString());\n",
      "EPVS": 1689913020981
    },
    {
      "rank": 8,
      "SSLB": 1689913020981,
      "ESLB": 1689913041001,
      "SPVS": 1689913041001,
      "SPVAP": 1689913041002,
      "EPVAP": 1689913042824,
      "SPVATF": 1689913042824,
      "EPVATF": 1689913042824,
      "SPVATR": 1689913044832,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m.getIndex()).equals(arg.toString());\n",
      "EPVS": 1689913044832
    },
    {
      "rank": 9,
      "SSLB": 1689913044832,
      "ESLB": 1689913064852,
      "SPVS": 1689913064852,
      "SPVAP": 1689913064853,
      "EPVAP": 1689913066626,
      "SPVATF": 1689913066626,
      "EPVATF": 1689913066626,
      "SPVATR": 1689913068634,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.of(m).equals(arg.toString());\n",
      "EPVS": 1689913068634
    }
  ],
  "SSLI": 1689878159933,
  "ESLI": 1689878189963,
  "hostname": "gros-52.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}