{
  "key": "Mockito_7_/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java_379-380",
  "proj": "Mockito",
  "bug_id": "7",
  "loc": "379-380",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688696702148,
      "ESLB": 1688696722168,
      "SPVS": 1688696722168,
      "SPVAP": 1688696722169,
      "EPVAP": 1688696728343,
      "SPVATF": 1688696728343,
      "EPVATF": 1688696734355,
      "SPVATR": 1688696734355,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    registerTypeVariablesOn(actualTypeArgument);\n",
      "EPVS": 1688696734356
    },
    {
      "rank": 1,
      "SSLB": 1688696734356,
      "ESLB": 1688696754376,
      "SPVS": 1688696754377,
      "SPVAP": 1688696754378,
      "EPVAP": 1688696760613,
      "SPVATF": 1688696760613,
      "EPVATF": 1688696767624,
      "SPVATR": 1688696767624,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.getActualTypeArgumentCount() > 0) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688696767625
    },
    {
      "rank": 2,
      "SSLB": 1688696767625,
      "ESLB": 1688696787645,
      "SPVS": 1688696787645,
      "SPVAP": 1688696787647,
      "EPVAP": 1688696793712,
      "SPVATF": 1688696793712,
      "EPVATF": 1688696800724,
      "SPVATR": 1688696800724,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    registerTypeVariablesOn(actualTypeArgumentFor(typeVariable));\n",
      "EPVS": 1688696800725
    },
    {
      "rank": 3,
      "SSLB": 1688696800725,
      "ESLB": 1688696820745,
      "SPVS": 1688696820745,
      "SPVAP": 1688696820746,
      "EPVAP": 1688696826797,
      "SPVATF": 1688696826797,
      "EPVATF": 1688696833809,
      "SPVATR": 1688696833809,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (actualTypeArgument!= null) {\n        registerTypeVariablesOn(actualTypeArgument);\n    }\n",
      "EPVS": 1688696833810
    },
    {
      "rank": 4,
      "SSLB": 1688696833810,
      "ESLB": 1688696853830,
      "SPVS": 1688696853830,
      "SPVAP": 1688696853831,
      "EPVAP": 1688696885075,
      "SPVATF": 1688696885075,
      "EPVATF": 1688696917112,
      "SPVATR": 1688696917112,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (typeVariable!= null) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688696917112
    },
    {
      "rank": 5,
      "SSLB": 1688696917112,
      "ESLB": 1688696937129,
      "SPVS": 1688696937129,
      "SPVAP": 1688696937134,
      "EPVAP": 1688696943259,
      "SPVATF": 1688696943259,
      "EPVATF": 1688696950271,
      "SPVATR": 1688696950271,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (!typeVariable.getBounds().isEmpty()) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688696950272
    },
    {
      "rank": 6,
      "SSLB": 1688696950272,
      "ESLB": 1688696970292,
      "SPVS": 1688696970292,
      "SPVAP": 1688696970297,
      "EPVAP": 1688696976374,
      "SPVATF": 1688696976374,
      "EPVATF": 1688696982385,
      "SPVATR": 1688696982385,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    registerTypeVariablesOn(actualType);\n",
      "EPVS": 1688696982386
    },
    {
      "rank": 7,
      "SSLB": 1688696982386,
      "ESLB": 1688697002406,
      "SPVS": 1688697002406,
      "SPVAP": 1688697002407,
      "EPVAP": 1688697008608,
      "SPVATF": 1688697008608,
      "EPVATF": 1688697015620,
      "SPVATR": 1688697015620,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.getActualTypeArgument()!= null) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688697015621
    },
    {
      "rank": 8,
      "SSLB": 1688697015621,
      "ESLB": 1688697035641,
      "SPVS": 1688697035641,
      "SPVAP": 1688697035642,
      "EPVAP": 1688697041737,
      "SPVATF": 1688697041737,
      "EPVATF": 1688697048749,
      "SPVATR": 1688697048749,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.getActualTypeArgumentCount()!= 0) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688697048750
    },
    {
      "rank": 9,
      "SSLB": 1688697048750,
      "ESLB": 1688697068770,
      "SPVS": 1688697068770,
      "SPVAP": 1688697068774,
      "EPVAP": 1688697074901,
      "SPVATF": 1688697074901,
      "EPVATF": 1688697081912,
      "SPVATR": 1688697081912,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.hasActualTypeArgument()) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1688697081913
    }
  ],
  "SSLI": 1688665421008,
  "ESLI": 1688665451038,
  "hostname": "gros-58.nancy.grid5000.fr",
  "OAR_JOB_ID": "4221111"
}