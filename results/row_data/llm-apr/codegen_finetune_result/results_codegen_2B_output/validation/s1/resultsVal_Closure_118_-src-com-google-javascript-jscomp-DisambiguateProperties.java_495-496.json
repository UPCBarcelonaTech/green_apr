{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_2B_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688679964658,
      "ESLB": 1688679984679,
      "SPVS": 1688679984679,
      "SPVAP": 1688679984683,
      "EPVAP": 1688679984684,
      "SPVATF": 1688679984684,
      "EPVATF": 1688679986691,
      "SPVATR": 1688679986691,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\", name, (type == null? \"null\" : type",
      "EPVS": 1688679986691
    },
    {
      "rank": 1,
      "SSLB": 1688679986691,
      "ESLB": 1688680006712,
      "SPVS": 1688680006712,
      "SPVAP": 1688680006713,
      "EPVAP": 1688680006715,
      "SPVATF": 1688680006715,
      "EPVATF": 1688680009724,
      "SPVATR": 1688680009724,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n",
      "EPVS": 1688680009725
    },
    {
      "rank": 2,
      "SSLB": 1688680009725,
      "ESLB": 1688680029745,
      "SPVS": 1688680029745,
      "SPVAP": 1688680029750,
      "EPVAP": 1688680029751,
      "SPVATF": 1688680029751,
      "EPVATF": 1688680032767,
      "SPVATR": 1688680032767,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                    Warnings.IN",
      "EPVS": 1688680032768
    },
    {
      "rank": 3,
      "SSLB": 1688680032768,
      "ESLB": 1688680052788,
      "SPVS": 1688680052788,
      "SPVAP": 1688680052790,
      "EPVAP": 1688680052791,
      "SPVATF": 1688680052791,
      "EPVATF": 1688680054798,
      "SPVATR": 1688680054798,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                    Warnings.IN",
      "EPVS": 1688680054800
    },
    {
      "rank": 4,
      "SSLB": 1688680054800,
      "ESLB": 1688680074820,
      "SPVS": 1688680074820,
      "SPVAP": 1688680074821,
      "EPVAP": 1688680074822,
      "SPVATF": 1688680074822,
      "EPVATF": 1688680077831,
      "SPVATR": 1688680077831,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    T type = typeSystem.getType(getScope(), n, child.getString());\n",
      "EPVS": 1688680077832
    },
    {
      "rank": 5,
      "SSLB": 1688680077832,
      "ESLB": 1688680097852,
      "SPVS": 1688680097852,
      "SPVAP": 1688680097853,
      "EPVAP": 1688680097855,
      "SPVATF": 1688680097855,
      "EPVATF": 1688680099864,
      "SPVATR": 1688680099864,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                               processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\",",
      "EPVS": 1688680099865
    },
    {
      "rank": 6,
      "SSLB": 1688680099865,
      "ESLB": 1688680119885,
      "SPVS": 1688680119885,
      "SPVAP": 1688680119886,
      "EPVAP": 1688680119888,
      "SPVATF": 1688680119888,
      "EPVATF": 1688680121895,
      "SPVATR": 1688680121895,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\",",
      "EPVS": 1688680121895
    },
    {
      "rank": 7,
      "SSLB": 1688680121895,
      "ESLB": 1688680141916,
      "SPVS": 1688680141916,
      "SPVAP": 1688680141917,
      "EPVAP": 1688680141918,
      "SPVATF": 1688680141918,
      "EPVATF": 1688680144926,
      "SPVATR": 1688680144926,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isName()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\", name,",
      "EPVS": 1688680144930
    },
    {
      "rank": 8,
      "SSLB": 1688680144930,
      "ESLB": 1688680164950,
      "SPVS": 1688680164950,
      "SPVAP": 1688680164952,
      "EPVAP": 1688680164953,
      "SPVATF": 1688680164953,
      "EPVATF": 1688680166962,
      "SPVATR": 1688680166962,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isGetProp()) {\n        String name = child.getLastChild().getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n            if (propertiesToErrorFor.containsKey(name)) {\n                compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),\n                    ",
      "EPVS": 1688680166963
    },
    {
      "rank": 9,
      "SSLB": 1688680166963,
      "ESLB": 1688680186983,
      "SPVS": 1688680186983,
      "SPVAP": 1688680186985,
      "EPVAP": 1688680186986,
      "SPVATF": 1688680186986,
      "EPVATF": 1688680188994,
      "SPVATR": 1688680188994,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString();\n    T type = typeSystem.getType(getScope(), child, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {\n        if (propertiesToErrorFor.containsKey(name)) {\n            compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str\", name, (type == null? \"null\" : type",
      "EPVS": 1688680188995
    }
  ],
  "SSLI": 1688665421008,
  "ESLI": 1688665451038,
  "hostname": "gros-58.nancy.grid5000.fr",
  "OAR_JOB_ID": "4221111"
}