{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codegen_2B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688684424475,
      "ESLB": 1688684444495,
      "SPVS": 1688684444495,
      "SPVAP": 1688684444496,
      "EPVAP": 1688684444498,
      "SPVATF": 1688684444498,
      "EPVATF": 1688684444498,
      "SPVATR": 1688684446505,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild().getType() == Token.NAME) {\n        changed.add(node.getFirstChild().getString());\n",
      "EPVS": 1688684446506
    },
    {
      "rank": 1,
      "SSLB": 1688684446506,
      "ESLB": 1688684466527,
      "SPVS": 1688684466527,
      "SPVAP": 1688684466528,
      "EPVAP": 1688684466530,
      "SPVATF": 1688684466530,
      "EPVATF": 1688684466530,
      "SPVATR": 1688684468538,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688684468539
    },
    {
      "rank": 2,
      "SSLB": 1688684468539,
      "ESLB": 1688684488559,
      "SPVS": 1688684488559,
      "SPVAP": 1688684488560,
      "EPVAP": 1688684488562,
      "SPVATF": 1688684488562,
      "EPVATF": 1688684488562,
      "SPVATR": 1688684490570,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild()!= null) {\n        Node child = node.getLastChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688684490572
    },
    {
      "rank": 3,
      "SSLB": 1688684490572,
      "ESLB": 1688684510592,
      "SPVS": 1688684510592,
      "SPVAP": 1688684510593,
      "EPVAP": 1688684510594,
      "SPVATF": 1688684510594,
      "EPVATF": 1688684510594,
      "SPVATR": 1688684512602,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getFirstChild();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688684512603
    },
    {
      "rank": 4,
      "SSLB": 1688684512603,
      "ESLB": 1688684532623,
      "SPVS": 1688684532623,
      "SPVAP": 1688684532625,
      "EPVAP": 1688684532626,
      "SPVATF": 1688684532626,
      "EPVATF": 1688684532626,
      "SPVATR": 1688684534633,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getTarget();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688684534635
    },
    {
      "rank": 5,
      "SSLB": 1688684534635,
      "ESLB": 1688684554655,
      "SPVS": 1688684554655,
      "SPVAP": 1688684554656,
      "EPVAP": 1688684554657,
      "SPVATF": 1688684554657,
      "EPVATF": 1688684554657,
      "SPVATR": 1688684556666,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild().getType() == Token.NAME) {\n        changed.add(node.getLastChild().getString());\n",
      "EPVS": 1688684556667
    },
    {
      "rank": 6,
      "SSLB": 1688684556667,
      "ESLB": 1688684576687,
      "SPVS": 1688684576687,
      "SPVAP": 1688684576688,
      "EPVAP": 1688684576689,
      "SPVATF": 1688684576689,
      "EPVATF": 1688684576689,
      "SPVATR": 1688684578697,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n",
      "EPVS": 1688684578698
    },
    {
      "rank": 7,
      "SSLB": 1688684578698,
      "ESLB": 1688684598718,
      "SPVS": 1688684598718,
      "SPVAP": 1688684598720,
      "EPVAP": 1688684598722,
      "SPVATF": 1688684598722,
      "EPVATF": 1688684598722,
      "SPVATR": 1688684600730,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688684600731
    },
    {
      "rank": 8,
      "SSLB": 1688684600731,
      "ESLB": 1688684620751,
      "SPVS": 1688684620751,
      "SPVAP": 1688684620752,
      "EPVAP": 1688684620753,
      "SPVATF": 1688684620753,
      "EPVATF": 1688684620753,
      "SPVATR": 1688684622762,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1688684622764
    },
    {
      "rank": 9,
      "SSLB": 1688684622764,
      "ESLB": 1688684642784,
      "SPVS": 1688684642784,
      "SPVAP": 1688684642788,
      "EPVAP": 1688684642789,
      "SPVATF": 1688684642789,
      "EPVATF": 1688684642789,
      "SPVATR": 1688684644797,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.SUB) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1688684644798
    }
  ],
  "SSLI": 1688665421008,
  "ESLI": 1688665451038,
  "hostname": "gros-58.nancy.grid5000.fr",
  "OAR_JOB_ID": "4221111"
}