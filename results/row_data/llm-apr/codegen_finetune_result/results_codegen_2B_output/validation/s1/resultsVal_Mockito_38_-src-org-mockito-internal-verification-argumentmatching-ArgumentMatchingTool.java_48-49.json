{
  "key": "Mockito_38_/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java_48-49",
  "proj": "Mockito",
  "bug_id": "38",
  "loc": "48-49",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688700013851,
      "ESLB": 1688700033871,
      "SPVS": 1688700033871,
      "SPVAP": 1688700033876,
      "EPVAP": 1688700039278,
      "SPVATF": 1688700039278,
      "EPVATF": 1688700039278,
      "SPVATR": 1688700047291,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(arg.toString());\n",
      "EPVS": 1688700047292
    },
    {
      "rank": 1,
      "SSLB": 1688700047292,
      "ESLB": 1688700067312,
      "SPVS": 1688700067312,
      "SPVAP": 1688700067323,
      "EPVAP": 1688700069254,
      "SPVATF": 1688700069254,
      "EPVATF": 1688700069254,
      "SPVATR": 1688700071261,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(StringDescription.toString(arg));\n",
      "EPVS": 1688700071261
    },
    {
      "rank": 2,
      "SSLB": 1688700071261,
      "ESLB": 1688700091281,
      "SPVS": 1688700091281,
      "SPVAP": 1688700091284,
      "EPVAP": 1688700093180,
      "SPVATF": 1688700093180,
      "EPVATF": 1688700093180,
      "SPVATR": 1688700095187,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(StringDescription.toString(arg));\n",
      "EPVS": 1688700095187
    },
    {
      "rank": 3,
      "SSLB": 1688700095187,
      "ESLB": 1688700115207,
      "SPVS": 1688700115207,
      "SPVAP": 1688700115208,
      "EPVAP": 1688700117166,
      "SPVATF": 1688700117166,
      "EPVATF": 1688700117166,
      "SPVATR": 1688700120174,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(false, m).equals(arg.toString());\n",
      "EPVS": 1688700120175
    },
    {
      "rank": 4,
      "SSLB": 1688700120175,
      "ESLB": 1688700140193,
      "SPVS": 1688700140193,
      "SPVAP": 1688700140194,
      "EPVAP": 1688700145311,
      "SPVATF": 1688700145311,
      "EPVATF": 1688700145311,
      "SPVATR": 1688700153325,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString().toLowerCase());\n",
      "EPVS": 1688700153325
    },
    {
      "rank": 5,
      "SSLB": 1688700153325,
      "ESLB": 1688700173345,
      "SPVS": 1688700173345,
      "SPVAP": 1688700173347,
      "EPVAP": 1688700175310,
      "SPVATF": 1688700175310,
      "EPVATF": 1688700175310,
      "SPVATR": 1688700177318,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(Description.toString(arg));\n",
      "EPVS": 1688700177319
    },
    {
      "rank": 6,
      "SSLB": 1688700177319,
      "ESLB": 1688700197339,
      "SPVS": 1688700197339,
      "SPVAP": 1688700197341,
      "EPVAP": 1688700199227,
      "SPVATF": 1688700199227,
      "EPVATF": 1688700199227,
      "SPVATR": 1688700201234,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    StringDescription desc = StringDescription.toString(m);\n    return desc.equals(arg.toString());\n",
      "EPVS": 1688700201234
    },
    {
      "rank": 7,
      "SSLB": 1688700201234,
      "ESLB": 1688700221253,
      "SPVS": 1688700221253,
      "SPVAP": 1688700221254,
      "EPVAP": 1688700223228,
      "SPVATF": 1688700223228,
      "EPVATF": 1688700223228,
      "SPVATR": 1688700225234,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.getString(m).equals(arg.toString());\n",
      "EPVS": 1688700225235
    },
    {
      "rank": 8,
      "SSLB": 1688700225235,
      "ESLB": 1688700245251,
      "SPVS": 1688700245251,
      "SPVAP": 1688700245254,
      "EPVAP": 1688700247229,
      "SPVATF": 1688700247229,
      "EPVATF": 1688700247229,
      "SPVATR": 1688700250237,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m.getIndex()).equals(arg.toString());\n",
      "EPVS": 1688700250238
    },
    {
      "rank": 9,
      "SSLB": 1688700250238,
      "ESLB": 1688700270258,
      "SPVS": 1688700270258,
      "SPVAP": 1688700270259,
      "EPVAP": 1688700272189,
      "SPVATF": 1688700272189,
      "EPVATF": 1688700272189,
      "SPVATR": 1688700274196,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.of(m).equals(arg.toString());\n",
      "EPVS": 1688700274197
    }
  ],
  "SSLI": 1688665421008,
  "ESLI": 1688665451038,
  "hostname": "gros-58.nancy.grid5000.fr",
  "OAR_JOB_ID": "4221111"
}