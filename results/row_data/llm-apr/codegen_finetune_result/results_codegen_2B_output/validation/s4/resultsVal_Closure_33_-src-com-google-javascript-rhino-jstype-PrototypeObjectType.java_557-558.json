{
  "key": "Closure_33_/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java_557-558",
  "proj": "Closure",
  "bug_id": "33",
  "loc": "557-558",
  "input_file": "codegen_2B_output.json",
  "path": "/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689811947596,
      "ESLB": 1689811967612,
      "SPVS": 1689811967612,
      "SPVAP": 1689811967613,
      "EPVAP": 1689811967614,
      "SPVATF": 1689811967614,
      "EPVATF": 1689811969620,
      "SPVATR": 1689811969620,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                   .getLeastSupertype(propType);\n                }\n                defineInferredProperty(prop, type",
      "EPVS": 1689811969621
    },
    {
      "rank": 1,
      "SSLB": 1689811969621,
      "ESLB": 1689811989641,
      "SPVS": 1689811989641,
      "SPVAP": 1689811989642,
      "EPVAP": 1689811989643,
      "SPVATF": 1689811989643,
      "EPVATF": 1689811992650,
      "SPVATR": 1689811992650,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (isRecordType(constraintObj)) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                   .getLeastSupertype(propType);\n                }\n                defineInferredProperty(prop, type",
      "EPVS": 1689811992651
    },
    {
      "rank": 2,
      "SSLB": 1689811992651,
      "ESLB": 1689812012655,
      "SPVS": 1689812012655,
      "SPVAP": 1689812012658,
      "EPVAP": 1689812012659,
      "SPVATF": 1689812012659,
      "EPVATF": 1689812017674,
      "SPVATR": 1689812017674,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    for (String prop : constraintObj.getOwnPropertyNames()) {\n        JSType propType = constraintObj.getPropertyType(prop);\n        if (!isPropertyTypeDeclared(prop)) {\n            JSType typeToInfer = propType;\n            if (!hasProperty(prop)) {\n                typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                   .getLeastSupertype(propType);\n            }\n            defineInferredProperty(prop, typeToInfer, null);\n        }\n    }\n",
      "EPVS": 1689812017675
    },
    {
      "rank": 3,
      "SSLB": 1689812017675,
      "ESLB": 1689812037695,
      "SPVS": 1689812037695,
      "SPVAP": 1689812037698,
      "EPVAP": 1689812037698,
      "SPVATF": 1689812037698,
      "EPVATF": 1689812040706,
      "SPVATR": 1689812040706,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj == null) {\n        return;\n    }\n    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                   .getLeast",
      "EPVS": 1689812040707
    },
    {
      "rank": 4,
      "SSLB": 1689812040707,
      "ESLB": 1689812060721,
      "SPVS": 1689812060721,
      "SPVAP": 1689812060722,
      "EPVAP": 1689812060722,
      "SPVATF": 1689812060722,
      "EPVATF": 1689812065732,
      "SPVATR": 1689812065732,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (constraintObj == null) {\n        return;\n    }\n",
      "EPVS": 1689812065733
    },
    {
      "rank": 5,
      "SSLB": 1689812065733,
      "ESLB": 1689812085753,
      "SPVS": 1689812085753,
      "SPVAP": 1689812085757,
      "EPVAP": 1689812085757,
      "SPVATF": 1689812085757,
      "EPVATF": 1689812087770,
      "SPVATR": 1689812087770,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                       .getLeastSupertype(propType);\n                }\n                defineInferredProperty(prop, type",
      "EPVS": 1689812087771
    },
    {
      "rank": 6,
      "SSLB": 1689812087771,
      "ESLB": 1689812107791,
      "SPVS": 1689812107791,
      "SPVAP": 1689812107794,
      "EPVAP": 1689812107795,
      "SPVATF": 1689812107795,
      "EPVATF": 1689812112804,
      "SPVATR": 1689812112804,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    JSType constraintObjType = (JSType) constraintObj;\n",
      "EPVS": 1689812112805
    },
    {
      "rank": 7,
      "SSLB": 1689812112805,
      "ESLB": 1689812132825,
      "SPVS": 1689812132825,
      "SPVAP": 1689812132829,
      "EPVAP": 1689812132830,
      "SPVATF": 1689812132830,
      "EPVATF": 1689812134836,
      "SPVATR": 1689812134836,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (!isRecordType(constraintObj)) {\n        return;\n    }\n    for (String prop : constraintObj.getOwnPropertyNames()) {\n        JSType propType = constraintObj.getPropertyType(prop);\n        if (!isPropertyTypeDeclared(prop)) {\n            JSType typeToInfer = propType;\n            if (!hasProperty(prop)) {\n                typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                   .getLeastSupertype(propType);\n            }\n            define",
      "EPVS": 1689812134837
    },
    {
      "rank": 8,
      "SSLB": 1689812134837,
      "ESLB": 1689812154857,
      "SPVS": 1689812154857,
      "SPVAP": 1689812154862,
      "EPVAP": 1689812154863,
      "SPVATF": 1689812154863,
      "EPVATF": 1689812157885,
      "SPVATR": 1689812157885,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    JSType constraintObjType = (JSType) constraintObj;\n    if (constraintObjType.isRecordType()) {\n        for (String prop : constraintObjType.getOwnPropertyNames()) {\n            JSType propType = constraintObjType.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                   .getLe",
      "EPVS": 1689812157886
    },
    {
      "rank": 9,
      "SSLB": 1689812157886,
      "ESLB": 1689812177906,
      "SPVS": 1689812177906,
      "SPVAP": 1689812177906,
      "EPVAP": 1689812177907,
      "SPVATF": 1689812177907,
      "EPVATF": 1689812180914,
      "SPVATR": 1689812180914,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (isRecordType(constraintObj)) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                       .getLeastSupertype(propType);\n                }\n                defineInferredProperty(prop, type",
      "EPVS": 1689812180915
    }
  ],
  "SSLI": 1689804228070,
  "ESLI": 1689804258100,
  "hostname": "gros-50.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}