{
  "key": "Mockito_38_/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java_48-49",
  "proj": "Mockito",
  "bug_id": "38",
  "loc": "48-49",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689876869535,
      "ESLB": 1689876889555,
      "SPVS": 1689876889555,
      "SPVAP": 1689876889558,
      "EPVAP": 1689876894690,
      "SPVATF": 1689876894690,
      "EPVATF": 1689876894690,
      "SPVATR": 1689876902703,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(arg.toString());\n",
      "EPVS": 1689876902705
    },
    {
      "rank": 1,
      "SSLB": 1689876902705,
      "ESLB": 1689876922719,
      "SPVS": 1689876922719,
      "SPVAP": 1689876922721,
      "EPVAP": 1689876925994,
      "SPVATF": 1689876925994,
      "EPVATF": 1689876925994,
      "SPVATR": 1689876928001,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(StringDescription.toString(arg));\n",
      "EPVS": 1689876928001
    },
    {
      "rank": 2,
      "SSLB": 1689876928001,
      "ESLB": 1689876948021,
      "SPVS": 1689876948021,
      "SPVAP": 1689876948024,
      "EPVAP": 1689876949865,
      "SPVATF": 1689876949865,
      "EPVATF": 1689876949865,
      "SPVATR": 1689876951871,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(StringDescription.toString(arg));\n",
      "EPVS": 1689876951872
    },
    {
      "rank": 3,
      "SSLB": 1689876951872,
      "ESLB": 1689876971892,
      "SPVS": 1689876971892,
      "SPVAP": 1689876971897,
      "EPVAP": 1689876973619,
      "SPVATF": 1689876973619,
      "EPVATF": 1689876973619,
      "SPVATR": 1689876975625,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(false, m).equals(arg.toString());\n",
      "EPVS": 1689876975626
    },
    {
      "rank": 4,
      "SSLB": 1689876975626,
      "ESLB": 1689876995646,
      "SPVS": 1689876995646,
      "SPVAP": 1689876995650,
      "EPVAP": 1689877000833,
      "SPVATF": 1689877000833,
      "EPVATF": 1689877000833,
      "SPVATR": 1689877008844,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString().toLowerCase());\n",
      "EPVS": 1689877008845
    },
    {
      "rank": 5,
      "SSLB": 1689877008845,
      "ESLB": 1689877028865,
      "SPVS": 1689877028865,
      "SPVAP": 1689877028866,
      "EPVAP": 1689877030654,
      "SPVATF": 1689877030654,
      "EPVATF": 1689877030654,
      "SPVATR": 1689877032661,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(Description.toString(arg));\n",
      "EPVS": 1689877032662
    },
    {
      "rank": 6,
      "SSLB": 1689877032662,
      "ESLB": 1689877052682,
      "SPVS": 1689877052682,
      "SPVAP": 1689877052682,
      "EPVAP": 1689877054422,
      "SPVATF": 1689877054422,
      "EPVATF": 1689877054422,
      "SPVATR": 1689877056428,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    StringDescription desc = StringDescription.toString(m);\n    return desc.equals(arg.toString());\n",
      "EPVS": 1689877056429
    },
    {
      "rank": 7,
      "SSLB": 1689877056429,
      "ESLB": 1689877076449,
      "SPVS": 1689877076449,
      "SPVAP": 1689877076452,
      "EPVAP": 1689877078176,
      "SPVATF": 1689877078176,
      "EPVATF": 1689877078176,
      "SPVATR": 1689877080183,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.getString(m).equals(arg.toString());\n",
      "EPVS": 1689877080184
    },
    {
      "rank": 8,
      "SSLB": 1689877080184,
      "ESLB": 1689877100198,
      "SPVS": 1689877100198,
      "SPVAP": 1689877100198,
      "EPVAP": 1689877101881,
      "SPVATF": 1689877101881,
      "EPVATF": 1689877101881,
      "SPVATR": 1689877103887,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m.getIndex()).equals(arg.toString());\n",
      "EPVS": 1689877103888
    },
    {
      "rank": 9,
      "SSLB": 1689877103888,
      "ESLB": 1689877123908,
      "SPVS": 1689877123908,
      "SPVAP": 1689877123911,
      "EPVAP": 1689877125585,
      "SPVATF": 1689877125585,
      "EPVATF": 1689877125585,
      "SPVATR": 1689877127591,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.of(m).equals(arg.toString());\n",
      "EPVS": 1689877127592
    }
  ],
  "SSLI": 1689873184390,
  "ESLI": 1689873214420,
  "hostname": "gros-52.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}