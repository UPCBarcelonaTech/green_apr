{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codegen_2B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689823563370,
      "ESLB": 1689823583390,
      "SPVS": 1689823583390,
      "SPVAP": 1689823583392,
      "EPVAP": 1689823583393,
      "SPVATF": 1689823583393,
      "EPVATF": 1689823585399,
      "SPVATR": 1689823585399,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild().getType() == Token.NAME) {\n        changed.add(node.getFirstChild().getString());\n",
      "EPVS": 1689823585400
    },
    {
      "rank": 1,
      "SSLB": 1689823585400,
      "ESLB": 1689823605406,
      "SPVS": 1689823605406,
      "SPVAP": 1689823605406,
      "EPVAP": 1689823605407,
      "SPVATF": 1689823605407,
      "EPVATF": 1689823607413,
      "SPVATR": 1689823607413,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689823607414
    },
    {
      "rank": 2,
      "SSLB": 1689823607414,
      "ESLB": 1689823627434,
      "SPVS": 1689823627434,
      "SPVAP": 1689823627437,
      "EPVAP": 1689823627438,
      "SPVATF": 1689823627438,
      "EPVATF": 1689823629451,
      "SPVATR": 1689823629451,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild()!= null) {\n        Node child = node.getLastChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689823629452
    },
    {
      "rank": 3,
      "SSLB": 1689823629452,
      "ESLB": 1689823649472,
      "SPVS": 1689823649472,
      "SPVAP": 1689823649477,
      "EPVAP": 1689823649478,
      "SPVATF": 1689823649478,
      "EPVATF": 1689823651485,
      "SPVATR": 1689823651485,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getFirstChild();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689823651486
    },
    {
      "rank": 4,
      "SSLB": 1689823651486,
      "ESLB": 1689823671506,
      "SPVS": 1689823671506,
      "SPVAP": 1689823671507,
      "EPVAP": 1689823671508,
      "SPVATF": 1689823671508,
      "EPVATF": 1689823673514,
      "SPVATR": 1689823673514,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getTarget();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689823673515
    },
    {
      "rank": 5,
      "SSLB": 1689823673515,
      "ESLB": 1689823693535,
      "SPVS": 1689823693535,
      "SPVAP": 1689823693537,
      "EPVAP": 1689823693537,
      "SPVATF": 1689823693537,
      "EPVATF": 1689823695559,
      "SPVATR": 1689823695559,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild().getType() == Token.NAME) {\n        changed.add(node.getLastChild().getString());\n",
      "EPVS": 1689823695560
    },
    {
      "rank": 6,
      "SSLB": 1689823695560,
      "ESLB": 1689823715580,
      "SPVS": 1689823715580,
      "SPVAP": 1689823715581,
      "EPVAP": 1689823715582,
      "SPVATF": 1689823715582,
      "EPVATF": 1689823717588,
      "SPVATR": 1689823717588,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n",
      "EPVS": 1689823717589
    },
    {
      "rank": 7,
      "SSLB": 1689823717589,
      "ESLB": 1689823737590,
      "SPVS": 1689823737590,
      "SPVAP": 1689823737591,
      "EPVAP": 1689823737592,
      "SPVATF": 1689823737592,
      "EPVATF": 1689823739598,
      "SPVATR": 1689823739598,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689823739599
    },
    {
      "rank": 8,
      "SSLB": 1689823739599,
      "ESLB": 1689823759612,
      "SPVS": 1689823759612,
      "SPVAP": 1689823759613,
      "EPVAP": 1689823759614,
      "SPVATF": 1689823759614,
      "EPVATF": 1689823761621,
      "SPVATR": 1689823761621,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689823761622
    },
    {
      "rank": 9,
      "SSLB": 1689823761622,
      "ESLB": 1689823781642,
      "SPVS": 1689823781642,
      "SPVAP": 1689823781643,
      "EPVAP": 1689823781644,
      "SPVATF": 1689823781644,
      "EPVATF": 1689823783651,
      "SPVATR": 1689823783651,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.SUB) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689823783652
    }
  ],
  "SSLI": 1689804228070,
  "ESLI": 1689804258100,
  "hostname": "gros-50.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}