{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "codegen_2B_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689741660489,
      "ESLB": 1689741680509,
      "SPVS": 1689741680509,
      "SPVAP": 1689741680510,
      "EPVAP": 1689741680511,
      "SPVATF": 1689741680511,
      "EPVATF": 1689741682517,
      "SPVATR": 1689741682517,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild().getType() == Token.NAME) {\n        changed.add(node.getFirstChild().getString());\n",
      "EPVS": 1689741682518
    },
    {
      "rank": 1,
      "SSLB": 1689741682518,
      "ESLB": 1689741702520,
      "SPVS": 1689741702520,
      "SPVAP": 1689741702525,
      "EPVAP": 1689741702526,
      "SPVATF": 1689741702526,
      "EPVATF": 1689741704533,
      "SPVATR": 1689741704533,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getFirstChild()!= null) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689741704534
    },
    {
      "rank": 2,
      "SSLB": 1689741704534,
      "ESLB": 1689741724554,
      "SPVS": 1689741724554,
      "SPVAP": 1689741724555,
      "EPVAP": 1689741724556,
      "SPVATF": 1689741724556,
      "EPVATF": 1689741726567,
      "SPVATR": 1689741726567,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild()!= null) {\n        Node child = node.getLastChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689741726568
    },
    {
      "rank": 3,
      "SSLB": 1689741726568,
      "ESLB": 1689741746588,
      "SPVS": 1689741746588,
      "SPVAP": 1689741746589,
      "EPVAP": 1689741746590,
      "SPVATF": 1689741746590,
      "EPVATF": 1689741748596,
      "SPVATR": 1689741748596,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getFirstChild();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689741748597
    },
    {
      "rank": 4,
      "SSLB": 1689741748597,
      "ESLB": 1689741768618,
      "SPVS": 1689741768618,
      "SPVAP": 1689741768619,
      "EPVAP": 1689741768620,
      "SPVATF": 1689741768620,
      "EPVATF": 1689741770626,
      "SPVATR": 1689741770626,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Node target = node.getTarget();\n    if (target.getType() == Token.CALL) {\n        Node child = target.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689741770627
    },
    {
      "rank": 5,
      "SSLB": 1689741770627,
      "ESLB": 1689741790647,
      "SPVS": 1689741790647,
      "SPVAP": 1689741790648,
      "EPVAP": 1689741790649,
      "SPVATF": 1689741790649,
      "EPVATF": 1689741792655,
      "SPVATR": 1689741792655,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL && node.getLastChild().getType() == Token.NAME) {\n        changed.add(node.getLastChild().getString());\n",
      "EPVS": 1689741792656
    },
    {
      "rank": 6,
      "SSLB": 1689741792656,
      "ESLB": 1689741812671,
      "SPVS": 1689741812671,
      "SPVAP": 1689741812672,
      "EPVAP": 1689741812673,
      "SPVATF": 1689741812673,
      "EPVATF": 1689741814679,
      "SPVATR": 1689741814679,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    try {\n        if (node.getType() == Token.CALL) {\n            Node child = node.getFirstChild();\n            if (child.getType() == Token.NAME) {\n                changed.add(child.getString());\n            }\n",
      "EPVS": 1689741814680
    },
    {
      "rank": 7,
      "SSLB": 1689741814680,
      "ESLB": 1689741834700,
      "SPVS": 1689741834700,
      "SPVAP": 1689741834701,
      "EPVAP": 1689741834702,
      "SPVATF": 1689741834702,
      "EPVATF": 1689741836708,
      "SPVATR": 1689741836708,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689741836709
    },
    {
      "rank": 8,
      "SSLB": 1689741836709,
      "ESLB": 1689741856713,
      "SPVS": 1689741856713,
      "SPVAP": 1689741856716,
      "EPVAP": 1689741856717,
      "SPVATF": 1689741856717,
      "EPVATF": 1689741858729,
      "SPVATR": 1689741858729,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME) {\n        changed.add(child.getString());\n",
      "EPVS": 1689741858730
    },
    {
      "rank": 9,
      "SSLB": 1689741858730,
      "ESLB": 1689741878750,
      "SPVS": 1689741878750,
      "SPVAP": 1689741878751,
      "EPVAP": 1689741878752,
      "SPVATF": 1689741878752,
      "EPVATF": 1689741880757,
      "SPVATR": 1689741880757,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (node.getType() == Token.CALL || node.getType() == Token.SUB) {\n        Node child = node.getFirstChild();\n        if (child.getType() == Token.NAME) {\n            changed.add(child.getString());\n        }\n",
      "EPVS": 1689741880758
    }
  ],
  "SSLI": 1689722371220,
  "ESLI": 1689722401250,
  "hostname": "gros-50.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}