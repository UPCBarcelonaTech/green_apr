{
  "key": "Mockito_38_/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java_48-49",
  "proj": "Mockito",
  "bug_id": "38",
  "loc": "48-49",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689802940574,
      "ESLB": 1689802960594,
      "SPVS": 1689802960594,
      "SPVAP": 1689802960595,
      "EPVAP": 1689802965727,
      "SPVATF": 1689802965727,
      "EPVATF": 1689802965727,
      "SPVATR": 1689802973740,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(arg.toString());\n",
      "EPVS": 1689802973741
    },
    {
      "rank": 1,
      "SSLB": 1689802973741,
      "ESLB": 1689802993761,
      "SPVS": 1689802993761,
      "SPVAP": 1689802993762,
      "EPVAP": 1689802995649,
      "SPVATF": 1689802995649,
      "EPVATF": 1689802995649,
      "SPVATR": 1689802997656,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equalsIgnoreCase(StringDescription.toString(arg));\n",
      "EPVS": 1689802997656
    },
    {
      "rank": 2,
      "SSLB": 1689802997656,
      "ESLB": 1689803017676,
      "SPVS": 1689803017676,
      "SPVAP": 1689803017677,
      "EPVAP": 1689803019412,
      "SPVATF": 1689803019412,
      "EPVATF": 1689803019412,
      "SPVATR": 1689803021419,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(StringDescription.toString(arg));\n",
      "EPVS": 1689803021419
    },
    {
      "rank": 3,
      "SSLB": 1689803021419,
      "ESLB": 1689803041439,
      "SPVS": 1689803041440,
      "SPVAP": 1689803041440,
      "EPVAP": 1689803043319,
      "SPVATF": 1689803043319,
      "EPVATF": 1689803043319,
      "SPVATR": 1689803045325,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(false, m).equals(arg.toString());\n",
      "EPVS": 1689803045326
    },
    {
      "rank": 4,
      "SSLB": 1689803045326,
      "ESLB": 1689803065346,
      "SPVS": 1689803065346,
      "SPVAP": 1689803065347,
      "EPVAP": 1689803070466,
      "SPVATF": 1689803070466,
      "EPVATF": 1689803070466,
      "SPVATR": 1689803077478,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "    return StringDescription.toString(m).toLowerCase().equals(arg.toString().toLowerCase());\n",
      "EPVS": 1689803077478
    },
    {
      "rank": 5,
      "SSLB": 1689803077478,
      "ESLB": 1689803097498,
      "SPVS": 1689803097498,
      "SPVAP": 1689803097499,
      "EPVAP": 1689803099364,
      "SPVATF": 1689803099364,
      "EPVATF": 1689803099364,
      "SPVATR": 1689803101370,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m).equals(Description.toString(arg));\n",
      "EPVS": 1689803101371
    },
    {
      "rank": 6,
      "SSLB": 1689803101371,
      "ESLB": 1689803121391,
      "SPVS": 1689803121391,
      "SPVAP": 1689803121392,
      "EPVAP": 1689803123129,
      "SPVATF": 1689803123129,
      "EPVATF": 1689803123129,
      "SPVATR": 1689803125136,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    StringDescription desc = StringDescription.toString(m);\n    return desc.equals(arg.toString());\n",
      "EPVS": 1689803125136
    },
    {
      "rank": 7,
      "SSLB": 1689803125136,
      "ESLB": 1689803145156,
      "SPVS": 1689803145156,
      "SPVAP": 1689803145157,
      "EPVAP": 1689803146860,
      "SPVATF": 1689803146860,
      "EPVATF": 1689803146860,
      "SPVATR": 1689803148867,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.getString(m).equals(arg.toString());\n",
      "EPVS": 1689803148868
    },
    {
      "rank": 8,
      "SSLB": 1689803148868,
      "ESLB": 1689803168888,
      "SPVS": 1689803168888,
      "SPVAP": 1689803168889,
      "EPVAP": 1689803170697,
      "SPVATF": 1689803170697,
      "EPVATF": 1689803170697,
      "SPVATR": 1689803172704,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.toString(m.getIndex()).equals(arg.toString());\n",
      "EPVS": 1689803172705
    },
    {
      "rank": 9,
      "SSLB": 1689803172705,
      "ESLB": 1689803192725,
      "SPVS": 1689803192725,
      "SPVAP": 1689803192726,
      "EPVAP": 1689803194479,
      "SPVATF": 1689803194479,
      "EPVATF": 1689803194479,
      "SPVATR": 1689803196486,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    return StringDescription.of(m).equals(arg.toString());\n",
      "EPVS": 1689803196487
    }
  ],
  "SSLI": 1689795035844,
  "ESLI": 1689795065874,
  "hostname": "gros-50.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}