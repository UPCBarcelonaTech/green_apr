{
  "key": "Mockito_7_/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java_379-380",
  "proj": "Mockito",
  "bug_id": "7",
  "loc": "379-380",
  "input_file": "codegen_2B_output.json",
  "path": "/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689799701031,
      "ESLB": 1689799721051,
      "SPVS": 1689799721051,
      "SPVAP": 1689799721052,
      "EPVAP": 1689799726916,
      "SPVATF": 1689799726916,
      "EPVATF": 1689799732926,
      "SPVATR": 1689799732926,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    registerTypeVariablesOn(actualTypeArgument);\n",
      "EPVS": 1689799732927
    },
    {
      "rank": 1,
      "SSLB": 1689799732927,
      "ESLB": 1689799752947,
      "SPVS": 1689799752947,
      "SPVAP": 1689799752948,
      "EPVAP": 1689799758865,
      "SPVATF": 1689799758865,
      "EPVATF": 1689799764876,
      "SPVATR": 1689799764876,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.getActualTypeArgumentCount() > 0) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1689799764876
    },
    {
      "rank": 2,
      "SSLB": 1689799764876,
      "ESLB": 1689799784896,
      "SPVS": 1689799784896,
      "SPVAP": 1689799784896,
      "EPVAP": 1689799790795,
      "SPVATF": 1689799790795,
      "EPVATF": 1689799796805,
      "SPVATR": 1689799796805,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    registerTypeVariablesOn(actualTypeArgumentFor(typeVariable));\n",
      "EPVS": 1689799796805
    },
    {
      "rank": 3,
      "SSLB": 1689799796805,
      "ESLB": 1689799816826,
      "SPVS": 1689799816826,
      "SPVAP": 1689799816826,
      "EPVAP": 1689799822618,
      "SPVATF": 1689799822618,
      "EPVATF": 1689799828628,
      "SPVATR": 1689799828628,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (actualTypeArgument!= null) {\n        registerTypeVariablesOn(actualTypeArgument);\n    }\n",
      "EPVS": 1689799828629
    },
    {
      "rank": 4,
      "SSLB": 1689799828629,
      "ESLB": 1689799848649,
      "SPVS": 1689799848649,
      "SPVAP": 1689799848650,
      "EPVAP": 1689799878809,
      "SPVATF": 1689799878809,
      "EPVATF": 1689799909847,
      "SPVATR": 1689799909847,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    if (typeVariable!= null) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1689799909848
    },
    {
      "rank": 5,
      "SSLB": 1689799909848,
      "ESLB": 1689799929868,
      "SPVS": 1689799929868,
      "SPVAP": 1689799929869,
      "EPVAP": 1689799935734,
      "SPVATF": 1689799935734,
      "EPVATF": 1689799941745,
      "SPVATR": 1689799941745,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (!typeVariable.getBounds().isEmpty()) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1689799941746
    },
    {
      "rank": 6,
      "SSLB": 1689799941746,
      "ESLB": 1689799961766,
      "SPVS": 1689799961766,
      "SPVAP": 1689799961767,
      "EPVAP": 1689799967613,
      "SPVATF": 1689799967613,
      "EPVATF": 1689799974624,
      "SPVATR": 1689799974624,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    registerTypeVariablesOn(actualType);\n",
      "EPVS": 1689799974625
    },
    {
      "rank": 7,
      "SSLB": 1689799974625,
      "ESLB": 1689799994645,
      "SPVS": 1689799994645,
      "SPVAP": 1689799994646,
      "EPVAP": 1689800000471,
      "SPVATF": 1689800000471,
      "EPVATF": 1689800006482,
      "SPVATR": 1689800006482,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.getActualTypeArgument()!= null) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1689800006483
    },
    {
      "rank": 8,
      "SSLB": 1689800006483,
      "ESLB": 1689800026503,
      "SPVS": 1689800026503,
      "SPVAP": 1689800026504,
      "EPVAP": 1689800032296,
      "SPVATF": 1689800032296,
      "EPVATF": 1689800039307,
      "SPVATR": 1689800039307,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.getActualTypeArgumentCount()!= 0) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1689800039308
    },
    {
      "rank": 9,
      "SSLB": 1689800039308,
      "ESLB": 1689800059312,
      "SPVS": 1689800059312,
      "SPVAP": 1689800059313,
      "EPVAP": 1689800065058,
      "SPVATF": 1689800065058,
      "EPVATF": 1689800071068,
      "SPVATR": 1689800071068,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (typeVariable.hasActualTypeArgument()) {\n        registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));\n    }\n",
      "EPVS": 1689800071069
    }
  ],
  "SSLI": 1689795035844,
  "ESLI": 1689795065874,
  "hostname": "gros-50.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}