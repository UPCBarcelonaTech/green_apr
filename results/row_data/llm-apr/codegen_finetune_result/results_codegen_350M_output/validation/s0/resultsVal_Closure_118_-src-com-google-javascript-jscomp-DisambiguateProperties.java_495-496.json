{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688167919445,
      "ESLB": 1688167939465,
      "SPVS": 1688167939465,
      "SPVAP": 1688167939467,
      "EPVAP": 1688167939468,
      "SPVATF": 1688167939468,
      "EPVATF": 1688167941476,
      "SPVATR": 1688167941476,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str",
      "EPVS": 1688167941477
    },
    {
      "rank": 1,
      "SSLB": 1688167941478,
      "ESLB": 1688167961498,
      "SPVS": 1688167961498,
      "SPVAP": 1688167961499,
      "EPVAP": 1688167961501,
      "SPVATF": 1688167961501,
      "EPVATF": 1688167970522,
      "SPVATR": 1688167970522,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1688167970523
    },
    {
      "rank": 2,
      "SSLB": 1688167970523,
      "ESLB": 1688167990543,
      "SPVS": 1688167990543,
      "SPVAP": 1688167990544,
      "EPVAP": 1688167990546,
      "SPVATF": 1688167990546,
      "EPVATF": 1688167992556,
      "SPVATR": 1688167992556,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceFirst(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1688167992557
    },
    {
      "rank": 3,
      "SSLB": 1688167992557,
      "ESLB": 1688168012577,
      "SPVS": 1688168012577,
      "SPVAP": 1688168012579,
      "EPVAP": 1688168012580,
      "SPVATF": 1688168012580,
      "EPVATF": 1688168014588,
      "SPVATR": 1688168014588,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String objectLitKey = child.getString();\n    T type = typeSystem.getType(getScope(), n, objectLitKey);\n    Property prop = getProperty(objectLitKey);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(objectLitKey)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(objectLitKey), \"",
      "EPVS": 1688168014589
    },
    {
      "rank": 4,
      "SSLB": 1688168014589,
      "ESLB": 1688168034609,
      "SPVS": 1688168034609,
      "SPVAP": 1688168034610,
      "EPVAP": 1688168034612,
      "SPVATF": 1688168034612,
      "EPVATF": 1688168036619,
      "SPVATR": 1688168036619,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceAll(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1688168036620
    },
    {
      "rank": 5,
      "SSLB": 1688168036620,
      "ESLB": 1688168056640,
      "SPVS": 1688168056640,
      "SPVAP": 1688168056641,
      "EPVAP": 1688168056642,
      "SPVATF": 1688168056642,
      "EPVATF": 1688168058652,
      "SPVATR": 1688168058652,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Property prop = getProperty(child);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n",
      "EPVS": 1688168058653
    },
    {
      "rank": 6,
      "SSLB": 1688168058653,
      "ESLB": 1688168078673,
      "SPVS": 1688168078673,
      "SPVAP": 1688168078675,
      "EPVAP": 1688168078676,
      "SPVATF": 1688168078676,
      "EPVATF": 1688168080683,
      "SPVATR": 1688168080683,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replace(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"",
      "EPVS": 1688168080685
    },
    {
      "rank": 7,
      "SSLB": 1688168080685,
      "ESLB": 1688168100705,
      "SPVS": 1688168100705,
      "SPVAP": 1688168100706,
      "EPVAP": 1688168100707,
      "SPVATF": 1688168100707,
      "EPVATF": 1688168102714,
      "SPVATR": 1688168102714,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, name, child.",
      "EPVS": 1688168102715
    },
    {
      "rank": 8,
      "SSLB": 1688168102715,
      "ESLB": 1688168122735,
      "SPVS": 1688168122735,
      "SPVAP": 1688168122736,
      "EPVAP": 1688168122738,
      "SPVATF": 1688168122738,
      "EPVATF": 1688168132760,
      "SPVATR": 1688168132760,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    String objectLitKey = child.getString();\n",
      "EPVS": 1688168132761
    },
    {
      "rank": 9,
      "SSLB": 1688168132761,
      "ESLB": 1688168152781,
      "SPVS": 1688168152781,
      "SPVAP": 1688168152783,
      "EPVAP": 1688168152784,
      "SPVATF": 1688168152784,
      "EPVATF": 1688168154792,
      "SPVATR": 1688168154792,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, \"String_Node",
      "EPVS": 1688168154793
    }
  ],
  "SSLI": 1688158274061,
  "ESLI": 1688158304091,
  "hostname": "gros-65.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212950"
}