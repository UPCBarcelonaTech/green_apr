{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689718420510,
      "ESLB": 1689718440530,
      "SPVS": 1689718440530,
      "SPVAP": 1689718440533,
      "EPVAP": 1689718440534,
      "SPVATF": 1689718440534,
      "EPVATF": 1689718443542,
      "SPVATR": 1689718443542,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str",
      "EPVS": 1689718443543
    },
    {
      "rank": 1,
      "SSLB": 1689718443543,
      "ESLB": 1689718463564,
      "SPVS": 1689718463564,
      "SPVAP": 1689718463565,
      "EPVAP": 1689718463567,
      "SPVATF": 1689718463567,
      "EPVATF": 1689718473587,
      "SPVATR": 1689718473587,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689718473588
    },
    {
      "rank": 2,
      "SSLB": 1689718473588,
      "ESLB": 1689718493609,
      "SPVS": 1689718493609,
      "SPVAP": 1689718493610,
      "EPVAP": 1689718493611,
      "SPVATF": 1689718493611,
      "EPVATF": 1689718495621,
      "SPVATR": 1689718495621,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceFirst(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689718495622
    },
    {
      "rank": 3,
      "SSLB": 1689718495622,
      "ESLB": 1689718515642,
      "SPVS": 1689718515642,
      "SPVAP": 1689718515643,
      "EPVAP": 1689718515645,
      "SPVATF": 1689718515645,
      "EPVATF": 1689718517652,
      "SPVATR": 1689718517652,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String objectLitKey = child.getString();\n    T type = typeSystem.getType(getScope(), n, objectLitKey);\n    Property prop = getProperty(objectLitKey);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(objectLitKey)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(objectLitKey), \"",
      "EPVS": 1689718517653
    },
    {
      "rank": 4,
      "SSLB": 1689718517653,
      "ESLB": 1689718537673,
      "SPVS": 1689718537673,
      "SPVAP": 1689718537674,
      "EPVAP": 1689718537675,
      "SPVATF": 1689718537675,
      "EPVATF": 1689718540684,
      "SPVATR": 1689718540684,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceAll(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689718540685
    },
    {
      "rank": 5,
      "SSLB": 1689718540685,
      "ESLB": 1689718560705,
      "SPVS": 1689718560705,
      "SPVAP": 1689718560707,
      "EPVAP": 1689718560708,
      "SPVATF": 1689718560708,
      "EPVATF": 1689718563717,
      "SPVATR": 1689718563717,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Property prop = getProperty(child);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n",
      "EPVS": 1689718563719
    },
    {
      "rank": 6,
      "SSLB": 1689718563719,
      "ESLB": 1689718583739,
      "SPVS": 1689718583739,
      "SPVAP": 1689718583740,
      "EPVAP": 1689718583743,
      "SPVATF": 1689718583743,
      "EPVATF": 1689718586751,
      "SPVATR": 1689718586751,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replace(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"",
      "EPVS": 1689718586753
    },
    {
      "rank": 7,
      "SSLB": 1689718586753,
      "ESLB": 1689718606773,
      "SPVS": 1689718606773,
      "SPVAP": 1689718606774,
      "EPVAP": 1689718606776,
      "SPVATF": 1689718606776,
      "EPVATF": 1689718608784,
      "SPVATR": 1689718608784,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, name, child.",
      "EPVS": 1689718608785
    },
    {
      "rank": 8,
      "SSLB": 1689718608785,
      "ESLB": 1689718628805,
      "SPVS": 1689718628805,
      "SPVAP": 1689718628806,
      "EPVAP": 1689718628808,
      "SPVATF": 1689718628808,
      "EPVATF": 1689718637828,
      "SPVATR": 1689718637828,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    String objectLitKey = child.getString();\n",
      "EPVS": 1689718637829
    },
    {
      "rank": 9,
      "SSLB": 1689718637829,
      "ESLB": 1689718657849,
      "SPVS": 1689718657849,
      "SPVAP": 1689718657851,
      "EPVAP": 1689718657852,
      "SPVATF": 1689718657852,
      "EPVATF": 1689718659859,
      "SPVATR": 1689718659859,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, \"String_Node",
      "EPVS": 1689718659860
    }
  ],
  "SSLI": 1689703972356,
  "ESLI": 1689704002386,
  "hostname": "gros-49.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}