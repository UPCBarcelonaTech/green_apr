{
  "key": "Closure_92_/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java_789-790",
  "proj": "Closure",
  "bug_id": "92",
  "loc": "789-790",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689716469894,
      "ESLB": 1689716489914,
      "SPVS": 1689716489914,
      "SPVAP": 1689716489916,
      "EPVAP": 1689716489918,
      "SPVATF": 1689716489918,
      "EPVATF": 1689716489918,
      "SPVATR": 1689716495930,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n",
      "EPVS": 1689716495931
    },
    {
      "rank": 1,
      "SSLB": 1689716495931,
      "ESLB": 1689716515951,
      "SPVS": 1689716515951,
      "SPVAP": 1689716515953,
      "EPVAP": 1689716515955,
      "SPVATF": 1689716515955,
      "EPVATF": 1689716515955,
      "SPVATR": 1689716516963,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n                Preconditions.checkNotNull(parentName);\n                Preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.getParent",
      "EPVS": 1689716516964
    },
    {
      "rank": 2,
      "SSLB": 1689716516965,
      "ESLB": 1689716536985,
      "SPVS": 1689716536985,
      "SPVAP": 1689716536990,
      "EPVAP": 1689716536991,
      "SPVATF": 1689716536991,
      "EPVATF": 1689716536991,
      "SPVATR": 1689716537997,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        replacementNode = createDeclarationNode();\n",
      "EPVS": 1689716537999
    },
    {
      "rank": 3,
      "SSLB": 1689716537999,
      "ESLB": 1689716558019,
      "SPVS": 1689716558019,
      "SPVAP": 1689716558020,
      "EPVAP": 1689716558021,
      "SPVATF": 1689716558021,
      "EPVATF": 1689716558021,
      "SPVATR": 1689716559026,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                 providedNames.get(namespace.substring(0, indexOfDot));\n                Preconditions.checkNotNull(parentName);\n                Preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.getParent",
      "EPVS": 1689716559027
    },
    {
      "rank": 4,
      "SSLB": 1689716559027,
      "ESLB": 1689716579047,
      "SPVS": 1689716579047,
      "SPVAP": 1689716579050,
      "EPVAP": 1689716579051,
      "SPVATF": 1689716579051,
      "EPVATF": 1689716579051,
      "SPVATR": 1689716580074,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n                Preconditions.checkNotNull(parentName);\n                Preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.get",
      "EPVS": 1689716580075
    },
    {
      "rank": 5,
      "SSLB": 1689716580075,
      "ESLB": 1689716600095,
      "SPVS": 1689716600095,
      "SPVAP": 1689716600096,
      "EPVAP": 1689716600097,
      "SPVATF": 1689716600097,
      "EPVATF": 1689716600097,
      "SPVATR": 1689716601103,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    }\n    int indexOfDot = namespace.indexOf('.');\n",
      "EPVS": 1689716601105
    },
    {
      "rank": 6,
      "SSLB": 1689716601105,
      "ESLB": 1689716621117,
      "SPVS": 1689716621117,
      "SPVAP": 1689716621118,
      "EPVAP": 1689716621119,
      "SPVATF": 1689716621119,
      "EPVATF": 1689716621119,
      "SPVATR": 1689716622125,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        indexOfDot = namespace.indexOf('.');\n",
      "EPVS": 1689716622126
    },
    {
      "rank": 7,
      "SSLB": 1689716622126,
      "ESLB": 1689716642147,
      "SPVS": 1689716642147,
      "SPVAP": 1689716642149,
      "EPVAP": 1689716642150,
      "SPVATF": 1689716642150,
      "EPVATF": 1689716642150,
      "SPVATR": 1689716643157,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n                preconditions.checkNotNull(parentName);\n                preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.get",
      "EPVS": 1689716643158
    },
    {
      "rank": 8,
      "SSLB": 1689716643158,
      "ESLB": 1689716663179,
      "SPVS": 1689716663179,
      "SPVAP": 1689716663180,
      "EPVAP": 1689716663182,
      "SPVATF": 1689716663182,
      "EPVATF": 1689716663182,
      "SPVATR": 1689716664188,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        indexOfDot = namespace.indexOf('.');\n    }\n    if (indexOfDot == -1) {\n        compiler.getNodeForCodeInsertion(minimumModule)\n           .addChildToBack(replacementNode);\n    } else {\n",
      "EPVS": 1689716664189
    },
    {
      "rank": 9,
      "SSLB": 1689716664189,
      "ESLB": 1689716684209,
      "SPVS": 1689716684209,
      "SPVAP": 1689716684210,
      "EPVAP": 1689716684213,
      "SPVATF": 1689716684213,
      "EPVATF": 1689716684213,
      "SPVATR": 1689716685219,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        String namespacePrefix = getNamespacePrefix();\n        int indexOfDot = namespacePrefix.indexOf('.');\n",
      "EPVS": 1689716685220
    }
  ],
  "SSLI": 1689703972356,
  "ESLI": 1689704002386,
  "hostname": "gros-49.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}