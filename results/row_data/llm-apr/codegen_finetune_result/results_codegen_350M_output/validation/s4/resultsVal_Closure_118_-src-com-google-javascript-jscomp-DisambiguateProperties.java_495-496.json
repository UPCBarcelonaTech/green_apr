{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689832992333,
      "ESLB": 1689833012353,
      "SPVS": 1689833012353,
      "SPVAP": 1689833012354,
      "EPVAP": 1689833012355,
      "SPVATF": 1689833012355,
      "EPVATF": 1689833014362,
      "SPVATR": 1689833014362,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str",
      "EPVS": 1689833014363
    },
    {
      "rank": 1,
      "SSLB": 1689833014363,
      "ESLB": 1689833034383,
      "SPVS": 1689833034383,
      "SPVAP": 1689833034384,
      "EPVAP": 1689833034385,
      "SPVATF": 1689833034385,
      "EPVATF": 1689833044403,
      "SPVATR": 1689833044403,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689833044404
    },
    {
      "rank": 2,
      "SSLB": 1689833044404,
      "ESLB": 1689833064424,
      "SPVS": 1689833064424,
      "SPVAP": 1689833064424,
      "EPVAP": 1689833064425,
      "SPVATF": 1689833064425,
      "EPVATF": 1689833067434,
      "SPVATR": 1689833067434,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceFirst(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689833067435
    },
    {
      "rank": 3,
      "SSLB": 1689833067435,
      "ESLB": 1689833087455,
      "SPVS": 1689833087455,
      "SPVAP": 1689833087456,
      "EPVAP": 1689833087457,
      "SPVATF": 1689833087457,
      "EPVATF": 1689833090465,
      "SPVATR": 1689833090465,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String objectLitKey = child.getString();\n    T type = typeSystem.getType(getScope(), n, objectLitKey);\n    Property prop = getProperty(objectLitKey);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(objectLitKey)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(objectLitKey), \"",
      "EPVS": 1689833090465
    },
    {
      "rank": 4,
      "SSLB": 1689833090465,
      "ESLB": 1689833110486,
      "SPVS": 1689833110486,
      "SPVAP": 1689833110487,
      "EPVAP": 1689833110488,
      "SPVATF": 1689833110488,
      "EPVATF": 1689833112494,
      "SPVATR": 1689833112494,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceAll(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689833112495
    },
    {
      "rank": 5,
      "SSLB": 1689833112495,
      "ESLB": 1689833132515,
      "SPVS": 1689833132515,
      "SPVAP": 1689833132516,
      "EPVAP": 1689833132517,
      "SPVATF": 1689833132517,
      "EPVATF": 1689833135525,
      "SPVATR": 1689833135525,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Property prop = getProperty(child);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n",
      "EPVS": 1689833135526
    },
    {
      "rank": 6,
      "SSLB": 1689833135526,
      "ESLB": 1689833155546,
      "SPVS": 1689833155546,
      "SPVAP": 1689833155548,
      "EPVAP": 1689833155549,
      "SPVATF": 1689833155549,
      "EPVATF": 1689833158556,
      "SPVATR": 1689833158556,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replace(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"",
      "EPVS": 1689833158557
    },
    {
      "rank": 7,
      "SSLB": 1689833158557,
      "ESLB": 1689833178564,
      "SPVS": 1689833178564,
      "SPVAP": 1689833178565,
      "EPVAP": 1689833178566,
      "SPVATF": 1689833178566,
      "EPVATF": 1689833180573,
      "SPVATR": 1689833180573,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, name, child.",
      "EPVS": 1689833180573
    },
    {
      "rank": 8,
      "SSLB": 1689833180573,
      "ESLB": 1689833200593,
      "SPVS": 1689833200593,
      "SPVAP": 1689833200594,
      "EPVAP": 1689833200595,
      "SPVATF": 1689833200595,
      "EPVATF": 1689833209613,
      "SPVATR": 1689833209613,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    String objectLitKey = child.getString();\n",
      "EPVS": 1689833209614
    },
    {
      "rank": 9,
      "SSLB": 1689833209614,
      "ESLB": 1689833229634,
      "SPVS": 1689833229634,
      "SPVAP": 1689833229636,
      "EPVAP": 1689833229637,
      "SPVATF": 1689833229637,
      "EPVATF": 1689833231643,
      "SPVATR": 1689833231643,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, \"String_Node",
      "EPVS": 1689833231644
    }
  ],
  "SSLI": 1689818913140,
  "ESLI": 1689818943170,
  "hostname": "gros-49.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}