{
  "key": "Closure_92_/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java_789-790",
  "proj": "Closure",
  "bug_id": "92",
  "loc": "789-790",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689017548466,
      "ESLB": 1689017568486,
      "SPVS": 1689017568486,
      "SPVAP": 1689017568488,
      "EPVAP": 1689017568489,
      "SPVATF": 1689017568489,
      "EPVATF": 1689017568489,
      "SPVATR": 1689017573500,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n",
      "EPVS": 1689017573501
    },
    {
      "rank": 1,
      "SSLB": 1689017573501,
      "ESLB": 1689017593521,
      "SPVS": 1689017593521,
      "SPVAP": 1689017593522,
      "EPVAP": 1689017593524,
      "SPVATF": 1689017593524,
      "EPVATF": 1689017593524,
      "SPVATR": 1689017594532,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n                Preconditions.checkNotNull(parentName);\n                Preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.getParent",
      "EPVS": 1689017594533
    },
    {
      "rank": 2,
      "SSLB": 1689017594533,
      "ESLB": 1689017614553,
      "SPVS": 1689017614553,
      "SPVAP": 1689017614554,
      "EPVAP": 1689017614555,
      "SPVATF": 1689017614555,
      "EPVATF": 1689017614555,
      "SPVATR": 1689017615561,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        replacementNode = createDeclarationNode();\n",
      "EPVS": 1689017615567
    },
    {
      "rank": 3,
      "SSLB": 1689017615567,
      "ESLB": 1689017635587,
      "SPVS": 1689017635587,
      "SPVAP": 1689017635588,
      "EPVAP": 1689017635590,
      "SPVATF": 1689017635590,
      "EPVATF": 1689017635590,
      "SPVATR": 1689017636596,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                 providedNames.get(namespace.substring(0, indexOfDot));\n                Preconditions.checkNotNull(parentName);\n                Preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.getParent",
      "EPVS": 1689017636597
    },
    {
      "rank": 4,
      "SSLB": 1689017636597,
      "ESLB": 1689017656617,
      "SPVS": 1689017656617,
      "SPVAP": 1689017656618,
      "EPVAP": 1689017656619,
      "SPVATF": 1689017656619,
      "EPVATF": 1689017656619,
      "SPVATR": 1689017657628,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n                Preconditions.checkNotNull(parentName);\n                Preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.get",
      "EPVS": 1689017657629
    },
    {
      "rank": 5,
      "SSLB": 1689017657629,
      "ESLB": 1689017677649,
      "SPVS": 1689017677649,
      "SPVAP": 1689017677650,
      "EPVAP": 1689017677651,
      "SPVATF": 1689017677651,
      "EPVATF": 1689017677651,
      "SPVATR": 1689017678657,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    }\n    int indexOfDot = namespace.indexOf('.');\n",
      "EPVS": 1689017678659
    },
    {
      "rank": 6,
      "SSLB": 1689017678659,
      "ESLB": 1689017698679,
      "SPVS": 1689017698679,
      "SPVAP": 1689017698690,
      "EPVAP": 1689017698691,
      "SPVATF": 1689017698691,
      "EPVATF": 1689017698691,
      "SPVATR": 1689017699698,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        indexOfDot = namespace.indexOf('.');\n",
      "EPVS": 1689017699699
    },
    {
      "rank": 7,
      "SSLB": 1689017699699,
      "ESLB": 1689017719719,
      "SPVS": 1689017719719,
      "SPVAP": 1689017719720,
      "EPVAP": 1689017719722,
      "SPVATF": 1689017719722,
      "EPVATF": 1689017719722,
      "SPVATR": 1689017720728,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n                preconditions.checkNotNull(parentName);\n                preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.get",
      "EPVS": 1689017720730
    },
    {
      "rank": 8,
      "SSLB": 1689017720730,
      "ESLB": 1689017740750,
      "SPVS": 1689017740750,
      "SPVAP": 1689017740752,
      "EPVAP": 1689017740753,
      "SPVATF": 1689017740753,
      "EPVATF": 1689017740754,
      "SPVATR": 1689017741759,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        indexOfDot = namespace.indexOf('.');\n    }\n    if (indexOfDot == -1) {\n        compiler.getNodeForCodeInsertion(minimumModule)\n           .addChildToBack(replacementNode);\n    } else {\n",
      "EPVS": 1689017741760
    },
    {
      "rank": 9,
      "SSLB": 1689017741760,
      "ESLB": 1689017761780,
      "SPVS": 1689017761780,
      "SPVAP": 1689017761782,
      "EPVAP": 1689017761784,
      "SPVATF": 1689017761784,
      "EPVATF": 1689017761784,
      "SPVATR": 1689017762791,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        String namespacePrefix = getNamespacePrefix();\n        int indexOfDot = namespacePrefix.indexOf('.');\n",
      "EPVS": 1689017762792
    }
  ],
  "SSLI": 1689009911150,
  "ESLI": 1689009941180,
  "hostname": "gros-54.nancy.grid5000.fr",
  "OAR_JOB_ID": "4228532"
}