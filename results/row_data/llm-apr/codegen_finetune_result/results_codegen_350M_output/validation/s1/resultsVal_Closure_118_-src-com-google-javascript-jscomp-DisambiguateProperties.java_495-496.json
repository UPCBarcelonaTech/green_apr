{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689018905087,
      "ESLB": 1689018925107,
      "SPVS": 1689018925107,
      "SPVAP": 1689018925109,
      "EPVAP": 1689018925110,
      "SPVATF": 1689018925110,
      "EPVATF": 1689018928119,
      "SPVATR": 1689018928119,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str",
      "EPVS": 1689018928126
    },
    {
      "rank": 1,
      "SSLB": 1689018928126,
      "ESLB": 1689018948146,
      "SPVS": 1689018948146,
      "SPVAP": 1689018948148,
      "EPVAP": 1689018948149,
      "SPVATF": 1689018948149,
      "EPVATF": 1689018957169,
      "SPVATR": 1689018957169,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689018957170
    },
    {
      "rank": 2,
      "SSLB": 1689018957170,
      "ESLB": 1689018977191,
      "SPVS": 1689018977191,
      "SPVAP": 1689018977192,
      "EPVAP": 1689018977194,
      "SPVATF": 1689018977194,
      "EPVATF": 1689018980203,
      "SPVATR": 1689018980203,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceFirst(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689018980205
    },
    {
      "rank": 3,
      "SSLB": 1689018980205,
      "ESLB": 1689019000225,
      "SPVS": 1689019000225,
      "SPVAP": 1689019000228,
      "EPVAP": 1689019000229,
      "SPVATF": 1689019000229,
      "EPVATF": 1689019002236,
      "SPVATR": 1689019002236,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String objectLitKey = child.getString();\n    T type = typeSystem.getType(getScope(), n, objectLitKey);\n    Property prop = getProperty(objectLitKey);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(objectLitKey)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(objectLitKey), \"",
      "EPVS": 1689019002237
    },
    {
      "rank": 4,
      "SSLB": 1689019002237,
      "ESLB": 1689019022257,
      "SPVS": 1689019022257,
      "SPVAP": 1689019022262,
      "EPVAP": 1689019022264,
      "SPVATF": 1689019022264,
      "EPVATF": 1689019024271,
      "SPVATR": 1689019024271,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceAll(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689019024273
    },
    {
      "rank": 5,
      "SSLB": 1689019024273,
      "ESLB": 1689019044293,
      "SPVS": 1689019044293,
      "SPVAP": 1689019044294,
      "EPVAP": 1689019044295,
      "SPVATF": 1689019044295,
      "EPVATF": 1689019046317,
      "SPVATR": 1689019046317,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Property prop = getProperty(child);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n",
      "EPVS": 1689019046318
    },
    {
      "rank": 6,
      "SSLB": 1689019046318,
      "ESLB": 1689019066338,
      "SPVS": 1689019066338,
      "SPVAP": 1689019066340,
      "EPVAP": 1689019066341,
      "SPVATF": 1689019066341,
      "EPVATF": 1689019068348,
      "SPVATR": 1689019068348,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replace(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"",
      "EPVS": 1689019068349
    },
    {
      "rank": 7,
      "SSLB": 1689019068349,
      "ESLB": 1689019088370,
      "SPVS": 1689019088370,
      "SPVAP": 1689019088371,
      "EPVAP": 1689019088372,
      "SPVATF": 1689019088372,
      "EPVATF": 1689019090380,
      "SPVATR": 1689019090380,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, name, child.",
      "EPVS": 1689019090381
    },
    {
      "rank": 8,
      "SSLB": 1689019090381,
      "ESLB": 1689019110401,
      "SPVS": 1689019110401,
      "SPVAP": 1689019110406,
      "EPVAP": 1689019110407,
      "SPVATF": 1689019110408,
      "EPVATF": 1689019120441,
      "SPVATR": 1689019120441,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    String objectLitKey = child.getString();\n",
      "EPVS": 1689019120442
    },
    {
      "rank": 9,
      "SSLB": 1689019120442,
      "ESLB": 1689019140462,
      "SPVS": 1689019140462,
      "SPVAP": 1689019140464,
      "EPVAP": 1689019140465,
      "SPVATF": 1689019140465,
      "EPVATF": 1689019143474,
      "SPVATR": 1689019143475,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, \"String_Node",
      "EPVS": 1689019143476
    }
  ],
  "SSLI": 1689009911150,
  "ESLI": 1689009941180,
  "hostname": "gros-54.nancy.grid5000.fr",
  "OAR_JOB_ID": "4228532"
}