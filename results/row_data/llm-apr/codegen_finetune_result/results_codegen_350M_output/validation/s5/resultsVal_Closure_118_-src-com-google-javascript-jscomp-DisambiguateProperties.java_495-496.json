{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689905047325,
      "ESLB": 1689905067345,
      "SPVS": 1689905067345,
      "SPVAP": 1689905067347,
      "EPVAP": 1689905067348,
      "SPVATF": 1689905067348,
      "EPVATF": 1689905070355,
      "SPVATR": 1689905070355,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str",
      "EPVS": 1689905070356
    },
    {
      "rank": 1,
      "SSLB": 1689905070356,
      "ESLB": 1689905090376,
      "SPVS": 1689905090376,
      "SPVAP": 1689905090377,
      "EPVAP": 1689905090378,
      "SPVATF": 1689905090378,
      "EPVATF": 1689905100396,
      "SPVATR": 1689905100396,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689905100396
    },
    {
      "rank": 2,
      "SSLB": 1689905100397,
      "ESLB": 1689905120417,
      "SPVS": 1689905120417,
      "SPVAP": 1689905120418,
      "EPVAP": 1689905120419,
      "SPVATF": 1689905120419,
      "EPVATF": 1689905122426,
      "SPVATR": 1689905122426,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceFirst(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689905122426
    },
    {
      "rank": 3,
      "SSLB": 1689905122427,
      "ESLB": 1689905142447,
      "SPVS": 1689905142447,
      "SPVAP": 1689905142448,
      "EPVAP": 1689905142449,
      "SPVATF": 1689905142449,
      "EPVATF": 1689905145456,
      "SPVATR": 1689905145456,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String objectLitKey = child.getString();\n    T type = typeSystem.getType(getScope(), n, objectLitKey);\n    Property prop = getProperty(objectLitKey);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(objectLitKey)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(objectLitKey), \"",
      "EPVS": 1689905145457
    },
    {
      "rank": 4,
      "SSLB": 1689905145457,
      "ESLB": 1689905165457,
      "SPVS": 1689905165457,
      "SPVAP": 1689905165458,
      "EPVAP": 1689905165459,
      "SPVATF": 1689905165459,
      "EPVATF": 1689905168466,
      "SPVATR": 1689905168466,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceAll(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689905168467
    },
    {
      "rank": 5,
      "SSLB": 1689905168467,
      "ESLB": 1689905188487,
      "SPVS": 1689905188487,
      "SPVAP": 1689905188488,
      "EPVAP": 1689905188489,
      "SPVATF": 1689905188489,
      "EPVATF": 1689905190496,
      "SPVATR": 1689905190496,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Property prop = getProperty(child);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n",
      "EPVS": 1689905190497
    },
    {
      "rank": 6,
      "SSLB": 1689905190497,
      "ESLB": 1689905210517,
      "SPVS": 1689905210517,
      "SPVAP": 1689905210518,
      "EPVAP": 1689905210519,
      "SPVATF": 1689905210519,
      "EPVATF": 1689905213526,
      "SPVATR": 1689905213526,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replace(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"",
      "EPVS": 1689905213527
    },
    {
      "rank": 7,
      "SSLB": 1689905213527,
      "ESLB": 1689905233547,
      "SPVS": 1689905233547,
      "SPVAP": 1689905233548,
      "EPVAP": 1689905233549,
      "SPVATF": 1689905233549,
      "EPVATF": 1689905235555,
      "SPVATR": 1689905235555,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, name, child.",
      "EPVS": 1689905235555
    },
    {
      "rank": 8,
      "SSLB": 1689905235555,
      "ESLB": 1689905255576,
      "SPVS": 1689905255576,
      "SPVAP": 1689905255577,
      "EPVAP": 1689905255578,
      "SPVATF": 1689905255578,
      "EPVATF": 1689905265595,
      "SPVATR": 1689905265595,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    String objectLitKey = child.getString();\n",
      "EPVS": 1689905265596
    },
    {
      "rank": 9,
      "SSLB": 1689905265596,
      "ESLB": 1689905285616,
      "SPVS": 1689905285616,
      "SPVAP": 1689905285618,
      "EPVAP": 1689905285618,
      "SPVATF": 1689905285618,
      "EPVATF": 1689905287624,
      "SPVATR": 1689905287624,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, \"String_Node",
      "EPVS": 1689905287625
    }
  ],
  "SSLI": 1689890975924,
  "ESLI": 1689891005954,
  "hostname": "gros-51.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}