{
  "key": "Closure_33_/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java_557-558",
  "proj": "Closure",
  "bug_id": "33",
  "loc": "557-558",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689898249745,
      "ESLB": 1689898269765,
      "SPVS": 1689898269765,
      "SPVAP": 1689898269766,
      "EPVAP": 1689898269767,
      "SPVATF": 1689898269767,
      "EPVATF": 1689898274775,
      "SPVATR": 1689898274775,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689898274776
    },
    {
      "rank": 1,
      "SSLB": 1689898274776,
      "ESLB": 1689898294796,
      "SPVS": 1689898294796,
      "SPVAP": 1689898294797,
      "EPVAP": 1689898294798,
      "SPVATF": 1689898294798,
      "EPVATF": 1689898297804,
      "SPVATR": 1689898297804,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj instanceof RecordType) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                       .getLeastSupertype(propType);\n                }\n                defineInferredProperty(prop, type",
      "EPVS": 1689898297804
    },
    {
      "rank": 2,
      "SSLB": 1689898297804,
      "ESLB": 1689898317825,
      "SPVS": 1689898317825,
      "SPVAP": 1689898317826,
      "EPVAP": 1689898317826,
      "SPVATF": 1689898317826,
      "EPVATF": 1689898320834,
      "SPVATR": 1689898320834,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj!= null) {\n        if (constraintObj.isRecordType()) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!hasProperty(prop)) {\n                        typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                           .getLeastSupertype(propType);\n",
      "EPVS": 1689898320835
    },
    {
      "rank": 3,
      "SSLB": 1689898320835,
      "ESLB": 1689898340856,
      "SPVS": 1689898340856,
      "SPVAP": 1689898340856,
      "EPVAP": 1689898340857,
      "SPVATF": 1689898340857,
      "EPVATF": 1689898342863,
      "SPVATR": 1689898342863,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj!= null) {\n        if (constraintObj.isRecordType()) {\n            for (String prop : constraintObj.getOwnPropertyNames()) {\n                JSType propType = constraintObj.getPropertyType(prop);\n                if (!isPropertyTypeDeclared(prop)) {\n                    JSType typeToInfer = propType;\n                    if (!hasProperty(prop)) {\n                        typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                           .getLeastSupertype(prop);\n                    ",
      "EPVS": 1689898342864
    },
    {
      "rank": 4,
      "SSLB": 1689898342864,
      "ESLB": 1689898362884,
      "SPVS": 1689898362884,
      "SPVAP": 1689898362885,
      "EPVAP": 1689898362885,
      "SPVATF": 1689898362885,
      "EPVATF": 1689898364890,
      "SPVATR": 1689898364890,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj instanceof RecordType) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                       .getLeastSupertype(prop);\n                }\n                defineInferredProperty(prop, typeTo",
      "EPVS": 1689898364891
    },
    {
      "rank": 5,
      "SSLB": 1689898364891,
      "ESLB": 1689898384911,
      "SPVS": 1689898384911,
      "SPVAP": 1689898384912,
      "EPVAP": 1689898384913,
      "SPVATF": 1689898384913,
      "EPVATF": 1689898386920,
      "SPVATR": 1689898386920,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                       .getLeastSupertype(propType);\n                }\n                defineInferredProperty(prop, type",
      "EPVS": 1689898386921
    },
    {
      "rank": 6,
      "SSLB": 1689898386921,
      "ESLB": 1689898406941,
      "SPVS": 1689898406941,
      "SPVAP": 1689898406942,
      "EPVAP": 1689898406943,
      "SPVATF": 1689898406943,
      "EPVATF": 1689898408948,
      "SPVATR": 1689898408948,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj.isRecordType())\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                       .getLeastSupertype(propType);\n                }\n                defineInferredProperty(prop, typeTo",
      "EPVS": 1689898408949
    },
    {
      "rank": 7,
      "SSLB": 1689898408949,
      "ESLB": 1689898428969,
      "SPVS": 1689898428969,
      "SPVAP": 1689898428970,
      "EPVAP": 1689898428971,
      "SPVATF": 1689898428971,
      "EPVATF": 1689898433980,
      "SPVATR": 1689898433980,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    for (String prop : constraintObj.getOwnPropertyNames()) {\n        JSType propType = constraintObj.getPropertyType(prop);\n        if (!isPropertyTypeDeclared(prop)) {\n            JSType typeToInfer = propType;\n            if (!hasProperty(prop)) {\n                typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                   .getLeastSupertype(propType);\n            }\n            defineInferredProperty(prop, typeToInfer, null);\n        }\n    }\n",
      "EPVS": 1689898433980
    },
    {
      "rank": 8,
      "SSLB": 1689898433980,
      "ESLB": 1689898454000,
      "SPVS": 1689898454000,
      "SPVAP": 1689898454001,
      "EPVAP": 1689898454002,
      "SPVATF": 1689898454002,
      "EPVATF": 1689898457010,
      "SPVATR": 1689898457010,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj!= null && constraintObj.isRecordType()) {\n        for (String prop : constraintObj.getOwnPropertyNames()) {\n            JSType propType = constraintObj.getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                       .getLeastSupertype(propType);\n                }\n                defineInferred",
      "EPVS": 1689898457010
    },
    {
      "rank": 9,
      "SSLB": 1689898457010,
      "ESLB": 1689898477031,
      "SPVS": 1689898477031,
      "SPVAP": 1689898477031,
      "EPVAP": 1689898477032,
      "SPVATF": 1689898477032,
      "EPVATF": 1689898479038,
      "SPVATR": 1689898479038,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (constraintObj instanceof RecordType) {\n        for (String prop : ((RecordType) constraintObj).getOwnPropertyNames()) {\n            JSType propType = ((RecordType) constraintObj).getPropertyType(prop);\n            if (!isPropertyTypeDeclared(prop)) {\n                JSType typeToInfer = propType;\n                if (!hasProperty(prop)) {\n                    typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                       .getLeastSupertype(propType);\n                }\n                ",
      "EPVS": 1689898479039
    }
  ],
  "SSLI": 1689890975924,
  "ESLI": 1689891005954,
  "hostname": "gros-51.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}