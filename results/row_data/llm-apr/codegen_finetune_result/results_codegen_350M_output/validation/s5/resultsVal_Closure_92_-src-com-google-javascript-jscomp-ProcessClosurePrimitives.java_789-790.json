{
  "key": "Closure_92_/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java_789-790",
  "proj": "Closure",
  "bug_id": "92",
  "loc": "789-790",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689903067483,
      "ESLB": 1689903087503,
      "SPVS": 1689903087503,
      "SPVAP": 1689903087504,
      "EPVAP": 1689903087505,
      "SPVATF": 1689903087505,
      "EPVATF": 1689903087505,
      "SPVATR": 1689903093515,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n",
      "EPVS": 1689903093516
    },
    {
      "rank": 1,
      "SSLB": 1689903093516,
      "ESLB": 1689903113536,
      "SPVS": 1689903113536,
      "SPVAP": 1689903113537,
      "EPVAP": 1689903113538,
      "SPVATF": 1689903113538,
      "EPVATF": 1689903113538,
      "SPVATR": 1689903114543,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n                Preconditions.checkNotNull(parentName);\n                Preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.getParent",
      "EPVS": 1689903114544
    },
    {
      "rank": 2,
      "SSLB": 1689903114544,
      "ESLB": 1689903134564,
      "SPVS": 1689903134564,
      "SPVAP": 1689903134565,
      "EPVAP": 1689903134566,
      "SPVATF": 1689903134566,
      "EPVATF": 1689903134566,
      "SPVATR": 1689903135570,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        replacementNode = createDeclarationNode();\n",
      "EPVS": 1689903135571
    },
    {
      "rank": 3,
      "SSLB": 1689903135571,
      "ESLB": 1689903155591,
      "SPVS": 1689903155591,
      "SPVAP": 1689903155592,
      "EPVAP": 1689903155593,
      "SPVATF": 1689903155593,
      "EPVATF": 1689903155593,
      "SPVATR": 1689903156598,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                 providedNames.get(namespace.substring(0, indexOfDot));\n                Preconditions.checkNotNull(parentName);\n                Preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.getParent",
      "EPVS": 1689903156599
    },
    {
      "rank": 4,
      "SSLB": 1689903156599,
      "ESLB": 1689903176619,
      "SPVS": 1689903176619,
      "SPVAP": 1689903176620,
      "EPVAP": 1689903176621,
      "SPVATF": 1689903176621,
      "EPVATF": 1689903176621,
      "SPVATR": 1689903177627,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n                Preconditions.checkNotNull(parentName);\n                Preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.get",
      "EPVS": 1689903177627
    },
    {
      "rank": 5,
      "SSLB": 1689903177627,
      "ESLB": 1689903197648,
      "SPVS": 1689903197648,
      "SPVAP": 1689903197648,
      "EPVAP": 1689903197649,
      "SPVATF": 1689903197649,
      "EPVATF": 1689903197649,
      "SPVATR": 1689903198654,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "    }\n    int indexOfDot = namespace.indexOf('.');\n",
      "EPVS": 1689903198655
    },
    {
      "rank": 6,
      "SSLB": 1689903198655,
      "ESLB": 1689903218675,
      "SPVS": 1689903218675,
      "SPVAP": 1689903218676,
      "EPVAP": 1689903218677,
      "SPVATF": 1689903218677,
      "EPVATF": 1689903218677,
      "SPVATR": 1689903219681,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        indexOfDot = namespace.indexOf('.');\n",
      "EPVS": 1689903219682
    },
    {
      "rank": 7,
      "SSLB": 1689903219682,
      "ESLB": 1689903239702,
      "SPVS": 1689903239702,
      "SPVAP": 1689903239703,
      "EPVAP": 1689903239704,
      "SPVATF": 1689903239704,
      "EPVATF": 1689903239704,
      "SPVATR": 1689903240709,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        int indexOfDot = namespace.indexOf('.');\n        if (indexOfDot == -1) {\n            compiler.getNodeForCodeInsertion(minimumModule)\n               .addChildToBack(replacementNode);\n        } else {\n            ProvidedName parentName =\n                providedNames.get(namespace.substring(0, indexOfDot));\n                preconditions.checkNotNull(parentName);\n                preconditions.checkNotNull(parentName.replacementNode);\n                parentName.replacementNode.get",
      "EPVS": 1689903240710
    },
    {
      "rank": 8,
      "SSLB": 1689903240710,
      "ESLB": 1689903260730,
      "SPVS": 1689903260730,
      "SPVAP": 1689903260731,
      "EPVAP": 1689903260732,
      "SPVATF": 1689903260732,
      "EPVATF": 1689903260732,
      "SPVATR": 1689903261736,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        indexOfDot = namespace.indexOf('.');\n    }\n    if (indexOfDot == -1) {\n        compiler.getNodeForCodeInsertion(minimumModule)\n           .addChildToBack(replacementNode);\n    } else {\n",
      "EPVS": 1689903261737
    },
    {
      "rank": 9,
      "SSLB": 1689903261737,
      "ESLB": 1689903281757,
      "SPVS": 1689903281757,
      "SPVAP": 1689903281758,
      "EPVAP": 1689903281759,
      "SPVATF": 1689903281759,
      "EPVATF": 1689903281759,
      "SPVATR": 1689903282764,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "        String namespacePrefix = getNamespacePrefix();\n        int indexOfDot = namespacePrefix.indexOf('.');\n",
      "EPVS": 1689903282765
    }
  ],
  "SSLI": 1689890975924,
  "ESLI": 1689891005954,
  "hostname": "gros-51.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}