{
  "key": "Closure_118_/src/com/google/javascript/jscomp/DisambiguateProperties.java_495-496",
  "proj": "Closure",
  "bug_id": "118",
  "loc": "495-496",
  "input_file": "codegen_350M_output.json",
  "path": "/src/com/google/javascript/jscomp/DisambiguateProperties.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689798617386,
      "ESLB": 1689798637406,
      "SPVS": 1689798637406,
      "SPVAP": 1689798637408,
      "EPVAP": 1689798637409,
      "SPVATF": 1689798637409,
      "EPVATF": 1689798639416,
      "SPVATR": 1689798639416,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"String_Node_Str",
      "EPVS": 1689798639417
    },
    {
      "rank": 1,
      "SSLB": 1689798639417,
      "ESLB": 1689798659437,
      "SPVS": 1689798659437,
      "SPVAP": 1689798659439,
      "EPVAP": 1689798659440,
      "SPVATF": 1689798659440,
      "EPVATF": 1689798669459,
      "SPVATR": 1689798669459,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "",
      "EPVS": 1689798669460
    },
    {
      "rank": 2,
      "SSLB": 1689798669460,
      "ESLB": 1689798689481,
      "SPVS": 1689798689481,
      "SPVAP": 1689798689486,
      "EPVAP": 1689798689487,
      "SPVATF": 1689798689487,
      "EPVATF": 1689798691507,
      "SPVATR": 1689798691507,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceFirst(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689798691508
    },
    {
      "rank": 3,
      "SSLB": 1689798691508,
      "ESLB": 1689798711529,
      "SPVS": 1689798711529,
      "SPVAP": 1689798711530,
      "EPVAP": 1689798711531,
      "SPVATF": 1689798711531,
      "EPVATF": 1689798713537,
      "SPVATR": 1689798713537,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String objectLitKey = child.getString();\n    T type = typeSystem.getType(getScope(), n, objectLitKey);\n    Property prop = getProperty(objectLitKey);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(objectLitKey)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(objectLitKey), \"",
      "EPVS": 1689798713538
    },
    {
      "rank": 4,
      "SSLB": 1689798713538,
      "ESLB": 1689798733558,
      "SPVS": 1689798733558,
      "SPVAP": 1689798733560,
      "EPVAP": 1689798733561,
      "SPVATF": 1689798733561,
      "EPVATF": 1689798735568,
      "SPVATR": 1689798735568,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replaceAll(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name),",
      "EPVS": 1689798735569
    },
    {
      "rank": 5,
      "SSLB": 1689798735569,
      "ESLB": 1689798755590,
      "SPVS": 1689798755590,
      "SPVAP": 1689798755591,
      "EPVAP": 1689798755592,
      "SPVATF": 1689798755592,
      "EPVATF": 1689798758602,
      "SPVATR": 1689798758602,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    Property prop = getProperty(child);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n",
      "EPVS": 1689798758603
    },
    {
      "rank": 6,
      "SSLB": 1689798758603,
      "ESLB": 1689798778623,
      "SPVS": 1689798778623,
      "SPVAP": 1689798778625,
      "EPVAP": 1689798778626,
      "SPVATF": 1689798778626,
      "EPVATF": 1689798780634,
      "SPVATR": 1689798780634,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    String name = child.getString().replace(\"String_Node_Str\", \"String_Node_Str\");\n    T type = typeSystem.getType(getScope(), n, name);\n    Property prop = getProperty(name);\n    if (!prop.scheduleRenaming(child,\n                                processProperty(t, prop, type, null))) {\n                                if (propertiesToErrorFor.containsKey(name)) {\n                                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), \"",
      "EPVS": 1689798780635
    },
    {
      "rank": 7,
      "SSLB": 1689798780635,
      "ESLB": 1689798800655,
      "SPVS": 1689798800655,
      "SPVAP": 1689798800656,
      "EPVAP": 1689798800658,
      "SPVATF": 1689798800658,
      "EPVATF": 1689798802665,
      "SPVATR": 1689798802665,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, name, child.",
      "EPVS": 1689798802666
    },
    {
      "rank": 8,
      "SSLB": 1689798802666,
      "ESLB": 1689798822686,
      "SPVS": 1689798822686,
      "SPVAP": 1689798822688,
      "EPVAP": 1689798822689,
      "SPVATF": 1689798822689,
      "EPVATF": 1689798831714,
      "SPVATR": 1689798831714,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "    String objectLitKey = child.getString();\n",
      "EPVS": 1689798831715
    },
    {
      "rank": 9,
      "SSLB": 1689798831715,
      "ESLB": 1689798851735,
      "SPVS": 1689798851735,
      "SPVAP": 1689798851737,
      "EPVAP": 1689798851738,
      "SPVATF": 1689798851738,
      "EPVATF": 1689798854747,
      "SPVATR": 1689798854747,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "    if (child.isStringKey()) {\n        String name = child.getString();\n        T type = typeSystem.getType(getScope(), n, name);\n        Property prop = getProperty(name);\n        if (!prop.scheduleRenaming(child,\n            processProperty(t, prop, type, null))) {\n                if (propertiesToErrorFor.containsKey(name)) {\n                    compiler.report(JSError.make(t.getSourceName(), child, propertiesToErrorFor.get(name), type, \"String_Node",
      "EPVS": 1689798854748
    }
  ],
  "SSLI": 1689795013632,
  "ESLI": 1689795043662,
  "hostname": "gros-49.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}