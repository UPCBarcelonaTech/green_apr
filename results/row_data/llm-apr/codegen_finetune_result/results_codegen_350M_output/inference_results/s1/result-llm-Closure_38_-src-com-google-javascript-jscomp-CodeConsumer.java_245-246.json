{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1689751030398",
  "GPR[ESLB]": "1689751050418",
  "file": "Closure_38_/src/com/google/javascript/jscomp/CodeConsumer.java_245-246",
  "input": {
    "loc": "245-246",
    "input": "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x && !negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n"
  },
  "nvidea": "measures-nvidea-Closure_38_-src-com-google-javascript-jscomp-CodeConsumer.java_245-246.txt",
  "OAR_JOB_ID": "1561075",
  "GPR[SSLI]": "1689750168385",
  "GPR[ESLI]": "1689750198415",
  "GPR[SPS]": "1689751050447",
  "nrTokens": 245,
  "status": "ok",
  "GPR[EPS]": "1689751051390",
  "time": 943,
  "tokentime": 2,
  "inferencetime": 941,
  "output": [
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (x < 0) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (x < 0 && prev == '-')\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (x < 0 || prev == '-') {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (x < 0 && negativeZero) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (x < 0 && prev!= '-') {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (prev == '-') {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (x < 0 || (long) x == x) {\n<|endoftext|><|endoftext|><|endoftext|>",
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (x < 0 && isNegativeZero(x)) {\n<|endoftext|><|endoftext|><|endoftext|>",
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (x < 0 && isNegativeZero(prev)) {\n<|endoftext|><|endoftext|><|endoftext|>",
    "void addNumber(double x) {\n  char prev = getLastChar();\n  boolean negativeZero = isNegativeZero(x);\n// buggy lines start:\n  if (x < 0 && prev == '-') {\n// buggy lines end:\n    add(\" \");\n  }\n  if ((long) x == x &&!negativeZero) {\n    long value = (long) x;\n    long mantissa = value;\n    int exp = 0;\n    if (Math.abs(x) >= 100) {\n      while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n        mantissa /= 10;\n        exp++;\n      }\n    }\n    if (exp > 2) {\n      add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n    } else {\n      add(Long.toString(value));\n    }\n  } else {\n    add(String.valueOf(x));\n  }\n}\n// fixed lines: \n    if (x < 0 && prev == '-' && negativeZero) {\n<|endoftext|>"
  ]
}