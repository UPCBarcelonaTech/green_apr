{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1689797882465",
  "GPR[ESLB]": "1689797902485",
  "file": "Lang_6_/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java_95-96",
  "input": {
    "loc": "95-96",
    "input": "<s> public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException(\"The Writer must not be null\"); } if (input == null) { return; } int pos = 0; int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; } for (int pt = 0; pt < consumed; pt++) { </s> pos += Character.charCount(Character.codePointAt(input, pos)); </s> } } } </s> java",
    "output": [
      "pos += Character.charCount(input.charAt(pos));",
      "pos += Character.codePointAt(input, pos);",
      "pos += Character.charCount(c);",
      "pos += Character.charCount(input.charAt(pt));",
      "pos += Character.charCount(input);",
      "pos += Character.codePointAt(input, pt);",
      "pos += Character.charCount(input, pos);",
      "pos += Character.charCount(input[pos]);",
      "pos += Character.charCount(p);",
      "pos += c.length;"
    ]
  },
  "nvidea": "measures-nvidea-Lang_6_-src-main-java-org-apache-commons-lang3-text-translate-CharSequenceTranslator.java_95-96.txt",
  "OAR_JOB_ID": "1560165",
  "GPR[SSLI]": "1689796363570",
  "GPR[ESLI]": "1689796393600",
  "GPR[SPS]": "1689797902528",
  "nrTokens": 153,
  "status": "ok",
  "GPR[EPS]": "1689797902674",
  "time": 146,
  "tokentime": 2,
  "inferencetime": 144,
  "output": [
    "pos += Character.charCount(input.charAt(pos));",
    "pos += Character.codePointAt(input, pos);",
    "pos += Character.charCount(c);",
    "pos += Character.charCount(input.charAt(pt));",
    "pos += Character.charCount(input);",
    "pos += Character.codePointAt(input, pt);",
    "pos += Character.charCount(input, pos);",
    "pos += Character.charCount(input[pos]);",
    "pos += Character.charCount(p);",
    "pos += c.length;"
  ]
}