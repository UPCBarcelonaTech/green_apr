{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1689847358185",
  "GPR[ESLB]": "1689847378205",
  "file": "Math_82_/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java_82-83",
  "input": {
    "loc": "82-83",
    "input": "<s> private Integer getPivotRow(final int col, final SimplexTableau tableau) { double minRatio = Double.MAX_VALUE; Integer minRatioPos = null; for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) { final double rhs = tableau.getEntry(i, tableau.getWidth() - 1); final double entry = tableau.getEntry(i, col); </s> if (MathUtils.compareTo(entry, 0, epsilon) >= 0) { </s> final double ratio = rhs / entry; if (ratio < minRatio) { minRatio = ratio; minRatioPos = i; } } } return minRatioPos; } </s> java",
    "output": [
      "if (MathUtils.abs(entry - rhs) >= epsilon) {",
      "if (MathUtils.compareTo(entry, rhs, epsilon) >= 0) {",
      "if (MathUtils.compare(entry, 0, epsilon) >= 0) {",
      "if (MathUtils.compare(entry, rhs, epsilon) >= 0) {",
      "if (MathUtils.abs(entry) >= epsilon) {",
      "if (MathUtils.compareTo(entry, epsilon) >= 0) {",
      "if (MathUtils.compareTo(entry, 0, epsilon) <= 0) {",
      "if (MathUtils.compareTo(entry, rhs) >= 0) {",
      "if (MathUtils.compareTo(entry, 0, epsilon) < 0) {",
      "if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {"
    ]
  },
  "nvidea": "measures-nvidea-Math_82_-src-main-java-org-apache-commons-math-optimization-linear-SimplexSolver.java_82-83.txt",
  "OAR_JOB_ID": "1561512",
  "GPR[SSLI]": "1689845065326",
  "GPR[ESLI]": "1689845095356",
  "GPR[SPS]": "1689847378237",
  "nrTokens": 150,
  "status": "ok",
  "GPR[EPS]": "1689847378391",
  "time": 154,
  "tokentime": 2,
  "inferencetime": 152,
  "output": [
    "if (MathUtils.abs(entry - rhs) >= epsilon) {",
    "if (MathUtils.compareTo(entry, rhs, epsilon) >= 0) {",
    "if (MathUtils.compare(entry, 0, epsilon) >= 0) {",
    "if (MathUtils.compare(entry, rhs, epsilon) >= 0) {",
    "if (MathUtils.abs(entry) >= epsilon) {",
    "if (MathUtils.compareTo(entry, epsilon) >= 0) {",
    "if (MathUtils.compareTo(entry, 0, epsilon) <= 0) {",
    "if (MathUtils.compareTo(entry, rhs) >= 0) {",
    "if (MathUtils.compareTo(entry, 0, epsilon) < 0) {",
    "if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {"
  ]
}