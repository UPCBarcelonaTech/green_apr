{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1689845186574",
  "GPR[ESLB]": "1689845206594",
  "file": "Closure_46_src/com/google/javascript/rhino/jstype/RecordType.java_142-145",
  "input": {
    "loc": "142-145",
    "input": "<s> @Override public JSType getLeastSupertype(JSType that) { </s> if (!that.isRecordType()) { return super.getLeastSupertype(that); } </s> RecordTypeBuilder builder = new RecordTypeBuilder(registry); for (String property : properties.keySet()) { if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo( getPropertyType(property))) { builder.addProperty(property, getPropertyType(property), getPropertyNode(property)); } } return builder.build(); } </s> java",
    "output": [
      "JSTypeLeastSupertype = super.getLeastSupertype(that);",
      "JSType result = super.getLeastSupertype(that);",
      "JSType type = super.getLeastSupertype(that);",
      "JSType ret = super.getLeastSupertype(that);",
      "JSType root = super.getLeastSupertype(that);",
      "JSType min = super.getLeastSupertype(that);",
      "return super.getLeastSupertype(that);",
      "JSTypeLeastSupertype = that.getLeastSupertype(that);",
      "JSTypeLeastSupertype = that.getLeastSupertype();",
      "JSTypeLeastSupertype = JSType.LeastSupertype(that);"
    ]
  },
  "nvidea": "measures-nvidea-Closure_46_src-com-google-javascript-rhino-jstype-RecordType.java_142-145.txt",
  "OAR_JOB_ID": "1561512",
  "GPR[SSLI]": "1689845065326",
  "GPR[ESLI]": "1689845095356",
  "GPR[SPS]": "1689845206637",
  "nrTokens": 126,
  "status": "ok",
  "GPR[EPS]": "1689845206790",
  "time": 153,
  "tokentime": 2,
  "inferencetime": 151,
  "output": [
    "JSTypeLeastSupertype = super.getLeastSupertype(that);",
    "JSType result = super.getLeastSupertype(that);",
    "JSType type = super.getLeastSupertype(that);",
    "JSType ret = super.getLeastSupertype(that);",
    "JSType root = super.getLeastSupertype(that);",
    "JSType min = super.getLeastSupertype(that);",
    "return super.getLeastSupertype(that);",
    "JSTypeLeastSupertype = that.getLeastSupertype(that);",
    "JSTypeLeastSupertype = that.getLeastSupertype();",
    "JSTypeLeastSupertype = JSType.LeastSupertype(that);"
  ]
}