{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1689846749770",
  "GPR[ESLB]": "1689846769790",
  "file": "Lang_43_/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java_422-423",
  "input": {
    "loc": "422-423",
    "input": "<s> private StringBuffer appendQuotedString(String pattern, ParsePosition pos, StringBuffer appendTo, boolean escapingOn) { int start = pos.getIndex(); char[] c = pattern.toCharArray(); if (escapingOn && c[start] == QUOTE) { </s> return appendTo == null ? null : appendTo.append(QUOTE); </s> } int lastHold = start; for (int i = pos.getIndex(); i < pattern.length(); i++) { if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) { appendTo.append(c, lastHold, pos.getIndex() - lastHold).append( QUOTE); pos.setIndex(i + ESCAPED_QUOTE.length()); lastHold = pos.getIndex(); continue; } switch (c[pos.getIndex()]) { case QUOTE: next(pos); return appendTo == null ? null : appendTo.append(c, lastHold, pos.getIndex() - lastHold); default: next(pos); } } throw new IllegalArgumentException( \"Unterminated quoted string at position \" + start); } </s> java",
    "output": [
      "return null;",
      "return appendTo == null? null : appendTo.toString();",
      "return appendTo;",
      "return new StringBuffer(QUOTE);",
      "return '\\0';",
      "return quote;",
      "return buffer;",
      "return new StringBuffer();",
      "return new StringBuilder();",
      "return appendTo == null;"
    ]
  },
  "nvidea": "measures-nvidea-Lang_43_-src-java-org-apache-commons-lang-text-ExtendedMessageFormat.java_422-423.txt",
  "OAR_JOB_ID": "1561512",
  "GPR[SSLI]": "1689845065326",
  "GPR[ESLI]": "1689845095356",
  "GPR[SPS]": "1689846769830",
  "nrTokens": 243,
  "status": "ok",
  "GPR[EPS]": "1689846769959",
  "time": 129,
  "tokentime": 3,
  "inferencetime": 126,
  "output": [
    "return null;",
    "return appendTo == null? null : appendTo.toString();",
    "return appendTo;",
    "return new StringBuffer(QUOTE);",
    "return '\\0';",
    "return quote;",
    "return buffer;",
    "return new StringBuffer();",
    "return new StringBuilder();",
    "return appendTo == null;"
  ]
}