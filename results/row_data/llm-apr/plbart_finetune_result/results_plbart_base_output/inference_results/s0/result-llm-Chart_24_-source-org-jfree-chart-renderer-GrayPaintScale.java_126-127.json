{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1688579324574",
  "GPR[ESLB]": "1688579344594",
  "file": "Chart_24_/source/org/jfree/chart/renderer/GrayPaintScale.java_126-127",
  "input": {
    "loc": "126-127",
    "input": "<s> public Paint getPaint(double value) { double v = Math.max(value, this.lowerBound); v = Math.min(v, this.upperBound); </s> int g = (int) ((value - this.lowerBound) / (this.upperBound </s> - this.lowerBound) * 255.0); return new Color(g, g, g); } </s> java",
    "output": [
      "int g = (int) ((value - this.lowerBound) / (this.upperBound - this.lowerBound));",
      "int g = (int) ((value - this.lowerBound) / this.upperBound);",
      "int g = (int) ((value - this.lowerBound) / (this.upperBound + 1) * 255.0);",
      "int g = (int) ((value - this.lowerBound) / (this.upperBound - 1));",
      "int g = (int) ((value - this.lowerBound) / (this.upperBound - this.upperBound));",
      "int g = (int) ((value - this.upperBound) / (this.upperBound - this.lowerBound));",
      "int g = (int) ((value - this.lowerBound) / (this.upperBound - 1) * 255.0);",
      "int g = (int) ((value - this.lowerBound) / (this.upperBound + 1));",
      "float g = (float) ((value - this.lowerBound) / (this.upperBound - this.lowerBound));",
      "int g = (int) ((value - this.lowerBound) / (this.upperBound));"
    ]
  },
  "nvidea": "measures-nvidea-Chart_24_-source-org-jfree-chart-renderer-GrayPaintScale.java_126-127.txt",
  "OAR_JOB_ID": "1552436",
  "GPR[SSLI]": "1688578782087",
  "GPR[ESLI]": "1688578812118",
  "GPR[SPS]": "1688579344634",
  "nrTokens": 84,
  "status": "ok",
  "GPR[EPS]": "1688579344876",
  "time": 242,
  "tokentime": 2,
  "inferencetime": 240,
  "output": [
    "int g = (int) ((value - this.lowerBound) / (this.upperBound - this.lowerBound));",
    "int g = (int) ((value - this.lowerBound) / this.upperBound);",
    "int g = (int) ((value - this.lowerBound) / (this.upperBound + 1) * 255.0);",
    "int g = (int) ((value - this.lowerBound) / (this.upperBound - 1));",
    "int g = (int) ((value - this.lowerBound) / (this.upperBound - this.upperBound));",
    "int g = (int) ((value - this.upperBound) / (this.upperBound - this.lowerBound));",
    "int g = (int) ((value - this.lowerBound) / (this.upperBound - 1) * 255.0);",
    "int g = (int) ((value - this.lowerBound) / (this.upperBound + 1));",
    "float g = (float) ((value - this.lowerBound) / (this.upperBound - this.lowerBound));",
    "int g = (int) ((value - this.lowerBound) / (this.upperBound));"
  ]
}