{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1688579081254",
  "GPR[ESLB]": "1688579101275",
  "file": "Math_98_src/java/org/apache/commons/math/linear/BigMatrixImpl.java_991-992",
  "input": {
    "loc": "991-992",
    "input": "<s> public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException { if (v.length != this.getColumnDimension()) { throw new IllegalArgumentException(\"vector has wrong length\"); } final int nRows = this.getRowDimension(); final int nCols = this.getColumnDimension(); </s> final BigDecimal[] out = new BigDecimal[v.length]; </s> for (int row = 0; row < nRows; row++) { BigDecimal sum = ZERO; for (int i = 0; i < nCols; i++) { sum = sum.add(data[row][i].multiply(v[i])); } out[row] = sum; } return out; } </s> java",
    "output": [
      "final BigDecimal[] out = new BigDecimal[nRows];",
      "final BigDecimal[] out = new BigDecimal[data.length];",
      "BigDecimal[] out = new BigDecimal[nRows];",
      "final BigDecimal[] out = new BigDecimal[nCols];",
      "BigDecimal[] out = new BigDecimal[v.length];",
      "final BigDecimal[] out = new BigDecimal[rowDimension];",
      "final BigDecimal[] out = new BigDecimal[nRows + 1];",
      "final BigDecimal[] out = new BigDecimal[nRows - 1];",
      "final BigDecimal[] out = null;",
      "final BigDecimal[] out;"
    ]
  },
  "nvidea": "measures-nvidea-Math_98_src-java-org-apache-commons-math-linear-BigMatrixImpl.java_991-992.txt",
  "OAR_JOB_ID": "1552436",
  "GPR[SSLI]": "1688578782087",
  "GPR[ESLI]": "1688578812118",
  "GPR[SPS]": "1688579101317",
  "nrTokens": 142,
  "status": "ok",
  "GPR[EPS]": "1688579101460",
  "time": 143,
  "tokentime": 2,
  "inferencetime": 141,
  "output": [
    "final BigDecimal[] out = new BigDecimal[nRows];",
    "final BigDecimal[] out = new BigDecimal[data.length];",
    "BigDecimal[] out = new BigDecimal[nRows];",
    "final BigDecimal[] out = new BigDecimal[nCols];",
    "BigDecimal[] out = new BigDecimal[v.length];",
    "final BigDecimal[] out = new BigDecimal[rowDimension];",
    "final BigDecimal[] out = new BigDecimal[nRows + 1];",
    "final BigDecimal[] out = new BigDecimal[nRows - 1];",
    "final BigDecimal[] out = null;",
    "final BigDecimal[] out;"
  ]
}