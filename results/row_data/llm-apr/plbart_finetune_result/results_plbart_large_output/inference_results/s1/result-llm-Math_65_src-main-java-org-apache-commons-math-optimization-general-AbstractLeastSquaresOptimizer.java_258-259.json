{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1689799361878",
  "GPR[ESLB]": "1689799381899",
  "file": "Math_65_src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java_258-259",
  "input": {
    "loc": "258-259",
    "input": "<s> public double getChiSquare() { double chiSquare = 0; for (int i = 0; i < rows; ++i) { final double residual = residuals[i]; </s> chiSquare += residual * residual / residualsWeights[i]; </s> } return chiSquare; } </s> java",
    "output": [
      "chiSquare += residual * residual / weights[i];",
      "chiSquare += residual * residual / residualsWeights[i + 1];",
      "chiSquare += residual * residual / residualsWeights[i - 1];",
      "chiSquare += residual * residual / residualWeights[i + 1];",
      "chiSquare += residual * residual / residualWeights[i - 1];",
      "chiSquare += residual * residual / residualWeights[i].doubleValue();",
      "chiSquare += residual * residual / residualWeights[i];",
      "chiSquare += residual * residual * residual / residualsWeights[i];",
      "chiSquare += residual * residual * residual / residualWeights[i];",
      "chiSquare += residual / residualsWeights[i];"
    ]
  },
  "nvidea": "measures-nvidea-Math_65_src-main-java-org-apache-commons-math-optimization-general-AbstractLeastSquaresOptimizer.java_258-259.txt",
  "OAR_JOB_ID": "1560165",
  "GPR[SSLI]": "1689799108245",
  "GPR[ESLI]": "1689799138275",
  "GPR[SPS]": "1689799381938",
  "nrTokens": 61,
  "status": "ok",
  "GPR[EPS]": "1689799382217",
  "time": 279,
  "tokentime": 3,
  "inferencetime": 276,
  "output": [
    "chiSquare += residual * residual / weights[i];",
    "chiSquare += residual * residual / residualsWeights[i + 1];",
    "chiSquare += residual * residual / residualsWeights[i - 1];",
    "chiSquare += residual * residual / residualWeights[i + 1];",
    "chiSquare += residual * residual / residualWeights[i - 1];",
    "chiSquare += residual * residual / residualWeights[i].doubleValue();",
    "chiSquare += residual * residual / residualWeights[i];",
    "chiSquare += residual * residual * residual / residualsWeights[i];",
    "chiSquare += residual * residual * residual / residualWeights[i];",
    "chiSquare += residual / residualsWeights[i];"
  ]
}