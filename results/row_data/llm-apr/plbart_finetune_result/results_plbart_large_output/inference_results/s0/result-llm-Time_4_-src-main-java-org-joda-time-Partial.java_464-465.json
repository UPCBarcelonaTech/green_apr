{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1688584196650",
  "GPR[ESLB]": "1688584216670",
  "file": "Time_4_/src/main/java/org/joda/time/Partial.java_464-465",
  "input": {
    "loc": "464-465",
    "input": "<s> public Partial with(DateTimeFieldType fieldType, int value) { if (fieldType == null) { throw new IllegalArgumentException(\"The field type must not be null\"); } int index = indexOf(fieldType); if (index == -1) { DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1]; int[] newValues = new int[newTypes.length]; int i = 0; DurationField unitField = fieldType.getDurationType().getField(iChronology); if (unitField.isSupported()) { for (; i < iTypes.length; i++) { DateTimeFieldType loopType = iTypes[i]; DurationField loopUnitField = loopType.getDurationType().getField(iChronology); if (loopUnitField.isSupported()) { int compare = unitField.compareTo(loopUnitField); if (compare > 0) { break; } else if (compare == 0) { DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology); DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology); if (rangeField.compareTo(loopRangeField) > 0) { break; } } } } } System.arraycopy(iTypes, 0, newTypes, 0, i); System.arraycopy(iValues, 0, newValues, 0, i); newTypes[i] = fieldType; newValues[i] = value; System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1); System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1); </s> Partial newPartial = new Partial(iChronology, newTypes, newValues); </s> iChronology.validate(newPartial, newValues); return newPartial; } if (value == getValue(index)) { return this; } int[] newValues = getValues(); newValues = getField(index).set(this, index, newValues, value); return new Partial(this, newValues); } </s> java",
    "output": [
      "final Partial newPartial = new Partial(iChronology, newTypes, newValues);",
      "Partial newPartial = new Partial(this, newTypes, newValues);",
      "Partial newPartial = new Partial(iChronology, newTypes, value);",
      "Partial newPartial = new Partial(newTypes, newValues);",
      "Partial newPartial = new Partial(iChronology, newTypes, newValues, false);",
      "Partial newPartial = new Partial(iChronology, newTypes, newValues, value);",
      "Partial newPartial = new Partial(newChronology, newTypes, newValues);",
      "partial = new Partial(iChronology, newTypes, newValues);",
      "Partial newPartial = new Partial(iChronology, newTypes, newValues, true);",
      "Partial newPartial = new Partial(iChronology, newTypes, newValues, index);"
    ]
  },
  "nvidea": "measures-nvidea-Time_4_-src-main-java-org-joda-time-Partial.java_464-465.txt",
  "OAR_JOB_ID": "1552436",
  "GPR[SSLI]": "1688581525505",
  "GPR[ESLI]": "1688581555535",
  "GPR[SPS]": "1688584216710",
  "nrTokens": 428,
  "status": "ok",
  "GPR[EPS]": "1688584217119",
  "time": 409,
  "tokentime": 4,
  "inferencetime": 405,
  "output": [
    "final Partial newPartial = new Partial(iChronology, newTypes, newValues);",
    "Partial newPartial = new Partial(this, newTypes, newValues);",
    "Partial newPartial = new Partial(iChronology, newTypes, value);",
    "Partial newPartial = new Partial(newTypes, newValues);",
    "Partial newPartial = new Partial(iChronology, newTypes, newValues, false);",
    "Partial newPartial = new Partial(iChronology, newTypes, newValues, value);",
    "Partial newPartial = new Partial(newChronology, newTypes, newValues);",
    "partial = new Partial(iChronology, newTypes, newValues);",
    "Partial newPartial = new Partial(iChronology, newTypes, newValues, true);",
    "Partial newPartial = new Partial(iChronology, newTypes, newValues, index);"
  ]
}