{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1688581861359",
  "GPR[ESLB]": "1688581881379",
  "file": "Chart_3_/source/org/jfree/data/time/TimeSeries.java_1057-1058",
  "input": {
    "loc": "1057-1058",
    "input": "<s> public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException(\"Requires start >= 0.\"); } if (end < start) { throw new IllegalArgumentException(\"Requires start <= end.\"); } TimeSeries copy = (TimeSeries) super.clone(); </s> copy.data = new java.util.ArrayList(); </s> if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { copy.add(clone); } catch (SeriesException e) { e.printStackTrace(); } } } return copy; } </s> java",
    "output": [
      "copy.data = new ArrayList<TimeSeriesDataItem>();",
      "copy.data = new ArrayList<TimeSeriesDataItem>();",
      "copy.data = new ArrayList();",
      "copy.data.clear();",
      "copy.data = new ArrayList<>();",
      "copy.data = new.util.ArrayList<TimeSeriesDataItem>();",
      "copy.data = new TimeSeriesDataItem.util.ArrayList();",
      "copy.data = new List<TimeSeriesDataItem>();",
      "copy.data = new ArrayList<DataItem>();",
      "copy.data = new LinkedList();"
    ]
  },
  "nvidea": "measures-nvidea-Chart_3_-source-org-jfree-data-time-TimeSeries.java_1057-1058.txt",
  "OAR_JOB_ID": "1552436",
  "GPR[SSLI]": "1688581525505",
  "GPR[ESLI]": "1688581555535",
  "GPR[SPS]": "1688581881421",
  "nrTokens": 166,
  "status": "ok",
  "GPR[EPS]": "1688581881752",
  "time": 331,
  "tokentime": 3,
  "inferencetime": 328,
  "output": [
    "copy.data = new ArrayList<TimeSeriesDataItem>();",
    "copy.data = new ArrayList<TimeSeriesDataItem>();",
    "copy.data = new ArrayList();",
    "copy.data.clear();",
    "copy.data = new ArrayList<>();",
    "copy.data = new.util.ArrayList<TimeSeriesDataItem>();",
    "copy.data = new TimeSeriesDataItem.util.ArrayList();",
    "copy.data = new List<TimeSeriesDataItem>();",
    "copy.data = new ArrayList<DataItem>();",
    "copy.data = new LinkedList();"
  ]
}