{
  "hostname": "gemini-1.lyon.grid5000.fr",
  "GPR[SSLB]": "1688581922635",
  "GPR[ESLB]": "1688581942655",
  "file": "Chart_9_/source/org/jfree/data/time/TimeSeries.java_944-945",
  "input": {
    "loc": "944-945",
    "input": "<s> public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end) throws CloneNotSupportedException { if (start == null) { throw new IllegalArgumentException(\"Null 'start' argument.\"); } if (end == null) { throw new IllegalArgumentException(\"Null 'end' argument.\"); } if (start.compareTo(end) > 0) { throw new IllegalArgumentException( \"Requires start on or before end.\"); } boolean emptyRange = false; int startIndex = getIndex(start); if (startIndex < 0) { startIndex = -(startIndex + 1); if (startIndex == this.data.size()) { emptyRange = true; } } int endIndex = getIndex(end); if (endIndex < 0) { endIndex = -(endIndex + 1); endIndex = endIndex - 1; } </s> if (endIndex < 0) { </s> emptyRange = true; } if (emptyRange) { TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); return copy; } else { return createCopy(startIndex, endIndex); } } </s> java",
    "output": [
      "if (endIndex < 0) {",
      "if (endIndex < this.data.size()) {",
      "if (endIndex >= this.data.size()) {",
      "if (endIndex < startIndex) {",
      "if (endIndex == -1) {",
      "if (endIndex < 0)",
      "if (endIndex <= 0) {",
      "if (endIndex == 0) {",
      "if (startIndex < 0) {",
      "if (endIndex < 0 || startIndex < 0) {"
    ]
  },
  "nvidea": "measures-nvidea-Chart_9_-source-org-jfree-data-time-TimeSeries.java_944-945.txt",
  "OAR_JOB_ID": "1552436",
  "GPR[SSLI]": "1688581525505",
  "GPR[ESLI]": "1688581555535",
  "GPR[SPS]": "1688581942696",
  "nrTokens": 223,
  "status": "ok",
  "GPR[EPS]": "1688581942927",
  "time": 231,
  "tokentime": 3,
  "inferencetime": 228,
  "output": [
    "if (endIndex < 0) {",
    "if (endIndex < this.data.size()) {",
    "if (endIndex >= this.data.size()) {",
    "if (endIndex < startIndex) {",
    "if (endIndex == -1) {",
    "if (endIndex < 0)",
    "if (endIndex <= 0) {",
    "if (endIndex == 0) {",
    "if (startIndex < 0) {",
    "if (endIndex < 0 || startIndex < 0) {"
  ]
}