{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "plbart_large_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689814550404,
      "ESLB": 1689814570424,
      "SPVS": 1689814570424,
      "SPVAP": 1689814570426,
      "EPVAP": 1689814570427,
      "SPVATF": 1689814570427,
      "EPVATF": 1689814570427,
      "SPVATR": 1689814575436,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node!= null) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689814575437
    },
    {
      "rank": 1,
      "SSLB": 1689814575437,
      "ESLB": 1689814595458,
      "SPVS": 1689814595458,
      "SPVAP": 1689814595459,
      "EPVAP": 1689814595461,
      "SPVATF": 1689814595461,
      "EPVATF": 1689814595461,
      "SPVATR": 1689814597470,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689814597471
    },
    {
      "rank": 2,
      "SSLB": 1689814597471,
      "ESLB": 1689814617491,
      "SPVS": 1689814617491,
      "SPVAP": 1689814617497,
      "EPVAP": 1689814617498,
      "SPVATF": 1689814617498,
      "EPVATF": 1689814617498,
      "SPVATR": 1689814622508,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "Node n = node.getFirstChild(); if (n!= null) { if (n.getType() == Token.CALL) { Node child = n.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689814622509
    },
    {
      "rank": 3,
      "SSLB": 1689814622509,
      "ESLB": 1689814642529,
      "SPVS": 1689814642529,
      "SPVAP": 1689814642531,
      "EPVAP": 1689814642532,
      "SPVATF": 1689814642532,
      "EPVATF": 1689814642532,
      "SPVATR": 1689814647543,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString());",
      "EPVS": 1689814647544
    },
    {
      "rank": 4,
      "SSLB": 1689814647544,
      "ESLB": 1689814667545,
      "SPVS": 1689814667545,
      "SPVAP": 1689814667547,
      "EPVAP": 1689814667548,
      "SPVATF": 1689814667548,
      "EPVATF": 1689814667548,
      "SPVATR": 1689814672574,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689814672575
    },
    {
      "rank": 5,
      "SSLB": 1689814672575,
      "ESLB": 1689814692595,
      "SPVS": 1689814692595,
      "SPVAP": 1689814692599,
      "EPVAP": 1689814692601,
      "SPVATF": 1689814692601,
      "EPVATF": 1689814692601,
      "SPVATR": 1689814697610,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { if (node.getFirstChild().getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689814697611
    },
    {
      "rank": 6,
      "SSLB": 1689814697611,
      "ESLB": 1689814717631,
      "SPVS": 1689814717631,
      "SPVAP": 1689814717635,
      "EPVAP": 1689814717636,
      "SPVATF": 1689814717636,
      "EPVATF": 1689814717636,
      "SPVATR": 1689814722646,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) { findCalledFunctions(c, changed);",
      "EPVS": 1689814722648
    },
    {
      "rank": 7,
      "SSLB": 1689814722648,
      "ESLB": 1689814742668,
      "SPVS": 1689814742668,
      "SPVAP": 1689814742669,
      "EPVAP": 1689814742670,
      "SPVATF": 1689814742670,
      "EPVATF": 1689814742670,
      "SPVATR": 1689814747697,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString());",
      "EPVS": 1689814747698
    },
    {
      "rank": 8,
      "SSLB": 1689814747698,
      "ESLB": 1689814767718,
      "SPVS": 1689814767718,
      "SPVAP": 1689814767722,
      "EPVAP": 1689814767723,
      "SPVATF": 1689814767723,
      "EPVATF": 1689814767723,
      "SPVATR": 1689814769731,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689814769732
    },
    {
      "rank": 9,
      "SSLB": 1689814769732,
      "ESLB": 1689814789752,
      "SPVS": 1689814789752,
      "SPVAP": 1689814789753,
      "EPVAP": 1689814789754,
      "SPVATF": 1689814789754,
      "EPVATF": 1689814789754,
      "SPVATR": 1689814791762,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString()); }",
      "EPVS": 1689814791763
    }
  ],
  "SSLI": 1689797531731,
  "ESLI": 1689797561761,
  "hostname": "gros-43.nancy.grid5000.fr",
  "OAR_JOB_ID": "4241554"
}