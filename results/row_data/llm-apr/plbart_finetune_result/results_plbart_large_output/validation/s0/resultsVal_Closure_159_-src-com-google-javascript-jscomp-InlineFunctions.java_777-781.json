{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "plbart_large_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688168873459,
      "ESLB": 1688168893479,
      "SPVS": 1688168893479,
      "SPVAP": 1688168893481,
      "EPVAP": 1688168893482,
      "SPVATF": 1688168893482,
      "EPVATF": 1688168893482,
      "SPVATR": 1688168898493,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node!= null) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688168898495
    },
    {
      "rank": 1,
      "SSLB": 1688168898495,
      "ESLB": 1688168918515,
      "SPVS": 1688168918515,
      "SPVAP": 1688168918516,
      "EPVAP": 1688168918517,
      "SPVATF": 1688168918517,
      "EPVATF": 1688168918517,
      "SPVATR": 1688168920526,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688168920527
    },
    {
      "rank": 2,
      "SSLB": 1688168920527,
      "ESLB": 1688168940547,
      "SPVS": 1688168940547,
      "SPVAP": 1688168940548,
      "EPVAP": 1688168940549,
      "SPVATF": 1688168940549,
      "EPVATF": 1688168940549,
      "SPVATR": 1688168945559,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "Node n = node.getFirstChild(); if (n!= null) { if (n.getType() == Token.CALL) { Node child = n.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688168945560
    },
    {
      "rank": 3,
      "SSLB": 1688168945560,
      "ESLB": 1688168965580,
      "SPVS": 1688168965580,
      "SPVAP": 1688168965582,
      "EPVAP": 1688168965583,
      "SPVATF": 1688168965583,
      "EPVATF": 1688168965583,
      "SPVATR": 1688168970594,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString());",
      "EPVS": 1688168970595
    },
    {
      "rank": 4,
      "SSLB": 1688168970595,
      "ESLB": 1688168990615,
      "SPVS": 1688168990615,
      "SPVAP": 1688168990616,
      "EPVAP": 1688168990618,
      "SPVATF": 1688168990618,
      "EPVATF": 1688168990618,
      "SPVATR": 1688168995630,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688168995631
    },
    {
      "rank": 5,
      "SSLB": 1688168995631,
      "ESLB": 1688169015651,
      "SPVS": 1688169015651,
      "SPVAP": 1688169015653,
      "EPVAP": 1688169015654,
      "SPVATF": 1688169015654,
      "EPVATF": 1688169015654,
      "SPVATR": 1688169020665,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { if (node.getFirstChild().getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688169020666
    },
    {
      "rank": 6,
      "SSLB": 1688169020666,
      "ESLB": 1688169040686,
      "SPVS": 1688169040686,
      "SPVAP": 1688169040688,
      "EPVAP": 1688169040689,
      "SPVATF": 1688169040689,
      "EPVATF": 1688169040689,
      "SPVATR": 1688169045699,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) { findCalledFunctions(c, changed);",
      "EPVS": 1688169045700
    },
    {
      "rank": 7,
      "SSLB": 1688169045700,
      "ESLB": 1688169065721,
      "SPVS": 1688169065721,
      "SPVAP": 1688169065722,
      "EPVAP": 1688169065724,
      "SPVATF": 1688169065724,
      "EPVATF": 1688169065724,
      "SPVATR": 1688169070735,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString());",
      "EPVS": 1688169070736
    },
    {
      "rank": 8,
      "SSLB": 1688169070736,
      "ESLB": 1688169090757,
      "SPVS": 1688169090757,
      "SPVAP": 1688169090758,
      "EPVAP": 1688169090759,
      "SPVATF": 1688169090759,
      "EPVATF": 1688169090759,
      "SPVATR": 1688169092767,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688169092768
    },
    {
      "rank": 9,
      "SSLB": 1688169092768,
      "ESLB": 1688169112788,
      "SPVS": 1688169112788,
      "SPVAP": 1688169112790,
      "EPVAP": 1688169112791,
      "SPVATF": 1688169112791,
      "EPVATF": 1688169112792,
      "SPVATR": 1688169114800,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString()); }",
      "EPVS": 1688169114802
    }
  ],
  "SSLI": 1688158114900,
  "ESLI": 1688158144930,
  "hostname": "gros-61.nancy.grid5000.fr",
  "OAR_JOB_ID": "4212950"
}