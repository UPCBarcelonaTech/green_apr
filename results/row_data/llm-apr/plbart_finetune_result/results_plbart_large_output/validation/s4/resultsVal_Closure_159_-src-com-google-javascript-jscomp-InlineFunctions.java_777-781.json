{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "plbart_large_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689885243146,
      "ESLB": 1689885263166,
      "SPVS": 1689885263166,
      "SPVAP": 1689885263168,
      "EPVAP": 1689885263169,
      "SPVATF": 1689885263169,
      "EPVATF": 1689885263169,
      "SPVATR": 1689885268179,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node!= null) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689885268180
    },
    {
      "rank": 1,
      "SSLB": 1689885268180,
      "ESLB": 1689885288200,
      "SPVS": 1689885288200,
      "SPVAP": 1689885288204,
      "EPVAP": 1689885288205,
      "SPVATF": 1689885288205,
      "EPVATF": 1689885288205,
      "SPVATR": 1689885290226,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689885290227
    },
    {
      "rank": 2,
      "SSLB": 1689885290227,
      "ESLB": 1689885310248,
      "SPVS": 1689885310248,
      "SPVAP": 1689885310252,
      "EPVAP": 1689885310253,
      "SPVATF": 1689885310253,
      "EPVATF": 1689885310253,
      "SPVATR": 1689885315262,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "Node n = node.getFirstChild(); if (n!= null) { if (n.getType() == Token.CALL) { Node child = n.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689885315263
    },
    {
      "rank": 3,
      "SSLB": 1689885315263,
      "ESLB": 1689885335284,
      "SPVS": 1689885335284,
      "SPVAP": 1689885335285,
      "EPVAP": 1689885335286,
      "SPVATF": 1689885335286,
      "EPVATF": 1689885335286,
      "SPVATR": 1689885340296,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString());",
      "EPVS": 1689885340297
    },
    {
      "rank": 4,
      "SSLB": 1689885340297,
      "ESLB": 1689885360317,
      "SPVS": 1689885360317,
      "SPVAP": 1689885360318,
      "EPVAP": 1689885360319,
      "SPVATF": 1689885360319,
      "EPVATF": 1689885360319,
      "SPVATR": 1689885365343,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689885365344
    },
    {
      "rank": 5,
      "SSLB": 1689885365344,
      "ESLB": 1689885385364,
      "SPVS": 1689885385364,
      "SPVAP": 1689885385366,
      "EPVAP": 1689885385367,
      "SPVATF": 1689885385367,
      "EPVATF": 1689885385367,
      "SPVATR": 1689885390377,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { if (node.getFirstChild().getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689885390378
    },
    {
      "rank": 6,
      "SSLB": 1689885390378,
      "ESLB": 1689885410398,
      "SPVS": 1689885410398,
      "SPVAP": 1689885410399,
      "EPVAP": 1689885410401,
      "SPVATF": 1689885410401,
      "EPVATF": 1689885410401,
      "SPVATR": 1689885415410,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) { findCalledFunctions(c, changed);",
      "EPVS": 1689885415411
    },
    {
      "rank": 7,
      "SSLB": 1689885415411,
      "ESLB": 1689885435431,
      "SPVS": 1689885435431,
      "SPVAP": 1689885435433,
      "EPVAP": 1689885435434,
      "SPVATF": 1689885435434,
      "EPVATF": 1689885435434,
      "SPVATR": 1689885440444,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString());",
      "EPVS": 1689885440445
    },
    {
      "rank": 8,
      "SSLB": 1689885440445,
      "ESLB": 1689885460465,
      "SPVS": 1689885460465,
      "SPVAP": 1689885460468,
      "EPVAP": 1689885460469,
      "SPVATF": 1689885460469,
      "EPVATF": 1689885460469,
      "SPVATR": 1689885462475,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689885462477
    },
    {
      "rank": 9,
      "SSLB": 1689885462477,
      "ESLB": 1689885482497,
      "SPVS": 1689885482497,
      "SPVAP": 1689885482499,
      "EPVAP": 1689885482501,
      "SPVATF": 1689885482501,
      "EPVATF": 1689885482501,
      "SPVATR": 1689885484507,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString()); }",
      "EPVS": 1689885484508
    }
  ],
  "SSLI": 1689872897210,
  "ESLI": 1689872927217,
  "hostname": "gros-44.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}