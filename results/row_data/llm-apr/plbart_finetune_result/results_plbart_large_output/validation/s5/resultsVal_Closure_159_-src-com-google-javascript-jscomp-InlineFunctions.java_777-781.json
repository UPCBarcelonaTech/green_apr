{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "plbart_large_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689918816498,
      "ESLB": 1689918836518,
      "SPVS": 1689918836518,
      "SPVAP": 1689918836519,
      "EPVAP": 1689918836520,
      "SPVATF": 1689918836520,
      "EPVATF": 1689918840527,
      "SPVATR": 1689918840527,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "if (node!= null) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689918840528
    },
    {
      "rank": 1,
      "SSLB": 1689918840528,
      "ESLB": 1689918860548,
      "SPVS": 1689918860548,
      "SPVAP": 1689918860549,
      "EPVAP": 1689918860550,
      "SPVATF": 1689918860550,
      "EPVATF": 1689918862557,
      "SPVATR": 1689918862557,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689918862558
    },
    {
      "rank": 2,
      "SSLB": 1689918862558,
      "ESLB": 1689918882578,
      "SPVS": 1689918882578,
      "SPVAP": 1689918882579,
      "EPVAP": 1689918882580,
      "SPVATF": 1689918882580,
      "EPVATF": 1689918886588,
      "SPVATR": 1689918886588,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "Node n = node.getFirstChild(); if (n!= null) { if (n.getType() == Token.CALL) { Node child = n.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689918886588
    },
    {
      "rank": 3,
      "SSLB": 1689918886588,
      "ESLB": 1689918906608,
      "SPVS": 1689918906608,
      "SPVAP": 1689918906610,
      "EPVAP": 1689918906611,
      "SPVATF": 1689918906611,
      "EPVATF": 1689918910619,
      "SPVATR": 1689918910619,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString());",
      "EPVS": 1689918910620
    },
    {
      "rank": 4,
      "SSLB": 1689918910620,
      "ESLB": 1689918930640,
      "SPVS": 1689918930640,
      "SPVAP": 1689918930641,
      "EPVAP": 1689918930642,
      "SPVATF": 1689918930642,
      "EPVATF": 1689918933649,
      "SPVATR": 1689918933649,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689918933651
    },
    {
      "rank": 5,
      "SSLB": 1689918933651,
      "ESLB": 1689918953671,
      "SPVS": 1689918953671,
      "SPVAP": 1689918953672,
      "EPVAP": 1689918953673,
      "SPVATF": 1689918953673,
      "EPVATF": 1689918956679,
      "SPVATR": 1689918961688,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { if (node.getFirstChild().getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689918961689
    },
    {
      "rank": 6,
      "SSLB": 1689918961689,
      "ESLB": 1689918981709,
      "SPVS": 1689918981709,
      "SPVAP": 1689918981710,
      "EPVAP": 1689918981711,
      "SPVATF": 1689918981711,
      "EPVATF": 1689918984718,
      "SPVATR": 1689918989727,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) { findCalledFunctions(c, changed);",
      "EPVS": 1689918989728
    },
    {
      "rank": 7,
      "SSLB": 1689918989728,
      "ESLB": 1689919009748,
      "SPVS": 1689919009748,
      "SPVAP": 1689919009749,
      "EPVAP": 1689919009750,
      "SPVATF": 1689919009750,
      "EPVATF": 1689919012757,
      "SPVATR": 1689919012757,
      "exectuteRegression": false,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString());",
      "EPVS": 1689919012758
    },
    {
      "rank": 8,
      "SSLB": 1689919012758,
      "ESLB": 1689919032778,
      "SPVS": 1689919032778,
      "SPVAP": 1689919032779,
      "EPVAP": 1689919032780,
      "SPVATF": 1689919032780,
      "EPVATF": 1689919034785,
      "SPVATR": 1689919034785,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689919034786
    },
    {
      "rank": 9,
      "SSLB": 1689919034786,
      "ESLB": 1689919054806,
      "SPVS": 1689919054806,
      "SPVAP": 1689919054807,
      "EPVAP": 1689919054808,
      "SPVATF": 1689919054808,
      "EPVATF": 1689919056814,
      "SPVATR": 1689919056814,
      "exectuteRegression": false,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString()); }",
      "EPVS": 1689919056815
    }
  ],
  "SSLI": 1689901739586,
  "ESLI": 1689901769613,
  "hostname": "gros-44.nancy.grid5000.fr",
  "OAR_JOB_ID": "4242627"
}