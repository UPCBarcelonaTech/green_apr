{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "plbart_large_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1689735515467,
      "ESLB": 1689735535479,
      "SPVS": 1689735535479,
      "SPVAP": 1689735535484,
      "EPVAP": 1689735535485,
      "SPVATF": 1689735535485,
      "EPVATF": 1689735535485,
      "SPVATR": 1689735540493,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node!= null) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689735540494
    },
    {
      "rank": 1,
      "SSLB": 1689735540494,
      "ESLB": 1689735560512,
      "SPVS": 1689735560512,
      "SPVAP": 1689735560513,
      "EPVAP": 1689735560514,
      "SPVATF": 1689735560514,
      "EPVATF": 1689735560514,
      "SPVATR": 1689735562535,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689735562536
    },
    {
      "rank": 2,
      "SSLB": 1689735562536,
      "ESLB": 1689735582552,
      "SPVS": 1689735582552,
      "SPVAP": 1689735582554,
      "EPVAP": 1689735582554,
      "SPVATF": 1689735582554,
      "EPVATF": 1689735582554,
      "SPVATR": 1689735587563,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "Node n = node.getFirstChild(); if (n!= null) { if (n.getType() == Token.CALL) { Node child = n.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689735587564
    },
    {
      "rank": 3,
      "SSLB": 1689735587564,
      "ESLB": 1689735607580,
      "SPVS": 1689735607580,
      "SPVAP": 1689735607581,
      "EPVAP": 1689735607582,
      "SPVATF": 1689735607582,
      "EPVATF": 1689735607582,
      "SPVATR": 1689735612591,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString());",
      "EPVS": 1689735612591
    },
    {
      "rank": 4,
      "SSLB": 1689735612591,
      "ESLB": 1689735632612,
      "SPVS": 1689735632612,
      "SPVAP": 1689735632613,
      "EPVAP": 1689735632614,
      "SPVATF": 1689735632614,
      "EPVATF": 1689735632614,
      "SPVATR": 1689735637623,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689735637624
    },
    {
      "rank": 5,
      "SSLB": 1689735637624,
      "ESLB": 1689735657644,
      "SPVS": 1689735657644,
      "SPVAP": 1689735657648,
      "EPVAP": 1689735657649,
      "SPVATF": 1689735657649,
      "EPVATF": 1689735657649,
      "SPVATR": 1689735662658,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { if (node.getFirstChild().getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689735662659
    },
    {
      "rank": 6,
      "SSLB": 1689735662659,
      "ESLB": 1689735682679,
      "SPVS": 1689735682679,
      "SPVAP": 1689735682680,
      "EPVAP": 1689735682681,
      "SPVATF": 1689735682681,
      "EPVATF": 1689735682681,
      "SPVATR": 1689735687690,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) { findCalledFunctions(c, changed);",
      "EPVS": 1689735687691
    },
    {
      "rank": 7,
      "SSLB": 1689735687691,
      "ESLB": 1689735707711,
      "SPVS": 1689735707711,
      "SPVAP": 1689735707712,
      "EPVAP": 1689735707713,
      "SPVATF": 1689735707713,
      "EPVATF": 1689735707713,
      "SPVATR": 1689735712725,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString());",
      "EPVS": 1689735712726
    },
    {
      "rank": 8,
      "SSLB": 1689735712726,
      "ESLB": 1689735732746,
      "SPVS": 1689735732746,
      "SPVAP": 1689735732747,
      "EPVAP": 1689735732748,
      "SPVATF": 1689735732748,
      "EPVATF": 1689735732748,
      "SPVATR": 1689735734754,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1689735734754
    },
    {
      "rank": 9,
      "SSLB": 1689735734754,
      "ESLB": 1689735754775,
      "SPVS": 1689735754775,
      "SPVAP": 1689735754776,
      "EPVAP": 1689735754777,
      "SPVATF": 1689735754777,
      "EPVATF": 1689735754777,
      "SPVATR": 1689735756782,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString()); }",
      "EPVS": 1689735756783
    }
  ],
  "SSLI": 1689718471026,
  "ESLI": 1689718501028,
  "hostname": "gros-43.nancy.grid5000.fr",
  "OAR_JOB_ID": "4240404"
}