{
  "key": "Closure_159_/src/com/google/javascript/jscomp/InlineFunctions.java_777-781",
  "proj": "Closure",
  "bug_id": "159",
  "loc": "777-781",
  "input_file": "plbart_large_output.json",
  "path": "/src/com/google/javascript/jscomp/InlineFunctions.java",
  "patches": [
    {
      "rank": 0,
      "SSLB": 1688814245013,
      "ESLB": 1688814265034,
      "SPVS": 1688814265034,
      "SPVAP": 1688814265035,
      "EPVAP": 1688814265036,
      "SPVATF": 1688814265036,
      "EPVATF": 1688814265036,
      "SPVATR": 1688814270047,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node!= null) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688814270048
    },
    {
      "rank": 1,
      "SSLB": 1688814270048,
      "ESLB": 1688814290068,
      "SPVS": 1688814290068,
      "SPVAP": 1688814290069,
      "EPVAP": 1688814290071,
      "SPVATF": 1688814290071,
      "EPVATF": 1688814290071,
      "SPVATR": 1688814292092,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688814292093
    },
    {
      "rank": 2,
      "SSLB": 1688814292093,
      "ESLB": 1688814312113,
      "SPVS": 1688814312113,
      "SPVAP": 1688814312115,
      "EPVAP": 1688814312116,
      "SPVATF": 1688814312116,
      "EPVATF": 1688814312116,
      "SPVATR": 1688814317126,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "Node n = node.getFirstChild(); if (n!= null) { if (n.getType() == Token.CALL) { Node child = n.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688814317127
    },
    {
      "rank": 3,
      "SSLB": 1688814317127,
      "ESLB": 1688814337147,
      "SPVS": 1688814337147,
      "SPVAP": 1688814337149,
      "EPVAP": 1688814337151,
      "SPVATF": 1688814337151,
      "EPVATF": 1688814337151,
      "SPVATR": 1688814342160,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString());",
      "EPVS": 1688814342162
    },
    {
      "rank": 4,
      "SSLB": 1688814342162,
      "ESLB": 1688814362182,
      "SPVS": 1688814362182,
      "SPVAP": 1688814362183,
      "EPVAP": 1688814362184,
      "SPVATF": 1688814362184,
      "EPVATF": 1688814362184,
      "SPVATR": 1688814367197,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else { if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688814367198
    },
    {
      "rank": 5,
      "SSLB": 1688814367198,
      "ESLB": 1688814387219,
      "SPVS": 1688814387219,
      "SPVAP": 1688814387220,
      "EPVAP": 1688814387221,
      "SPVATF": 1688814387221,
      "EPVATF": 1688814387221,
      "SPVATR": 1688814392232,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { if (node.getFirstChild().getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688814392233
    },
    {
      "rank": 6,
      "SSLB": 1688814392233,
      "ESLB": 1688814412253,
      "SPVS": 1688814412253,
      "SPVAP": 1688814412255,
      "EPVAP": 1688814412256,
      "SPVATF": 1688814412256,
      "EPVATF": 1688814412256,
      "SPVATR": 1688814417266,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) { findCalledFunctions(c, changed);",
      "EPVS": 1688814417267
    },
    {
      "rank": 7,
      "SSLB": 1688814417267,
      "ESLB": 1688814437287,
      "SPVS": 1688814437287,
      "SPVAP": 1688814437288,
      "EPVAP": 1688814437290,
      "SPVATF": 1688814437290,
      "EPVATF": 1688814437290,
      "SPVATR": 1688814442303,
      "exectuteRegression": true,
      "correctness": "wrong",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString());",
      "EPVS": 1688814442304
    },
    {
      "rank": 8,
      "SSLB": 1688814442304,
      "ESLB": 1688814462325,
      "SPVS": 1688814462325,
      "SPVAP": 1688814462326,
      "EPVAP": 1688814462327,
      "SPVATF": 1688814462327,
      "EPVATF": 1688814462327,
      "SPVATR": 1688814464335,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.getType() == Token.FUNCTION) { changed.add(node.getString()); } else if (node.getType() == Token.CALL) { Node child = node.getFirstChild(); if (child.getType() == Token.NAME) { changed.add(child.getString()); }",
      "EPVS": 1688814464336
    },
    {
      "rank": 9,
      "SSLB": 1688814464336,
      "ESLB": 1688814484356,
      "SPVS": 1688814484356,
      "SPVAP": 1688814484358,
      "EPVAP": 1688814484360,
      "SPVATF": 1688814484360,
      "EPVATF": 1688814484360,
      "SPVATR": 1688814486368,
      "exectuteRegression": true,
      "correctness": "uncompilable",
      "patch": "if (node.isGetProp()) { if (node.getType() == Token.CALL) { Node call = node.getFirstChild(); if (call.getType() == Token.NAME) { changed.add(call.getString()); }",
      "EPVS": 1688814486369
    }
  ],
  "SSLI": 1688801178433,
  "ESLI": 1688801208463,
  "hostname": "gros-68.nancy.grid5000.fr",
  "OAR_JOB_ID": "4222608"
}