{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728419133735",
  "GPR[ESLB]": "1728419153751",
  "id": "150",
  "project": "Closure",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728416237101",
  "GPR[ESLI]": "1728416267131",
  "GPR[SPS]": "1728419153787",
  "GPR[EPS]": "1728419159137",
  "time": 5350,
  "output": [
    "     if (n.getType() == Token.LP && parent.getType() == Token.FUNCTION) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.NEW) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.NEW) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.GETPROP) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.FUNCTION) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.ASSIGN) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.FUNCTION) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.NEW) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.GETPROP) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.GETELEM) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.GETPROP) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP) {\n        handleFunctionInputs(n);\n        return;\n      }",
    "     if (n.getType() == Token.FUNCTION) {\n        handleFunctionInputs(n);\n        return;\n      }",
    "     if (n.getType() == Token.FUNCTION) {\n        handleFunctionInputs(n);\n      }"
  ]
}