{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728417110589",
  "GPR[ESLB]": "1728417130609",
  "id": "21",
  "project": "Math",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728416237101",
  "GPR[ESLI]": "1728416267131",
  "GPR[SPS]": "1728417130644",
  "GPR[EPS]": "1728417146252",
  "time": 15608,
  "output": [
    "       final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n            b[i][i] = c[i][i];\n            for (int j = i + 1; j < order; ++j) {\n                b[i][j] = c[i][j];\n                b[j][i] = c[j][i];\n            }\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                final double f = b[i][r] / b[r][r];\n                b[i][r] = f;\n                for (int j = r + 1; j < order; ++j) {\n                    b[i][j] -= f * b[r][j];\n                }\n            }\n",
    "       final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n            b[i][i] = c[i][i];\n            for (int j = i + 1; j < order; ++j) {\n                b[i][j] = c[i][j];\n                b[j][i] = c[j][i];\n            }\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                b[i][r] /= b[r][r];\n                for (int j = r + 1; j < order; ++j) {\n                    b[i][j] -= b[i][r] * b[r][j];\n                }\n            }\n            ++r;\n            loop = r",
    "       final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n            b[i][i] = c[i][i];\n            for (int j = i + 1; j < order; ++j) {\n                b[i][j] = c[i][j];\n                b[j][i] = c[j][i];\n            }\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                final double e = b[i][r] / b[r][r];\n                b[i][r] = 0.0;\n                for (int j = r + 1; j < order; ++j) {\n                    b[i][j] -= e * b[r][j];\n                }\n",
    "       for (int i = 0; i < order; ++i) {\n            for (int j = 0; j < order; ++j) {\n                b[i][j] = c[i][j];\n            }\n        }\n        final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                final double f = b[i][r] / b[r][r];\n                b[i][r] = f;\n                for (int j = r + 1; j < order; ++j) {\n                    b[i][j] -= f * b[r][j];\n                }\n            }\n            ++r;\n            loop = r < order",
    "       final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n            b[i][i] = c[i][i];\n            for (int j = i + 1; j < order; ++j) {\n                b[i][j] = c[i][j];\n                b[j][i] = c[j][i];\n            }\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                b[i][r] /= b[r][r];\n                for (int j = r + 1; j < order; ++j) {\n                    b[i][j] -= b[i][r] * b[r][j];\n                }\n            }\n            loop = ++r < order;\n",
    "       for (int i = 0; i < order; ++i) {\n            for (int j = 0; j < order; ++j) {\n                b[i][j] = c[i][j];\n            }\n        }\n        final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                final double f = b[i][r] / b[r][r];\n                for (int j = r; j < order; ++j) {\n                    b[i][j] -= f * b[r][j];\n                }\n            }\n            ++r;\n            loop = r < order;\n        }\n        loop = true;\n        while (",
    "       final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n            b[i][i] = c[i][i];\n            for (int j = i + 1; j < order; ++j) {\n                b[i][j] = c[i][j];\n                b[j][i] = c[j][i];\n            }\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                final double e = b[i][r] / b[r][r];\n                b[i][r] = 0;\n                for (int j = r + 1; j < order; ++j) {\n                    b[i][j] -= e * b[r][j];\n                }\n            }",
    "       final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n            b[i][i] = c[i][i];\n            for (int j = i + 1; j < order; ++j) {\n                b[i][j] = c[i][j];\n                b[j][i] = c[j][i];\n            }\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                b[i][r] /= b[r][r];\n                for (int j = r + 1; j < order; ++j) {\n                    b[i][j] -= b[i][r] * b[r][j];\n                }\n            }\n            for (int i = 0;",
    "       final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n            b[i][i] = c[i][i];\n            for (int j = i + 1; j < order; ++j) {\n                b[i][j] = c[i][j];\n                b[j][i] = c[j][i];\n            }\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                b[i][r] /= b[r][r];\n                for (int j = r + 1; j < order; ++j) {\n                    b[i][j] -= b[i][r] * b[r][j];\n                }\n            }\n            ++r;\n            if (r",
    "       final int[] index = new int[order];\n        for (int i = 0; i < order; ++i) {\n            index[i] = i;\n            b[i][i] = c[i][i];\n            for (int j = i + 1; j < order; ++j) {\n                b[i][j] = c[i][j];\n                b[j][i] = c[j][i];\n            }\n        }\n        int r = 0;\n        boolean loop = true;\n        while (loop) {\n            if (b[r][r] <= small) {\n                throw new NonPositiveDefiniteMatrixException();\n            }\n            for (int i = r + 1; i < order; ++i) {\n                b[i][r] /= b[r][r];\n                for (int j = r + 1; j < order; ++j) {\n                    b[i][j] -= b[i][r] * b[r][j];\n                }\n            }\n            for (int i = r + "
  ]
}