{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728421559451",
  "GPR[ESLB]": "1728421579471",
  "id": "11",
  "project": "Math",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728416237101",
  "GPR[ESLI]": "1728416267131",
  "GPR[SPS]": "1728421579506",
  "GPR[EPS]": "1728421584280",
  "time": 4774,
  "output": [
    "       return\n            FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n            getExponentTerm(vals);\n    }\n\n    public double density(final RealVector vals) throws DimensionMismatchException {\n        final int dim = getDimension();\n        if (vals.getDimension() != dim) {\n            throw new DimensionMismatchException(vals.getDimension(), dim);\n        }\n        return",
    "       return\n            FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n            getDensityTerm(vals);\n    }\n\n    public double logDensity(final double[] vals) throws DimensionMismatchException {\n        final int dim = getDimension();\n        if (vals.length != dim) {\n            throw new DimensionMismatchException(vals.length, dim);\n        }\n        return",
    "       return\n            FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n            getExponentTerm(vals);\n    }\n\n    public double logDensity(final double[] vals) throws DimensionMismatchException {\n        final int dim = getDimension();\n        if (vals.length != dim) {\n            throw new DimensionMismatchException(vals.length, dim);\n        }\n        return",
    "       double covarianceMatrixDeterminant = 1.0;\n        for (int i = 0; i < dim; ++i) {\n            covarianceMatrixDeterminant *= covarianceMatrix[i][i];\n        }\n        return",
    "       return\n            FastMath.pow(covarianceMatrixDeterminant, -0.5) *",
    "       final double covarianceMatrixDeterminant = getCovarianceMatrixDeterminant(vals);\n        return",
    "       final double covarianceMatrixDeterminant = getCovarianceMatrixDeterminant();\n        return",
    "       return",
    "\n        return",
    ""
  ]
}