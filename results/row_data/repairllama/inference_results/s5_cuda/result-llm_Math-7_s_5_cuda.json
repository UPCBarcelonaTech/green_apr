{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728441289470",
  "GPR[ESLB]": "1728441309490",
  "id": "7",
  "project": "Math",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728436251771",
  "GPR[ESLI]": "1728436281802",
  "GPR[SPS]": "1728441309525",
  "GPR[EPS]": "1728441318877",
  "time": 9352,
  "output": [
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (isLastStep) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (currentEvent.stop()) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (Precision.equals(eventT, tEnd, 1)) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (isLastStep) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (currentEvent.stop()) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (currentT == tEnd) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (currentT == eventT) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, false);\n                }\n                if (Precision.equals(eventT, tEnd, 1)) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (Precision.equals(currentT, tEnd, 1)) {"
  ]
}