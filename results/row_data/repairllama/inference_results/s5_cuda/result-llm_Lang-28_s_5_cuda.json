{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728438095922",
  "GPR[ESLB]": "1728438115942",
  "id": "28",
  "project": "Lang",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728436251771",
  "GPR[ESLI]": "1728436281802",
  "GPR[SPS]": "1728438115978",
  "GPR[EPS]": "1728438130103",
  "time": 14125,
  "output": [
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n            out.write(entityValue);",
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n            out.write(entityValue);",
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n            out.write(entityValue);\n           ",
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n            switch(entityValue) {\n                case",
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n            out.write(entityValue);\n           ",
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                out.write(input.charAt(index));\n                return 1;\n",
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n            if(entityValue == 160",
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n            if(entityValue < 32 ||",
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n            if(entityValue == 38)",
    "           out.write(entityValue);\n            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n        } else if(input.charAt(index) == '&') {\n            int start = index + 1;\n            boolean isHex = false;\n            char firstChar = input.charAt(start);\n            if(firstChar == 'x' || firstChar == 'X') {\n                start++;\n                isHex = true;\n            }\n            int end = start;\n            while(input.charAt(end) != ';') {\n                end++;\n            }\n            int entityValue;\n            try {\n                if(isHex) {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                } else {\n                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                }\n            } catch(NumberFormatException nfe) {\n                return 0;\n            }\n            if(entityValue > 0xFFFF"
  ]
}