{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728439108753",
  "GPR[ESLB]": "1728439128773",
  "id": "150",
  "project": "Closure",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728436251771",
  "GPR[ESLI]": "1728436281802",
  "GPR[SPS]": "1728439128809",
  "GPR[EPS]": "1728439134218",
  "time": 5409,
  "output": [
    "     if (n.getType() == Token.LP && parent.getType() == Token.FUNCTION) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.NEW) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.NEW) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.GETPROP) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.FUNCTION) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.ASSIGN) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.FUNCTION) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.NEW) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.GETPROP) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.GETELEM) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP && parent.getType() == Token.CALL) {\n        handleFunctionInputs(parent);\n        return;\n      }\n      if (n.getType() == Token.LP && parent.getType() == Token.GETPROP) {\n        handleFunctionInputs(parent);\n        return;\n      }",
    "     if (n.getType() == Token.LP) {\n        handleFunctionInputs(n);\n        return;\n      }",
    "     if (n.getType() == Token.FUNCTION) {\n        handleFunctionInputs(n);\n        return;\n      }",
    "     if (n.getType() == Token.FUNCTION) {\n        handleFunctionInputs(n);\n      }"
  ]
}