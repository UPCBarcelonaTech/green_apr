{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728427300142",
  "GPR[ESLB]": "1728427320162",
  "id": "19",
  "project": "Time",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728422896906",
  "GPR[ESLI]": "1728422926936",
  "GPR[SPS]": "1728427320199",
  "GPR[EPS]": "1728427327595",
  "time": 7396,
  "output": [
    "           else {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (prevLocal != prevAdjusted) {\n                    return offsetLocal;\n                }\n            }\n            long next = nextTransition(instantAdjusted);\n            if (next > instantAdjusted) {\n                int offsetNext = getOffset(next);\n                int diff = offsetNext - offsetLocal;\n                if (next - instantAdjusted <= diff) {\n                    return offsetNext;\n                }\n            }",
    "           if ((offsetLocal - offsetAdjusted) > 0) {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (prevLocal != prevAdjusted) {\n                    return offsetLocal;\n                }\n            }",
    "           else {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (prevLocal != prevAdjusted) {\n                    return offsetLocal;\n                }\n            }\n            long next = nextTransition(instantAdjusted);\n            if (next > instantAdjusted) {\n                int offsetNext = getOffset(next);\n                int diff = offsetLocal - offsetNext;\n                if (next - instantAdjusted <= diff) {\n                    return offsetNext;\n                }\n            }",
    "           else {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (prevLocal != prevAdjusted) {\n                    return offsetLocal;\n                }\n            }",
    "           long prevLocal = previousTransition(instantAdjusted);\n            long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n            if (prevLocal != prevAdjusted) {\n                return offsetLocal;\n            }",
    "           if ((offsetAdjusted - offsetLocal) < 0) {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (prevLocal != prevAdjusted) {\n                    return offsetAdjusted;\n                }\n            }",
    "           else {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (prevLocal != prevAdjusted) {\n                    return offsetLocal;\n                }\n            }\n            long next = nextTransition(instantAdjusted);",
    "           if ((offsetLocal - offsetAdjusted) > 0) {\n                long prevLocal = previousTransition(instantAdjusted);\n                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);\n                if (prevLocal != prevAdjusted) {\n                    return offsetLocal;\n                }\n            }\n            long next = nextTransition(instantAdjusted);",
    "           return offsetAdjusted;",
    "           else {"
  ]
}