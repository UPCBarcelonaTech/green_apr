{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728427940169",
  "GPR[ESLB]": "1728427960189",
  "id": "7",
  "project": "Math",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728422896906",
  "GPR[ESLI]": "1728422926936",
  "GPR[SPS]": "1728427960225",
  "GPR[EPS]": "1728427969574",
  "time": 9349,
  "output": [
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (isLastStep) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (currentEvent.stop()) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (Precision.equals(eventT, tEnd, 1)) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (isLastStep) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (currentEvent.stop()) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (currentT == tEnd) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                isLastStep = isLastStep || Precision.equals(eventT, tEnd, 1);\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (currentT == eventT) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, false);\n                }\n                if (Precision.equals(eventT, tEnd, 1)) {",
    "               for (final EventState state : eventsStates) {\n                    state.stepAccepted(eventT, eventY);\n                    isLastStep = isLastStep || state.stop();\n                }\n                for (StepHandler handler : stepHandlers) {\n                    handler.handleStep(interpolator, isLastStep);\n                }\n                if (Precision.equals(currentT, tEnd, 1)) {"
  ]
}