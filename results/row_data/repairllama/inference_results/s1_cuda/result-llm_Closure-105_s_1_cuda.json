{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728411540196",
  "GPR[ESLB]": "1728411560216",
  "id": "105",
  "project": "Closure",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728409552582",
  "GPR[ESLI]": "1728409582613",
  "GPR[SPS]": "1728411560251",
  "GPR[EPS]": "1728411567225",
  "time": 6974,
  "output": [
    "   int foldedSize = 0;\n    for (Node child : arrayNode.children()) {\n      if (!NodeUtil.isImmutableValue(child)) {\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append(joinString);\n      sb.append(NodeUtil.getStringValue(child));",
    "   int foldedSize = 0;\n    for (Node child : arrayNode.children()) {\n      if (child.getType() != Token.STRING) {\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append(child.getString());\n      if (joinString != null) {\n        sb.append(joinString);\n      }",
    "   int foldedSize = 0;\n    for (Node child : arrayNode.children()) {\n      if (!NodeUtil.isImmutableValue(child)) {\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append(NodeUtil.getStringValue(child));\n      if (joinString != null) {\n        sb.append(joinString);\n      }",
    "   int foldedSize = 0;\n    for (Node arrayChild : arrayNode.children()) {\n      if (arrayChild.getType() != Token.STRING) {\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append(arrayChild.getString());\n      if (joinString != null) {\n        sb.append(joinString);\n      }",
    "   int foldedSize = 0;\n    for (Node child : arrayNode.children()) {\n      StringBuilder sb = new StringBuilder();\n      sb.append(joinString);\n      sb.append(NodeUtil.getStringValue(child));",
    "   int foldedSize = 0;\n    for (Node arrayChild : arrayNode.children()) {\n      if (!NodeUtil.isImmutableValue(arrayChild)) {\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append(joinString);\n      sb.append(NodeUtil.getStringValue(arrayChild));",
    "   int foldedSize = 0;\n    for (Node child : arrayNode.children()) {\n      if (child.getType() != Token.STRING) {\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append(joinString);\n      sb.append(child.getString());",
    "   int foldedSize = 0;\n    for (Node child : arrayNode.children()) {\n      if (!NodeUtil.isImmutableValue(child)) {\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append(joinString);\n      sb.append(NodeUtil.getStringValue(child));\n      sb.append(joinString);",
    "   int foldedSize = 0;\n    for (Node child : arrayNode.children()) {\n      if (!NodeUtil.isImmutableValue(child)) {\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append(joinString);\n      sb.append(child.getString());",
    "   int foldedSize = 0;\n    for (Node child : arrayNode.children()) {\n      StringBuilder sb = new StringBuilder();\n      sb.append(joinString);\n      sb.append(child.getString());"
  ]
}