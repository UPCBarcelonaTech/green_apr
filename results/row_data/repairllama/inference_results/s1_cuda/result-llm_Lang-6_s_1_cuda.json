{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728410511828",
  "GPR[ESLB]": "1728410531848",
  "id": "6",
  "project": "Lang",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728409552582",
  "GPR[ESLI]": "1728409582613",
  "GPR[SPS]": "1728410531882",
  "GPR[EPS]": "1728410542066",
  "time": 10184,
  "output": [
    "               pos++;\n            }\n        }\n    }\n\n    public final void translate(CharSequence input, Appendable out) throws IOException {\n        if (out == null) {\n            throw new IllegalArgumentException(\"The Appendable must not be null\");\n        }\n        if (input == null) {\n            return;\n        }\n        int pos = 0;\n        int len = input.length();\n        while (pos < len) {\n            int consumed = translate(input, pos, out);\n            if (consumed == 0) {\n                out.append(input.charAt(pos++));\n                continue;\n            }\n            for (int pt = 0; pt < consumed; pt++) {\n                pos++;",
    "               pos++;\n            }\n        }\n    }\n\n    public final void translate(Reader input, Writer out) throws IOException {\n        if (out == null) {\n            throw new IllegalArgumentException(\"The Writer must not be null\");\n        }\n        if (input == null) {\n            return;\n        }\n        int c;\n        while ((c = input.read()) != -1) {\n            if (translate(c, out)) {\n                continue;",
    "               pos++;\n                if (pos >= len) {\n                    break;\n                }\n            }\n            if (pos >= len) {\n                break;",
    "               pos++;\n            }\n            if (pos >= len) {\n                break;",
    "               pos++;",
    "               pos++;\n                if (pos >= len) {\n                    break;\n                }",
    "               pos += Character.charCount(Character.codePointAt(input, pos));",
    "               pos+= Character.charCount(Character.codePointAt(input, pos));",
    "               out.write(' ');",
    "               pos++;\n            }"
  ]
}