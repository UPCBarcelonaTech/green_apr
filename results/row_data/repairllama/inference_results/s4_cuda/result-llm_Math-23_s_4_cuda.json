{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728429740015",
  "GPR[ESLB]": "1728429760035",
  "id": "23",
  "project": "Math",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728429523156",
  "GPR[ESLI]": "1728429553186",
  "GPR[SPS]": "1728429760072",
  "GPR[EPS]": "1728429774912",
  "time": 14840,
  "output": [
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            double tol1 = eps * Math.abs(x) + zEpsilon;\n            double tol2 = 2 * tol1;\n            if (Math.abs(x - xm) <= (tol2 - 0.5 * (b - a))) {\n                x = xm;\n                break;\n            }\n            if (Math.abs(e) > tol1) {\n                double r = (x - w) * (fx - fv",
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            double tol1 = eps * Math.abs(x) + zEpsilon;\n            double tol2 = 2 * tol1;\n            if (Math.abs(x - xm) <= (tol2 - 0.5 * (b - a))) {\n                return current;\n            }\n            if (Math.abs(e) > tol1) {\n                double r = (x - w) * (fx - fv);\n                double q =",
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            double tol1 = eps * Math.abs(x) + zEpsilon;\n            double tol2 = 2 * tol1;\n            if (Math.abs(x - xm) <= (tol2 - 0.5 * (b - a))) {\n                x = xm;\n                fx = computeObjectiveValue(x);\n                if (!isMinim) {\n                    fx = -fx;\n                }\n                return new Univari",
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            double tol1 = eps * Math.abs(x) + zEpsilon;\n            double tol2 = 2 * tol1;\n            if (Math.abs(x - xm) <= (tol2 - 0.5 * (b - a))) {\n                return new UnivariatePointValuePair(x, isMinim ? fx : -fx);\n            }\n            if (Math.abs(e) > tol1) {\n                d =",
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            double tol1 = eps * Math.abs(x) + zEpsilon;\n            double tol2 = 2 * tol1;\n            if (Math.abs(x - xm) <= (tol2 - 0.5 * (b - a))) {\n                return new UnivariatePointValuePair(x,\n                                                    isMinim ? fx : -fx);\n            }\n            if (Math.abs(e) > tol1)",
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            double tol1 = eps * Math.abs(x) + zEpsilon;\n            double tol2 = 2 * tol1;\n            if (Math.abs(x - xm) <= (tol2 - 0.5 * (b - a))) {\n                current = new UnivariatePointValuePair(x, isMinim ? fx : -fx);\n                return current;\n            }\n            if (Math.abs(e) > tol1",
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            double tol1 = eps * Math.abs(x) + zEpsilon;\n            double tol2 = 2 * tol1;\n            if (Math.abs(x - xm) <= (tol2 - 0.5 * (b - a))) {\n                return new UnivariatePointValuePair(x, isMinim ? fx : -fx);\n            }\n            if (Math.abs(e) > tol1) {\n                double r",
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            double tol1 = eps * Math.abs(x) + zEpsilon;\n            double tol2 = 2 * tol1;\n            if (Math.abs(x - xm) <= (tol2 - 0.5 * (b - a))) {\n                x = xm;\n                break;\n            }\n            double p = 0;\n            double q = 0;\n            double r = 0;\n            if (Math.abs(",
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            if (Math.abs(x - xm) <= getAbsoluteAccuracy()) {\n                x = xm;\n                break;\n            }\n            double tol1 = getRelativeAccuracy() * Math.abs(x) + getAbsoluteAccuracy();\n            double tol2 = 2 * tol1;\n            if (Math.abs(e) > tol2) {\n                d = e;\n            }\n            if (Math.abs",
    "       while (true) {\n            if (checker.converged(previous, current)) {\n                return current;\n            }\n            previous = current;\n            if (fv < fw || w == x) {\n                v = w;\n                fv = fw;\n                w = x;\n                fw = fx;\n            } else if (fw < fv || v == x || v == w) {\n                w = v;\n                fw = fv;\n                v = x;\n                fv = fx;\n            }\n            double xm = 0.5 * (a + b);\n            double tol1 = eps * Math.abs(x) + zEpsilon;\n            double tol2 = 2 * tol1;\n            if (Math.abs(x - xm) <= (tol2 - 0.5 * (b - a))) {\n                x = xm;\n                fx = computeObjectiveValue(x);\n                if (!isMinim) {\n                    fx = -fx;\n                }\n                current = new Un"
  ]
}