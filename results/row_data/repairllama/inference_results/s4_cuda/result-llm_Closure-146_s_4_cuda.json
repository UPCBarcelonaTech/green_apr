{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728432714612",
  "GPR[ESLB]": "1728432734632",
  "id": "146",
  "project": "Closure",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728429523156",
  "GPR[ESLI]": "1728429553186",
  "GPR[SPS]": "1728432734668",
  "GPR[EPS]": "1728432741564",
  "time": 6896,
  "output": [
    "     case FALSE:\n      case UNKNOWN:\n        return new TypePair(this, that);\n    }\n    throw new IllegalStateException();\n  }\n  public TypePair getTypesUnderEquality(JSType that) {\n    if (that instanceof UnionType) {\n      TypePair p = that.getTypesUnderEquality(this);\n      return new TypePair(p.typeB, p.typeA);\n    }\n    switch (this.testForEquality(that)) {\n      case TRUE:",
    "     case FALSE:\n      case UNKNOWN:\n        return new TypePair(this, that);\n    }\n    throw new IllegalStateException();\n  }\n  public TypePair getTypesUnderEquality(JSType that) {\n    if (that instanceof UnionType) {\n      TypePair p = that.getTypesUnderEquality(this);\n      return new TypePair(p.typeA, p.typeB);\n    }\n    switch (this.testForEquality(that)) {\n      case TRUE:",
    "     case FALSE:\n      case UNKNOWN:\n        return new TypePair(this, that);\n    }\n    switch (that.testForEquality(this)) {\n      case TRUE:",
    "     case FALSE:\n      case UNKNOWN:\n        return new TypePair(this, that);\n    }\n    switch (that.testForEquality(this)) {",
    "       return new TypePair(getNativeType(JSTypeNative.BOOLEAN_TYPE),\n            getNativeType(JSTypeNative.NO_TYPE));",
    "       return new TypePair(this, that);",
    "       return TypePair.FALSE_TYPE;",
    "       return TypePair.EMPTY;",
    "       return TypePair.both(this);",
    "       return TypePair.FALSE;"
  ]
}