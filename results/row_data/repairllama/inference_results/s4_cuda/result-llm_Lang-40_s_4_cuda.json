{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728430192146",
  "GPR[ESLB]": "1728430212155",
  "id": "40",
  "project": "Lang",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728429523156",
  "GPR[ESLI]": "1728429553186",
  "GPR[SPS]": "1728430212191",
  "GPR[EPS]": "1728430215536",
  "time": 3345,
  "output": [
    "       int len = searchStr.length();\n        int max = str.length() - len;\n        for (int i = 0; i <= max; i++) {\n            if (str.regionMatches(true, i, searchStr, 0, len)) {\n                return true;\n            }\n        }\n        return false;",
    "       int length = searchStr.length();\n        int max = str.length() - length;\n        for (int i = 0; i <= max; i++) {\n            if (str.regionMatches(true, i, searchStr, 0, length)) {\n                return true;\n            }\n        }\n        return false;",
    "       int len = searchStr.length();\n        int max = str.length() - len;\n        for (int i = 0; i <= max; i++) {\n            if (str.regionMatches(true, i, searchStr, 0, len)) {\n                return true;\n            }\n        }",
    "       int len = searchStr.length();\n        int max = str.length() - len;\n        for (int i = 0; i <= max; i++) {\n            if (searchStr.equalsIgnoreCase(str.substring(i, i + len))) {\n                return true;\n            }\n        }\n        return false;",
    "       int endLimit = str.length() - searchStr.length();\n        for (int i = 0; i <= endLimit; i++) {\n            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {\n                return true;\n            }\n        }\n        return false;",
    "       int len = searchStr.length();\n        int max = str.length() - len;\n        for (int i = 0; i < max; i++) {\n            if (str.regionMatches(true, i, searchStr, 0, len)) {\n                return true;\n            }\n        }\n        return false;",
    "       int end = str.length() - searchStr.length();\n        for (int i = 0; i <= end; i++) {\n            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {\n                return true;\n            }\n        }\n        return false;",
    "       int length = searchStr.length();\n        int max = str.length() - length;\n        for (int i = 0; i <= max; i++) {\n            if (searchStr.equalsIgnoreCase(str.substring(i, i + length))) {\n                return true;\n            }\n        }\n        return false;",
    "       int length = searchStr.length();\n        int max = str.length() - length;\n        for (int i = 0; i <= max; i++) {\n            if (str.regionMatches(true, i, searchStr, 0, length)) {\n                return true;\n            }\n        }",
    "       int len = searchStr.length();\n        int max = str.length() - len;\n        for (int i = 0; i <= max; i++) {"
  ]
}