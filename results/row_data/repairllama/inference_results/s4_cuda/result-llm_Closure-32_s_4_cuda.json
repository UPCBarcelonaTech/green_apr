{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728431795784",
  "GPR[ESLB]": "1728431815804",
  "id": "32",
  "project": "Closure",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728429523156",
  "GPR[ESLI]": "1728429553186",
  "GPR[SPS]": "1728431815841",
  "GPR[EPS]": "1728431830103",
  "time": 14262,
  "output": [
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.STAR) {\n              builder.append(toString(token));\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n              if (token == JsDoc",
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.STAR) {\n              ignoreStar = true;\n              builder.append(toString(token));\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n           ",
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.STAR) {\n              builder.append(toString(token));\n              ignoreStar = true;\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n           ",
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.STAR) {\n              builder.append(toString(token));\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n              ignoreStar = true;\n           ",
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.SLASH) {\n              builder.append(toString(token));\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n              if (token == JsDoc",
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.STAR) {\n              builder.append(toString(token));\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n              ignoreStar = true;\n             ",
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.STAR) {\n              ignoreStar = true;\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n            }\n          }\n          break;\n       ",
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.STAR) {\n              ignoreStar = true;\n              builder.append(toString(token));\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n             ",
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.STAR) {\n              builder.append(toString(token));\n              ignoreStar = true;\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n             ",
    "   do {\n      switch (state) {\n        case SEARCHING_ANNOTATION:\n          if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n              token == JsDocToken.EOF) {\n            return new ExtractionInfo(builder.toString(), token);\n          }\n          if (token == JsDocToken.STAR) {\n            builder.append(toString(token));\n            token = next();\n            if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                token == JsDocToken.EOF) {\n              return new ExtractionInfo(builder.toString(), token);\n            }\n            if (token == JsDocToken.STAR) {\n              builder.append(toString(token));\n              token = next();\n              if (token == JsDocToken.EOC || token == JsDocToken.EOL ||\n                  token == JsDocToken.EOF) {\n                return new ExtractionInfo(builder.toString(), token);\n              }\n            } else {\n              ignoreStar"
  ]
}