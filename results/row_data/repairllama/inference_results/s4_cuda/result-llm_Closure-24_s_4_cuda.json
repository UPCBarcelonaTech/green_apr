{
  "hostname": "gemini-2.lyon.grid5000.fr",
  "GPR[SSLB]": "1728431886762",
  "GPR[ESLB]": "1728431906782",
  "id": "24",
  "project": "Closure",
  "file": null,
  "input": null,
  "nvidea": null,
  "OAR_JOB_ID": "1711701",
  "GPR[SSLI]": "1728429523156",
  "GPR[ESLI]": "1728429553186",
  "GPR[SPS]": "1728431906820",
  "GPR[EPS]": "1728431918353",
  "time": 11533,
  "output": [
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.",
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_VOID) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_VOID) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_VOID) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_VOID) {\n              parent = parent.",
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              continue;\n           ",
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              break;\n           ",
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              if (parent.",
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              n = parent;",
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              throw new RuntimeException",
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              n = parent.",
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              throw new Illegal",
    "       switch (type) {\n          case Token.ASSIGN:\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            if (parent.getType() == Token.EXPR_RESULT) {\n              parent = parent.getParent();\n            }\n            break;\n        }"
  ]
}